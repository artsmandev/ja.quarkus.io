msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"The suggested project creation command lines disable the codestarts to avoid including a REST server. Similarly, if you use code.quarkus.io to generate a\n"
"project, you need to go to *MORE OPTIONS -> Starter Code* and select *No* to avoid adding the RESTEasy Reactive extension."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"There are two different approaches that can be used to implement applications\n"
"that exit."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"In this document the `QuarkusApplication` instance is referred to as the application main,\n"
"and a class with a Java main method is the Java main."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid "The `@QuarkusMain` annotation tells Quarkus that this is the main entry point."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid "The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"A command mode application (like a CLI) is a bit different from say an HTTP service, there is a single call from the command line.\n"
"So the notion of _request_ let alone multiple requests does not exist per se.\n"
"Therefore, request scope is not the default."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default.\n"
"It has access to singletons, application and dependent scoped beans."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"If you want to interact with beans that requires a request scope, simply add the `@ActivateRequestContext` annotation on your `run()` method.\n"
"This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity.\n"
"Without it, you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can\n"
"be run from the IDE."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"It is recommended that a Java main perform very little logic, and just\n"
"launch the application main. In development mode the Java main will run in a\n"
"different ClassLoader to the main application, so may not behave as you would\n"
"expect."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"It is possible to have multiple main methods in an application, and select between them at build time.\n"
"The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the\n"
"main to run using the `quarkus.package.main-class` build time configuration option. If you don't want\n"
"to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"By default, the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present\n"
"and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class\n"
"that just runs the application."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you\n"
"have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not\n"
"unique."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup,\n"
"and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main\n"
"thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"If you want to shut down a running application and you are not in the main thread, then you should call `Quarkus.asyncExit`\n"
"in order to unblock the main thread and initiate the shutdown process."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"Also, for command mode applications, the dev mode is supported.\n"
"When you start your application in dev mode, the command mode application is executed:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"You can press the `Space bar` key and the application will be started again.\n"
"You can also use the `e` hotkey to edit the command line arguments and restart your application."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"Command Mode applications can be tested using the `@QuarkusMainTest` and `@QuarkusMainIntegrationTest` annotations. These\n"
"work in a similar way to `@QuarkusTest` and `@QuarkusIntegrationTest` where `@QuarkusMainTest` will run the CLI tests\n"
"within the current JVM, while `QuarkusIntegrationTest` is used to run the generated executable (both jars and native)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"Each test method must be annotated with `@Launch` to automatically start the application or have a `QuarkusMainLauncher`\n"
"parameter to manually launch the application."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/command-mode-reference.adoc
msgid ""
"CDI injection is not supported in the `@QuarkusMainTest` tests.\n"
"Consequently, mocking CDI beans with `QuarkusMock` or `@InjectMock` is not supported either."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:6
#, no-wrap
msgid "Command Mode Applications"
msgstr "コマンドモードアプリケーション"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:12
msgid "This reference covers how to write applications that run and then exit."
msgstr "このリファレンスでは、実行して終了するアプリケーションの書き方について説明しています。"

#. type: Title ==
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:13
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:19
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:21
msgid "The solution is located in the `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr "このソリューションは `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[ディレクトリ]にあります。"

#. type: Title ==
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:22
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:25
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "まず、以下のコマンドで新しいQuarkusプロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:33
msgid "The RESTEasy Reactive extension is added automatically only if you ask for codestarts and you didn't specify any extensions."
msgstr "RESTEasy Reactiveエクステンションは、コードスタートを依頼し、エクステンションを指定しなかった場合のみ、自動的に追加されます。"

#. type: Title ==
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:35
#, no-wrap
msgid "Writing Command Mode Applications"
msgstr "コマンドモードアプリケーションの作成"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:41
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "`QuarkusApplication` を実装し、Quarkusがこのメソッドを自動的に実行するようにします。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:42
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "`QuarkusApplication` とJava mainメソッドを実装し、Java mainメソッドを使用してQuarkusを起動します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:47
msgid "The simplest possible command mode application with access to Quarkus APIs might appear as follows:"
msgstr "QuarkusのAPIにアクセスできる最もシンプルなコマンドモードのアプリケーションは、以下のようになります:"

#. type: Title ===
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:65
#, no-wrap
msgid "Contexts"
msgstr "コンテキスト"

#. type: Block title
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:68
#, no-wrap
msgid "Got a `ContextNotActiveException`?"
msgstr "`ContextNotActiveException` が発生しましたか?"

#. type: Title ===
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:82
#, no-wrap
msgid "Main method"
msgstr "Main method"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:84
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr "Java mainでアプリケーション mainを実行したい場合は以下のようになります:"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:103
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "`QuarkusApplication` を実装したクラスで Java main がある場合は Java main が実行されます。"

#. type: Title ====
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:109
#, no-wrap
msgid "Multiple Main Methods"
msgstr "複数のmainメソッド"

#. type: Title ===
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:124
#, no-wrap
msgid "The command mode lifecycle"
msgstr "コマンドモードのライフサイクル"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:127
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "コマンドモードのアプリケーションを実行する場合、基本的なライフサイクルは以下の通りです。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:129
msgid "Start Quarkus"
msgstr "Quarkusの起動"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:130
msgid "Run the `QuarkusApplication` main method"
msgstr "`QuarkusApplication` mainメソッドの実行"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:131
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "mainメソッドがreturnされた後にQuarkusをシャットダウンし、JVMを終了する"

#. type: Title ===
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:139
#, no-wrap
msgid "Development Mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:147
msgid "As command mode applications will often require arguments to be passed on the command line, this is also possible in dev mode:"
msgstr "コマンドモードのアプリケーションでは、コマンドラインで引数を渡す必要があることが多く、これは開発モードでも可能です:"

#. type: Block title
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:149
#, no-wrap
msgid "CLI"
msgstr "コマンドラインインタフェース"

#. type: Block title
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:155
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:161
#, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:167
msgid "You should see the following down the bottom of the screen after the application is stopped:"
msgstr "アプリケーションが停止した後、画面の下に以下のように表示されます:"

#. type: Title ==
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:177
#, no-wrap
msgid "Testing Command Mode Applications"
msgstr "コマンドモードアプリケーションのテスト"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:184
msgid "We can write a simple test for our CLI application above as follows:"
msgstr "上記のCLIアプリケーションの簡単なテストを以下のように書くことができます:"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:222
msgid "We can then extend this with an integration test that can be used to test the native executable or runnable jar:"
msgstr "これを統合テストで拡張し、ネイティブ実行可能ファイルや実行可能jarをテストするために使用することができます:"

#. type: Title ===
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:232
#, no-wrap
msgid "Mocking"
msgstr "モック"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:238
msgid "It is possible to mock CDI beans by leveraging xref:getting-started-testing.adoc#testing_different_profiles[test profiles] though."
msgstr "xref:getting-started-testing.adoc#testing_different_profiles[テストプロファイル] を活用することで、CDI Beanのモックを作成することが可能です。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:240
msgid "For instance, in the following test, the singleton `CdiBean1` will be mocked by `MockedCdiBean1`:"
msgstr "例えば、次のテストでは、シングルトン `CdiBean1` は `MockedCdiBean1` によってモック化されます:"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:289
msgid "List all the CDI beans for which you want to enable an alternative mocked bean."
msgstr "代替モックビーンを有効にしたい CDI ビーンをすべて列挙します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:290
msgid "Use `@Alternative` without a `@Priority`. Make sure you don't use `@Mock`."
msgstr "`Alternative` を `@Priority` なしで使用します。`@Mock` を使用しないことを確認してください。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:291
msgid "The scope of the mocked bean should be consistent with the original one."
msgstr "モックされたビーンのスコープは、元のビーンと一致する必要があります。"

#. type: Plain text
#: upstream/_versions/2.16/guides/command-mode-reference.adoc:292
msgid "Using this pattern, you can enable specific alternatives for any given test."
msgstr "このパターンを使用すると、任意のテストに対して特定の選択肢を有効にすることができます。"
