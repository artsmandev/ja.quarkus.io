msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"The application built in this guide is quite simple. The user fills a form on a web page.\n"
"The web page sends the form content to the `BookResource` as JSON (using Ajax). The `BookResource` validates the user input and returns the\n"
"_result_ as JSON."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `hibernate-validator` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"In this application, we are going to test an elementary object, but we support complicated constraints and can validate graphs of objects.\n"
"Create the `org.acme.validation.Book` class with the following content:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Constraints are added on fields, and when an object is validated, the values are checked.\n"
"The getter and setter methods are also used for JSON mapping."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"The method uses the `Validator` instance to check the payload.\n"
"It returns a set of violations.\n"
"If this set is empty, it means the object is valid.\n"
"In case of failures, the messages are concatenated and sent back to the browser."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"The class is very simple and only contains 2 fields and the associated getters and setters.\n"
"Because we indicate that we produce JSON, the mapping to JSON is made automatically."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"While using the `Validator` manually might be useful for some advanced usage,\n"
"if you simply want to validate the parameters or the return value or your REST end point,\n"
"you can annotate it directly, either with constraints (`@NotNull`, `@Digits`...)\n"
"or with `@Valid` (which will cascade the validation to the bean)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"If a validation error is triggered, a violation report is generated and serialized as JSON as our end point produces a JSON output.\n"
"It can be extracted and manipulated to display a proper error message."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Note that, if you want to push the validation errors to the frontend, you have to catch the exception and push the information yourselves\n"
"as they will not be automatically pushed to the JSON output."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Keep in mind that you usually don't want to expose to the public the internals of your services\n"
"- and especially not the validated value contained in the violation object."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Now let's add the simple web page to interact with our `BookResource`.\n"
"Quarkus automatically serves static resources contained in the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, replace the `index.html` file with the content from this {quickstarts-blob-url}/validation-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file in it."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"While the `ValidatorFactory` is instantiated by Quarkus itself,\n"
"you can very easily tweak it by declaring replacement beans that will be injected in the configuration."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"However, in the case of ``ConstraintValidator``s that are dependent of attributes of the constraint annotation\n"
"(typically when implementing the `initialize(A constraintAnnotation)` method),\n"
"use the `@Dependent` scope to make sure each annotation context has a separate instance of the `ConstraintValidator` bean."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"If customizing the `ValidatorFactory` through the available configuration properties and the CDI beans above doesn't cover your requirements,\n"
"you can customize it further by registering `ValidatorFactoryCustomizer` beans."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"All beans implementing `ValidatorFactoryCustomizer` are applied, meaning you can have several of them.\n"
"If you need to enforce some ordering, you can use the usual `@javax.annotation.Priority` annotation - beans with higher priority are applied first."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"When initializing a constraint validator of a given type,\n"
"Quarkus will check if a bean of this type is available and, if so, it will use it instead of instantiating a `ConstraintValidator`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"If you are using RESTEasy Reactive or RESTEasy Classic, in the context of a JAX-RS endpoint,\n"
"Hibernate Validator will automatically resolve the optimal locale to use from the `Accept-Language` HTTP header,\n"
"provided the supported locales have been properly specified in the `application.properties`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"It's sometimes necessary to enable different validation constraints\n"
"for the same class when it's passed to a different method."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"For example, a `Book` may need to have a `null` identifier when passed to the `post` method\n"
"(because the identifier will be generated),\n"
"but a non-`null` identifier when passed to the `put` method\n"
"(because the method needs the identifier to know what to update)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"To address this, you can take advantage of validation groups.\n"
"Validation groups are markers that you put on your constraints in order to enable or disable them at will."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Make the custom groups extend the `Default` group.\n"
"This means that whenever these groups are enabled, the `Default` group is also enabled.\n"
"This is useful if you have constraints that you want validated in both the `Post` and `Put` method:\n"
"you can simply use the default group on those constraints, like on the `title` property below."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Enable the `Post` group, meaning only constraints assigned to the `Post` (and `Default`) groups\n"
"will be validated for the `book` parameter of the `post` method.\n"
"In this case, it means `Book.id` must be `null` and `Book.title` must not be blank."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Enable the `Put` group, meaning only constraints assigned to the `Put` (and `Default`) groups\n"
"will be validated for the `book` parameter of the `put` method.\n"
"In this case, it means `Book.id` must not be `null` and `Book.title` must not be blank."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"At the moment, Hibernate Validator does not expose an API to extract the information from this file\n"
"so that we could register the appropriate classes for reflection."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Quarkus provides a default `ValidatorFactory` that you can customize using configuration properties.\n"
"This `ValidatorFactory` is carefully initialized to support native executables\n"
"using a bootstrap that is Quarkus-specific."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Creating a `ValidatorFactory` by yourself it not supported in native executables\n"
"and if you try to do so,\n"
"you will get an  error similar to `javax.validation.NoProviderFoundException: Unable to create a Configuration, because no\n"
"Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your\n"
"classpath.` when running your native executable."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"Thus why you should always use the Quarkus-managed `ValidatorFactory` by injecting an instance of\n"
"`ValidatorFactory` or directly an instance of `Validator` using CDI injection."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid ""
"To support some external libraries that are creating a `ValidatorFactory` using the default bootstrap,\n"
"Quarkus returns the `ValidatorFactory` managed by Quarkus when `Validation.buildDefaultValidatorFactory()`\n"
"is called."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.16/guides/validation.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.16/guides/validation.adoc:6
#, no-wrap
msgid "Validation with Hibernate Validator"
msgstr "Hibernate Validatorによるバリデーション"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:12
msgid "This guide covers how to use Hibernate Validator/Bean Validation for:"
msgstr "このガイドでは、以下の場合のHibernate Validator/Bean Validation の使用方法について説明します:"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:14
msgid "validating the input/output of your REST services;"
msgstr "REST サービスの入出力の検証"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:15
msgid "validating the parameters and return values of the methods of your business services."
msgstr "ビジネスサービスのメソッドのパラメーターと戻り値の検証"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:20
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:27
msgid "image:validation-guide-architecture.png[alt=Architecture]"
msgstr "image:validation-guide-architecture.png[alt=Architecture]"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:28
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:34
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:36
msgid "The solution is located in the `validation-quickstart` {quickstarts-tree-url}/validation-quickstart[directory]."
msgstr "ソリューションは `validation-quickstart` {quickstarts-tree-url}/validation-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:37
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:40
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:46
msgid "This command generates a Maven structure importing the RESTEasy Reactive/JAX-RS, Jackson and Hibernate Validator/Bean Validation extensions."
msgstr "このコマンドは、RESTEasy/JAX-RS、Jackson、およびHibernate Validator/Bean ValidationエクステンションをインポートするMavenディレクトリー構造を生成します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:54
msgid "The result of this command is dependent on your build tool:"
msgstr "このコマンドの結果は、お使いのビルドツールに依存します:"

#. type: Block title
#: upstream/_versions/2.16/guides/validation.adoc:56
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/2.16/guides/validation.adoc:65
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:70
#, no-wrap
msgid "Constraints"
msgstr "制約"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:98
#, no-wrap
msgid "JSON mapping and validation"
msgstr "JSONのマッピングとバリデーション"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:101
msgid "Create the following REST resource as `org.acme.validation.BookResource`:"
msgstr "以下のRESTリソースを `org.acme.validation.BookResource` として作成します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:130
msgid "The `Validator` instance is injected via CDI."
msgstr "`Validator` インスタンスはCDIで注入されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:132
msgid "Yes it does not compile, `Result` is missing, but we will add it very soon."
msgstr "はい、これはコンパイル出来ません。 `Result` がありませんが、私たちはすぐに追加します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:134
msgid "The method parameter (`book`) is created from the JSON payload automatically."
msgstr "メソッドパラメーター( `book` )は、JSONペイロードから自動的に作成されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:141
msgid "Let's now create the `Result` class as an inner class:"
msgstr "それでは、 `Result` クラスをインナークラスとして作成してみましょう。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:175
#, no-wrap
msgid "REST end point validation"
msgstr "RESTエンドポイントバリデーション"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:183
msgid "Let's create an end point validating the `Book` provided in the request:"
msgstr "リクエストで提供された `Book` を検証するエンドポイントを作成してみましょう。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:196
msgid "As you can see, we don't have to manually validate the provided `Book` anymore as it is automatically validated."
msgstr "ご覧のように、提供された `Book` は自動的に検証されるので、もう手動で検証する必要はありません。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:200
#, no-wrap
msgid "Service method validation"
msgstr "サービスメソッドの検証"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:203
msgid "It might not always be handy to have the validation rules declared at the end point level as it could duplicate some business validation."
msgstr "バリデーションルールをエンドポイントレベルで宣言するのは、必ずしも便利とは限りません。ビジネスバリデーションと重複する可能性があるためです。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:205
msgid "The best option is then to annotate a method of your business service with your constraints (or in our particular case with `@Valid`):"
msgstr "最良の選択肢は、ビジネスサービスのメソッドに制約をアノテーションすることです(私たちの場合は `@Valid` ):"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:223
msgid "Calling the service in your rest end point triggers the `Book` validation automatically:"
msgstr "RESTエンドポイントでサービスを呼び出すと、自動的に `Book` の検証が行われます。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:246
#, no-wrap
msgid "A frontend"
msgstr "フロントエンド"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:252
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:255
msgid "Now, let's see our application in action. Run it with:"
msgstr "では、実際にアプリケーションを見てみましょう。以下のように実行してみてください:"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:259
msgid "Then, open your browser to http://localhost:8080/:"
msgstr "そして、ブラウザで http://localhost:8080/ を開いてください:"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:261
msgid "Enter the book details (valid or invalid)"
msgstr "書籍の詳細を入力してください(有効または無効)"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:262
msgid "Click on the _Try me..._ buttons to check if your data is valid using one of the methods we presented above."
msgstr "_Try me..._ ボタンをクリックして、上記で紹介した方法のいずれかを使用してデータが有効かどうかを確認してください。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:264
msgid "image:validation-guide-screenshot.png[alt=Application]"
msgstr "image:validation-guide-screenshot.png[alt=Application]"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:266
msgid "The application can be packaged using:"
msgstr "アプリケーションは以下でパッケージ化することができます:"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:270
msgid "and executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして次のコマンドで実行できます。 `java -jar target/quarkus-app/quarkus-run.jar`."

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:272
msgid "You can also build the native executable using:"
msgstr "ネイティブ実行可能ファイルを次のようにビルドすることもできます。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:275
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Title ===
#: upstream/_versions/2.16/guides/validation.adoc:277
#, no-wrap
msgid "Hibernate Validator extension and CDI"
msgstr "Hibernate Validator エクステンションと CDI"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:280
msgid "The Hibernate Validator extension is tightly integrated with CDI."
msgstr "Hibernate ValidatorエクステンションはCDIと緊密に統合されています。"

#. type: Title ====
#: upstream/_versions/2.16/guides/validation.adoc:281
#, no-wrap
msgid "Configuring the ValidatorFactory"
msgstr "ValidatorFactoryの設定"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:284
msgid "Sometimes, you might need to configure the behavior of the `ValidatorFactory`, for instance to use a specific `ParameterNameProvider`."
msgstr "時には、 `ValidatorFactory` の動作を設定する必要があるかもしれません。例えば、特定の `ParameterNameProvider` を使用するためなどです。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:289
msgid "If you create a bean of the following types in your application, it will automatically be injected into the `ValidatorFactory` configuration:"
msgstr "アプリケーションで以下のタイプのBeanを作成すると、自動的に `ValidatorFactory` の設定に注入されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:291
msgid "`javax.validation.ClockProvider`"
msgstr "`javax.validation.ClockProvider`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:292
msgid "`javax.validation.ConstraintValidator`"
msgstr "`javax.validation.ConstraintValidator`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:293
msgid "`javax.validation.ConstraintValidatorFactory`"
msgstr "`javax.validation.ConstraintValidatorFactory`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:294
msgid "`javax.validation.MessageInterpolator`"
msgstr "`javax.validation.MessageInterpolator`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:295
msgid "`javax.validation.ParameterNameProvider`"
msgstr "`javax.validation.ParameterNameProvider`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:296
msgid "`javax.validation.TraversableResolver`"
msgstr "`javax.validation.TraversableResolver`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:297
msgid "`org.hibernate.validator.spi.properties.GetterPropertySelectionStrategy`"
msgstr "`org.hibernate.validator.spi.properties.GetterPropertySelectionStrategy`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:298
msgid "`org.hibernate.validator.spi.nodenameprovider.PropertyNodeNameProvider`"
msgstr "`org.hibernate.validator.spi.nodenameprovider.PropertyNodeNameProvider`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:299
msgid "`org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory`"
msgstr "`org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory`"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:301
msgid "You don't have to wire anything."
msgstr "何も設定しなくても大丈夫です。"

#. type: delimited block =
#: upstream/_versions/2.16/guides/validation.adoc:305
msgid "Obviously, for each listed type, you can declare only one bean."
msgstr "勿論、リストされた各型に対して、宣言することができるのは1つのBeanだけです。"

#. type: delimited block =
#: upstream/_versions/2.16/guides/validation.adoc:307
msgid "Most of the time, these beans should be declared as `@ApplicationScoped`."
msgstr "ほとんどの場合、これらのBeanは `@ApplicationScoped` として宣言されるべきです。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:317
msgid "For instance, you could override the built-in validator enforcing the `@Email` constraint and use `MyEmailValidator` instead with the following class:"
msgstr "たとえば、`@Email` 制約を強制する組み込みバリデーターをオーバーライドし、代わりに次のクラスで `MyEmailValidator` を使用できます。"

#. type: Title ====
#: upstream/_versions/2.16/guides/validation.adoc:340
#, no-wrap
msgid "Constraint validators as beans"
msgstr "Beanとしての制約バリデーター"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:343
msgid "You can declare your constraint validators as CDI beans:"
msgstr "制約バリデータをCDI Beanとして宣言することができます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:367
msgid "Thus, as demonstrated in our example, you can fully use injection in your constraint validator beans."
msgstr "このように、例で示したように、制約バリデータBeanでインジェクションを完全に使用することができます。"

#. type: delimited block =
#: upstream/_versions/2.16/guides/validation.adoc:371
msgid "The scope you choose for your `ConstraintValidator` bean is important:"
msgstr "`ConstraintValidator` Bean に選択するスコープは重要です:"

#. type: delimited block =
#: upstream/_versions/2.16/guides/validation.adoc:373
msgid "If the same instance of the `ConstraintValidator` bean can be used across the whole application, use the `@ApplicationScoped` scope."
msgstr "アプリケーション全体で `ConstraintValidator` Bean の同じインスタンスを使用できる場合は、 `@ApplicationScoped` スコープを使用します。"

#. type: delimited block =
#: upstream/_versions/2.16/guides/validation.adoc:374
msgid "If the `ConstraintValidator` bean implements the `initialize(A constraintAnnotation)` method and depends on the state of the constraint annotation, use the `@Dependent` scope to make sure each annotation context has a separate and properly configured instance of the `ConstraintValidator` bean."
msgstr "`ConstraintValidator` Bean が `initialize(constraintAnnotation)` メソッドを実装し、制約アノテーションの状態に依存する場合は、`@Dependent` スコープを使用して、各アノテーション コンテキストに `ConstraintValidator  Beanの個別の適切に構成されたインスタンスがあることを確認します。"

#. type: Title ===
#: upstream/_versions/2.16/guides/validation.adoc:376
#, no-wrap
msgid "Validation and localization"
msgstr "バリデーションとローカリゼーション"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:379
msgid "By default, constraint violation messages will be returned in the build system locale."
msgstr "デフォルトでは、制約違反のメッセージはビルドシステムのロケールで返されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:381
msgid "You can configure this behavior by adding the following configuration in your `application.properties`:"
msgstr "この動作は、以下の設定を `application.properties` に追加することで変更することが出来ます:"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:399
msgid "A similar mechanism exists for GraphQL services based on the `quarkus-smallrye-graphql` extension."
msgstr "同様の仕組みは、 `quarkus-smallrye-graphql` エクステンションに基づく GraphQL サービスにも存在します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:401
msgid "If this default mechanism is not sufficient and you need a custom locale resolution, you can add additional ``org.hibernate.validator.spi.messageinterpolation.LocaleResolver``s:"
msgstr "このデフォルトのメカニズムでは不十分で、カスタムのロケール解決が必要な場合は、 `org.hibernate.validator.spi.messageinterpolation.LocaleResolver` を追加することができます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:403
msgid "Any CDI bean implementing `org.hibernate.validator.spi.messageinterpolation.LocaleResolver` will be taken into account."
msgstr "`org.hibernate.validator.spi.messageinterpolation.LocaleResolver` を実装しているCDIビーンはすべて考慮されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:404
msgid "The ``LocaleResolver``s are consulted in the order of `@Priority` (higher priority goes first)."
msgstr "`LocaleResolver` は、 `@Priority` （優先順位の高いものから）順に参照されます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:405
msgid "A `LocaleResolver` may return null if it cannot resolve the locale, it will then be ignored."
msgstr "`LocaleResolver` は、ロケールを解決できない場合は null を返すかもしれない。その場合は無視される。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:406
msgid "The first non-null locale returned by a `LocaleResolver` is the one resolved."
msgstr "`LocaleResolver` が最初に返した非 NULL ロケールに解決されます。"

#. type: Title ===
#: upstream/_versions/2.16/guides/validation.adoc:407
#, no-wrap
msgid "Validation groups for REST endpoint or service method validation"
msgstr "RESTエンドポイントまたはサービスメソッドのバリデーショングループ"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:421
msgid "First, define the `Post` and `Put` groups, which are just Java interfaces."
msgstr "まず、 `Post` と `Put` グループを定義します。これらは単なるJavaインターフェースです。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:437
msgid "Then add the relevant constraints to `Book`, assigning the right group to each constraint:"
msgstr "次に、関連する制約を `Book` に追加し、各制約に適切なグループを割り当てます。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:453
msgid "Finally, add a `@ConvertGroup` annotation next to your `@Valid` annotation in your validated method."
msgstr "最後に、検証済みメソッドの `@Valid` アノテーションの横に `@ConvertGroup` アノテーションを追加します。"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:477
#, no-wrap
msgid "Limitations"
msgstr "制約事項"

#. type: Title ===
#: upstream/_versions/2.16/guides/validation.adoc:479
#, no-wrap
msgid "META-INF/validation.xml"
msgstr "META-INF/validation.xml"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:482
msgid "Configuring the `ValidatorFactory` using a `META-INF/validation.xml` file is *NOT* supported in Quarkus."
msgstr "Quarkusでは、 `META-INF/validation.xml` ファイルを使用した `ValidatorFactory` の設定はサポートされて *いません* 。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:487
msgid "To configure the `ValidatorFactory`, use the exposed configuration properties and the CDI integration."
msgstr "`ValidatorFactory` を設定するには、公開された設定プロパティとCDI統合を使用します。"

#. type: Plain text
#: upstream/_versions/2.16/guides/validation.adoc:489
msgid "Consequently, the only way to define constraints in Quarkus is by annotating your classes."
msgstr "したがって、Quarkusで制約を定義する唯一の方法は、クラスにアノテーションを付けることです。"

#. type: Title ===
#: upstream/_versions/2.16/guides/validation.adoc:490
#, no-wrap
msgid "ValidatorFactory and native executables"
msgstr "ValidatorFactoryとネイティブ実行ファイル"

#. type: Title ==
#: upstream/_versions/2.16/guides/validation.adoc:510
#, no-wrap
msgid "Hibernate Validator Configuration Reference"
msgstr "Hibernate Validator設定リファレンス"
