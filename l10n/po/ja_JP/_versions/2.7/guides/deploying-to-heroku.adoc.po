msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.\n"
"It supports several languages like Java, Ruby, Node.js, Scala, Clojure, Python, PHP, and Go.\n"
"In addition it offers a container registry that can be used to deploy prebuilt container images."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"All three approaches need to be aware of the port that Heroku assigns to it to handle traffic.\n"
"Luckily, there's a dynamic configuration property for it."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"Make sure you have the getting-started application at hand, or clone the Git repository: `git clone {quickstarts-clone-url}`,\n"
"or download an {quickstarts-archive-url}[archive]. The solution is located in the `getting-started` directory."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"Heroku can react on changes in your repository, run CI and redeploy your application when your code changes.\n"
"Therefore we start with a valid repository already."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"Heroku picks a random port and assigns it to the container that is eventually running your Quarkus application.\n"
"That port is available as an environment variable under `$PORT`.\n"
"The easiest way to make Quarkus in all deployment scenarios aware of it is using the following configuration:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"This reads as: \"Listen on `$PORT` if this is a defined variable, otherwise listen on 8080 as usual.\"\n"
"Run the following to add this to your `application.properties`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"The first variant uses the Quarkus Maven build to create the _quarkus-app_ application structure containing the runnable \"fast-jar\" as well as all libraries needed\n"
"inside Heroku's build infrastructure and then deploying that result, the other one uses a local build process to create an optimized container."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"The image we are going to build needs to be named accordingly to work with Heroku's registry and deployment.\n"
"We get the generated name via `heroku info` and pass it on to the (local) build:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"The initial push is rather big, as all layers of the image need to be transferred.\n"
"The following pushes will be smaller."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"The biggest advantage we take when deploying our app as a container is to deploy a container with the natively compiled application.\n"
"Why? Because Heroku will stop or sleep the application when there's no incoming traffic.\n"
"A native application will wake up much faster from its sleep."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/deploying-to-heroku.adoc
msgid ""
"The process is pretty much the same.\n"
"We opt in to compiling a native image inside a local container, so that we don't have to deal with installing GraalVM locally:"
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:6
#, no-wrap
msgid "Deploying to Heroku"
msgstr "Herokuへのデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:10
msgid "In this guide you will learn how to deploy a Quarkus based web application as a web-dyno to Heroku."
msgstr "このガイドでは、QuarkusベースのWebアプリケーションをweb-dynoとしてHerokuにデプロイする方法を説明します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:12
msgid "This guide covers:"
msgstr "このガイドでは以下をカバーしています:"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:14
msgid "Update Quarkus HTTP Port"
msgstr "Quarkus HTTPポートの更新"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:15
msgid "Install the Heroku CLI"
msgstr "Heroku CLIのインストール"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:16
msgid "Deploy the application to Heroku"
msgstr "アプリケーションのHerokuへのデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:17
msgid "Deploy the application as Docker image to Heroku"
msgstr "アプリケーションをDockerイメージとしてHerokuにデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:18
msgid "Deploy the native application as Docker image to Heroku"
msgstr "ネイティブアプリケーションをDockerイメージとしてHerokuにデプロイ"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:25
msgid "https://www.heroku.com/[A Heroku Account]. Free accounts work."
msgstr "link:https://www.heroku.com/[Herokuのアカウント]。無料のアカウントが使えます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:26
msgid "https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI installed]"
msgstr "link:https://devcenter.heroku.com/articles/heroku-cli[Heroku CLIのインストール]"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:27
#, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:34
msgid "Heroku can be used in different ways to run a Quarkus application:"
msgstr "Herokuは、Quarkusのアプリケーションを実行するためにさまざまな方法で使用できます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:36
msgid "As a plain Java program running in a container defined by Heroku's environment"
msgstr "Herokuの環境で定義されたコンテナ内で動作するプレーンなJavaプログラムとして"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:37
msgid "As a containerized Java program running in a container defined by the Quarkus build process"
msgstr "Quarkusのビルドプロセスで定義されたコンテナ内で実行されるコンテナ化されたJavaプログラムとして"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:38
msgid "As a containerized native program running in a container defined by the Quarkus build process"
msgstr "Quarkusのビルドプロセスで定義されたコンテナ内で実行されるコンテナ化されたネイティブプログラムとして"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:43
msgid "The guide assumes that you have the https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI] installed."
msgstr "このガイドでは、 link:https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI]がインストールされていることを前提としています。"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:44
#, no-wrap
msgid "Common project setup"
msgstr "プロジェクトの共通設定"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:47
msgid "This guide will take as input an application developed in the xref:getting-started.adoc[Getting Started guide]."
msgstr "このガイドでは、 link:getting-started[入門ガイド] で開発されたアプリケーションを入力として使用します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:55
msgid "Also, make sure your Heroku CLI is working:"
msgstr "また、Heroku CLIが動作していることを確認してください。"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:62
#, no-wrap
msgid "Prepare the Quarkus HTTP Port"
msgstr "QuarkusのHTTPポートの準備"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:82
#, no-wrap
msgid "Deploy the repository and build on Heroku"
msgstr "リポジトリのデプロイとHerokuでのビルド"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:88
msgid "Two additional files are needed in your application's root directory:"
msgstr "アプリケーションのルートディレクトリには、2つの追加ファイルが必要です。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:90
msgid "`system.properties` to configure the Java version"
msgstr "Javaのバージョンを設定する為に `system.properties`"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:91
msgid "`Procfile` to configure how Heroku starts your application"
msgstr "Herokuがアプリケーションを開始する方法を設定するために `Procfile`"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:93
msgid "Quarkus needs JDK 11, so we specify that first:"
msgstr "QuarkusはJDK 11を必要とするので、まずそれを指定します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:102
msgid "We will deploy a web application so we need to configure the type `web` in the Heroku `Procfile` like this:"
msgstr "今回はWebアプリケーションをデプロイするので、Heroku `Procfile` でタイプ `web` を以下のように設定する必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:111
msgid "Your application should already be runnable via `heroku local web`."
msgstr "あなたのアプリケーションは、すでに `heroku local web` を通して実行可能になっているはずです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:113
msgid "Let's create an application in your account and deploy that repository to it:"
msgstr "自分のアカウントでアプリケーションを作成し、そこにそのリポジトリをデプロイしてみましょう。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:122
msgid "The application will have a generated name and the terminal should output that. `heroku open` opens your default browser to access your new application."
msgstr "アプリケーションには生成された名前があり、ターミナルにはその名前が出力されるはずです。 `heroku open` は、新しいアプリケーションにアクセスするためにデフォルトのブラウザで開きます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:124
msgid "To access the REST endpoint via curl, run:"
msgstr "curlでRESTエンドポイントにアクセスするには、次のように実行します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:132
msgid "Of course, you can use the Heroku CLI to connect this repo to your GitHub account, too, but this is out of scope for this guide."
msgstr "もちろん、Heroku CLIを使ってこのレポジトリをGitHubアカウントに接続することもできますが、これはこのガイドでは対象外です。"

#. type: Title ==
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:133
#, no-wrap
msgid "Deploy as container"
msgstr "コンテナとしてデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:136
msgid "The advantage of pushing a whole container is that we are in complete control over its content and maybe even choose to deploy a container with a native executable running on GraalVM."
msgstr "コンテナ全体をプッシュすることの利点は、その内容を完全にコントロールできることであり、GraalVM上で動作するネイティブ実行可能ファイルを持つコンテナをデプロイすることも可能です。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:138
msgid "First, login to Heroku's container registry:"
msgstr "まず、Herokuのコンテナレジストリにログインします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:145
msgid "We need to add an extension to our project to build container images via the Quarkus Maven plugin:"
msgstr "Quarkus Mavenプラグインを使ってコンテナイメージを構築するために、プロジェクトにエクステンションを追加する必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:167
msgid "With Docker installed, you can now push the image and release it:"
msgstr "Dockerがインストールされたので、イメージをプッシュしてリリースすることができます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:175
msgid "You can and should check the logs to see if your application is now indeed running from the container:"
msgstr "アプリケーションが実際にコンテナから実行されているかどうか、ログを確認することができますし、確認すべきです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/deploying-to-heroku.adoc:204
msgid "After that, push and release again:"
msgstr "その後、もう一度プッシュし、リリースします。"
