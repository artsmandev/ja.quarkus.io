msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] to provide\n"
"distributed tracing for interactive web applications."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry-exporter-otlp` extension,\n"
"which includes the OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry-exporter-otlp` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"Notice that there is no tracing specific code included in the application. By default, requests sent to this\n"
"endpoint will be traced without any required code changes."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"Some use cases will require custom configuration of OpenTelemetry.\n"
"These sections will outline what is necessary to properly configure it."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator]\n"
"when creating the trace and span identifier."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.\n"
"The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accesing\n"
"data across the lifespan of a distributed transaction."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage]\n"
"propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the <<configuration-reference>>."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]\n"
"extension to be added as a dependency to your project."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation\n"
"of the entity that is producing telemetry, it adds attributes to the exported trace to characterize who is producing the trace."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"You can add attributes by setting the `resource-attributes` tracer config that is described in the <<configuration-reference>>.\n"
"Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that\n"
"is described in the xref:config-reference.adoc#configuration_sources[Quarkus Configuration Reference]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the tracer producer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether\n"
"a trace should be sampled and exported, controlling noise and overhead by reducing the number of sample of traces collected and sent\n"
"to the collector."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"You can set a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler]\n"
"simply by setting the desired sampler config described in the <<configuration-reference>>."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"If you need to use a custom sampler or to use one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create a sampler producer. The OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the tracer producer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.\n"
"These sections will outline what is necessary to propagate traces across process boundaries."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"When using the SmallRye Reactive Messaging extension for Kafka,\n"
"we are able to propagate the span into the Kafka Record with:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/opentelemetry.adoc
msgid ""
"The above creates a `Metadata` object we can add to the `Message` being produced,\n"
"which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/opentelemetry.adoc:6
#, no-wrap
msgid "Using OpenTelemetry"
msgstr "Using OpenTelemetry"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:18
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:21
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "このガイドでは、分散トレースを実証するための簡単なRESTアプリケーションを作成します。"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:22
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:28
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:30
msgid "The solution is located in the `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "このソリューションは、 `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[ディレクトリ]にあります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:31
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:34
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:50
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/2.7/guides/opentelemetry.adoc:52
#: upstream/_versions/2.7/guides/opentelemetry.adoc:245
#: upstream/_versions/2.7/guides/opentelemetry.adoc:262
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/2.7/guides/opentelemetry.adoc:61
#: upstream/_versions/2.7/guides/opentelemetry.adoc:254
#: upstream/_versions/2.7/guides/opentelemetry.adoc:271
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:66
#, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "JAX-RSのリソース調査"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:69
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "`src/main/java/org/acme/opentelemetry/TracedResource.java` のファイルを開くと、以下の内容が表示されます。"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:97
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:100
msgid "There are two ways to configure the OTLP gRPC Exporter within the application."
msgstr "アプリケーション内でOTLP gRPC Exporterを設定するには2つの方法があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:102
msgid "The first approach is by providing the properties within the `src/main/resources/application.properties` file:"
msgstr "最初のアプローチは、 `src/main/resources/application.properties` ファイル内でプロパティーを提供することです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:113
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr "このアプリケーションから作成されたすべてのスパンには、そのスパンが `myservice` アプリケーションによって作成されたことを示す OpenTelemetry `Resource` が含まれます。設定されていない場合は、デフォルトでアーティファクトIDが設定されます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:114
msgid "Whether OpenTelemetry is enabled or not. The default is `true`, but shown here to indicate how it can be disabled"
msgstr "OpenTelemetryを有効にするかどうか。デフォルトは `true` ですが、ここでは無効にできることを示しています。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:115
msgid "gRPC endpoint for sending spans"
msgstr "スパンを送信するためのgRPCエンドポイント"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:116
msgid "Optional gRPC headers commonly used for authentication"
msgstr "認証によく使われるオプションのgRPCヘッダー"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:117
#, no-wrap
msgid "Run the application"
msgstr "アプリケーションの実行"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:120
msgid "The first step is to configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "最初のステップは、テレメトリデータを受信して処理し、キャプチャしたトレースを表示する link:https://www.jaegertracing.io/[Jaeger]にエクスポートするための link:https://opentelemetry.io/docs/collector/[OpenTelemetry Collector]の設定と起動です。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:122
msgid "Configure the OpenTelemetry Collector by creating an `otel-collector-config.yaml` file:"
msgstr "`otel-collector-config.yaml` ファイルを作成して OpenTelemetry Collector を設定します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:158
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "`docker-compose up -d` OpenTelemetry CollectorとJaegerシステムを、以下の `docker-compose.yml` ファイルを介して起動します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:186
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "これでアプリケーションを実行する準備が整いました。トレーサーの設定に `application.properties` を使用している場合:"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:190
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "または、JVM引数でOTLP gRPCエンドポイントを設定する場合:"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:196
msgid "With the OpenTelemetry Collector, Jaeger system and application running, you can make a request to the provided endpoint:"
msgstr "OpenTelemetry Collector、Jaegerシステム、アプリケーションが動作している状態で、提供されているエンドポイントにリクエストを出すことができます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:204
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "その後、 link:http://localhost:16686[Jaeger UI] にアクセスしてトレース情報を確認します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:206
msgid "Hit `CTRL+C` to stop the application."
msgstr "`CTRL+C`  を叩いてアプリケーションを停止させます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:207
#, no-wrap
msgid "Additional configuration"
msgstr "追加設定"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:211
#, no-wrap
msgid "ID Generator"
msgstr "IDジェネレーター"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:232
#, no-wrap
msgid "Propagators"
msgstr "プロパゲーター"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:260
msgid "The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws] extension to be added as a dependency to your project."
msgstr "`xray` プロパゲータは、 link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws]エクステンションをプロジェクトに依存関係として追加する必要があります。"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:277
#, no-wrap
msgid "Resource"
msgstr "リソース"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:307
#, no-wrap
msgid "Sampler"
msgstr "サンプラー"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:334
#, no-wrap
msgid "Additional instrumentation"
msgstr "追加の計器"

#. type: Plain text
#: upstream/_versions/2.7/guides/opentelemetry.adoc:340
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "このセクションで説明されている計器は、Quarkusでテストされており、標準モードとネイティブモードの両方で動作します。"

#. type: Title ===
#: upstream/_versions/2.7/guides/opentelemetry.adoc:341
#, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr "SmallRye Reactive Messaging - Kafka"

#. type: Title ==
#: upstream/_versions/2.7/guides/opentelemetry.adoc:355
#, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr "OpenTelemetry 設定リファレンス"
