msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/cdi-integration.adoc
#, no-wrap
msgid "CDI Integration Guide"
msgstr "CDI 統合ガイド"

#: _versions/2.7/guides/cdi-integration.adoc
msgid ""
"ArC, the CDI container, is bootstrapped at build time.\n"
"The downside of this approach is that CDI Portable Extensions cannot be supported.\n"
"Nevertheless, the functionality can be achieved using the Quarkus-specific extensions API."
msgstr "CDI コンテナーである ArC はビルド時にブートストラップされます。このアプローチの欠点は、CDI Portable Extensionsをサポートできないことです。それにもかかわらず、Quarkus固有のエクステンションAPIを使用して機能を実現することができます。"

#: _versions/2.7/guides/cdi-integration.adoc
msgid ""
"The container is bootstrapped in multiple phases.\n"
"From a high level perspective these phases go as follows:"
msgstr "コンテナーは複数のフェーズでブートストラップされます。高レベルの視点から見ると、これらのフェーズは以下のようになります。"

#. type: Plain text
#: _versions/2.7/guides/cdi-integration.adoc
msgid "Initialization"
msgstr "初期化"

#. type: Plain text
#: _versions/2.7/guides/cdi-integration.adoc
msgid "Bean discovery"
msgstr "Beanディスカバリ"

#. type: Plain text
#: _versions/2.7/guides/cdi-integration.adoc
msgid "Registration of synthetic components"
msgstr "合成コンポーネントの登録"

#. type: Plain text
#: _versions/2.7/guides/cdi-integration.adoc
msgid "Validation"
msgstr "バリデーション"

#: _versions/2.7/guides/cdi-integration.adoc
msgid ""
"In the _initialization_ phase the preparatory work is being carried out and custom contexts are registered.\n"
"_Bean discovery_ is then the process where the container analyzes all application classes, identifies beans and wires them all together based on the provided metadata.\n"
"Subsequently, the extensions can register _synthetic components_.\n"
"Attributes of these components are fully controlled by the extensions, i.e. are not derived from an existing class.\n"
"Finally, the _deployment is validated_.\n"
"For example, the container validates every injection point in the application and fails the build if there is no bean that satisfies the given required type and qualifiers."
msgstr "_初期化_ フェーズでは、準備作業が行われ、カスタムコンテキストが登録されます。その後、コンテナーがすべてのアプリケーションクラスを分析し、Beanを識別し、提供されたメタデータに基づいてそれらをすべて繋ぎ合わせるプロセスがBean _ディスカバリ_ です。その後、エクステンションは _合成コンポーネント_ を登録することができます。これらのコンポーネントの属性はエクステンションによって完全に制御されます。最後に、 _デプロイメントが検証されます_ 。例えば、コンテナーはアプリケーション内のすべての注入ポイントを検証し、与えられた必要な型と修飾子を満たすBeanがない場合はビルドを失敗させます。"

#. type: Plain text
#: _versions/2.7/guides/cdi-integration.adoc
msgid "You can see more information about the bootstrap by enabling additional logging. Simply run the Maven build with `-X` or `--debug` and grep the lines that contain `io.quarkus.arc`. In the <<cdi-reference.adoc#dev-mode,development mode>>, you can use `quarkus.log.category.\"io.quarkus.arc.processor\".level=DEBUG` and two special endpoints are also registered automatically to provide some basic debug info in the JSON format."
msgstr "追加の