msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Funqy functions can be deployed using the AWS Lambda Java Runtime, or you can build a native executable and use\n"
"Lambda Custom Runtime if you want a smaller memory footprint and faster cold boot startup time."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS CLI."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"There is nothing special about the code and more importantly nothing AWS specific.  Funqy functions can be deployed to many different\n"
"environments and AWS Lambda is one of them.  The Java code is actually the same exact code as the {quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Only one Funqy function can be exported per Amazon Lambda deployment.  If you have multiple functions defined\n"
"within your project, then you will need to choose the function within your Quarkus `application.properties`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"There are a few steps to get your Funqy function running on AWS Lambda.  The quickstart maven project generates a helpful script to\n"
"create, update, delete, and invoke your functions for pure Java and native deployments.  This script is generated\n"
"at build time."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"View the https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] for deploying\n"
"a lambda with AWS CLI.  Specifically, make sure you have created an `Execution Role`.  You will need to define\n"
"a `LAMBDA_ROLE_ARN` environment variable in your profile or console window,  Alternatively, you can edit\n"
"the `manage.sh` script that is generated by the build and put the role value directly there:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"After you run the build, there are a few extra files generated by the `quarkus-funqy-amazon-lambda` extension.  These files\n"
"are in the the build directory:  `target/` for maven, `build/` for gradle."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"The `target/manage.sh` script is for managing your Funqy function using the AWS Lambda Java runtime.  This script is provided only for\n"
"your convenience. Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid "`manage.sh` supports four operation:  `create`, `delete`, `update`, and `invoke`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"To verify your setup, that you have the AWS CLI installed, executed aws configure for the AWS access keys,\n"
"and setup the `LAMBDA_ROLE_ARN` environment variable (as described above), please execute `manage.sh` without any parameters.\n"
"A usage statement will be printed to guide you accordingly."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Do not change the handler switch.  This must be hardcoded to `io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest`.\n"
"This special handler is Funqy's integration point with AWS Lambda."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"If there are any problems creating the function, you must delete it with the `delete` function before re-running\n"
"the `create` command."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"The example function takes input passed in via the `--payload` switch which points to a json file\n"
"in the root directory of the project."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"You can update the Java code as you see fit.  Once you've rebuilt, you can redeploy your function by executing the\n"
"`update` command."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"If you want a lower memory footprint and faster initialization times for your Funqy function, you can compile your Java\n"
"code to a native executable.  Just make sure to rebuild your project with the `-Pnative` switch."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing Quarkus to use a Docker build as Amazon\n"
"Lambda requires Linux binaries.  You can do this by passing this property to your build:\n"
"`-Dnative-image.docker-build=true`.  This requires you to have Docker installed locally, however."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Either of these commands will compile and create a native executable.  It also generates a zip file `target/function.zip`.\n"
"This zip file contains your native executable image renamed to `bootstrap`.  This is a requirement of the AWS Lambda\n"
"Custom (Provided) Runtime."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"The instructions here are exactly as above with one change:  you'll need to add `native` as the first parameter to the\n"
"`manage.sh` script:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"As above, commands can be stacked.  The only requirement is that `native` be the first parameter should you wish\n"
"to work with native image builds.  The script will take care of the rest of the details necessary to manage your native\n"
"image function deployments."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"One thing to note about the create command for native is that the `aws lambda create-function`\n"
"call must set a specific environment variable:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-funqy-amazon-lambda` extension\n"
"as a dependency.  The extension automatically generates everything you might need for your lambda deployment."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Funqy Amazon Lambda support leverages the Quarkus AWS Lambda test framework so that you can unit tests your Funqy functions.\n"
"This is true for both JVM and native modes.\n"
"This test framework provides similar functionality to the SAM CLI, without the overhead of Docker."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"If you open up {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java]\n"
"you'll see that the test replicates the AWS execution environment."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"The https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]\n"
"allows you to run your functions locally on your laptop in a simulated Lambda environment.  This requires\n"
"https://www.docker.com/products/docker-desktop[docker] to be installed.  This is an optional approach should you choose\n"
"to take advantage of it.  Otherwise, the Quarkus JUnit integration should be sufficient for most of your needs."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"Run the following SAM CLI command to locally test your function, passing the appropriate SAM `template`.\n"
"The `event` parameter takes any JSON file, in this case the sample `payload.json`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"There are times where you may have to add additional entries to the `function.zip` lambda deployment that is generated\n"
"by the build.  To do this create a `zip.jvm` or `zip.native` directory within `src/main`.\n"
"Create `zip.jvm/` if you are doing a pure Java.  `zip.native/` if you are doing a native deployment."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.7/guides/funqy-amazon-lambda.adoc
msgid ""
"There are times you may want to set specific system properties or other arguments when lambda invokes\n"
"your native Funqy deployment.  If you include a `bootstrap` script file within\n"
"`zip.native`, the Funqy extension will automatically rename the executable to `runner` within\n"
"`function.zip` and set the unix mode of the `bootstrap` script to executable."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:6
#, no-wrap
msgid "Funqy Amazon Lambda Binding"
msgstr "Funqy Amazon Lambda バインディング"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:13
msgid "The guide walks through quickstart code to show you how you can deploy Funqy functions to Amazon Lambda."
msgstr "このガイドでは、Funqy関数をAmazon Lambdaにデプロイする方法をクイックスタートコードで説明しています。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:24
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "link:funqy[Funqy の基礎] を読む。短時間で読めます!"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:25
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "https://aws.amazon.com[An Amazon AWS account]"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:26
msgid "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"
msgstr "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:27
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], for local testing"
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] 、ローカルテスト用"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:29
msgid "Funqy Amazon Lambdas build off of our xref:amazon-lambda.adoc[Quarkus Amazon Lambda support]."
msgstr "Funqy Amazon Lambda は、xref:amazon-lambda.adoc[Quarkus Amazon Lambda サポート] を基に構築されています。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:30
#, no-wrap
msgid "Installing AWS bits"
msgstr "AWS ビットのインストール"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:35
#, no-wrap
msgid "The Quickstart"
msgstr "クイックスタート"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:38
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:40
msgid "The solution is located in the `funqy-amazon-lambda-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[directory]."
msgstr "ソリューションは `funqy-amazon-lambda-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:41
#, no-wrap
msgid "The Code"
msgstr "コード"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:47
#, no-wrap
msgid "Choose Your Function"
msgstr "functionの選択"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:58
msgid "You can see how the quickstart has done it within its own {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties]."
msgstr "クイックスタートがそれをどのように行ったかは、自身の {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties] で確認できます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:60
msgid "Alternatively, you can set the `QUARKUS_FUNQY_EXPORT` environment variable when you create the Amazon Lambda using the `aws` cli."
msgstr "または、`aws` cli を使用して Amazon Lambda を作成する際に、環境変数 `QUARKUS_FUNQY_EXPORT` を設定することもできます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:61
#, no-wrap
msgid "Deploy to AWS Lambda Java Runtime"
msgstr "AWS Lambda Java Runtime へのデプロイ"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:67
#, no-wrap
msgid "Build and Deploy"
msgstr "ビルドとデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:70
msgid "Build the project using Maven:"
msgstr "maven を使用してプロジェクトをビルドします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:74
msgid "This will compile and package your code."
msgstr "これでコードがコンパイルされ、パッケージ化されます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:75
#, no-wrap
msgid "Create an Execution Role"
msgstr "実行ロールの作成"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:87
#, no-wrap
msgid "Extra Build Generated Files"
msgstr "ビルド時に追加生成されるファイル"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:93
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - Lambda デプロイファイル"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:94
msgid "`manage.sh` - wrapper around aws lambda cli calls"
msgstr "`manage.sh` - aws Lambda CLI の呼び出しのラッパー"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:95
msgid "`bootstrap-example.sh` - example bootstrap script for native deployments"
msgstr "`bootstrap-example.sh` - ネイティブデプロイメント用のブートストラップスクリプトの例"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:96
msgid "`sam.jvm.yaml` - (optional) for use with sam cli and local testing"
msgstr "`sam.jvm.yaml` - (オプション) SAM CLI やローカル・テスト用"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:97
msgid "`sam.native.yaml` - (optional) for use with sam cli and native local testing"
msgstr "`sam.native.yaml` - (オプション) SAM CLI やネイティブ・ローカル・テスト用(オプション)"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:98
#, no-wrap
msgid "Create the function"
msgstr "関数を作成する"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:111
msgid "To see the `usage` statement, and validate AWS configuration:"
msgstr "`usage` を参照したり、AWS の設定を検証するためには次のようにします。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:117
msgid "You can `create` your function using the following command:"
msgstr "次のコマンドを使って、 Function を `create` します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:124
msgid "or if you do not have `LAMBDA_ROLE_ARN` already defined in this shell:"
msgstr "または、このシェルで既に `LAMBDA_ROLE_ARN` が定義されていない場合にはこうです。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:142
msgid "Commands may also be stacked:"
msgstr "コマンドはスタックすることもできます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:147
#, no-wrap
msgid "Invoke the function"
msgstr "関数の呼出"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:150
msgid "Use the `invoke` command to invoke your function."
msgstr "Function を呼び出すには `invoke` コマンドを使用します。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:160
msgid "The function can also be invoked locally with the SAM CLI like this:"
msgstr "この関数は、以下のようにSAM CLI によってローカルで呼び出すこともできます。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:167
msgid "If you are working with your native image build, simply replace the template name with the native version:"
msgstr "ネイティブイメージのビルドで作業している場合は、テンプレート名をネイティブバージョンに置き換えてください。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:173
#, no-wrap
msgid "Update the function"
msgstr "functionの更新"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:183
#, no-wrap
msgid "Deploy to AWS Lambda Custom (native) Runtime"
msgstr "AWS Lambda カスタム (ネイティブ) ランタイムへのデプロイ"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:189
msgid "For Linux hosts execute:"
msgstr "Linuxホストの場合は以下を実行します。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:225
#, no-wrap
msgid "Examine the POM"
msgstr "POM を検証する"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:230
#, no-wrap
msgid "Integration Testing"
msgstr "統合テスト"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:259
#, no-wrap
msgid "Testing with the SAM CLI"
msgstr "SAM CLI を使用したテスト"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:267
msgid "A starter template has been generated for both JVM and native execution modes."
msgstr "JVMとネイティブ実行モードの両方に対応したスターターテンプレートが生成されています。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:277
msgid "The native image can also be locally tested using the `sam.native.yaml` template:"
msgstr "ネイティブイメージは、 `sam.native.yaml` テンプレートを使ってローカルでテストすることもできます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:283
#, no-wrap
msgid "Modifying `function.zip`"
msgstr "`function.zip` の修正"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:290
msgid "Any you files and directories you create under your zip directory will be included within `function.zip`"
msgstr "zipディレクトリーの下に作成したファイルやディレクトリーは、すべて `function.zip` に含まれます。"

#. type: Title ==
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:291
#, no-wrap
msgid "Custom `bootstrap` script"
msgstr "カスタム `bootstrap` スクリプト"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:299
msgid "The native executable must be referenced as `runner` if you include a custom `bootstrap` script."
msgstr "カスタム `bootstrap` スクリプトを含む場合は、ネイティブ実行可能ファイルを `runner` として参照する必要があります。"

#. type: Plain text
#: upstream/_versions/2.7/guides/funqy-amazon-lambda.adoc:300
msgid "The extension generates an example script within `target/bootstrap-example.sh`."
msgstr "このエクステンションは、サンプルのスクリプト `target/bootstrap-example.sh` を生成します。"
