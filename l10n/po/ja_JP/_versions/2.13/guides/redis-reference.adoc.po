msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"When a non-standard type is used, the object is serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the the `pubsub` group."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using: `tx.discard();`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as `String` as a second parameter to the `withTransaction` method:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method, allowing the execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"The `RedisHostsProvider` programmatically provides redis hosts.\n"
"This allows for configuration of properties like redis connection password coming from other sources."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.13/guides/redis-reference.adoc:6
#, no-wrap
msgid "Redis Extension Reference Guide"
msgstr "Redis エクステンションのリファレンスガイド"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:20
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr "Redis を紹介する https://try.redis.io/[インタラクティブなチュートリアル]。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:21
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr "Redis コマンドを説明し、リファレンスドキュメントへのリンクが掲載されている https://redis.io/commands/[コマンドリファレンス]。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:23
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr "このエクステンションは、命令型とリアクティブ型の API、および低レベルと高レベルの (タイプセーフな) クライアントを提供します。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:25
#, no-wrap
msgid "Installation"
msgstr "インストール"

#. type: Block title
#: upstream/_versions/2.13/guides/redis-reference.adoc:31
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/2.13/guides/redis-reference.adoc:40
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:46
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr "この依存関係があれば、次に Redis クライアントや _データソース_ (高レベル、タイプセーフの API) を注入することができます。以下に例を示します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:57
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the <<apis>> section."
msgstr "quarkus-redis エクステンションで提供されるさまざまな API の詳細については、<<apis>> セクションを参照してください。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:59
#, no-wrap
msgid "One extension, multiple APIs"
msgstr "1 つのエクステンション、複数の API"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:62
msgid "This extension provides multiple ways to interact with Redis:"
msgstr "このエクステンションは、Redis と対話する複数の方法を提供します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:79
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr "適切な API を選択できるように、いくつかの推奨事項を以下に示します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:81
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr "Redis と統合する命令型 (_classic_) の Quarkus アプリケーションを構築する場合、 `io.quarkus.redis.datasource.RedisDataSource` を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:82
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr "Redis と統合したリアクティブな Quarkus アプリケーションを構築する場合は、`io.quarkus.redis.datasource.ReactiveRedisDataSource` を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:83
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr "細かい制御が必要な場合や、汎用的な方法でコマンドを実行する場合は、`io.vertx.mutiny.redis.client.RedisAPI` を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:84
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr "既存の Vert.x コードがある場合は、`io.vertx.redis.client.RedisAPI` を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:85
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr "カスタムコマンドを発行する必要がある場合は、データソース (リアクティブ型または命令型) または `io.vertx.mutiny.redis.client.Redis` を使用することができます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:87
#, no-wrap
msgid "Default and named clients"
msgstr "デフォルトクライアントと名前付きクライアント"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:102
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr "デフォルトの接続を使用する場合、_プレーン_ `@Inject` を使用してさまざまな APIS を注入することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:115
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr "一般的には、1 つだけ注入します。先ほどのスニペットは単なる一例です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:118
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr "_名前付き_ クライアントは `quarkus.redis.<name>.*` プロパティーを使用して設定されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:126
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr "API にアクセスするためには、`@RedisClientName` 修飾子が必要です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:138
msgid "When using `@RedisClientName`, you can omit the `@Inject` annotation."
msgstr "`@RedisClientName` を使用する場合は、`@Inject` アノテーションを省略することができます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:139
#, no-wrap
msgid "Connecting to Redis"
msgstr "Redisへの接続"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:142
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr "Redis エクステンションは、4 つの異なるモードで動作することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:144
msgid "Simple client (probably what most users need)."
msgstr "シンプルなクライアント (おそらくほとんどのユーザーが必要としているもの)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:145
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr "Sentinel (高可用性モードで Redis を使用する場合)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:146
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr "クラスター (Redis を Clustered モードで動作させる場合)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:147
msgid "Replication (single shard, one node write, multiple read)."
msgstr "レプリケーション (シングルシャード、1 ノード書き込み、マルチ読み取り)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:149
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr "接続 URL は、以下のように `quarkus.redis.hosts` (または `quarkus.redis.<name>.hosts`) で設定されます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:155
#, no-wrap
msgid "Using Unix Socket"
msgstr "Unix ソケットの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:158
msgid "When using unix-socket, you need:"
msgstr "unix-socket を使用する場合、以下が必要です。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:164
#, no-wrap
msgid "Sentinel Mode"
msgstr "Sentinel モード"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:167
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr "Sentinel を使用する場合、複数の _ホスト urls_ を渡し、クライアントのタイプを `sentinel` に設定する必要があります。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:178
#, no-wrap
msgid "Cluster Mode"
msgstr "クラスターモード"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:181
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr "Redis をクラスターモードで使用する場合、複数の _ホスト urls_ を渡し、クライアントのタイプを `cluster` に設定し、`replicas` モードを設定する必要があります。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:189
#, no-wrap
msgid "Replication Mode"
msgstr "レプリケーションモード"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:192
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr "レプリケーションモードを使用する場合、単一のホスト URL を渡し、タイプを `replication` に設定する必要があります。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:199
#, no-wrap
msgid "Connecting to Redis Cloud"
msgstr "Redis クラウドへの接続"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:202
msgid "To connect to redis cloud, you need the following properties:"
msgstr "redis クラウドに接続するためには、以下のプロパティーが必要です。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:209
#, no-wrap
msgid "Authentication"
msgstr "認証"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:215
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr "関連する環境変数は `QUARKUS_REDIS_PASSWORD` で、名前付きクライアントの場合は `QUARKUS_REDIS_<NAME>_PASSWORD` となります。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:216
#, no-wrap
msgid "Using the high-level clients (data sources)"
msgstr "高レベルのクライアント (データソース) の利用"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:222
#, no-wrap
msgid "Injecting data sources"
msgstr "データソースの注入"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:225
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr "設定された各 Redis クライアントに対して、2 つの Redis データソースが公開されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:229
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr "`io.quarkus.redis.datasource.ReactiveRedisDataSource`: `Uni<X>` または `Multi<X>` を返すリアクティブ型 Redis データソースです。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:231
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr "_デフォルトの_ Redis クライアントを設定した場合、以下を使用してデータソースを注入することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:239
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr "_名前付きの_ Redis クライアントを設定した場合、`io.quarkus.redis.RedisClientName` 修飾子を使用して、正しいクライアントを選択する必要があります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:247
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr "_ブロッキング_ バリアントを使う場合は、以下を使用してデフォルトのタイムアウトを設定することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:255
msgid "The default timeout is configured to 10s."
msgstr "デフォルトのタイムアウトは 10 秒に設定されています。"

#. type: Block title
#: upstream/_versions/2.13/guides/redis-reference.adoc:257
#, no-wrap
msgid "All about delegation"
msgstr "デリゲーションに関するすべて"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:263
#, no-wrap
msgid "Data Source groups"
msgstr "データソースグループ"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:266
msgid "As mentioned above, the API is divided into groups:"
msgstr "前述の通り、API はグループに分かれています。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:268
#: upstream/_versions/2.13/guides/redis-reference.adoc:269
msgid "bitmap - `.bitmap()`"
msgstr "bitmap - `.bitmap()`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:270
msgid "key (generic) - `.key()`"
msgstr "key (generic) - `.key()`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:271
msgid "geo - `.geo(memberType)`"
msgstr "geo - `.geo(memberType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:272
msgid "hash - `.hash(`valueType)`"
msgstr "hash - `.hash(`valueType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:273
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr "hyperloglog - `.hyperloglog(memberType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:274
msgid "list - `.list(memberType)`"
msgstr "list - `.list(memberType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:275
msgid "pubsub - `pubsub()`"
msgstr "pubsub - `pubsub()`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:276
msgid "set - `.set(memberType)`"
msgstr "set - `.set(memberType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:277
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr "sorted-set - `.sortedSet(memberType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:278
msgid "stream (not available yet)"
msgstr "ストリーム (まだ利用できません)"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:279
msgid "string - `.value(valueType)`"
msgstr "string - `.value(valueType)`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:280
msgid "transactions - `withTransaction`"
msgstr "transactions - `withTransaction`"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:307
msgid "Inject the `RedisDataSource` in the constructor"
msgstr "コンストラクターに `RedisDataSource` を注入します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:310
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr "作成した `commands` を使用して、フィールド `field` と値 `value` を関連付けます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:311
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr "作成した `commands` を使用して、フィールド `field` の値を取得します。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:312
#, no-wrap
msgid "Serialization and Deserialization"
msgstr "シリアライズとデシリアライズ"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:319
msgid "To store binary data, use `byte[]`."
msgstr "バイナリーデータを格納するには、`byte[]` を使用します。"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:320
#, no-wrap
msgid "The `value` group"
msgstr "`value` グループ"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:325
#, no-wrap
msgid "Caching values"
msgstr "値のキャッシュ"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:352
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr "`setnx` メソッドは、指定したキーに対応する値が格納されていない場合に、値を設定するためだけに使用することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:354
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr "`key` グループは、各キーの有効期限や ttl をより細かく制御します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:358
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr "`set` メソッドは、動作を変更するための `SetArgs` 引数を受け取ることもできます。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:360
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr "`ex(seconds)`: 指定された有効期限を秒単位で設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:361
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr "`px(milliseconds)`: 指定した有効期限をミリ秒単位で設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:362
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr "`exat(timestamp-seconds)`: キーの有効期限が切れる Unix 時間を秒単位で設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:363
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr "`pxat(timestamp-milliseconds)`: キーの有効期限が切れる Unix 時間をミリ秒単位で設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:364
msgid "`nx()` - Only set the key if it does not already exist."
msgstr "`nx()`: キーがまだ存在しない場合にのみ、キーを設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:365
msgid "`xx()` - Only set the key if it already exists."
msgstr "`xx()`: キーがすでに存在する場合にのみ、キーを設定します。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:366
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr "`keepttl()`: キーに関連付けられた有効期限を保持します。"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:368
#, no-wrap
msgid "Storing binary data"
msgstr "バイナリーデータの格納"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:402
#, no-wrap
msgid "Storing a counter"
msgstr "カウンターの格納"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:405
msgid "You can store counters in Redis as demonstrated below:"
msgstr "以下に示すように、Redis にカウンターを格納することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:439
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr "他にも、カウンターを操作する際に便利なメソッドがあります。以下に例を示します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:441
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr "`incrby`: 増分値 (正または負) を設定することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:442
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr "`incrbyfloat` - float/double として増分値を設定できます (格納される値は double になります)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:443
msgid "`set` - to set an initial value if needed"
msgstr "`set`: 必要に応じて初期値を設定します．"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:444
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr "`decr` および `decrby`: 格納された値を減らすことができます。"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:445
#, no-wrap
msgid "Using pub/sub"
msgstr "pub/sub の使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:451
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr "以下のスニペットは、_キャッシュ_ が `set` ごとに `Notification` を発行する方法と、サブスクライバーがその通知を受信する方法を示しています。"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:512
#, no-wrap
msgid "Using transactions"
msgstr "トランザクションの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:518
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr "Redis トランザクションはキーのセットを _監視_ することができ、トランザクションの実行中にこれらのキーのいずれかが更新された場合、トランザクションを _破棄_ します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:529
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr "次のスニペットは、2 つの関連する _書き込み_ を実行するトランザクションを作成する方法を示しています。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:547
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr "データソースのリアクティブバリアントを使用する場合、渡されるコールバックは `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`: となります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:575
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr "トランザクションの中から pub/sub 機能を使用することはできません。"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:576
#, no-wrap
msgid "Using optimistic locking"
msgstr "楽観ロックの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:595
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr "たとえば、フィールドが存在する場合にのみハッシュの値を更新する必要がある場合は、以下のような API を使用することになります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:624
msgid "The transaction is aborted if the pre-transaction block throws an exception (or produces a failure when using the reactive API)."
msgstr "プレトランザクションブロックが例外をスローした場合 (またはリアクティブ API を使用している場合はエラーを生成した場合)、トランザクションは中断されます。"

#. type: Title ====
#: upstream/_versions/2.13/guides/redis-reference.adoc:625
#, no-wrap
msgid "Executing custom commands"
msgstr "カスタムコマンドの実行"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:628
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr "カスタムコマンドや API でサポートされていないコマンドを実行するには、以下の方法を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:644
msgid "The reactive variant returns a `Uni<Response>`."
msgstr "リアクティブバリアントは `Uni<Response>` を返します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:646
msgid "You can also execute custom command in a transaction."
msgstr "また、トランザクション内でカスタムコマンドを実行することも可能です。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:647
#, no-wrap
msgid "Vert.x Redis Client"
msgstr "Vert.x Redis クライアント"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:652
#, no-wrap
msgid "Redis Health Check"
msgstr "Redis ヘルスチェック"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:655
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr "`quarkus-smallrye-health` エクステンションを使用している場合、`quarkus-redis` は Redis サーバーへの接続を検証するための readiness ヘルスチェックを自動的に追加します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:657
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "そのため、アプリケーションの `/q/health/ready` エンドポイントにアクセスすると、接続の検証状況に関する情報が表示されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:659
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr "この動作は、 `application.properties` の `quarkus.redis.health.enabled` プロパティーを `false` に設定することで無効にできます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:660
#, no-wrap
msgid "Providing Redis Hosts Programmatically"
msgstr "プログラムによる Redis ホストの提供"

#. type: delimited block =
#: upstream/_versions/2.13/guides/redis-reference.adoc:668
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr "これは、application.properties に機密データを格納する必要がなくなるので便利です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:685
msgid "The host provider can be used to configure the redis client like shown below"
msgstr "以下に示すように、ホストプロバイダーを使用して redis クライアントを設定することができます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:691
#, no-wrap
msgid "Customizing the Redis options programmatically"
msgstr "プログラムによる Redis オプションのカスタマイズ"

#. type: Title ===
#: upstream/_versions/2.13/guides/redis-reference.adoc:714
#, no-wrap
msgid "Dev Services"
msgstr "Dev Services"

#. type: Plain text
#: upstream/_versions/2.13/guides/redis-reference.adoc:717
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr "link:redis-dev-services[Redis Dev Service] を参照してください。"

#. type: Title ==
#: upstream/_versions/2.13/guides/redis-reference.adoc:719
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"
