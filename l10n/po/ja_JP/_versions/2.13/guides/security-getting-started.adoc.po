msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"Secure your Quarkus application endpoints by combining xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).\n"
"The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"For Quarkus security to be able to map your security source to JPA entities, ensure that the Maven project that is used in this tutorial includes the `security-jpa` extension.\n"
"You can either create a new Maven project with the `security-jpa` extension or you can add the extension to an existing Maven project."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] is used to store your user identities but you can also use xref:hibernate-orm.adoc[Hibernate ORM].\n"
"You must also add your preferred database connector library.\n"
"The instructions in this example tutorial use a PostgreSQL database for the identity store."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"Let's start by implementing the `/api/public` endpoint to allow all users access to access the application.\n"
"Add a regular JAX-RS resource to your Java source code, as outlined in the following code snippet:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"The source code for the `/api/admin` endpoint is similar but instead you use a `@RolesAllowed` annotation to make sure that only users granted the `admin` role can access the endpoint.\n"
"Add a JAX-RS resource with the following `@RolesAllowed` annotation:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"Finally, implement the `/api/users/me` endpoint. As you can see from the source code example below, we are trusting only users with the `user` role.\n"
"We are also using `SecurityContext` to get access to the currently authenticated `Principal`, and we return the user name, all of which is loaded from the database."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"When secure access is required and no other authentication mechanisms are enabled, xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] is the fallback authentication mechanism.\n"
"Therefore, in this tutorial, you do not need to set the property `quarkus.http.auth.basic=true`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"In a production environment, do not store plain text passwords.\n"
"As a result, the `security-jpa` defaults to using bcrypt-hashed passwords."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"The following properties configuration demonstrates how you can enable PostgreSQL testing to run in production (`prod`) mode only.\n"
"In this scenario, `Dev Services for PostgreSQL` launches and configures a `PostgreSQL` test container."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"If you start your application in dev mode, `Dev Services for PostgreSQL` launches a `PostgreSQL` `devmode` container so that you can start developing your application.\n"
"While developing your application, you can also start to add tests one by one and run them by using the xref:continuous-testing.adoc[Continuous Testing] feature.\n"
"`Dev Services for PostgreSQL` supports testing while you develop by providing a separate `PostgreSQL` test container that does not conflict with the `devmode` container."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"When your application is running, you can access your application by using one of the following `curl` commands.\n"
"You can also access the same endpoint URLs by using a browser."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"$ curl -i -X GET http://localhost:8080/api/public\n"
"HTTP/1.1 200 OK\n"
"Content-Length: 6\n"
"Content-Type: text/plain;charset=UTF-8\n"
"\n"
"public%"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"$ curl -i -X GET http://localhost:8080/api/admin\n"
"HTTP/1.1 401 Unauthorized\n"
"Content-Length: 14\n"
"Content-Type: text/html;charset=UTF-8\n"
"WWW-Authenticate: Basic\n"
"\n"
"Not authorized%"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"When you provide the credentials of an authorized user, for example, `admin:admin`, the JPA security extension authenticates and loads the roles of the user.\n"
"The `admin` user is authorized to access the protected resources."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"By default, passwords are stored and hashed by using https://en.wikipedia.org/wiki/Bcrypt[bcrypt] under the\n"
"https://en.wikipedia.org/wiki/Crypt_(C)[Modular Crypt Format] (MCF)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"When you need to create a hashed password we provide the convenient `String BcryptUtil.bcryptHash(String password)`\n"
"function, which defaults to creating a random salt and hashing in 10 iterations.\n"
"You can also specify the number of iterations and the salt."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"In a test environment, you can also store passwords in plain text by using `@Password(PasswordType.CLEAR)`.\n"
"For applications running in production, do not store passwords in plain text."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"Congratulations!\n"
"You have learned how to create and test a secure Quarkus application by combining the xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] with the JPA identity provider."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"After you have completed this tutorial, explore some of the more advanced security mechanisms in Quarkus.\n"
"Use the following information to learn how you can securely use `OpenID Connect` to provide secure single sign-on access to your Quarkus endpoints:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/security-getting-started.adoc
msgid ""
"xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect (OIDC) to Protect Web Applications using Authorization Code Flow\n"
"]"
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:6
#, no-wrap
msgid "Secure a Quarkus application with Basic authentication"
msgstr "ベーシック認証によるQuarkusアプリケーションの保護"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:13
msgid "This tutorial prepares you for implementing more advanced security mechanisms in Quarkus, for example, how to use the OpenID Connect (OIDC) authentication mechanism."
msgstr "このチュートリアルでは、Quarkusでより高度なセキュリティメカニズムを実装するための準備、たとえば、OpenID Connect（OIDC）認証メカニズムの使用方法について説明します。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:18
#, no-wrap
msgid "What you will build"
msgstr "何を構築するか"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:21
msgid "The steps in this tutorial guide you through building an application that provides the following endpoints:"
msgstr "このチュートリアルでは、以下のエンドポイントを提供するアプリケーションを構築する方法を説明します:"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:24
#, no-wrap
msgid "Endpoint"
msgstr "エンドポイント"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:25
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:25
#, no-wrap
msgid "`/api/public`"
msgstr "`/api/public`"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:26
#, no-wrap
msgid "The `/api/public` endpoint can be accessed anonymously."
msgstr "`/api/public` エンドポイントには匿名でアクセスすることができます。"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:26
#, no-wrap
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:28
#, no-wrap
msgid ""
"The `/api/admin` endpoint is protected with role-based access control (RBAC), and only users who have been granted the `admin` role can access it.\n"
"At this endpoint, the `@RolesAllowed` annotation is used to declaratively enforce the access constraint."
msgstr ""
"`/api/admin` のエンドポイントは RBAC で保護されており、 `admin` のロールを付与されたユーザーのみがアクセスすることができます。\n"
"このエンドポイントでは、アクセス制約を宣言的に課すために `@RolesAllowed` アノテーションが使用されています。"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:28
#, no-wrap
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Table
#: upstream/_versions/2.13/guides/security-getting-started.adoc:29
#, no-wrap
msgid "The `/api/users/me` endpoint is protected with RBAC and only users that have been granted the `user` role can access it. A JSON document with details about the user is returned as a response."
msgstr "`/api/users/me` のエンドポイントは RBAC で保護されており、 `user` のロールを付与されたユーザーのみがアクセスすることができます。ユーザーに関する詳細情報を含む JSON ドキュメントがレスポンスとして返されます。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:34
msgid "If you just want to examine the code, you can fast-forward to the completed example by using one of the following ways:"
msgstr "コードを確かめるだけなら、次のいずれかの方法で、完成例まで早送りすることができます:"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:36
msgid "Download the {quickstarts-archive-url}[archive]"
msgstr "{quickstarts-archive-url}[アーカイブ]をダウンロードする。"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:37
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`"
msgstr "Gitリポジトリをクローンする: `git clone {quickstarts-clone-url}`"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:39
msgid "You can find the solution in the `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[directory]."
msgstr "ソリューションは `security-jpa-quickstart` {quickstarts-tree-url}/security-jpa-quickstart[ディレクトリー] にあります。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:44
#, no-wrap
msgid "Create a Maven project"
msgstr "Maven プロジェクトの作成"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:50
msgid "To create the Maven project, use the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:61
msgid "To add the `security-jpa` extension to an existing Maven project, run the following command from your project base directory:"
msgstr "既存の Maven プロジェクトに `security-jpa` エクステンションを追加するには、プロジェクトのベースディレクトリで次のコマンドを実行します:"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:65
#, no-wrap
msgid "Verification"
msgstr "検証"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:68
msgid "When you run either command, the following XML is added to your build file:"
msgstr "どちらかのコマンドを実行すると、ビルドファイルに以下のようなXMLが追加されます。:"

#. type: Block title
#: upstream/_versions/2.13/guides/security-getting-started.adoc:70
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/2.13/guides/security-getting-started.adoc:79
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:84
#, no-wrap
msgid "Write the application"
msgstr "アプリケーションの記述"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:160
#, no-wrap
msgid "Define the user entity"
msgstr "ユーザーエンティティーの定義"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:163
msgid "You can now describe how you want security information to be stored in the model by adding annotations to the `user` entity, as outlined in the following code snippet:"
msgstr "次のコードで説明するように、`user` エンティティにアノテーションを追加することで、セキュリティ情報をどのようにモデルに格納したいかを記述することができます:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:207
msgid "The `security-jpa` extension initializes only if there is a single entity annotated with `@UserDefinition`."
msgstr "`security-jpa` エクステンションは、 `@UserDefinition` でアノテーションされた単一のエンティティーがある場合にのみ初期化されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:209
msgid "The `@UserDefinition` annotation must be present on a single entity and can be either a regular Hibernate ORM entity or a Hibernate ORM with Panache entity."
msgstr "アノテーション `@UserDefinition` は単一のエンティティに存在する必要があり、通常の Hibernate ORM エンティティまたは Panache 付き Hibernate ORM エンティティのいずれかにすることができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:210
msgid "Indicates the field used for the user name."
msgstr "ユーザー名に使用されるフィールドを示します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:211
msgid "Indicates the field used for the password, which defaults to using bcrypt hashed passwords but you can also configure it for plain text or custom passwords."
msgstr "パスワードに使用するフィールドを示します。デフォルトではbcryptハッシュ化されたパスワードを使用しますが、プレーンテキストまたはカスタムパスワード用に設定することも可能です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:212
msgid "This indicates the comma-separated list of roles added to the target principal representation attributes."
msgstr "ここでは対象のプリンシパル表現属性に追加されたロールのコンマ区切りリストを示します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:213
msgid "This method allows us to add users while hashing the password with the proper bcrypt hash."
msgstr "この方法では、パスワードを適切なbcryptハッシュでハッシュしながらユーザーを追加することができます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:214
#, no-wrap
msgid "Configure the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:217
msgid "Enable xref:security-built-in-authentication.adoc#basic-auth[Quarkus built-in basic HTTP authentication] by setting the `quarkus.http.auth.basic` property to `true`:"
msgstr "`quarkus.http.auth.basic` プロパティを `true` に設定することで、 link:security-built-in-authentication.html#basic-auth[Quarkus に組み込まれたベーシック HTTP 認証] を有効にします:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:219
msgid "`quarkus.http.auth.basic`=true`"
msgstr "`quarkus.http.auth.basic=true`"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:227
msgid "Configure at least one data source so that the `security-jpa` extension can access your database."
msgstr "少なくとも1つのデータソースを設定し、 `security-jpa` エクステンションがデータベースにアクセスできるようにします。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:241
msgid "To initialize the database with users and roles, implement the `Startup` class, as outlined in the following code snippet:"
msgstr "データベースをユーザーとロールで初期化するには、次のコードで説明するように `Startup` クラスを実装します:"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:245
msgid "In this tutorial, a PostgreSQL database is used for the identity store. Hibernate ORM automatically creates the database schema on startup (change this in production)."
msgstr "このチュートリアルでは、PostgreSQL データベースを ID ストアに使用します。Hibernate ORM は起動時にデータベーススキーマを自動的に作成します (運用時にはこれを変更します)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:271
msgid "The application is now protected and the user identities are provided by the specified database."
msgstr "これでアプリケーションは保護され、ユーザーIDは指定されたデータベースから提供されるようになりました。"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:278
#, no-wrap
msgid "Test your application"
msgstr "アプリケーションのテスト"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:280
#, no-wrap
msgid "Use Dev Services for PostgreSQL to test your application"
msgstr "Dev Services for PostgreSQLを使用してアプリケーションをテストする"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:285
msgid "Add the integration tests before you run your application in production mode."
msgstr "アプリケーションを実稼働モードで動作させる前に、統合テストを追加してみましょう。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:288
msgid "Use xref:https://quarkus.io/guides/dev-services#databases[Dev Services for PostgreSQL] for the integration testing of your application in JVM and native modes."
msgstr "JVMとネイティブモードでのアプリケーションの統合テストには、 xref:https://quarkus.io/guides/dev-services#databases[Dev Services for PostgreSQL] を使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:303
msgid "If you add the `%prod.` profile prefix, data source properties are not visible to `Dev Services for PostgreSQL` and are only observed by an application running in production mode."
msgstr "プロファイルの接頭辞に `%prod.` を付けると、データソースのプロパティは `Dev Services for PostgreSQL` からは見えなくなり、本番モードで動作するアプリケーションからのみ表示されるようになります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:305
msgid "To write the integration test, use the following code sample:"
msgstr "統合テストを書くには、次のコードサンプルを使用します:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:373
msgid "As you can see in this code sample, you do not need to start the test container from the test code."
msgstr "このコードサンプルからわかるように、テストコードからテストコンテナーを起動する必要はありません。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:381
#, no-wrap
msgid "Use `curl` or a browser to test your application"
msgstr "`curl` またはブラウザを使用して、アプリケーションをテストします"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:384
msgid "Use the following example to start the PostgreSQL server:"
msgstr "下記の例のように、PostgreSQL サーバーを起動します:"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:390
#, no-wrap
msgid "Compile and run the application"
msgstr "アプリケーションのコンパイルと実行"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:393
msgid "Compile and run your Quarkus application by using one of the following methods:"
msgstr "次のいずれかの方法で、Quarkusアプリケーションをコンパイルして実行します:"

#. type: Title ====
#: upstream/_versions/2.13/guides/security-getting-started.adoc:394
#, no-wrap
msgid "JVM mode"
msgstr "JVM モード"

#. type: Title ====
#: upstream/_versions/2.13/guides/security-getting-started.adoc:405
#, no-wrap
msgid "Native mode"
msgstr "ネイティブモード"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:408
msgid "Compile the application:"
msgstr "アプリケーションをコンパイルします:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:412
msgid "Run the application:"
msgstr "アプリケーションの実行:"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:417
#, no-wrap
msgid "Access and test the application security"
msgstr "アプリケーションのセキュリティへのアクセスおよびテスト"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:423
#: upstream/_versions/2.13/guides/security-getting-started.adoc:434
msgid "Connect to a protected endpoint anonymously:"
msgstr "保護されたリソースを匿名で攻撃してみましょう:"

#. type: delimited block =
#: upstream/_versions/2.13/guides/security-getting-started.adoc:448
msgid "When you use a browser to anonymously connect to a protected resource, a basic authentication form displays prompting you to enter credentials."
msgstr "ブラウザーを使って保護されたリソースに匿名で接続すると、認証情報を入力するよう促すBasic認証フォームが表示されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:451
msgid "Connect to a protected endpoint as an authorized user:"
msgstr "認証されたユーザーとして保護されたエンドポイントに接続します:"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:462
#, no-wrap
msgid "Results"
msgstr "結果"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:468
msgid "If a resource is protected with `@RolesAllowed(\"user\")`, the user `admin` is not authorized to access the resource because it is not assigned to the \"user\" role, as outlined in the following shell example:"
msgstr "リソースが `@RolesAllowed(\"user\")` で保護されている場合、次のシェルの例で説明するように、ユーザー `admin` は \"user\" ロールに割り当てられていないため、リソースへのアクセスは許可されません:"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:480
msgid "Finally, the user name `user` is authorized and the security context contains the principal details, for example, the user name."
msgstr "最後に、ユーザ名 `user` が認証され、セキュリティコンテキストには、例えばユーザ名などの主要な詳細が含まれます。"

#. The following section needs to be moved as SMEs confirmed that it does not really fit in the new content here. In the next phase of refactoring, consider moving this section into a dedicated concept/reference topic.
#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:495
#, no-wrap
msgid "Quarkus Security JPA information"
msgstr "Quarkus Security JPA 情報"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:498
msgid "Now that you have successfully run and tested the security quick start project, you are ready to explore more security features of Quarkus Security and the JPA identity store."
msgstr "セキュリティクイックスタートプロジェクトの実行とテストに成功したので、Quarkus SecurityとJPA IDストアのセキュリティ機能を理解していくための準備ができました。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:499
#, no-wrap
msgid "Supported model types"
msgstr "サポートされているモデルの種類"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:502
msgid "The `@UserDefinition` class must be a JPA entity (with Panache or not)."
msgstr "`@UserDefinition` クラスは JPA エンティティーである必要があります(Panache を使用しているかどうかは問いません)。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:503
msgid "The `@Username` and `@Password` field types must be of type `String`."
msgstr "`@Username` と `@Password` フィールドの型は `String` でなければなりません。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:504
msgid "The `@Roles` field must either be of type `String` or `Collection<String>` or alternately a `Collection<X>` where `X` is an entity class with one `String` field annotated with the `@RolesValue` annotation."
msgstr "`@Roles` フィールドは `String` か `Collection<String>` のいずれかのタイプであるか、または `Collection<X>` である必要があります。 `X` はエンティティークラスで、 `@RolesValue` アノテーションが付与された `String` フィールドが 1 つあります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:505
msgid "Each `String` role element type will be parsed as a comma-separated list of roles."
msgstr "各 `String` role 要素の型は、カンマで区切られたロールのリストとして解析されます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:506
#, no-wrap
msgid "Storing roles in another entity"
msgstr "別のエンティティーにロールを格納する"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:509
msgid "Use the following sample to store roles inside another entity:"
msgstr "次のサンプルを使用して、別のエンティティ内にロールを格納します:"

#. type: Title ===
#: upstream/_versions/2.13/guides/security-getting-started.adoc:538
#, no-wrap
msgid "Password storage and hashing"
msgstr "パスワードの保存とハッシュ化"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:548
msgid "When you use MCF, you don't need dedicated columns to store the hashing algorithm, the iterations count, or the salt because they are all stored in the hashed value."
msgstr "MCFを使う場合、ハッシュアルゴリズム、反復回数、ソルトはすべてハッシュ値に格納されるため、専用のカラムは必要ありません。"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:550
msgid "You can also store passwords by using a different hashing algorithm, for example, `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)`, as outlined in the following code snippet:"
msgstr "また、例えば `@Password(value = PasswordType.CUSTOM, provider = CustomPasswordProvider.class)` といった形で別のハッシュアルゴリズムを使ってパスワードを保存することもできます:"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:585
#, no-wrap
msgid "What's next"
msgstr "次のステップ"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:594
#: upstream/_versions/2.13/guides/security-getting-started.adoc:601
msgid "xref:security-openid-connect.adoc[Using OpenID Connect (OIDC) to Protect Service Applications using Bearer Token Authorization]"
msgstr "xref:security-openid-connect.adoc[Quarkus - OpenID Connect (OIDC) を使用した、ベアラートークン認可によるサービスアプリケーションの保護]"

#. type: Title ==
#: upstream/_versions/2.13/guides/security-getting-started.adoc:597
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:600
msgid "xref:security.adoc[Security Architecture and Guides]"
msgstr "xref:security.adoc[セキュリティアーキテクチャとガイド]"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:604
msgid "xref:hibernate-orm-panache.adoc[Simplified Hibernate ORM with Panache]"
msgstr "xref:hibernate-orm-panache.adoc[PanacheでシンプルになったHibernate ORM]"

#. type: Plain text
#: upstream/_versions/2.13/guides/security-getting-started.adoc:604
msgid "xref:hibernate-orm.adoc[Using Hibernate ORM and JPA]"
msgstr "xref:hibernate-orm.adoc[Hibernate ORMとJPAの使用]"
