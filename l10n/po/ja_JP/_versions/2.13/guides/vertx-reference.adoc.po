msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"https://vertx.io[Vert.x] is a toolkit for building reactive applications.\n"
"As described in the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture], Quarkus uses Vert.x underneath."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"This guide is the companion to the xref:vertx.adoc[Using Eclipse Vert.x API from a Quarkus Application] guide.\n"
"It provides more advanced details about the usage and the configuration of the Vert.x instance used by Quarkus."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"To access the managed Vert.x instance, add the `quarkus-vertx` extension to your project.\n"
"Note that this dependency may already be installed (as a transitive dependency)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"You can configure the Vert.x instance from the `application.properties` file.\n"
"The following table lists the supported properties:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"In addition to Vert.x core, you can use most Vert.x ecosystem libraries.\n"
"Some Quarkus extension already wraps Vert.x libraries."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The following table lists the most used libraries from the Vert.x ecosystem.\n"
"To access these APIs, add the indicated extension or dependency to your project.\n"
"Refer to the associated documentation to learn how to use them."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"This section gives an example using the Vert.x `WebClient` in the context of a RESTEasy Reactive application.\n"
"As indicated in the table above, add the following dependency to your project:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"This resource creates a `WebClient` and, upon request, uses this client to invoke a remote HTTP API.\n"
"Depending on the result, the response is forwarded as received, or it creates a JSON object wrapping the error.\n"
"The `WebClient` is asynchronous (and non-blocking), to the endpoint returns a `Uni`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The application can also run as a native executable.\n"
"But, first, we need to instruct Quarkus to enable _ssl_ (if the remote API uses HTTPS).\n"
"Open the `src/main/resources/application.properties` and add:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Vert.x APIs often rely on JSON.\n"
"Vert.x provides two convenient classes to manipulate JSON document: `io.vertx.core.json.JsonObject` and `io.vertx.core.json.JsonArray`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Note that these features use the mapper managed by the `quarkus-jackson` extension.\n"
"Refer to xref:rest-json.adoc#json[Jackson configuration] to customize the mapping."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"JSON Object and JSON Array are both supported as Quarkus HTTP endpoint requests and response bodies (using classic RESTEasy and RESTEasy Reactive).\n"
"Consider these endpoints:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"link:https://vertx.io/docs/vertx-core/java/#_verticles[Verticles] is \"a simple, scalable, actor-like deployment and concurrency model\" provided by _Vert.x_.\n"
"This model does not claim to be a strict actor-model implementation, but it shares similarities, especially concerning concurrency, scaling, and deployment.\n"
"To use this model, you write and _deploy_ verticles, communicating by sending messages on the event bus."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"You can deploy _verticles_ in Quarkus.\n"
"It supports:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"In general, Vert.x verticles are not CDI beans.\n"
"And so cannot use injection.\n"
"However, in Quarkus, you can deploy verticles as beans.\n"
"Note that in this case, CDI (Arc in Quarkus) is responsible for creating the instance."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"When using `@ApplicationScoped`, you will get a single instance for your verticle.\n"
"Having multiple instances of verticles can be helpful to share the load among them.\n"
"Each of them will be associated with a different I/O thread (Vert.x event loop)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The `init` method receives an `Instance<MyVerticle>`.\n"
"Then, you pass a supplier to the `deployVerticle` method.\n"
"The supplier is just calling the `get()` method.\n"
"Thanks to the `@Dependent` scope, it returns a new instance on every call.\n"
"Finally, you pass the desired number of instances to the `DeploymentOptions`, such as two in the previous example.\n"
"It will call the supplier twice, which will create two instances of your verticle."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Vert.x comes with a built-in https://vertx.io/docs/vertx-core/java/#event_bus[event bus] that you can use from your Quarkus application.\n"
"So, your application components (CDI beans, resources...) can interact using asynchronous events, thus promoting loose-coupling."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"With the event bus, you send _messages_ to _virtual addresses_.\n"
"The event bus offers three types of delivery mechanisms:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"While you can use the Vert.x API to register consumers, Quarkus comes with declarative support.\n"
"To consume events, use the `io.quarkus.vertx.ConsumeEvent` annotation:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The previous examples use synchronous processing.\n"
"Asynchronous processing is also possible by returning either an `io.smallrye.mutiny.Uni` or a `java.util.concurrent.CompletionStage`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The previous example uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"By default, the code consuming the event must be _non-blocking_, as it's called on an I/O thread.\n"
"If your processing is blocking, use the `@io.smallrye.common.annotation.Blocking` annotation:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The _return_ value of a method annotated with `@ConsumeEvent` is used to respond to the incoming message.\n"
"For instance, in the following snippet, the returned `String` is the response."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"You don't have to reply to received messages.\n"
"Typically, for a _fire and forget_ interaction, the messages are consumed, and the sender does not need to know about it.\n"
"To implement this pattern, your consumer method returns `void`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The https://vertx.io/docs/vertx-core/java/#event_bus[Vert.x Event Bus] uses codecs to _serialize_ and _deserialize_ objects.\n"
"Quarkus provides a default codec for local delivery.\n"
"So you can exchange objects as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Let's revisit a greeting HTTP endpoint and use asynchronous message passing to delegate the call to a separated bean.\n"
"It uses the request/reply dispatching mechanism.\n"
"Instead of implementing the business logic inside the JAX-RS endpoint, we are sending a message.\n"
"Another bean consumes this message, and the response is sent using the _reply_ mechanism."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"the HTTP method returns a `Uni`.\n"
"If you are using RESTEasy Reactive, `Uni` support is built-in.\n"
"If you are using _classic_ RESTEasy, you need to add the `quarkus resteasy-mutiny` extension to your project."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"We need a consumer listening on the `greeting` address.\n"
"This consumer can be in the same class or another bean such as:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The SockJS bridge provided by Vert.x allows browser applications and Quarkus applications to communicate using the event bus.\n"
"It connects both sides.\n"
"So, both sides can send messages received on the other side.\n"
"It supports the three delivery mechanisms."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"SockJS negotiates the communication channel between the Quarkus application and the browser.\n"
"If WebSockets are supported, it uses them; otherwise, it degrades to SSE, long polling, etc."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"This code configures the SockJS bridge to send all the messages targeting the `ticks` address to the connected browsers.\n"
"More detailed explanations about the configuration can be found on https://vertx.io/docs/vertx-web/java/#_sockjs_event_bus_bridge[the Vert.x SockJS Bridge documentation]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Vert.x is capable of using https://netty.io/wiki/native-transports.html[Netty's native transports], which offers\n"
"performance improvements on specific platforms.To enable them, you must include the appropriate dependency for your\n"
"platform. It's usually a good idea to have both to keep your application platform-agnostic. Netty is smart enough\n"
"to use the correct one, that includes none at all on unsupported platforms:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"You will also have to explicitly configure Vert.x to use the native transport.\n"
"In `application.properties` add:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "[io.qua.ver.cor.run.VertxCoreRecorder] (main) Vertx has Native Transport Enabled: true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "quarkus.http.so-reuse-port=true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-quick-ack=true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-cork=true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "quarkus.http.tcp-fast-open=true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Listening on a Unix domain socket allows us to dispense with the overhead of TCP\n"
"if the connection to the quarkus service is established from the same host.\n"
"This can happen if access to the service goes through a proxy which is often the case\n"
"if you're setting up a service mesh with a proxy like Envoy."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"Enable the appropriate <<native-transport>> and set the following\n"
"environment property:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"quarkus.http.domain-socket=/var/run/io.quarkus.app.socket\n"
"quarkus.http.domain-socket-enabled=true\n"
"\n"
"quarkus.vertx.prefer-native-transport=true"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"By itself this will not disable the tcp socket which by default will open on\n"
"`0.0.0.0:8080`. It can be explicitly disabled:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid "quarkus.http.host-enabled=false"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"These properties can be set through Java's `-D` command line parameter or\n"
"on `application.properties`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/2.13/guides/vertx-reference.adoc
msgid ""
"The configuration of the managed Vert.x instance can be provided using the `application.properties` file, but also using _special beans_.\n"
"CDI beans exposing the `io.quarkus.vertx.VertxOptionsCustomizer` interface can be used to customize the Vert.x configuration.\n"
"For example, the following customizer change the `tmp` base directory:"
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.13/guides/vertx-reference.adoc:6
#, no-wrap
msgid "Vert.x Reference Guide"
msgstr "Vert.x リファレンスガイド"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:19
#, no-wrap
msgid "Accessing the Vert.x instance"
msgstr "Vert.xインスタンスへのアクセス"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:25
msgid "With this extension, you can retrieve the managed instance of Vert.x using either field or constructor injection:"
msgstr "このエクステンションでは、フィールドまたはコンストラクタ・インジェクションのいずれかを使用して、Vert.xのマネージドインスタンスを取得できます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:42
msgid "You can inject either the:"
msgstr "以下のどちらかを注入することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:44
msgid "`io.vertx.core.Vertx` instance exposing the _bare_ Vert.x API"
msgstr "_素の_ Vert.x APIを公開する `io.vertx.core.Vertx` インスタンス"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:45
msgid "`io.vertx.mutiny.core.Vertx` instance exposing the _Mutiny_ API"
msgstr "_Mutiny_ APIを公開する `io.vertx.mutiny.core.Vertx` インスタンス"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:47
msgid "We recommend using the Mutiny variant as it integrates with the other reactive APIs provided by Quarkus."
msgstr "Mutiny版は、Quarkusが提供する他のリアクティブAPIと統合されているため、Mutiny版の使用をお勧めします。"

#. type: Block title
#: upstream/_versions/2.13/guides/vertx-reference.adoc:49
#: upstream/_versions/2.13/guides/vertx-reference.adoc:552
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#. type: delimited block =
#: upstream/_versions/2.13/guides/vertx-reference.adoc:52
msgid "If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "Mutinyに慣れていない方は、 link:mutiny-primer.html[Mutiny - 直感的なリアクティブプログラミングライブラリ]をご覧ください。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:55
msgid "Documentation about the Vert.x Mutiny variant is available on https://smallrye.io/smallrye-mutiny-vertx-bindings."
msgstr "Vert.x Mutiny版に関するドキュメントは https://smallrye.io/smallrye-mutiny-vertx-bindings にあります。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:57
#, no-wrap
msgid "Configuring the Vert.x instance"
msgstr "Vert.xインスタンスの設定"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:66
#, no-wrap
msgid "Using Vert.x clients"
msgstr "Vert.xクライアントの使用"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:71
#, no-wrap
msgid "Available APIs"
msgstr "利用可能なAPI"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:80
#, no-wrap
msgid "API"
msgstr "API"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:81
#, no-wrap
msgid "Extension or Dependency"
msgstr "エクステンションか依存関係"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:83
#, no-wrap
msgid "Documentation"
msgstr "ドキュメント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:84
#, no-wrap
msgid "AMQP Client"
msgstr "AMQPクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:85
#, no-wrap
msgid "`io.quarkus:quarkus-smallrye-reactive-messaging-amqp` (extension)"
msgstr "`io.quarkus:quarkus-smallrye-reactive-messaging-amqp` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:87
#, no-wrap
msgid "https://quarkus.io/guides/amqp"
msgstr "https://quarkus.io/guides/amqp"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:88
#, no-wrap
msgid "Circuit Breaker"
msgstr "サーキットブレーカー"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:89
#, no-wrap
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-circuit-breaker` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-circuit-breaker` (external dependency)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:91
#, no-wrap
msgid "https://vertx.io/docs/vertx-circuit-breaker/java/"
msgstr "https://vertx.io/docs/vertx-circuit-breaker/java/"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:92
#, no-wrap
msgid "Consul Client"
msgstr "Consul クライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:93
#, no-wrap
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-consul-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-consul-client` (external dependency)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:95
#, no-wrap
msgid "https://vertx.io/docs/vertx-consul-client/java/"
msgstr "https://vertx.io/docs/vertx-consul-client/java/"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:96
#, no-wrap
msgid "DB2 Client"
msgstr "DB2クライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:97
#, no-wrap
msgid "`io.quarkus:quarkus-reactive-db2-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-db2-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:99
#: upstream/_versions/2.13/guides/vertx-reference.adoc:115
#: upstream/_versions/2.13/guides/vertx-reference.adoc:119
#: upstream/_versions/2.13/guides/vertx-reference.adoc:123
#: upstream/_versions/2.13/guides/vertx-reference.adoc:127
#, no-wrap
msgid "https://quarkus.io/guides/reactive-sql-clients"
msgstr "https://quarkus.io/guides/reactive-sql-clients"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:100
#, no-wrap
msgid "Kafka Client"
msgstr "Kafkaクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:101
#, no-wrap
msgid "`io.quarkus:quarkus-smallrye-reactive-messaging-kafka` (extension)"
msgstr "`io.quarkus:quarkus-smallrye-reactive-messaging-kafka` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:103
#, no-wrap
msgid "https://quarkus.io/guides/kafka"
msgstr "https://quarkus.io/guides/kafka"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:104
#, no-wrap
msgid "Mail Client"
msgstr "メールクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:105
#, no-wrap
msgid "`io.quarkus:quarkus-mailer` (extension)"
msgstr "`io.quarkus:quarkus-mailer` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:107
#, no-wrap
msgid "https://quarkus.io/guides/mailer"
msgstr "https://quarkus.io/guides/mailer"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:108
#, no-wrap
msgid "MQTT Client"
msgstr "MQTTクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:109
#, no-wrap
msgid "`io.quarkus:quarkus-smallrye-reactive-messaging-mqtt` (extension)"
msgstr "`io.quarkus:quarkus-smallrye-reactive-messaging-mqtt` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:111
#, no-wrap
msgid "No guide yet"
msgstr "ガイドはまだありません"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:112
#, no-wrap
msgid "MS SQL Client"
msgstr "MS SQLクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:113
#, no-wrap
msgid "`io.quarkus:quarkus-reactive-mssql-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-mssql-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:116
#, no-wrap
msgid "MySQL Client"
msgstr "MySQLクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:117
#, no-wrap
msgid "`io.quarkus:quarkus-reactive-mysql-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-mysql-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:120
#, no-wrap
msgid "Oracle Client"
msgstr "Oracleクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:121
#, no-wrap
msgid "`io.quarkus:quarkus-reactive-oracle-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-oracle-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:124
#, no-wrap
msgid "PostgreSQL Client"
msgstr "PostgreSQLクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:125
#, no-wrap
msgid "`io.quarkus:quarkus-reactive-pg-client` (extension)"
msgstr "`io.quarkus:quarkus-reactive-pg-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:128
#, no-wrap
msgid "RabbitMQ Client"
msgstr "RabbitMQクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:129
#, no-wrap
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-rabbitmq-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-rabbitmq-client` (external dependency)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:131
#, no-wrap
msgid "https://vertx.io/docs/vertx-rabbitmq-client/java"
msgstr "https://vertx.io/docs/vertx-rabbitmq-client/java"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:132
#, no-wrap
msgid "Redis Client"
msgstr "Redisクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:133
#, no-wrap
msgid "`io.quarkus:quarkus-redis-client` (extension)"
msgstr "`io.quarkus:quarkus-redis-client` (extension)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:135
#, no-wrap
msgid "https://quarkus.io/guides/redis"
msgstr "https://quarkus.io/guides/redis"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:136
#, no-wrap
msgid "Web Client"
msgstr "ウェブクライアント"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:137
#, no-wrap
msgid "`io.smallrye.reactive:smallrye-mutiny-vertx-web-client` (external dependency)"
msgstr "`io.smallrye.reactive:smallrye-mutiny-vertx-web-client` (external dependency)"

#. type: Table
#: upstream/_versions/2.13/guides/vertx-reference.adoc:139
#, no-wrap
msgid "https://vertx.io/docs/vertx-web-client/java/"
msgstr "https://vertx.io/docs/vertx-web-client/java/"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:142
msgid "To learn more about the usage of the Vert.x Mutiny API, refer to https://smallrye.io/smallrye-mutiny-vertx-bindings."
msgstr "Vert.x Mutiny APIの使用方法について詳しくは、 https://smallrye.io/smallrye-mutiny-vertx-bindings を参照してください。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:143
#, no-wrap
msgid "Example of usage"
msgstr "使用例"

#. type: Block title
#: upstream/_versions/2.13/guides/vertx-reference.adoc:149
#: upstream/_versions/2.13/guides/vertx-reference.adoc:923
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/2.13/guides/vertx-reference.adoc:158
#: upstream/_versions/2.13/guides/vertx-reference.adoc:939
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:164
msgid "Now, in your code, you can create an instance of `WebClient`:"
msgstr "さて、コードの中で、 `WebClient` のインスタンスを作成することが可能です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:229
msgid "Then, create the native executable with:"
msgstr "そして、ネイティブ実行可能ファイルを作成します。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:233
#, no-wrap
msgid "Using Vert.x JSON"
msgstr "Vert.x JSONの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:239
msgid "`JsonObject` can be used to map an object into its JSON representation and build an object from a JSON document:"
msgstr "`JsonObject` は、オブジェクトをJSON表現にマッピングしたり、JSONドキュメントからオブジェクトを構築するために使用できます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:290
msgid "http://localhost:8080/hello/Quarkus/object returns:"
msgstr "http://localhost:8080/hello/Quarkus/object は次を返却します"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:297
msgid "http://localhost:8080/hello/Quarkus/array returns:"
msgstr "http://localhost:8080/hello/Quarkus/array は次を返却します"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:304
msgid "This works equally well when the JSON content is a request body or is wrapped in a `Uni`, `Multi`, `CompletionStage` or `Publisher`."
msgstr "これは、JSONコンテンツがリクエストボディである場合や、 `Uni`, `Multi`, `CompletionStage`, `Publisher` で包まれている場合にも同様に機能します。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:305
#, no-wrap
msgid "Using verticles"
msgstr "verticleの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:315
msgid "_bare_ verticle - Java classes extending `io.vertx.core.AbstractVerticle`"
msgstr "_生の_ verticle - `io.vertx.core.AbstractVerticle` を拡張するJavaクラス"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:316
msgid "_Mutiny_ verticle - Java classes extending `io.smallrye.mutiny.vertx.core.AbstractVerticle`"
msgstr "_Mutiny_ verticle - `io.smallrye.mutiny.vertx.core.AbstractVerticle` を拡張するJavaクラス"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:317
#, no-wrap
msgid "Deploying verticles"
msgstr "verticleのデプロイ"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:320
msgid "To deploy verticles, use the `deployVerticle` method:"
msgstr "verticleをデプロイするには、`deployVerticle` メソッドを使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:331
msgid "If you use the Mutiny-variant of Vert.x, be aware that the `deployVerticle` method returns a `Uni`, and you would need to trigger a subscription to make the actual deployment."
msgstr "Vert.x の Mutiny 版を使用する場合、 `deployVerticle` メソッドは `Uni` を返すため、実際のデプロイメントを行うにはサブスクリプションをトリガーする必要があることに注意してください。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:333
msgid "An example explaining how to deploy verticles during the initialization of the application will follow."
msgstr "アプリケーションの初期化時にVerticleをデプロイする方法については、次の例で説明します。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:334
#, no-wrap
msgid "Using @ApplicationScoped Beans as Verticle"
msgstr "Verticleとしての@ApplicationScoped Beansの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:342
msgid "The following snippet provides an example:"
msgstr "次のスニペットはその例です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:368
msgid "You don't have to inject the `vertx` instance; instead, leverage the protected field from `AbstractVerticle`."
msgstr "`vertx` のインスタンスを注入する必要はなく、代わりに `AbstractVerticle` の protected フィールドを利用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:370
msgid "Then, deploy the verticle instances with:"
msgstr "そして、Verticleインスタンスをデプロイします。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:391
msgid "If you want to deploy every exposed `AbstractVerticle`, you can use:"
msgstr "露出しているすべての `AbstractVerticle` をデプロイしたい場合は、次のようにします。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:401
#, no-wrap
msgid "Using multiple verticles instances"
msgstr "そして、Verticleインスタンスをデプロイします。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:408
msgid "To deploy multiple instances of your verticle, use the `@Dependent` scope instead of `@ApplicationScoped`:"
msgstr "Verticleの複数のインスタンスをデプロイするには、 `@ApplicationScoped` の代わりに `@Dependent` スコープを使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:432
msgid "Then, deploy your verticle as follows:"
msgstr "そして、verticleをデプロイします。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:466
#, no-wrap
msgid "Using the event bus"
msgstr "イベントバスの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:475
msgid "point-to-point - send the message, one consumer receives it. If several consumers listen to the address, a round-robin is applied;"
msgstr "point-to-point - メッセージを送信すると、1人の消費者がそれを受信します。複数の消費者がそのアドレスを聞く場合は、ラウンドロビンが適用されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:476
msgid "publish/subscribe - publish a message; all the consumers listening to the address are receiving the message;"
msgstr "publish/subscribe - メッセージを発行し、そのアドレスを聞いているすべてのコンシューマーがメッセージを受信します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:477
msgid "request/reply - send the message and expect a response. The receiver can respond to the message in an asynchronous fashion."
msgstr "request/reply - メッセージを送信し、応答を期待します。受信者は非同期的にメッセージに応答することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:479
msgid "All these delivery mechanisms are non-blocking and are providing one of the fundamental bricks to build reactive applications."
msgstr "これらの配信メカニズムはすべてノンブロッキングであり、リアクティブなアプリケーションを構築するための基本的な要素の一つとなっています。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:480
#, no-wrap
msgid "Consuming events"
msgstr "イベントの消費"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:503
msgid "If not set, the address is the fully qualified name of the bean; for instance, in this snippet, it's `org.acme.vertx.GreetingService`."
msgstr "設定されていない場合、アドレスはBeanの完全修飾名となります。例えば、このスニペットでは、 `org.acme.vertx.GreetingService` となります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:504
msgid "The method parameter is the message body. If the method returns _something_, it's the message response."
msgstr "メソッドのパラメータはメッセージボディです。メソッドが _何か_ を返す場合は、それがメッセージのレスポンスとなります。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:505
#, no-wrap
msgid "Configuring the address"
msgstr "アドレスを設定"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:508
msgid "The `@ConsumeEvent` annotation can be configured to set the address:"
msgstr "`@ConsumeEvent` アノテーションでアドレスを設定することができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:517
msgid "Receive the messages sent to the `greeting` address"
msgstr "`greeting` アドレスに送信されたメッセージを受信します。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:518
#, no-wrap
msgid "Asynchronous processing"
msgstr "非同期処理"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:558
#, no-wrap
msgid "Blocking processing"
msgstr "ブロッキング処理"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:573
msgid "Alternatively, you can use the `blocking` attribute from the `@ConsumeEvent` annotation:"
msgstr "あるいは、 `@ConsumeEvent` アノテーションの `blocking` 属性を使用することもできます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:583
msgid "When using `@Blocking`, it ignores the value of the `blocking` attribute of `@ConsumeEvent`."
msgstr "`@Blocking` を使用する場合、 `@ConsumeEvent` の `blocking` 属性の値は無視されます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:584
#, no-wrap
msgid "Replying to messages"
msgstr "メッセージへの返信"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:598
msgid "You can also return a `Uni<T>` or a `CompletionStage<T>` to handle asynchronous reply:"
msgstr "また、 `Uni<T>` や `CompletionStage<T>` を返すことで、非同期応答を扱うこともできます:"

#. type: delimited block =
#: upstream/_versions/2.13/guides/vertx-reference.adoc:610
msgid "You can inject an `executor` if you use the Context Propagation extension:"
msgstr "コンテキスト伝搬エクステンションを使えば、 `executor` を注入することができます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:616
#, no-wrap
msgid "Implementing fire and forget interactions"
msgstr "fire and forget インタラクションの実装"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:630
#, no-wrap
msgid "Dealing with messages"
msgstr "メッセージの処理"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:633
msgid "Unlike the previous example using the _payloads_ directly, you can also use `Message` directly:"
msgstr "_ペイロード_ を直接使用する前の例とは異なり、 `Message` を直接使用することもできます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:643
#, no-wrap
msgid "Handling Failures"
msgstr "失敗のハンドリング"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:646
msgid "If a method annotated with `@ConsumeEvent` throws an exception, then:"
msgstr "`@ConsumeEvent` でアノテーションされたメソッドが例外を発生させた場合、"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:648
msgid "if a reply handler is set, then the failure is propagated back to the sender via an `io.vertx.core.eventbus.ReplyException` with code `ConsumeEvent#FAILURE_CODE` and the exception message,"
msgstr "返信ハンドラが設定されている場合、失敗はコード `ConsumeEvent#FAILURE_CODE` と例外メッセージを含む `io.vertx.core.eventbus.ReplyException` を通じて送信者に伝えられます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:649
msgid "if no reply handler is set, then the exception is rethrown (and wrapped in a `RuntimeException` if necessary) and can be handled by the default exception handler, i.e. `io.vertx.core.Vertx#exceptionHandler()`."
msgstr "応答ハンドラが設定されていない場合、例外は再スローされ（必要に応じて `RuntimeException` でラップされる）、デフォルトの例外ハンドラ、すなわち `io.vertx.core.Vertx#exceptionHandler()` で処理することができます。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:650
#, no-wrap
msgid "Sending messages"
msgstr "メッセージの送信"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:653
msgid "Sending and publishing messages use the Vert.x event bus:"
msgstr "メッセージの送信と公開にはVert.x Event busを使用します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:684
msgid "Inject the Event bus"
msgstr "イベントバスの注入"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:685
msgid "Send a message to the address `greeting`. Message payload is `name`"
msgstr "アドレス `greeting` にメッセージを送信します。メッセージのペイロードは `name` です"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:687
msgid "The `EventBus` object provides methods to:"
msgstr "`EventBus` オブジェクトは、以下のメソッドを提供します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:689
msgid "`send` a message to a specific address - one single consumer receives the message."
msgstr "`send` 特定のアドレスへのメッセージ - 一人のコンシューマーがメッセージを受信する。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:690
msgid "`publish` a message to a specific address - all consumers receive the messages."
msgstr "`publish` 特定のアドレスにメッセージを送る - すべてのコンシューマーがメッセージを受け取る。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:691
msgid "`request` a message and expect a reply"
msgstr "`request` メッセージを送って返信を期待する"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:703
#, no-wrap
msgid "Using codecs"
msgstr "コーデックの使用"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:726
msgid "If you want to use a specific codec, you need to set it on both ends explicitly:"
msgstr "特定のコーデックを使用したい場合は、両サイドで明示的に設定する必要があります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:744
msgid "Set the name of the codec to use to send the message"
msgstr "メッセージの送信に使用するコーデックの名前を設定"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:745
msgid "Set the codec to use to receive the message"
msgstr "メッセージの受信に使用するコーデックの設定"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:746
#, no-wrap
msgid "Combining HTTP and the event bus"
msgstr "HTTPとイベントバスの融合"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:754
msgid "In your HTTP endpoint class, inject the event bus and uses the `request` method to send a message to the event bus and expect a response:"
msgstr "HTTPエンドポイントクラスでは、イベントバスを注入し、 `request` メソッドを使用して、イベントバスにメッセージを送信し、応答を期待します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:785
msgid "send the `name` to the `greeting` address and request a response"
msgstr "`greeting` アドレスに  `name`  を送信し、レスポンスを要求します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:786
msgid "when we get the response, extract the body and send it to the user"
msgstr "レスポンスを取得したら、ボディを抽出してユーザーに送信します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:814
msgid "This bean receives the name and returns the greeting message."
msgstr "このBeanは、名前を受け取り、グリーティングメッセージを返します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:816
msgid "With this in place, every HTTP request on `/bus/quarkus` sends a message to the event bus, waits for a reply, and when this one arrives, writes the HTTP response:"
msgstr "これにより、 `/bus/quarkus` のすべてのHTTPリクエストは、イベントバスにメッセージを送信し、応答を待ち、その応答が到着すると、HTTPレスポンスを書き込みます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:823
msgid "To better understand, let's detail how the HTTP request/response has been handled:"
msgstr "より理解しやすくするために、HTTP リクエスト/レスポンスがどのように処理されたかを詳しく見てみましょう。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:825
msgid "The request is received by the `greeting` method"
msgstr "リクエストは、 `greeting` メソッドで受信されます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:826
msgid "a message containing the _name_ is sent to the event bus"
msgstr "_name_ を含むメッセージがイベントバスに送信される"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:827
msgid "Another bean receives this message and computes the response"
msgstr "別のBeanがこのメッセージを受信し、応答を計算します"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:828
msgid "This response is sent back using the reply mechanism"
msgstr "この応答は、返信メカニズムを使って送り返されます"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:829
msgid "Once the reply is received by the sender, the content is written to the HTTP response"
msgstr "送信者が返信を受信すると、その内容がHTTPレスポンスに書き込まれます"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:831
#, no-wrap
msgid "Bidirectional communication with browsers using SockJS"
msgstr "SockJSによるブラウザとの双方向通信"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:842
msgid "So use SockJS, you need to configure the bridge, especially the addresses that will be used to communicate:"
msgstr "SockJSを使用するためには、ブリッジの設定、特に通信に使用されるアドレスの設定が必要です。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:878
msgid "The browser must use the `vertx-eventbus` JavaScript library to consume the message:"
msgstr "ブラウザは、メッセージを消費するために、 `vertx-eventbus` JavaScriptライブラリを使用する必要があります。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:913
#, no-wrap
msgid "Native Transport"
msgstr "ネイティブ・トランスポート"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:916
msgid "Native transports are not supported in GraalVM produced binaries."
msgstr "GraalVMで作られたバイナリでは、ネイティブトランスポートはサポートされていません。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:955
msgid "Or in `application.yml`:"
msgstr "あるいは、 `application.yml` で次のように設定します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:964
msgid "If all is well quarkus will log:"
msgstr "順調にいけばquarkusは以下のようにログ出力します。"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:969
#, no-wrap
msgid "Native Linux Transport"
msgstr "ネイティブLinuxトランスポート"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:972
msgid "On Linux you can enable the following socket options:"
msgstr "Linuxでは、以下のソケットオプションを有効にすることができます。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:974
#: upstream/_versions/2.13/guides/vertx-reference.adoc:995
msgid "SO_REUSEPORT"
msgstr "SOREUSEPORT"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:978
msgid "TCP_QUICKACK"
msgstr "TCP_QUICKACK"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:982
msgid "TCP_CORK"
msgstr "TCP_CORK"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:986
msgid "TCP_FASTOPEN"
msgstr "TCP_FASTOPEN"

#. type: Title ===
#: upstream/_versions/2.13/guides/vertx-reference.adoc:990
#, no-wrap
msgid "Native macOS Transport"
msgstr "ネイティブMacOSトランスポート"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:993
msgid "On macOS Sierra and above you can enable the following socket options:"
msgstr "MacOS Sierra以上では、以下のソケットオプションを有効にすることができます。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1000
#, no-wrap
msgid "Listening to a Unix Domain Socket"
msgstr "Unixドメインソケットのリスニング"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1008
msgid "This will only work on platforms that support <<native-transport>>."
msgstr "これは、 <<native-transport>> をサポートしているプラットフォームでのみ動作します。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1030
msgid "Do not forget to add the native transport dependency. See <<native-transport>> for details."
msgstr "ネイティブのトランスポート依存関係を追加することを忘れないでください。 詳細については、<<native-transport>> を参照してください。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1032
msgid "Make sure your application has the right permissions to write to the socket."
msgstr "アプリケーションがソケットに書き込むための適切なアクセス許可を持っていることを確認してください。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1033
#, no-wrap
msgid "Read only deployment environments"
msgstr "読み取り専用のデプロイメント環境"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1036
msgid "In environments with read only file systems you may receive errors of the form:"
msgstr "ファイルシステムが読み取り専用の環境では、次のようなエラーが発生することがあります。"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1043
msgid "Assuming `/tmp/` is writable this can be fixed by setting the `vertx.cacheDirBase` property to point to a directory in `/tmp/` for instance in OpenShift by creating an environment variable `JAVA_OPTS` with the value `-Dvertx.cacheDirBase=/tmp/vertx`."
msgstr "`/tmp/` が書き込み可能である場合、これは `vertx.cacheDirBase` プロパティが `/tmp/` のディレクトリを指すように設定することで修正できます。例えば、OpenShift では環境変数 `JAVA_OPTS` を作成して `-Dvertx.cacheDirBase=/tmp/vertx` という値を設定します。"

#. type: Title ==
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1044
#, no-wrap
msgid "Customizing the Vert.x configuration"
msgstr "Vert.xインスタンスの設定"

#. type: Plain text
#: upstream/_versions/2.13/guides/vertx-reference.adoc:1063
msgid "The _customizer_ beans received the `VertxOptions` (coming from the application configuration), and can modify them."
msgstr "_customizer_ Beanは、(アプリケーションの設定に由来する) `VertxOptions` を受け取り、それを修正することができます。"
