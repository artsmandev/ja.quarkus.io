msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer provides an abstraction layer for metrics collection.\n"
"It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"By default, the metrics are exposed on the main HTTP server.\n"
"If you would like to surface metrics from a separate management port, see the xref:management-interface[Managed interface] section."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Quarkus Micrometer extensions are structured in the same way as the Micrometer project.\n"
"The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.\n"
"Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.\n"
"It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"A similar process applies for other meter registry extensions.\n"
"To use the Micrometer StackDriver MeterRegistry, for example, you would use the\n"
"`quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"If the Micrometer registry you would like to use does not yet have an associated extension,\n"
"use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"You will then need to specify your own provider to configure and initialize the\n"
"MeterRegistry, as discussed in the next section."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Use MicroProfile Config to inject any configuration attributes you need to configure the registry.\n"
"Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.\n"
"The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Metrics data is used in the aggregate to observe how data changes over time.\n"
"This data is used for trend analysis, anomaly detection, and alerting.\n"
"Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Meter names should use dots to separate segments, `a.name.like.this`.\n"
"Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.\n"
"The Micrometer API refers to this dimensional data as tags, but you may it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer is built primariliy for backend monitoring systems that support dimensional data (metric names that are enchriched with key/value pairs).\n"
"For heirarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Each unique combination of metric name and dimension produces a unique time series.\n"
"Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Gauges measure a value that can increase or decrease over time, like the speedometer on a car.\n"
"Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Gauge values are sampled rather than set;\n"
"there is no record of how the value associated with a gauge may have changed between measurements."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Associate xref:define-tags[tags] with the gauge.\n"
"Gauge tag values are constant, and must be assigned at construction time."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.\n"
"Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer does not create strong references to the objects it observes by default.\n"
"Depending on the registry, Micrometer either omits gauges that observe\n"
"objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"When should you use a gauge?\n"
"Only use a gauge when you can't use something else.\n"
"Gauges can be less straight-forward to use than other meters.\n"
"If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Counters measure values that only increase.\n"
"Use one of the methods below to create a counter."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"When should you use a counter?\n"
"Use a counter if you are doing something that can not be either timed or summarized.\n"
"If you want to understand more about how a value is changing,\n"
"a timer (when the base unit of measurement is time) or a distribution summary might be\n"
"more appropriate."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Use a distribution summary to record a value, not time.\n"
"Use one of the following methods to create a distribution summary."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Create a new distribution summary called `response.size`"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Provide a description for the distribution summary"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Associate xref:define-tags[tags] with the distribution summary"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "`fabric.selection` is the summary name"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "`primary` is a dimensional tag with value `blue`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Use `Timer.builder` to provide a description and units:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Create a new timer called `my.timer`"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Associate xref:define-tags[tags] with the timer"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Wrap the invocation of a `Runnable`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Wrap the invocation of a `Callable`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Use a `Sample` for more complex code paths:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "We create a sample, which records the start of the timer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "The sample can be passed along as context"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.\n"
"See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for\n"
"timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and\n"
"`http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method\n"
"(GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Ignoring endpoints"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns`\n"
"property.\n"
"This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should\n"
"be ignored.\n"
"For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will\n"
"ignore a request to `http://localhost:8080/example/prime/7919`.\n"
"A request to `http://localhost:8080/example/gauge/7919`\n"
"would still be measured."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "URI templates"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.\n"
"Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of\n"
"`http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.\n"
"This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement\n"
"string.\n"
"For example, setting\n"
"`quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value\n"
"`/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Exported metrics format"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"By default, the  metrics are exported using the Prometheus format `application/openmetrics-text`,\n"
"you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.\n"
"The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry`\n"
"instances."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"In this example, a singleton CDI bean will produce two different `MeterFilter` beans.\n"
"One will be applied only to\n"
"Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied\n"
"to all `MeterRegistry` instances.\n"
"An application configuration property is also injected and used as a tag value.\n"
"Additional examples of MeterFilters can be found in the\n"
"link:https://micrometer.io/docs/concepts[official documentation]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.\n"
"The `@Timed` annotation will wrap the execution of a method and will emit the following tags\n"
"in addition to any tags defined on the annotation itself:\n"
"class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"Using annotations is limited, as you can't dynamically assign meaningful tag values.\n"
"Also note that many methods, e.g. REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"If you use the MicroProfile Metrics API in your application,\n"
"the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.\n"
"Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.\n"
"Note that this property is a build-time property.\n"
"The value cannot be overridden at runtime."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "You can configure the path of each exposed format using:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid ""
"With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.\n"
"The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/telemetry-micrometer.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title =
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:7
#, no-wrap
msgid "Micrometer Metrics"
msgstr "Micrometerメトリクス"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:19
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "Micrometerは、Quarkusのメトリクスとして推奨されるアプローチです。"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:23
#, fuzzy, no-wrap
msgid "Micrometer and monitoring system extensions"
msgstr "マイクロメーターとモニタリングシステムの拡張"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:30
#, fuzzy
msgid "Quarkus extensions:"
msgstr "クアルカスのエクステンション："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:32
#, fuzzy
msgid "micrometer"
msgstr "マイクロメートル"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:33
#, fuzzy
msgid "micrometer-registry-prometheus"
msgstr "マイクロメーター・レジストリー・プロメテウス"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:35
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverseの拡張機能] （不完全かもしれない）："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:37
#, fuzzy
msgid "micrometer-registry-azure-monitor"
msgstr "マイクロメーター・レジストリ・アズールモニター"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:38
#, fuzzy
msgid "micrometer-registry-datadog"
msgstr "マイクロメーター・レジストリー・データドッグ"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:39
#, fuzzy
msgid "micrometer-registry-graphite"
msgstr "マイクロメーター・レジストリー・グラファイト"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:40
#, fuzzy
msgid "micrometer-registry-influx"
msgstr "マイクロメーター・レジストリ・インフラックス"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:41
#, fuzzy
msgid "micrometer-registry-jmx"
msgstr "マイクロメーター・レジストリ・ジェイエムエックス"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:42
#, fuzzy
msgid "micrometer-registry-newrelic-telemetry"
msgstr "マイクロメーター・レジストリー・ニューレリック・テレメトリー"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:43
#, fuzzy
msgid "micrometer-registry-otlp"
msgstr "マイクロメーター・レジストリ-OTP"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:44
#, fuzzy
msgid "micrometer-registry-signalfx"
msgstr "マイクロメーター・レジストリ・シグナルFX"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:45
#, fuzzy
msgid "micrometer-registry-stackdriver"
msgstr "マイクロメーター・レジストリ・スタックドライバー"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:46
#, fuzzy
msgid "micrometer-registry-statsd"
msgstr "マイクロメーター・レジストリ・スタッツD"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:51
#, fuzzy
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "以下のコマンドを使用して、拡張機能をプロジェクトに追加します（プロジェクト・ディレクトリから）："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:56
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:58
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:82
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:102
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:67
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:91
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:116
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:73
#, fuzzy
msgid "And you're all set!"
msgstr "これで準備万端だ！"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:96
#, fuzzy, no-wrap
msgid "Other registry implementations"
msgstr "その他のレジストリ実装"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:125
#, fuzzy, no-wrap
msgid "Create a customized MeterRegistry"
msgstr "カスタマイズされたMeterRegistryを作成する"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:128
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "必要であれば、カスタム `@Produces` メソッドを使って、独自の `MeterRegistry` を作成し、設定する。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:130
msgid "The following example customizes the line format used for StatsD:"
msgstr "以下の例では、StatsDで使用される行フォーマットをカスタマイズしています。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:148
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "このメソッドは `@Singleton` を返す。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:149
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "このメソッドは `MeterRegistry`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:151
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "この例は、Micrometerのドキュメントにある以下の指示に対応しています： link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD：メトリックスシンクのカスタマイズ]"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:156
#, fuzzy, no-wrap
msgid "Create your own metrics"
msgstr "独自のメトリクスを作成する"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:163
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "メトリクスは遅延的に構築される。エンドポイントにアクセスするなど、メトリックを作成するアクションを実行するまで、探しているメトリックのデータが表示されないことがあります。"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:164
#, fuzzy, no-wrap
msgid "Naming conventions"
msgstr "命名規則"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:170
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "次のようなタイマーの宣言がある場合： `registry.timer(\"http.server.requests\")` 、適用される命名規則は、異なるモニタリング・システムに対して次のようなメトリクスを生成する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:172
#, fuzzy
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "プロメテウス `http_server_requests_duration_seconds`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:173
#, fuzzy
msgid "Atlas: `httpServerRequests`"
msgstr "アトラス `httpServerRequests`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:174
#, fuzzy
msgid "Graphite: `http.server.requests`"
msgstr "グラファイト： `http.server.requests`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:175
#, fuzzy
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB： `http_server_requests`"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:177
#, fuzzy, no-wrap
msgid "Define dimensions for aggregation"
msgstr "集計のためのディメンションを定義する"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:186
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a xref:meter-filter[Meter Filter]."
msgstr "タグは、メーターが `MeterRegistry` 、または xref:meter-filter[メーターフィルターを] 使用して登録されるときに指定できます。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:188
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "link:{concepts}#_tag_naming[タグの命名に関する] その他のアドバイスについては、マイクロメーターのドキュメントを参照してください。"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:192
#, fuzzy, no-wrap
msgid "Obtain a reference to a MeterRegistry"
msgstr "MeterRegistryへの参照を取得する。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:195
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "メーターを登録するには、 `MeterRegistry` への参照が必要です。この参照は、マイクロメーター・エクステンションによって設定・管理されます。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:197
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "以下のいずれかの方法で、 `MeterRegistry` への参照を取得する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:199
#, fuzzy
msgid "Use CDI Constructor injection:"
msgstr "CDIコンストラクタ注入を使用する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:223
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "メンバ変数 `MeterRegistry` を使用し、 `@Inject` ："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:231
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "グローバル `MeterRegistry` ："

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:237
#, no-wrap
msgid "Gauges"
msgstr "ゲージ"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:246
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "マイクロメータには、ゲージを作成するためのいくつかのメカニズムが用意されている："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:248
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "コレクションをラップして、そのサイズを監視する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:257
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "新しいゲージ、 `list.size` をドット区切りで作成する。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:260
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "サイズが観測されるべき配列リストを構築する。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:262
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "ビルダーを使用して、関数を呼び出すゲージを作成します："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:273
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "のインスタンスである `threadBean` で `getPeakThreadCount` を呼び出す `jvm.threads.peak` という新しいゲージを作成する。 `ThreadMXBean`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:274
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:275
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "ゲージの説明"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:276
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge"
msgstr "xref:define-tags[タグを] ゲージに関連付ける"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:277
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "MeterRegistryにゲージを登録します。"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:290
#, no-wrap
msgid "Counters"
msgstr "カウンター"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:296
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:359
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "`MeterRegistry` で便利なメソッドを使う："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:303
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr "`example.prime.number` はカウンター名である。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:304
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr "`type` は、値 を持つ次元タグである。 `prime`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:307
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "`Counter.builder` 、説明と単位を記入する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:318
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "という新しいカウンターを作成する。 `count.me`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:319
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "カスタムの基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:320
#, fuzzy
msgid "Provide a description for the counter"
msgstr "カウンターの説明"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:321
#, fuzzy
msgid "Associate xref:define-tags[tags] with the counter"
msgstr "xref:define-tags[タグを] カウンターに関連付ける"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:323
#, fuzzy
msgid "xref:annotations[Annotate] a method"
msgstr "メソッドに xref:annotations[注釈を付ける]"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:333
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "CDIインターセプターは、次のようなカウンターを作成して登録する。 `counted.method`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:334
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "インターセプターが作成したカウンターは、値 \"annotated \"の \"extra \"次元タグを持つ。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:336
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "常時増加する関数が返す結果を測定するために使用できる、あまり一般的でない `FunctionCounter` を含む、より詳細な情報と例については、マイクロメーター・ドキュメントの link:{concepts}#_counters[カウンターを] 参照してください。"

#. type: Title ===
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:343
#, no-wrap
msgid "Summaries and Timers"
msgstr "サマリーとタイマー"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:346
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "マイクロメーターのタイマーと分布サマリーは非常によく似ている。どちらのメーターもデータを記録し、さらにヒストグラムやパーセンタイルのデータを取り込むことができます。分布サマリーは任意のタイプのデータに使用できますが、タイマーは時間と持続時間の測定に最適化されています。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:348
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "タイマーとディストリビューション・サマリーは、少なくとも3つの値を内部に保存する："

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:350
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "記録されたすべての値を合計したもの。"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:351
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "記録された値の数（カウンタ）"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:352
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "減衰する時間窓（ゲージ）内で見られる最高値。"

#. type: Title ====
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:353
#, fuzzy, no-wrap
msgid "Create a distribution summary"
msgstr "配信サマリーの作成"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:366
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr "`bytes.written` は要約名"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:367
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr "`protocol` は、値 を持つ次元タグである。 `http`"

#. type: Plain text
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:370
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "`DistributionSummary.builder` 、説明と単位を記入する："

#. type: Title ====
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:385
#, fuzzy, no-wrap
msgid "Create a timer"
msgstr "タイマーを作成する"

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:388
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:390
msgid "Use one of the following methods to construct a timer."
msgstr ""

#. type: Title ====
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:427
#, fuzzy, no-wrap
msgid "Measure durations with Timers"
msgstr "タイマーを使った持続時間の測定"

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:430
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr ""

#. type: Title ====
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:474
#, fuzzy, no-wrap
msgid "Histograms and percentiles"
msgstr "ヒストグラムとパーセンタイル"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:486
#, fuzzy, no-wrap
msgid "Automatically generated metrics"
msgstr "自動的に生成されるメトリクス"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:523
#, fuzzy, no-wrap
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "`MeterFilter` を使用して、放出されるタグとメトリックをカスタマイズする。"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:584
#, no-wrap
msgid "Does Micrometer support annotations?"
msgstr "Micrometerはアノテーションをサポートしていますか？"

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:594
#, no-wrap
msgid "Support for the MicroProfile Metrics API"
msgstr "MicroProfile Metrics API のサポート"

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:601
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:645
#, no-wrap
msgid "Management interface"
msgstr "マネジメントインターフェース"

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:648
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:654
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.2/guides/telemetry-micrometer.adoc:668
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"
