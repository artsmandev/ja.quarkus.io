msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"In this guide, we are going to develop two applications communicating with a RabbitMQ broker.\n"
"The first application sends a _quote request_ to the RabbitMQ _quote requests_ exchange and consumes messages from the _quote_ queue.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.\n"
"At the same time the generated request id is sent to the `quote-requests` exchange."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"The `Quote` class will be used in both `producer` and `processor` projects.\n"
"For the sake of simplicity we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/rabbitmq/model/Quote.java` file, with the following content:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the RabbitMQ queues\n"
"and also in the server-sent events sent to browser clients."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.\n"
"This will be useful later when we run the applications as native executables inside containers.\n"
"Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid "Inside the `producer` project locate the generated  `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` file, and update the content to be:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"This channel is mapped to a RabbitMQ exchange using the configuration we will add to the `application.properties` file.\n"
"Open the `src/main/resource/application.properties` file and add:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"All we need to specify is the `smallrye-rabbitmq` connector.\n"
"By default, reactive messaging maps the channel name `quote-requests` to the same RabbitMQ exchange name."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the `processor` project, locate the `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` file and add the following:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"As with the previous example we need to configure the connectors in the `application.properties` file.\n"
"Open the `src/main/resources/application.properties` file and add:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.\n"
"The configuration keys are structured as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Back to our `producer` project.\n"
"Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Again we need to configure the incoming `quotes` channel inside `producer` project.\n"
"Add the following inside `application.properties` file:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Nothing spectacular here.\n"
"On each received quote, it updates the page."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Quarkus starts a RabbitMQ broker automatically, configures the application and shares the broker instance between different applications.\n"
"See xref:rabbitmq-dev-services.adoc[Dev Services for RabbitMQ] for more details."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"When not running in dev or test mode, you will need to start your RabbitMQ broker.\n"
"You can follow the instructions from the https://hub.docker.com/_/rabbitmq[RabbitMQ Docker website] or create a `docker-compose.yaml` file with the following content:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Note how the RabbitMQ broker location is configured.\n"
"The `rabbitmq-host` and `rabbitmq-port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"Once packaged, run `docker compose up --build`.\n"
"The UI is exposed on http://localhost:8080/quotes.html"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.\n"
"Then, run the system using:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"This guide has shown how you can interact with RabbitMQ using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/rabbitmq.adoc
msgid ""
"If you did the Kafka, you have realized that it's the same code.\n"
"The only difference is the connector configuration and the JSON mapping."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.2/guides/rabbitmq.adoc:6
#, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with RabbitMQ"
msgstr "RabbitMQによるSmallRyeリアクティブメッセージング入門"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:11
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with RabbitMQ."
msgstr "このガイドでは、QuarkusアプリケーションがSmallRye Reactive Messagingを利用してRabbitMQと対話する方法を説明します。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:19
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:34
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to an exchange named `quotes`."
msgstr "2 番目のアプリケーションである `processor` は、 `quote-requests` のキューから読み取った見積にランダムな価格を付けて、 `quotes` という名前のエクスチェンジに送信します。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:38
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:46
#, fuzzy
msgid "The solution is located in the `rabbitmq-quickstart` link:{quickstarts-tree-url}/rabbitmq-quickstart[directory]."
msgstr "ソリューションは `rabbitmq-quickstart` link:{quickstarts-tree-url}/rabbitmq-quickstart[ディレクトリに] あります。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:47
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:50
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、 _producer_ と _processor_ の2つのプロジェクトを作成する必要があります。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:52
msgid "To create the _producer_ project, in a terminal run:"
msgstr "_producer_ プロジェクトを作成するには、ターミナルで次のように実行します:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:59
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する2つのQuarkusエクステンションを選択します:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:61
msgid "The Reactive Messaging RabbitMQ connector"
msgstr "Reactive Messaging RabbitMQコネクター"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:62
msgid "RESTEasy Reactive and it's Jackson support to handle JSON payloads"
msgstr "RESTEasy ReactiveとJSONペイロードを扱うためのJacksonサポート"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:64
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "_processor_ プロジェクトを作成するには、同じディレクトリから、次のように実行します:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:71
msgid "At that point you should have the following structure:"
msgstr "この時点では、以下のような構成になっているはずです:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:100
msgid "Open the two projects in your favorite IDE."
msgstr "2つのプロジェクトをお好みのIDEで開きます。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:101
#, no-wrap
msgid "The Quote object"
msgstr "見積オブジェクト"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:143
msgid "Quarkus has built-in capabilities to deal with JSON RabbitMQ messages."
msgstr "QuarkusにはJSONのRabbitMQメッセージを処理する機能が組み込まれています。"

#. type: Block title
#: upstream/_versions/3.2/guides/rabbitmq.adoc:145
#, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:152
#, no-wrap
msgid "Sending quote request"
msgstr "見積もり依頼の送信"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:194
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "Reactive Messaging `Emitter` を注入して、 `quote-requests` チャンネルにメッセージを送信します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:195
msgid "On a post request, generate a random UUID and send it to the RabbitMQ queue using the emitter."
msgstr "投稿リクエストで、ランダムなUUIDを生成し、エミッターを使ってRabbitMQのキューに送信します。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:209
#, no-wrap
msgid "Processing quote requests"
msgstr "見積依頼の処理"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:248
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "メソッドが `requests` チャンネルのアイテムを消費することを示します"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:249
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "メソッドが返すオブジェクトが `quotes` チャンネルに送信されることを示します"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:250
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が _blocking_ であり、呼び出し元のスレッドでは実行できないことを示します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:252
msgid "The `process` method is called for every RabbitMQ message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` exchange."
msgstr "`process` メソッドは、 `quote-requests` キューからの RabbitMQ のメッセージごとに呼び出され、 `Quote` オブジェクトを `quotes` エクスチェンジに送信します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:272
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:274
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:276
msgid "`quote-requests` -> RabbitMQ queue from which we read the quote requests"
msgstr "`quote-requests` → 見積依頼を読み出すRabbitMQのキュー"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:277
msgid "`quotes` -> RabbitMQ exchange in which we write the quotes"
msgstr "`quotes` → 見積を書き込むRabbitMQのエクスチェンジ"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:278
#, no-wrap
msgid "Receiving quotes"
msgstr "見積の受け取り"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:300
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` 修飾子を使用して `quotes` のチャネルを注入します"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:301
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "`Server Sent Events` を使用してコンテンツが送信されたことを示します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:302
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム (_Reactive Stream_) を返します。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:315
#, no-wrap
msgid "The HTML page"
msgstr "HTML ページ"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:318
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSE を使って変換された価格を読み込む HTML ページです。"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:320
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "`producer` プロジェクト中の `src/main/resources/META-INF/resources/quotes.html` に以下の内容のファイルを作成します:"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:365
#, no-wrap
msgid "Get it running"
msgstr "実行"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:368
msgid "You just need to run both applications using:"
msgstr "両方のアプリケーションを実行するためには以下コマンドを打つだけです:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:375
msgid "And, in a separate terminal:"
msgstr "そして、別の端末で以下を実行します:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:386
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "`http://localhost:8080/quotes.html` をブラウザで開き、ボタンをクリックして見積を依頼してください。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:387
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr "JVM またはネイティブモードでの実行"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:439
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "まず、アプリケーションが停止していることを確認し、両方のアプリケーションをJVMモードでビルドします:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:450
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "アプリケーションをネイティブで動作させるには、まず、ネイティブ実行可能ファイルをビルドする必要があります:"

#. type: Plain text
#: upstream/_versions/3.2/guides/rabbitmq.adoc:467
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "UIは前と同じように http://localhost:8080/quotes.html で公開されます。"

#. type: Title ==
#: upstream/_versions/3.2/guides/rabbitmq.adoc:468
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"
