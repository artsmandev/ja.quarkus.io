msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"In most cases, it does not have to be added directly to your project's build file as it is already provided by all the security extensions.\n"
"However, if you need to write your own custom security code (for example, register a xref:jaxrs-security-context[Custom Jakarta REST SecurityContext]) or use xref:bouncy-castle[BouncyCastle] libraries, then please make sure it is included:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"One can customize `HttpAuthenticationMechanism` by registering a CDI implementation bean.\n"
"In the example below the custom authenticator delegates to `JWTAuthMechanism` provided by `quarkus-smallrye-jwt`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"If more than one custom `SecurityIdentityAugmentor` is registered then they will be considered equal candidates and invoked in random order.\n"
"You can enforce the order by implementing a default `SecurityIdentityAugmentor#priority` method. Augmentors with higher priorities will be invoked first."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"By default, the request context is not activated when augmenting the security identity, this means that if you want to use for example Hibernate\n"
"that mandates a request context, you will have a `jakarta.enterprise.context.ContextNotActiveException`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"When running in native mode, the default behavior for GraalVM native executable generation is to only include the main \"SUN\" provider\n"
"unless you have enabled SSL, in which case all security providers are registered. If you are not using SSL, then you can selectively\n"
"register security providers by name using the `quarkus.security.security-providers` property. The following example illustrates\n"
"configuration to register the \"SunRsaSign\" and \"SunJCE\" security providers:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"`BCFIPS` provider option is supported in native image but the algorithm self-tests which rely on `java.security.SecureRandom` to verify the generated keys have been removed for these tests to pass. The following classes have been affected:\n"
"- `org.bouncycastle.crypto.general.DSA`\n"
"- `org.bouncycastle.crypto.general.DSTU4145`\n"
"- `org.bouncycastle.crypto.general.ECGOST3410`\n"
"- `org.bouncycastle.crypto.general.GOST3410`\n"
"- `org.bouncycastle.crypto.fips.FipsDSA`\n"
"- `org.bouncycastle.crypto.fips.FipsEC`\n"
"- `org.bouncycastle.crypto.fips.FipsRSA`"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"Note that the keystore and truststore type and provider are set to `BCFKS` and `BCFIPS`.\n"
"One can generate a keystore with this type and provider like this:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/3.2/guides/security-customization.adoc
msgid ""
"This will allow you to propagate the identity throughout the reactive callbacks. You also need to make sure you\n"
"are using an executor that is capable of propagating the identity (e.g. no `CompletableFuture.supplyAsync`),\n"
"to make sure that Quarkus can propagate it. For more information see the\n"
"xref:context-propagation.adoc[Context Propagation Guide]."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.2/guides/security-customization.adoc:6
#, no-wrap
msgid "Security Tips and Tricks"
msgstr "セキュリティに関するヒントとコツ"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:10
#, no-wrap
msgid "Quarkus Security Dependency"
msgstr "Quarkus Security依存関係"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:13
msgid "`io.quarkus:quarkus-security` module contains the core Quarkus Security classes."
msgstr "`io.quarkus:quarkus-security` モジュールには、Quarkus Securityの中核となるクラスが含まれています。"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:18
#: upstream/_versions/3.2/guides/security-customization.adoc:416
#: upstream/_versions/3.2/guides/security-customization.adoc:451
#: upstream/_versions/3.2/guides/security-customization.adoc:479
#: upstream/_versions/3.2/guides/security-customization.adoc:530
#: upstream/_versions/3.2/guides/security-customization.adoc:602
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:27
#: upstream/_versions/3.2/guides/security-customization.adoc:425
#: upstream/_versions/3.2/guides/security-customization.adoc:460
#: upstream/_versions/3.2/guides/security-customization.adoc:488
#: upstream/_versions/3.2/guides/security-customization.adoc:544
#: upstream/_versions/3.2/guides/security-customization.adoc:611
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:32
#, no-wrap
msgid "HttpAuthenticationMechanism Customization"
msgstr "HttpAuthenticationMechanism のカスタマイズ"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:74
#, no-wrap
msgid "Dealing with more than one HttpAuthenticationMechanism"
msgstr "複数のHttpAuthenticationMechanism処理"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:77
msgid "More than one `HttpAuthenticationMechanism` can be combined, for example, the built-in `Basic` or `JWT` mechanism provided by `quarkus-smallrye-jwt` has to be used to verify the service clients credentials passed as the HTTP `Authorization` `Basic` or `Bearer` scheme values while the `Authorization Code` mechanism provided by `quarkus-oidc` has to be used to authenticate the users with Keycloak or other OpenID Connect providers."
msgstr "複数の `HttpAuthenticationMechanism` は組み合わせて使っていくことができます。例えば、HTTP `Authorization` `Basic` または `Bearer` スキーム値として渡されたサービスクライアントの資格情報を検証するためには、 `quarkus-smallrye-jwt` によって提供される `Basic` または `JWT` メカニズムを使う必要がありますし、Keycloak やその他の OpenID Connect プロバイダでユーザを認証するには `quarkus-oidc` の `Authorization Code` メカニズムを使用していく必要があります。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:79
msgid "In such cases the mechanisms are asked to verify the credentials in turn until a `SecurityIdentity` is created. The mechanisms are sorted in the descending order using their priority. `Basic` authentication mechanism has the highest priority of `2000`, followed by the `Authorization Code` one with the priority of `1001`, with all other mechanisms provided by Quarkus having the priority of `1000`."
msgstr "このような場合、 `SecurityIdentity` が作成されるまで、メカニズムが順番にクレデンシャルを検証するように要求されます。認証メカニズムは、優先度の降順でソートされています。 `Basic` 認証メカニズムの優先順位は最高で `2000` 、次いで `Authorization Code` の優先順位は `1001` 、Quarkus が提供する他のすべてのメカニズムの優先順位は `1000` となっています。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:81
msgid "If no credentials are provided then the mechanism specific challenge is created, for example, `401` status is returned by either `Basic` or `JWT` mechanisms, URL redirecting the user to the OpenID Connect provider is returned by `quarkus-oidc`, etc."
msgstr "例えば、 `401` ステータスは `Basic` または `JWT` のいずれかのメカニズムによって返され、ユーザーを `OpenId Connect` プロバイダにリダイレクトする URL は `quarkus-oidc` によって返されるなど、認証情報が提供されない場合はメカニズム固有のチャレンジが作成されます。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:83
msgid "So if `Basic` and `Authorization Code` mechanisms are combined then `401` will be returned if no credentials are provided and if `JWT` and `Authorization Code` mechanisms are combined then a redirect URL will be returned."
msgstr "つまり、 `Basic` と `Authorization Code` の仕組みが組み合わされた場合、認証情報が提供されなければ `401` が返され、 `JWT` と `Authorization Code` の仕組みが組み合わされた場合、リダイレクト URL が返されることになります。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:85
msgid "In some cases such a default logic of selecting the challenge is exactly what is required by a given application, but sometimes it may not meet the requirements. In such cases (or indeed in other similar cases where you'd like to change the order in which the mechanisms are asked to handle the current authentication or challenge request), you can create a custom mechanism and choose which mechanism should create a challenge, for example:"
msgstr "このようなデフォルトのチャレンジ選択ロジックが、あるアプリケーションでまさに必要とされる場合もありますが、時には要件を満たさない場合もあります。そのような場合（あるいは、メカニズムが現在の認証またはチャレンジ要求を処理するように求められる順序を変更したい他の同様の場合）、カスタムメカニズムを作成し、どのメカニズムがチャレンジを作成すべきかを選択することができます。 :"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:135
msgid "Declaring the mechanism an alternative bean ensures this mechanism is used rather than `OidcAuthenticationMechanism` and `JWTAuthMechanism`."
msgstr "メカニズムを代替Beanとして宣言することで、 `OidcAuthenticationMechanism` や `JWTAuthMechanism` ではなく、このメカニズムが使用されることが保証されます。"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:137
#, no-wrap
msgid "Security Identity Customization"
msgstr "セキュリティー・アイデンティティのカスタマイズ"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:140
msgid "Internally, the identity providers create and update an instance of the `io.quarkus.security.identity.SecurityIdentity` class which holds the principal, roles, credentials which were used to authenticate the client (user) and other security attributes. An easy option to customize `SecurityIdentity` is to register a custom `SecurityIdentityAugmentor`. For example, the augmentor below adds an addition role:"
msgstr "内部的には、アイデンティティ・プロバイダは、プリンシパル、役割、クライアント(ユーザー)の認証に使用されたクレデンシャル、 およびその他のセキュリティー属性を保持する `io.quarkus.security.identity.SecurityIdentity` クラスのインスタンスを作成して更新します。 `SecurityIdentity` をカスタマイズする簡単なオプションは、カスタム `SecurityIdentityAugmentor` を登録することです。例えば、以下のエクステンションは、追加のロールを追加します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:179
#, fuzzy
msgid "Here is another example showing how to use the client certificate available in the current xref:security-authentication-mechanisms.adoc#mutual-TLS-authentication[mutual TLS (mTLS) authentication] request to add more roles:"
msgstr "以下に、現在の xref:security-authentication-mechanisms.adoc#mutual-TLS-authentication[相互TLS（mTLS）認証] リクエストで使用可能なクライアント証明書を使用して、さらにロールを追加する方法を示す別の例を示す："

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:238
msgid "The solution is to activate the request context, the following example shows how to get the roles from an Hibernate with Panache `UserRoleEntity`."
msgstr "解決策は、リクエストコンテキストをアクティブにすることです。次の例では、Hibernate with Panache `UserRoleEntity` からロールを取得する方法を示しています。"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:304
#, no-wrap
msgid "Custom Jakarta REST SecurityContext"
msgstr "カスタムJakarta REST SecurityContext"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:307
msgid "If you use Jakarta REST `ContainerRequestFilter` to set a custom Jakarta REST `SecurityContext` then make sure `ContainerRequestFilter` runs in the Jakarta REST pre-match phase by adding a `@PreMatching` annotation to it for this custom security context to be linked with Quarkus `SecurityIdentity`, for example:"
msgstr "Jakarta REST `ContainerRequestFilter` を使用してカスタムの Jakarta REST `SecurityContext` を設定する場合、このカスタムのセキュリティコンテキストを Quarkus `SecurityIdentity` とリンクさせるために `@PreMatching` アノテーションを追加するなどして、 Jakarta REST の事前一致フェーズで `ContainerRequestFilter` が実行されるようにします:"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:358
#, no-wrap
msgid "Disabling Authorization"
msgstr "認可の無効化"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:361
msgid "If you have a good reason to disable the authorization then you can register a custom `AuthorizationController`:"
msgstr "認可を無効にする正当な理由がある場合(テスト時など)は、カスタムの `AuthorizationController` を登録してください。 :"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:379
msgid "For manual testing Quarkus provides a convenient config property to disable authorization in dev mode. This property has the exact same effect as the custom `AuthorizationController` shown above, but is only available in dev mode:"
msgstr "手動テストのために、Quarkusは、開発モードで認証を無効にする便利な設定プロパティを提供します。このプロパティは、上記のカスタム `AuthorizationController` とまったく同じ効果を持ちますが、開発モードでのみ利用可能です。 :"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:386
msgid "Please also see xref:security-testing.adoc#testing-security[TestingSecurity Annotation] section on how to disable the security checks using `TestSecurity` annotation."
msgstr "また、 `TestSecurity` アノテーションを使ってセキュリティチェックを無効にする方法については、 link:security-testing.html#testing-security[TestingSecurity Annotation]の項を参照してください。"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:387
#, no-wrap
msgid "Registering Security Providers"
msgstr "セキュリティー プロバイダの登録"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:389
#, no-wrap
msgid "Default providers"
msgstr "デフォルトのプロバイダ"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:396
#, no-wrap
msgid "Example Security Providers Configuration"
msgstr "セキュリティー プロバイダの設定例"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:403
#, no-wrap
msgid "BouncyCastle"
msgstr "BouncyCastle"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:406
msgid "If you need to register an `org.bouncycastle.jce.provider.BouncyCastleProvider` JCE provider then please set a `BC` provider name:"
msgstr "`org.bouncycastle.jce.provider.BouncyCastleProvider` JCE プロバイダを登録する必要がある場合は、 `BC` プロバイダ名を設定してください。 :"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:407
#, no-wrap
msgid "Example Security Providers BouncyCastle Configuration"
msgstr "セキュリティープロバイダの例 BouncyCastleの設定"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:414
msgid "and add the BouncyCastle provider dependency:"
msgstr "そして、BouncyCastleプロバイダ依存関係を追加します。 :"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:431
#, no-wrap
msgid "BouncyCastle JSSE"
msgstr "BouncyCastle JSSE"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:434
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it instead of the default SunJSSE provider then please set a `BCJSSE` provider name:"
msgstr "`org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE プロバイダを登録して、デフォルトの SunJSSE プロバイダの代わりに使用する必要がある場合は、 `BCJSSE` というプロバイダ名を設定してください。 :"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:435
#, no-wrap
msgid "Example Security Providers BouncyCastle JSSE Configuration"
msgstr "セキュリティープロバイダの例 BouncyCastle JSSE設定"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:449
msgid "and add the BouncyCastle TLS dependency:"
msgstr "そして、BouncyCastleのTLS依存関係を追加します。 :"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:466
#, no-wrap
msgid "BouncyCastle FIPS"
msgstr "BouncyCastle FIPS"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:469
msgid "If you need to register an `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` JCE provider then please set a `BCFIPS` provider name:"
msgstr "`org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` JCE プロバイダを登録する必要がある場合は、 `BCFIPS` というプロバイダ名を設定してください。 :"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:470
#, no-wrap
msgid "Example Security Providers BouncyCastle FIPS Configuration"
msgstr "セキュリティープロバイダの例 BouncyCastleのFIPS設定"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:477
msgid "and add the BouncyCastle FIPS provider dependency:"
msgstr "そして、BouncyCastle FIPSプロバイダの依存関係を追加します。 :"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:506
#, no-wrap
msgid "BouncyCastle JSSE FIPS"
msgstr "BouncyCastle JSSE FIPS"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:509
msgid "If you need to register an `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSE provider and use it in combination with `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` instead of the default SunJSSE provider then please set a `BCFIPSJSSE` provider name:"
msgstr "デフォルトのSunJSSEプロバイダではなく、 `org.bouncycastle.jsse.provider.BouncyCastleJsseProvider` JSSEプロバイダを登録して、 `org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider` と組み合わせて使用する必要がある場合は、 `BCFIPSJSSE` というプロバイダ名を設定してください。 :"

#. type: Block title
#: upstream/_versions/3.2/guides/security-customization.adoc:510
#, no-wrap
msgid "Example Security Providers BouncyCastle FIPS JSSE Configuration"
msgstr "セキュリティープロバイダの例 BouncyCastle FIPS JSSE設定"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:528
msgid "and the BouncyCastle TLS dependency optimized for using the BouncyCastle FIPS provider:"
msgstr "そして、BouncyCastle FIPSプロバイダを使用するために最適化されたBouncyCastle TLS依存関係:"

#. type: delimited block =
#: upstream/_versions/3.2/guides/security-customization.adoc:561
msgid "`BCFIPSJSSE` provider option is currently not supported in native image."
msgstr "`BCFIPSJSSE` プロバイダーオプションは、現在ネイティブイメージではサポートされていません。"

#. type: Title ===
#: upstream/_versions/3.2/guides/security-customization.adoc:564
#, no-wrap
msgid "SunPKCS11"
msgstr "SunPKCS11"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:567
msgid "`SunPKCS11` provider provides a bridge to specific `PKCS#11` implementations such as cryptographic smartcards and other Hardware Security Modules, Network Security Services in FIPS mode, etc."
msgstr "`SunPKCS11` プロバイダーは、暗号化スマートカードやその他のハードウェアセキュリティモジュール、FIPSモードのネットワークセキュリティサービスなど、特定の `PKCS#11` 実装へのブリッジを提供します。"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:569
msgid "Typically, in order to work with `SunPKCS11`, one needs to install a `PKCS#11` implementation, generate a configuration which usually refers to a shared library, token slot, etc and write the following Java code:"
msgstr "通常、 `SunPKCS11` を扱うには、 `PKCS#11` の実装をインストールし、共有ライブラリやトークンスロットなどを参照する設定を生成し、以下のJavaコードを記述する必要があります。 :"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:585
msgid "In Quarkus you can achieve the same at the configuration level only without having to modify the code, for example:"
msgstr "Quarkusでは、例えばコードを修正することなく、設定レベルのみで同じことを実現することができます。 :"

#. type: delimited block =
#: upstream/_versions/3.2/guides/security-customization.adoc:595
msgid "Note that while accessing the `SunPKCS11` bridge provider is supported in native image, configuring `SunPKCS11` is currently not supported in native image at the Quarkus level."
msgstr "`SunPKCS11` ブリッジプロバイダへのアクセスはネイティブイメージでサポートされていますが、 `SunPKCS11` の設定は現在 Quarkus レベルでネイティブイメージでサポートされていないことに注意してください。"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:597
#, no-wrap
msgid "Reactive Security"
msgstr "Reactive Security"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:600
msgid "If you are going to use security in a reactive environment, you will likely need SmallRye Context Propagation:"
msgstr "リアクティブな環境でセキュリティーを使用する場合は、SmallRye Context Propagationが必要になるでしょう。"

#. type: Title ==
#: upstream/_versions/3.2/guides/security-customization.adoc:621
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:624
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus Securityの概要]"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:625
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "xref:security-architecture.adoc[クオークス・セキュリティ・アーキテクチャ]"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:626
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Quarkusの認証メカニズム]"

#. type: Plain text
#: upstream/_versions/3.2/guides/security-customization.adoc:626
msgid "xref:security-identity-providers.adoc[Identity providers]"
msgstr "xref:security-identity-providers.adoc[アイデンティティ・プロバイダー]"
