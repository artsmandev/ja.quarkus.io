msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"https://pulsar.apache.org[Apache Pulsar] is an open-source, distributed messaging and streaming platform built for the cloud.\n"
"It provides a multi-tenant, high-performance solution to server messaging with tiered storage capabilities."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"When a subscription is created, Pulsar retains all messages, even if the consumer is disconnected.\n"
"The retained messages are discarded only when a consumer acknowledges that all these messages are processed successfully."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Quarkus provides support for Apache Pulsar through https://smallrye.io/smallrye-reactive-messaging/[SmallRye Reactive Messaging] framework.\n"
"Based on Eclipse MicroProfile Reactive Messaging specification 3.0, it proposes a flexible programming model bridging CDI and event-driven."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"This guide provides an in-depth look on Apache Pulsar and SmallRye Reactive Messaging framework.\n"
"For a quick start take a look at xref:pulsar-getting-started.adoc[Getting Started to SmallRye Reactive Messaging with Apache Pulsar]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Applications send and receive *messages*. https://javadoc.io/doc/io.smallrye.reactive/smallrye-reactive-messaging-api/latest/org/eclipse/microprofile/reactive/messaging/Message.html[`Message`] wraps a _payload_ and can be extended with some _metadata_.\n"
"This should not be confused with a Pulsar https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/client/api/Message.html[`Message`], which consists of value, key\n"
"With the Pulsar connector, a Reactive Messaging _message_ corresponds to a Pulsar _message_."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Channels are connected to message backends using *connectors*.\n"
"Connectors are configured to map incoming messages to a specific channel (consumed by the application) and collect outgoing messages sent to a specific channel.\n"
"Each connector is dedicated to a specific messaging technology.\n"
"For example, the connector dealing with Pulsar is named `smallrye-pulsar`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Configure the Pulsar broker service url for the production profile.\n"
"You can configure it globally or per channel using `mp.messaging.incoming.$channel.serviceUrl` property.\n"
"In dev mode and when running tests, xref:pulsar-dev-services[Dev Services for Pulsar] automatically starts a Pulsar broker."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Configure the connector to manage the prices channel.\n"
"By default, the _topic_ name is same as the channel name."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If you have a single connector on your classpath, you can omit the `connector` attribute configuration.\n"
"Quarkus automatically associates _orphan_ channels to the (unique) connector found on the classpath.\n"
"_Orphan_ channels are outgoing channels without a downstream consumer or incoming channels without an upstream producer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar Connector connects to a Pulsar broker using a Pulsar client and creates consumers to\n"
"receive messages from Pulsar brokers, and it maps each Pulsar `Message` into Reactive Messaging `Message`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Let’s imagine you have a Pulsar broker running, and accessible using the `pulsar:6650` address.\n"
"Configure your application to receive Pulsar messages on the `prices` channel as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"You don’t need to set the Pulsar topic, nor the consumer name.\n"
"By default, the connector uses the channel name (`prices`).\n"
"You can configure the `topic` and `consumerName` attributes to override them."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"In Pulsar, consumers need to provide a `subscriptionName` for topic subscriptions.\n"
"If not provided the connector generates a unique **subscription name**."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"When consuming messages with `@Channel`, the application code is responsible for the subscription.\n"
"In the example above, the RESTEasy Reactive endpoint handles that for you."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"As with the previous `Message` example, if your injected channel receives payloads (`Multi<T>`), it acknowledges the message automatically, and support multiple subscribers.\n"
"If your injected channel receives Message (`Multi<Message<T>>`), you will be responsible for the acknowledgment and broadcasting."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Reactive Messaging invokes your method on an I/O thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you often need to combine Reactive Messaging with blocking processing such as database interactions.\n"
"For this, you need to use the `@Blocking` annotation indicating that the processing is _blocking_ and should not be run on the caller thread."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"They have the same effect.\n"
"Thus, you can use both.\n"
"The first one provides more fine-grained tuning such as the worker pool to use and whether it preserves the order.\n"
"The second one, used also with other reactive features of Quarkus, uses the default worker pool and preserves the order."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid "*Exclusive* subscription type allows specifying a _unique subscription name_ for \"fan-out pub-sub messaging\". This is the default subscription type."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid "*Shared*, *Key_Shared* or *Failover* subscription types allow multiple consumers to share the _same subscription name_, to achieve \"message queuing\" among consumers."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar Connector allows configuring Schema configuration for the underlying Pulsar consumer.\n"
"See the xref:pulsar-schema-configuration[Pulsar Schema Configuration & Auto Schema Discovery] for more information."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"When a message produced from a Pulsar Message is *acknowledged*, the connector sends an https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment[acknowledgement request] to the Pulsar broker.\n"
"All Reactive Messaging messages need to be *acknowledged*, which is handled automatically in most cases.\n"
"Acknowledgement requests can be sent to the Pulsar broker using the following two strategies:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid "**Individual acknowledgement** is the default strategy, an acknowledgement request is to the broker for each message."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"**Cumulative acknowledgement**, configured using `ack-strategy=cumulative`, the consumer only acknowledges the last message it received.\n"
"All messages in the stream up to (and including) the provided message are not redelivered to that consumer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"By default, the Pulsar consumer does not wait for the acknowledgement confirmation from the broker to validate an acknowledgement.\n"
"You can enable this using `ackReceiptEnabled=true`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If a message produced from a Pulsar message is *nacked*, a failure strategy is applied.\n"
"The Quarkus Pulsar extension supports 4 strategies:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"`nack` *(default)* sends https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#negative-acknowledgment[negative acknowledgment] to the broker, triggering the broker to redeliver this message to the consumer.\n"
"The negative acknowledgment can be further configured using `negativeAckRedeliveryDelayMicros` and `negativeAck.redeliveryBackoff` properties."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"`reconsume-later` sends the message to the https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[retry letter topic] using the `reconsumeLater` API to be reconsumed with a delay.\n"
"The delay can be configured using the `reconsumeLater.delay` property and defaults to 3 seconds.\n"
"Custom delay or properties per message can be configured by adding an instance of `io.smallrye.reactive.messaging.pulsar.PulsarReconsumeLaterMetadata` to the failure metadata."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Similar to the negative acknowledgement, with the https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment-timeout[acknowledgement timeout] mechanism, the Pulsar client tracks the unacknowledged messages,\n"
"for the given *ackTimeout* period and sends *redeliver unacknowledged messages request* to the broker, thus the broker resends the unacknowledged messages to the consumer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"To configure the timeout and redelivery backoff mechanism you can set `ackTimeoutMillis` and `ackTimeout.redeliveryBackoff` properties.\n"
"The `ackTimeout.redeliveryBackoff` value accepts comma separated values of min delay in milliseconds, max delay in milliseconds and multiplier respectively:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[retry letter topic] pushes messages that are not consumed successfully to a dead letter topic and continue message consumption.\n"
"Note that dead letter topic can be used in different message redelivery methods, such as acknowledgment timeout, negative acknowledgment or retry letter topic."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#dead-letter-topic[dead letter topic] pushes messages that are not consumed successfully to a dead letter topic an continue message consumption.\n"
"Note that dead letter topic can be used in different message redelivery methods, such as acknowledgment timeout, negative acknowledgment or retry letter topic."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"*Negative acknowledgment* or *acknowledgment timeout* methods for redelivery will redeliver the whole batch of messages containing at least an unprocessed message.\n"
"See xref:producer-batching[Producer Batching] for more information."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"By default, incoming methods receive each Pulsar message individually.\n"
"You can enable batch mode using `batchReceive=true` property, or setting a `batchReceivePolicy` in consumer configuration."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Quarkus auto-detects batch types for incoming channels and sets batch configuration automatically.\n"
"You can configure batch mode explicitly with `mp.messaging.incoming.$channel.batchReceive` property."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Let’s imagine you have a Pulsar broker running, and accessible using the `pulsar:6650` address.\n"
"Configure your application to write the messages from the `prices` channel into a Pulsar Messages as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"You don’t need to set the Pulsar topic, nor the producer name.\n"
"By default, the connector uses the channel name (`prices`).\n"
"You can configure the `topic` and `producerName` attributes to override them."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Then, your application must send `Message<Double>` to the `prices`\n"
"channel. It can use `double` payloads as in the following snippet:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Note that the generate method returns a `Multi<Double>`, which implements the `Flow.Publisher` interface.\n"
"This publisher will be used by the framework to generate messages and send them to the configured Pulsar topic."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"When sending `Messages`, you can add an instance of\n"
"`io.smallrye.reactive.messaging.pulsar.PulsarOutgoingMessageMetadata` to influence how the message is going to be written to Pulsar."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Other than method signatures returning a `Flow.Publisher`, outgoing method can also return single message.\n"
"In this case the producer will use this method as generator to create an infinite stream."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar Connector allows configuring Schema configuration for the underlying Pulsar producer.\n"
"See the xref:pulsar-schema-configuration[Pulsar Schema Configuration & Auto Schema Discovery] for more information."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"In order to send Kev/Value pairs to Pulsar, you can configure the Pulsar producer Schema with a\n"
"https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/KeyValue.html[KeyValue] schema."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Upon receiving a message from a Producer, a Pulsar broker assigns a `MessageId` to the message and sends it back to the producer,\n"
"confirming that the message is published."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"By default, the connector does wait for Pulsar to acknowledge the record\n"
"to continue the processing (acknowledging the received `Message`).\n"
"You can disable this by setting the `waitForWriteCompletion` attribute to `false`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar client automatically retries sending messages in case of failure, until the *send timeout* is reached.\n"
"The *send timeout* is configurable with `sendTimeoutMs` attribute and by default is 30 seconds."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar outbound connector handles back-pressure, monitoring the number of pending messages waiting to be written to the Pulsar broker.\n"
"The number of pending messages is configured using the `maxPendingMessages` attribute and defaults to 1000."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The connector only sends that amount of messages concurrently.\n"
"No other messages will be sent until at least one pending message gets acknowledged by the broker.\n"
"Then, the connector writes a new message to Pulsar when one of the broker’s pending messages get acknowledged."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"You can also remove the limit of pending messages by setting `maxPendingMessages` to `0`.\n"
"Note that Pulsar also enables to configure the number of pending messages per partition using `maxPendingMessagesAcrossPartitions`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"By default, the Pulsar producer batches individual messages together to be published to the broker.\n"
"You can configure batching parameters using `batchingMaxPublishDelayMicros`, `batchingPartitionSwitchFrequencyByPublishDelay`,\n"
"`batchingMaxMessages`, `batchingMaxBytes` configuration properties, or disable it completely with `batchingEnabled=false`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The function given to the `withTransaction` method receives a `TransactionalEmitter` for producing records, and returns a `Uni` that provides the result of the transaction.\n"
"If the processing completes successfully, the producer is flushed and the transaction is committed.\n"
"If the processing throws an exception, returns a failing `Uni`, or marks the `TransactionalEmitter` for abort, the transaction is aborted."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Multiple transactional producers can participate in a single transaction.\n"
"This ensures all messages are sent using the started transaction and before the transaction is committed, all participating producers are flushed."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If this method is called on a Vert.x context, the processing function is also called on that context.\n"
"Otherwise, it is called on the sending thread of the producer."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Pulsar Transactions API also allows managing consumer offsets inside a transaction, together with produced messages.\n"
"This in turn enables coupling a consumer with a transactional producer in a consume-transform-produce pattern,\n"
"also known as exactly-once processing.\n"
"It means that an application consumes messages, processes them, publishes the results to a topic, and commits offsets of the consumed messages in a transaction."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If the processing needs to abort, the message is nack'ed. One of the failure strategies can be employed in order to retry the processing or simply fail-stop.\n"
"Note that the `Uni` returned from the `withTransaction` will yield a failure if the transaction fails and is aborted."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The application can choose to handle the error case, but for the message consumption to continue, `Uni` returned from the `@Incoming` method must not result in failure.\n"
"`PulsarTransactions#withTransactionAndAck` method will ack and nack the message but will not stop the reactive stream.\n"
"Ignoring the failure simply resets the consumer to the last committed offsets and resumes the processing from there."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Pulsar messages are stored with payloads as unstructured byte array.\n"
"A Pulsar **schema** defines how to serialize structured data to the raw message bytes.\n"
"The **schema** is applied in producers and consumers to write and read with an enforced data structure.\n"
"It serializes data into raw bytes before they are published to a topic and deserializes the raw bytes before they are delivered to consumers."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Pulsar uses a schema registry as a central repository to store the registered schema information,\n"
"which enables producers/consumers to coordinate the schema of a topic's messages through brokers.\n"
"By default the Apache BookKeeper is used to store schemas."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Pulsar API provides built-in schema information for a number of\n"
"https://pulsar.apache.org/docs/3.0.x/schema-understand#primitive-type[primitive types]\n"
"and https://pulsar.apache.org/docs/3.0.x/schema-understand#complex-type[complex types] such as Key/Value, Avro and Protobuf."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If the value for the `schema` property matches a https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/SchemaType.html[Schema Type]\n"
"a simple schema will be created with that type and will be used for that channel."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"If no `schema` property is found, the connector looks for `Schema` beans identified with the channel name.\n"
"For example, the outgoing channel `a-channel` will use the key/value schema."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"When using SmallRye Reactive Messaging Pulsar (`io.quarkus:quarkus-smallrye-reactive-messaging-pulsar`), Quarkus can often automatically detect the correct Pulsar Schema to configure.\n"
"This autodetection is based on declarations of `@Incoming` and `@Outgoing` methods, as well as injected ``@Channel``s."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid "and your configuration indicates that the `generated-price` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` attribute of the  `generated-price` channel to Pulsar Schema `INT32`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"For schema-less Json serialization, if the `schema` configuration is set to `ObjectMapper<fully_qualified_name_of_the_bean>`,\n"
"a Schema will be generated using the Jackson `ObjectMapper`, without enforcing a Pulsar Schema validation.\n"
"`io.quarkus.pulsar.schema.ObjectMapperSchema` can be used to explicitly configure JSON schema without validation."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"In case you have any issues with serializer auto-detection, you can switch it off completely by setting `quarkus.reactive-messaging.pulsar.serializer-autodetection.enabled=false`.\n"
"If you find you need to do this, please file a bug in the link:https://github.com/quarkusio/quarkus/issues[Quarkus issue tracker] so we can fix whatever problem you have."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Pulsar connector creates a Pulsar client and, a consumer or a producer per channel, each with sensible defaults to ease their configuration.\n"
"Although the creation is handled, all available configuration options remain configurable through Pulsar channels."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"While idiomatic way of creating `PulsarClient`, `PulsarConsumer` or `PulsarProducer` are through builder APIs, in its essence\n"
"those APIs build each time a configuration object, to pass onto the implementation.\n"
"Those are https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ClientConfigurationData.html[ClientConfigurationData],\n"
"https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.html[ConsumerConfigurationData]\n"
"and https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.html[ProducerConfigurationData]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Pulsar Connector allows receiving properties for those configuration objects directly.\n"
"For example, the broker authentication information for `PulsarClient` is received using `authPluginClassName` and `authParams` properties.\n"
"In order to configure the authentication for the incoming channel `data` :"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"This approach covers most of the configuration cases.\n"
"However, non-serializable objects such as `CryptoKeyReader`, `ServiceUrlProvider` etc. cannot be configured this way.\n"
"The Pulsar Connector allows taking into account instances of Pulsar configuration data objects –\n"
"`ClientConfigurationData`, `ConsumerConfigurationData`, `ProducerConfigurationData`:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"This instance is retrieved and used to configure the client used by the connector.\n"
"You need to indicate the name of the client using the `client-configuration`, `consumer-configuration` or `producer-configuration` attributes:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Luna Streaming is a production-ready distribution of Apache Pulsar, with tools and support from DataStax.\n"
"After creating your DataStax Luna Pulsar tenant, note the auto generated token, and configure the token authentication:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"StreamNative Cloud is a fully managed Pulsar-as-a-Service available in different deployment options,\n"
"whether it is fully-hosted, on a public cloud but managed by StreamNative or self-managed on Kubernetes."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The StreamNative Pulsar clusters use Oauth2 authentication,\n"
"so you need to make sure that a https://docs.streamnative.io/docs/service-account[service account] exists with\n"
"required https://docs.streamnative.io/docs/access-control#authorize-namespaces[permissions to the Pulsar namespace/topic] your application is using."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Next, you need to download the **Key file** (which serves as **private key**) of the service account and note the **issuer URL** (typically `https://auth.streamnative.cloud/`)\n"
"and the **audience** (for example `urn:sn:pulsar:o-rf3ol:redhat`) for your cluster.\n"
"The **Pulsar Clients** page in the **Admin** section in the StreamNative Cloud console helps you with this process."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The Quarkus extension reports startup, readiness and liveness of each channel managed by the Pulsar connector.\n"
"Health checks rely on the Pulsar client to verify that a connection is established with the broker."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"**Startup** and **Readiness** probes for both inbound and outbound channels report *OK* when the\n"
"connection with the broker is established."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"The **Liveness** probe for both inbound and outbound channels reports *OK*  when the\n"
"connection is established with the broker **AND** that no failures have been caught."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Note that a message processing failures *nacks* the message which is\n"
"then handled by the failure-strategy. It is the responsibility of the\n"
"failure-strategy to report the failure and influence the outcome of the\n"
"liveness checks. The `fail` failure strategy reports the failure and so\n"
"the liveness check will report the failure."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Following are the list of configuration attributes for the Pulsar connector channels, consumers, producers and clients.\n"
"See the xref:pulsar-client-configuration[Pulsar Client Configuration] for more information on how the Pulsar clients are configured."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"Following is the configuration reference for the underlying `PulsarClient`.\n"
"These options can be configured using the channel attribute:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/pulsar.adoc
msgid ""
"This guide has shown how you can interact with Pulsar using Quarkus.\n"
"It utilizes SmallRye Reactive Messaging to build data streaming applications."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/pulsar.adoc:6
#, fuzzy, no-wrap
msgid "Apache Pulsar Reference Guide"
msgstr "アパッチ・パルサー・リファレンス・ガイド"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:15
#, fuzzy
msgid "This reference guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with Apache Pulsar."
msgstr "このリファレンス・ガイドでは、QuarkusアプリケーションがSmallRye Reactive Messagingを利用してApache Pulsarとやり取りする方法を説明します。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:16
#, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:22
#, fuzzy
msgid "Pulsar implements the publish-subscribe pattern:"
msgstr "Pulsarはパブリッシュ-サブスクライブ・パターンを実装しています："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:24
#, fuzzy
msgid "Producers publish messages to _topics_."
msgstr "プロデューサーは _トピックに_ メッセージを公開する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:25
#, fuzzy
msgid "Consumers create _subscriptions_ to those topics to receive and process incoming messages, and send _acknowledgments_ to the broker when processing is finished."
msgstr "コンシューマはこれらのトピックに _サブスクリプションを_ 作成し、着信メッセージを受信して処理し、処理が終了するとブローカに _確認応答を_ 送信する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:29
#, fuzzy
msgid "A Pulsar cluster consists of"
msgstr "パルサー群"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:31
#, fuzzy
msgid "One or more _brokers_, which are stateless components."
msgstr "ステートレス・コンポーネントである1つ以上の _ブローカー_ 。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:32
#, fuzzy
msgid "A _metadata store_ for maintaining topic metadata, schema, coordination and cluster configuration."
msgstr "トピックのメタデータ、スキーマ、コーディネーション、クラスタ構成を管理するための _メタデータストア_ 。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:33
#, fuzzy
msgid "A set of _bookies_ used for persistent storage of messages."
msgstr "メッセージの永続的な保存に使用される _ブッキーの_ セット。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:34
#, fuzzy, no-wrap
msgid "Quarkus Extension for Apache Pulsar"
msgstr "Apache Pulsar用Quarkusエクステンション"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:46
#, fuzzy
msgid "You can add the `smallrye-reactive-messaging-pulsar` extensions to your project by running the following command in your project base directory:"
msgstr "プロジェクトのベース・ディレクトリで以下のコマンドを実行すれば、 `smallrye-reactive-messaging-pulsar` のエクステンションをプロジェクトに追加できる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:51
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:53
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:62
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:70
#, fuzzy
msgid "The extension includes `pulsar-clients-original` version 3.0.0 as a transitive dependency and is compatible with Pulsar brokers version 2.10.x."
msgstr "このエクステンションは、 `pulsar-clients-original` バージョン3.0.0を相互依存関係として含み、パルサー・ブローカー・バージョン2.10.xと互換性があります。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:72
#, fuzzy, no-wrap
msgid "Configuring Smallrye Pulsar Connector"
msgstr "SmallRyeパルサーコネクターの設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:75
#, fuzzy
msgid "Because Smallrye Reactive Messaging framework supports different messaging backends like Apache Kafka, Apache Pulsar, AMQP, Apache Camel, JMS, MQTT, etc., it employs a generic vocabulary:"
msgstr "SmallRye Reactive Messagingフレームワークは、Apache Kafka、Apache Pulsar、AMQP、Apache Camel、JMS、MQTTなど、さまざまなメッセージング・バックエンドをサポートしているため、汎用的な語彙を採用しています："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:80
#, fuzzy
msgid "Messages transit on *channels*. Application components connect to channels to publish and consume messages. The Pulsar connector maps _channels_ to Pulsar _topics_."
msgstr "メッセージは *チャネルを* 経由する。アプリケーション・コンポーネントはチャネルに接続し、メッセージの公開と消費を行います。Pulsarコネクタは、 _チャネルを_ Pulsar _トピックに_ マッピングします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:86
#, fuzzy
msgid "A minimal configuration for the Pulsar connector with an incoming channel looks like the following:"
msgstr "着信チャンネルを持つパルサー・コネクターの最小コンフィギュレーションは以下のようになります："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:100
#, fuzzy
msgid "You can configure the topic attribute to override it."
msgstr "トピック属性を設定することで、それを上書きすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:102
msgid "The `%prod` prefix indicates that the property is only used when the application runs in prod mode (so not in dev or test). Refer to the xref:config-reference.adoc#profiles[Profile documentation] for further details."
msgstr "`%prod` 接頭辞は、アプリケーションが prod モードで実行されている場合にのみプロパティーが使用されることを示します (つまり、dev または test モードでは使用されません)。詳細は、xref:config-reference.adoc#profiles[プロファイルに関するドキュメント] を参照してください。"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:104
#, no-wrap
msgid "Connector auto-attachment"
msgstr "コネクターの自動アタッチ"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:111
msgid "This auto-attachment can be disabled using:"
msgstr "この自動アタッチは、以下を使用して無効にできます。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:119
#, fuzzy
msgid "For more configuration options see xref:configuring-pulsar-clients[Configuring Pulsar clients]."
msgstr "その他の設定オプションについては、 xref:configuring-pulsar-clients[Pulsarクライアントの設定を] ご覧ください。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:121
#, fuzzy, no-wrap
msgid "Receiving messages from Pulsar"
msgstr "パルサーからのメッセージ受信"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:126
#: upstream/_versions/main/guides/pulsar.adoc:460
#, no-wrap
msgid "Example"
msgstr "例"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:138
#: upstream/_versions/main/guides/pulsar.adoc:471
#, fuzzy
msgid "Configure the Pulsar broker service url."
msgstr "Pulsarブローカー・サービスのURLを設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:139
#, fuzzy
msgid "Make sure consumer subscription starts receiving messages from the `Earliest` position."
msgstr "コンシューマのサブスクリプションが `Earliest` の位置からメッセージの受信を開始することを確認する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:154
#, fuzzy
msgid "Then, your application can receive the `double` payload directly:"
msgstr "そうすれば、アプリケーションは `double` ペイロードを直接受け取ることができる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:173
#, fuzzy
msgid "Or, you can retrieve the Reactive Messaging type `Message<Double>`:"
msgstr "または、リアクティブ・メッセージング・タイプ `Message<Double>` を取得することもできます："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:188
#, fuzzy
msgid "The Reactive Messaging `Message` type lets the consuming method access the incoming message metadata and handle the acknowledgment manually."
msgstr "Reactive Messaging `Message` タイプは、コンシューマメソッドが受信メッセージのメタデータにアクセスし、確認応答を手動で処理することを可能にします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:190
#, fuzzy
msgid "If you want to access the Pulsar message objects directly, use:"
msgstr "パルサー・メッセージ・オブジェクトに直接アクセスしたい場合は、以下を使用する："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:203
#, fuzzy
msgid "`org.apache.pulsar.client.api.Message` is provided by the underlying Pulsar client and can be used directly with the consumer method."
msgstr "`org.apache.pulsar.client.api.Message` は、基礎となるPulsarクライアントによって提供され、コンシューマー・メソッドで直接使うことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:206
#, fuzzy
msgid "Alternatively, your application can inject a `Multi` in your bean, identified with the channel name and subscribe to its events as the following example:"
msgstr "あるいは、アプリケーションは、次の例のように、チャネル名で識別され、そのイベントをサブスクライブするBeanに `Multi` ："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:242
msgid "Following types can be injected as channels:"
msgstr "チャンネルとして注入できるのは、以下のタイプです。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:258
#, no-wrap
msgid "Blocking processing"
msgstr "ブロッキング処理"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:266
msgid "For example, The following code illustrates how you can store incoming payloads to a database using Hibernate with Panache:"
msgstr "例えば、以下のコードは、Hibernate with Panacheを 使用してデータベースに受信ペイロードを格納する方法を示しています。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:292
msgid "There are 2 `@Blocking` annotations:"
msgstr "`@Blocking` アノテーションは 2 つあります。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:294
msgid "`io.smallrye.reactive.messaging.annotations.Blocking`"
msgstr "`io.smallrye.reactive.messaging.annotations.Blocking`"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:295
msgid "`io.smallrye.common.annotation.Blocking`"
msgstr "`io.smallrye.common.annotation.Blocking`"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:302
msgid "Detailed information on the usage of `@Blocking` annotation can be found in https://smallrye.io/smallrye-reactive-messaging/latest/concepts/blocking/[SmallRye Reactive Messaging – Handling blocking execution]."
msgstr "`@Blocking` アノテーションの使用法の詳細については、 https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.1/advanced/blocking.html[SmallRye Reactive Messaging – Handling blocking execution] を参照してください。"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:305
#, fuzzy, no-wrap
msgid "@RunOnVirtualThread"
msgstr "RunOnVirtualThread"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:308
#, fuzzy
msgid "For running the blocking processing on Java _virtual threads_, see the xref:messaging-virtual-threads.adoc[Quarkus Virtual Thread support with Reactive Messaging documentation]."
msgstr "Java _仮想スレッドでの_ ブロッキング処理の実行については、 xref:messaging-virtual-threads.adoc[Quarkus Virtual Thread support with Reactive Messagingのドキュメントを] 参照してください。"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:311
#, no-wrap
msgid "@Transactional"
msgstr "@Transactional"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:314
msgid "If your method is annotated with `@Transactional`, it will be considered _blocking_ automatically, even if the method is not annotated with `@Blocking`."
msgstr "メソッドに `@Transactional` アノテーションが付けられている場合、メソッドに `@Blocking` アノテーションが付けられていなくても、自動的に _blocking_ と見なされます。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:316
#, fuzzy, no-wrap
msgid "Pulsar Subscription Types"
msgstr "パルサー・サブスクリプション・タイプ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:319
#, fuzzy
msgid "Pulsar *subscriptionType* consumer configuration can be used flexibly to achieve different messaging scenarios, such as publish-subscribe or queuing."
msgstr "Pulsar *subscriptionType* コンシューマ構成は、パブリッシュ-サブスクライブやキューイングなど、様々なメッセージング・シナリオを実現するために柔軟に使用することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:324
#, fuzzy
msgid "If a subscription name is not provided Quarkus generates a unique id."
msgstr "サブスクリプション名が指定されない場合、Quarkusは一意のIDを生成します。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:325
#, fuzzy, no-wrap
msgid "Deserialization and Pulsar Schema"
msgstr "デシリアライズとパルサースキーマ"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:330
#, fuzzy, no-wrap
msgid "Acknowledgement Strategies"
msgstr "謝辞の戦略"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:346
#, fuzzy, no-wrap
msgid "Failure Handling Strategies"
msgstr "故障処理戦略"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:354
#, fuzzy
msgid "`fail` fail the application, no more messages will be processed."
msgstr "`fail` アプリケーションを終了すると、メッセージは処理されなくなる。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:355
#, fuzzy
msgid "`ignore` the failure is logged, but the acknowledgement strategy will be applied and the processing will continue."
msgstr "`ignore` の場合、失敗は記録されるが、確認ストラテジーが適用され、処理は続行される。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:356
#, fuzzy
msgid "`continue` the failure is logged, but processing continues without applying acknowledgement or negative acknowledgement. This strategy can be used with xref:ack-timeout[Acknowledgement timeout] configuration."
msgstr "`continue` の場合、失敗はログに記録されるが、確認応答や否定応答は適用されずに処理が続行される。この戦略は、 xref:ack-timeout[肯定応答タイムアウト] 設定と一緒に使うことができる。"

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:361
#, fuzzy, no-wrap
msgid "Acknowledgement timeout"
msgstr "確認タイムアウト"

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:376
#, fuzzy, no-wrap
msgid "Reconsume later and retry letter topic"
msgstr "後で再開し、手紙のトピックに再挑戦する"

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:389
#, fuzzy, no-wrap
msgid "Dead-letter topic"
msgstr "デッドレターの話題"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:409
#, fuzzy, no-wrap
msgid "Receiving Pulsar Messages in Batches"
msgstr "パルサー・メッセージの一括受信"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:439
#, fuzzy
msgid "Or you can directly receive the list of payloads to the consume method:"
msgstr "あるいは、ペイロードのリストを直接consumeメソッドに受け取ることもできる："

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:456
#, fuzzy, no-wrap
msgid "Sending messages to Pulsar"
msgstr "パルサーにメッセージを送る"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:459
#, fuzzy
msgid "The Pulsar Connector can write Reactive Messaging Messages as Pulsar Message."
msgstr "Pulsar Connectorはリアクティブ・メッセージング・メッセージをPulsarメッセージとして書き込むことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:511
#, fuzzy
msgid "Instead of returning a payload, you can return a `io.smallrye.reactive.messaging.pulsar.OutgoingMessage` to send Pulsar messages:"
msgstr "ペイロードを返す代わりに、 `io.smallrye.reactive.messaging.pulsar.OutgoingMessage` 、パルサー・メッセージを送ることができます："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:522
msgid "Payload can be wrapped inside `org.eclipse.microprofile.reactive.messaging.Message` to have more control on the written records:"
msgstr "ペイロードを `org.eclipse.microprofile.reactive.messaging.Message` 内にラップして、書き込まれたレコードをより詳細に制御できます。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:557
#, fuzzy, no-wrap
msgid "Serialization and Pulsar Schema"
msgstr "シリアライゼーションとパルサー・スキーマ"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:562
#, fuzzy, no-wrap
msgid "Sending key/value pairs"
msgstr "キーと値のペアの送信"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:598
#, fuzzy
msgid "If you need more control on the written records, use `PulsarOutgoingMessageMetadata`."
msgstr "文書による記録をさらに管理する必要がある場合は、 `PulsarOutgoingMessageMetadata` 。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:599
#, no-wrap
msgid "Acknowledgement"
msgstr "確認"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:609
#, fuzzy
msgid "If a record cannot be written, the message is `nacked`."
msgstr "レコードを書き込めない場合、メッセージは `nacked` となる。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:616
#, fuzzy, no-wrap
msgid "Back-pressure and inflight records"
msgstr "背圧と機内記録"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:629
#, fuzzy, no-wrap
msgid "Producer Batching"
msgstr "生産者バッチ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:636
#, fuzzy
msgid "When using `Key_Shared` consumer subscriptions, the `batcherBuilder` can be configured to `BatcherBuilder.KEY_BASED`."
msgstr "`Key_Shared` コンシューマー・サブスクリプションを使用する場合、 `batcherBuilder` を `BatcherBuilder.KEY_BASED` に設定することができる。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:637
#, fuzzy, no-wrap
msgid "Pulsar Transactions and Exactly-Once Processing"
msgstr "パルサー・トランザクションと完全一回処理"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:640
#, fuzzy
msgid "https://pulsar.apache.org/docs/3.0.x/txn-why/[Pulsar transactions] enable event streaming applications to consume, process, and produce messages in one atomic operation."
msgstr "link:https://pulsar.apache.org/docs/3.0.x/txn-why/[Pulsarトランザクションは] 、イベント・ストリーミング・アプリケーションが、1つのアトミック操作でメッセージを消費、処理、生成することを可能にします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:642
#, fuzzy
msgid "Transactions allow one or multiple producers to send batch of messages to multiple topics where all messages in the batch are eventually visible to any consumer, or none is ever visible to consumers."
msgstr "トランザクションは、1つまたは複数のプロデューサが複数のトピックにメッセージのバッチを送信することを可能にし、バッチ内のすべてのメッセージは、最終的にどのコンシューマにも表示されるか、またはコンシューマには何も表示されません。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:646
#, fuzzy
msgid "In order to be used, transaction support needs to be activated on the broker configuration, using `transactionCoordinatorEnabled=true` and `systemTopicEnabled=true` broker configuration."
msgstr "使用するためには、 `transactionCoordinatorEnabled=true` と `systemTopicEnabled=true` ブローカー・コンフィギュレーションを使用して、ブローカー・コンフィギュレーション上でトランザクション・サポートを有効化する必要がある。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:649
#, fuzzy
msgid "On the client side, the transaction support also needs to be enabled on `PulsarClient` configuration:"
msgstr "クライアント側でも、 `PulsarClient` の設定でトランザクション・サポートを有効にする必要がある："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:656
#, fuzzy
msgid "Pulsar connector provides `PulsarTransactions` custom emitter for writing records inside a transaction."
msgstr "Pulsarコネクタは、トランザクション内のレコードを書き込むための `PulsarTransactions` カスタム・エミッターを提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:658
#, fuzzy
msgid "It can be used as a regular emitter `@Channel`:"
msgstr "通常のエミッターとしても使用できる `@Channel` ："

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:714
#, no-wrap
msgid "Exactly-Once Processing"
msgstr "Exactly-Once 処理"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:722
#, fuzzy
msgid "The `PulsarTransactions` emitter also provides a way to apply exactly-once processing to an incoming Pulsar message inside a transaction."
msgstr "`PulsarTransactions` エミッターはまた、トランザクションの中で、受信したパルサー・メッセージにジャストワンス処理を適用する方法を提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:724
#, fuzzy
msgid "The following example includes a batch of Pulsar messages inside a transaction."
msgstr "以下の例は、トランザクションの中にPulsarメッセージのバッチを含んでいます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:769
#, fuzzy
msgid "If the processing completes successfully, the message is acknowledged inside the transaction and the transaction is committed."
msgstr "処理が正常に完了すると、メッセージはトランザクション内で承認され、トランザク ションはコミットされる。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:773
#, fuzzy
msgid "When using exactly-once processing, messages can only be acked individually rather than cumulatively."
msgstr "exactly-once 処理を使う場合、メッセージは累積的にではなく、個別にしかアックできない。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:785
#, fuzzy
msgid "In order to avoid duplicates in case of failure, it is recommended to enable message deduplication and batch index level acknowledgment on the broker side:"
msgstr "障害時の重複を避けるため、ブローカー側でメッセージの重複排除とバッチ・インデックス・レベルの確認応答を有効にすることを推奨する："

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:797
#, fuzzy, no-wrap
msgid "Pulsar Schema Configuration & Auto Schema Discovery"
msgstr "Pulsarスキーマ構成 & 自動スキーマ検出"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:813
#, fuzzy
msgid "The Pulsar Connector allows specifying the schema as a primitive type using the `schema` property:"
msgstr "Pulsar Connectorでは、 `schema` プロパティを使用して、スキーマをプリミティブ・タイプとして指定することができます："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:827
#, fuzzy
msgid "The Pulsar Connector allows configuring complex schema types by providing `Schema` beans through CDI, identified with the `@Identifier` qualifier."
msgstr "Pulsar Connectorは、 `@Identifier` 修飾子で識別された `Schema` BeanをCDIを通して提供することで、複雑なスキーマ・タイプを構成することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:829
#, fuzzy
msgid "For example the following bean provides an JSON schema and a Key/Value schema:"
msgstr "例えば、以下のBeanはJSONスキーマとKey/Valueスキーマを提供します："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:865
#, fuzzy
msgid "To configure the incoming channel `users` with defined schema, you need to set the `schema` property to the identifier of the schema `user-schema`:"
msgstr "受信チャンネル `users` を定義されたスキーマで設定するには、 `schema` プロパティをスキーマの識別子 `user-schema` に設定する必要がある："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:881
#, fuzzy
msgid "If no schema information is provided incoming channels will use `Schema.AUTO_CONSUME()`, whereas outgoing channels will use `Schema.AUTO_PRODUCE_BYTES()` schemas."
msgstr "スキーマ情報が提供されない場合、受信チャンネルは `Schema.AUTO_CONSUME()` を使用し、送信チャンネルは `Schema.AUTO_PRODUCE_BYTES()` スキーマを使用する。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:882
#, fuzzy, no-wrap
msgid "Auto Schema Discovery"
msgstr "自動スキーマ検出"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:888
msgid "For example, if you declare"
msgstr "たとえば、以下のように宣言した場合"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:900
msgid "Similarly, if you declare"
msgstr "同様に、以下を宣言した場合"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:910
#, fuzzy
msgid "and your configuration indicates that the `my-pulsar-consumer` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` attribute to Pulsar `BYTES` Schema."
msgstr "コンフィギュレーションが、 `my-pulsar-consumer` チャンネルが `smallrye-pulsar` コネクタを使用することを示している場合、Quarkusは自動的に `schema` 属性をPulsar `BYTES` Schemaに設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:912
msgid "Finally, if you declare"
msgstr "最後に、以下を宣言した場合"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:921
#, fuzzy
msgid "and your configuration indicates that the `price-create` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` to Pulsar `INT64` Schema."
msgstr "設定が、 `price-create` チャンネルが `smallrye-pulsar` コネクタを使用することを示している場合、Quarkusは自動的に `schema` をPulsar `INT64` Schemaに設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:923
#, fuzzy
msgid "The full set of types supported by the Pulsar Schema autodetection is:"
msgstr "パルサー・スキーマ自動検出がサポートする型は以下の通り："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:925
msgid "`short` and `java.lang.Short`"
msgstr "`short` および `java.lang.Short`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:926
msgid "`int` and `java.lang.Integer`"
msgstr "`int` および `java.lang.Integer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:927
msgid "`long` and `java.lang.Long`"
msgstr "`long` および `java.lang.Long`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:928
msgid "`float` and `java.lang.Float`"
msgstr "`float` および `java.lang.Float`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:929
msgid "`double` and `java.lang.Double`"
msgstr "`double` および`java.lang.Double`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:930
msgid "`byte[]`"
msgstr "`byte[]`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:931
#, fuzzy
msgid "`java.time.Instant`"
msgstr "`java.time.Instant`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:932
#, fuzzy
msgid "`java.sql.Timestamp`"
msgstr "`java.sql.Timestamp`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:933
#, fuzzy
msgid "`java.time.LocalDate`"
msgstr "`java.time.LocalDate`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:934
#, fuzzy
msgid "`java.time.LocalTime`"
msgstr "`java.time.LocalTime`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:935
#, fuzzy
msgid "`java.time.LocalDateTime`"
msgstr "`java.time.LocalDateTime`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:936
msgid "`java.nio.ByteBuffer`"
msgstr "`java.nio.ByteBuffer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:937
#, fuzzy
msgid "classes generated from Avro schemas, as well as Avro `GenericRecord`, will be configured with `AVRO` schema type"
msgstr "Avro スキーマから生成されたクラスは、Avro `GenericRecord` と同様に、 `AVRO` スキーマタイプで構成されます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:938
#, fuzzy
msgid "classes generated from Protobuf schemas, will be configured with `PROTOBUF` schema type"
msgstr "Protobuf スキーマから生成されたクラスは、 `PROTOBUF` スキーマタイプで構成されます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:939
#, fuzzy
msgid "other classes will automatically be configured with `JSON` schema type"
msgstr "他のクラスは自動的に `JSON` スキーマタイプで構成されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:943
#, fuzzy
msgid "Note that `JSON` schema type enforces schema validation."
msgstr "`JSON` スキーマ・タイプはスキーマ検証を強制することに注意。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:946
#, fuzzy
msgid "In addition to those Pulsar-provided schemas, Quarkus provides following schema implementations _without enforcing validation_ :"
msgstr "Pulsarが提供するスキーマに加え、Quarkusは以下のスキーマ実装を提供しています _：_"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:948
#, fuzzy
msgid "`io.vertx.core.buffer.Buffer` will be configured with `io.quarkus.pulsar.schema.BufferSchema` schema"
msgstr "`io.vertx.core.buffer.Buffer` は スキーマで構成されます。 `io.quarkus.pulsar.schema.BufferSchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:949
#, fuzzy
msgid "`io.vertx.core.json.JsonObject` will be configured with `io.quarkus.pulsar.schema.JsonObjectSchema` schema"
msgstr "`io.vertx.core.json.JsonObject` は スキーマで構成されます。 `io.quarkus.pulsar.schema.JsonObjectSchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:950
#, fuzzy
msgid "`io.vertx.core.json.JsonArray` will be configured with `io.quarkus.pulsar.schema.JsonArraySchema` schema"
msgstr "`io.vertx.core.json.JsonArray` は スキーマで構成されます。 `io.quarkus.pulsar.schema.JsonArraySchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:955
#, fuzzy
msgid "If a `schema` is set by configuration, it won't be replaced by the auto-detection."
msgstr "コンフィギュレーションによって `schema` が設定されている場合、自動検出によって置き換えられることはない。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:963
#, fuzzy, no-wrap
msgid "Configuring Pulsar clients"
msgstr "パルサー・クライアントの設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:965
#, fuzzy
msgid "Pulsar clients, consumers and producers are very customizable to configure how a Pulsar client application behaves."
msgstr "Pulsarクライアント、コンシューマーおよびプロデューサーは、Pulsarクライアント・アプリケーションの動作を設定するために、非常にカスタマイズが可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:991
#, fuzzy
msgid "Note that the Pulsar consumer property `subscriptionInitialPosition` is also configured with the `Earliest` value which represents with enum value `SubscriptionInitialPosition.Earliest`."
msgstr "パルサーのコンシューマ・プロパティ `subscriptionInitialPosition` も、列挙値 `SubscriptionInitialPosition.Earliest` を表す `Earliest` 値で設定されていることに注意してください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1027
#, fuzzy
msgid "If no `[client|consumer|producer]-configuration` is configured, the connector will look for instances identified with the channel name:"
msgstr "`[client|consumer|producer]-configuration` が設定されていない場合、コネクタはチャネル名で識別されるインスタンスを探します："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1051
#, fuzzy
msgid "You also can provide a `Map<String, Object>` containing configuration values by key:"
msgstr "また、キー別に設定値を含む `Map<String, Object>` ："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1075
#, fuzzy
msgid "Different configuration sources are loaded in the following order of precedence, from the least important to the highest:"
msgstr "異なるコンフィギュレーション・ソースは、重要度の低いものから高いものへと、以下の優先順位でロードされる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1077
#, fuzzy
msgid "`Map<String, Object>` config map produced with default config identifier, `default-pulsar-client`, `default-pulsar-consumer`, `default-pulsar-producer`."
msgstr "`Map<String, Object>` デフォルトのコンフィグ識別子 , , で作成されたコンフィグマップ。 `default-pulsar-client` `default-pulsar-consumer` `default-pulsar-producer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1078
#, fuzzy
msgid "`Map<String, Object>` config map produced with identifier in the configuration or channel name"
msgstr "`Map<String, Object>` コンフィギュレーションまたはチャンネル名の識別子で生成される設定マッピング"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1079
#, fuzzy
msgid "`[Client|Producer|Consuemr]ConfigurationData` object produced with identifier in the channel configuration or the channel name"
msgstr "`[Client|Producer|Consuemr]ConfigurationData` チャネルのコンフィギュレーションまたはチャネル名の識別子で生成されるオブジェクト。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1080
#, fuzzy
msgid "Channel configuration properties named with `[Client|Producer|Consuemr]ConfigurationData` field names."
msgstr "`[Client|Producer|Consuemr]ConfigurationData` フィールド名で命名されたチャンネル設定プロパティ。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1082
#, fuzzy
msgid "See xref:configuration-reference[Configuration Reference] for the exhaustive list of configuration options."
msgstr "コンフィギュレーション・オプションの完全なリストについては、 xref:configuration-reference[コンフィギュレーション・リファレンスを] 参照のこと。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1083
#, fuzzy, no-wrap
msgid "Configuring Pulsar Authentication"
msgstr "Pulsar認証の設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1086
#, fuzzy
msgid "Pulsar provides a pluggable authentication framework, and Pulsar brokers/proxies use this mechanism to authenticate clients."
msgstr "Pulsarはプラグ可能な認証フレームワークを提供し、Pulsarブローカー/プロキシはこの認証メカニズムを使用してクライアントを認証します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1088
#, fuzzy
msgid "Clients can be configured in `application.properties` file using `authPluginClassName` and `authParams` attributes:"
msgstr "クライアントは `authPluginClassName` と `authParams` 属性を使用して `application.properties` ファイルで設定できます："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1097
#, fuzzy
msgid "Or programmatically:"
msgstr "あるいはプログラム的に："

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:1121
#, fuzzy, no-wrap
msgid "Configuring access to Datastax Luna Streaming"
msgstr "Datastax Luna Streamingへのアクセス設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1134
#, fuzzy
msgid "Make sure to create topics beforehand, or enable the _Auto Topic Creation_ in the namespace configuration."
msgstr "事前にトピックを作成しておくか、ネームスペースの設定で _トピックの自動_ 作成を有効にしてください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1136
#, fuzzy
msgid "Note that the topic configuration needs to reference full name of topics:"
msgstr "トピックのコンフィギュレーションは、トピックのフルネームを参照する必要があることに注意："

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:1142
#, fuzzy, no-wrap
msgid "Configuring access to StreamNative Cloud"
msgstr "StreamNative Cloudへのアクセス設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1156
#, fuzzy
msgid "To configure your application with Pulsar Oauth2 authentication:"
msgstr "Pulsar Oauth2認証を使ってアプリケーションを構成するには："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1167
#, fuzzy
msgid "Note that the `pulsar.client.authParams` configuration contains a Json string with `issuerUrl`, `audience` and the `privateKey` in the `data:application/json;base64,<base64-encoded-key-file>` format."
msgstr "`pulsar.client.authParams` コンフィギュレーションには、 `issuerUrl` 、 `audience` 、 `privateKey` が `data:application/json;base64,<base64-encoded-key-file>` フォーマットで記述されたJson文字列が含まれていることに注意してください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1169
#, fuzzy
msgid "Alternatively you can configure the authentication programmatically:"
msgstr "あるいは、プログラムで認証を設定することもできる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1208
#, fuzzy
msgid "This assumes that the key file is included to the application classpath as a resource, then the configuration would like the following:"
msgstr "これは、キー・ファイルがリソースとしてアプリケーションのクラスパスにインクルードされていると仮定している："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1222
#, fuzzy
msgid "Note that channels using the client configuration identified with `pulsar-auth` need to set the `client-configuration` attribute."
msgstr "`pulsar-auth` で識別されるクライアント・コンフィギュレーションを使用するチャネルは、 `client-configuration` 属性を設定する必要があることに注意してください。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1224
#, no-wrap
msgid "Health Checks"
msgstr "ヘルスチェック"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1242
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1247
#, fuzzy, no-wrap
msgid "Incoming channel configuration (receiving from Pulsar)"
msgstr "受信チャンネル設定（パルサーからの受信）"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1250
msgid "The following attributes are configured using:"
msgstr "以下の属性は以下のように設定します:"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1259
#, fuzzy
msgid "You can also configure properties supported by the underlying Pulsar consumer."
msgstr "基礎となるPulsarコンシューマーがサポートするプロパティを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1261
#, fuzzy
msgid "These properties can also be globally configured using `pulsar.consumer` prefix:"
msgstr "これらのプロパティは、 `pulsar.consumer` プレフィックスを使用してグローバルに設定することもできる："

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1269
#, fuzzy, no-wrap
msgid "Outgoing channel configuration (publishing to Pulsar)"
msgstr "発信チャンネル設定（パルサーへのパブリッシング）"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1274
#, fuzzy
msgid "You can also configure properties supported by the underlying Pulsar producer."
msgstr "基礎となるPulsarプロデューサーがサポートするプロパティを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1276
#, fuzzy
msgid "These properties can also be globally configured using `pulsar.producer` prefix:"
msgstr "これらのプロパティは、 `pulsar.producer` プレフィックスを使用してグローバルに設定することもできる："

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1285
#, fuzzy, no-wrap
msgid "Pulsar Client Configuration"
msgstr "パルサー・クライアント構成"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1296
#, fuzzy
msgid "Or configured globally using `pulsar.client` prefix:"
msgstr "または、 `pulsar.client` プレフィックスを使ってグローバルに設定する："

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:1307
#, fuzzy
msgid "Configuration properties not configurable in configuration files (non-serializable) is noted in the column `Config file`."
msgstr "設定ファイルで設定不可能な（シリアライズ不可能な）設定プロパティは、 `Config file` の列に記されています。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1309
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1314
msgid "If you want to go further, check the documentation of https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging], the implementation used in Quarkus."
msgstr "さらに詳しく知りたい場合は、Quarkusで使用されている実装、 https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] のドキュメントを確認してください。"
