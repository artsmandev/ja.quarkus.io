# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-30 08:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/pulsar.adoc:6
#, fuzzy, no-wrap
msgid "Apache Pulsar Reference Guide"
msgstr "アパッチ・パルサー・リファレンス・ガイド"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:15
#, fuzzy
msgid "This reference guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with Apache Pulsar."
msgstr "このリファレンス・ガイドでは、QuarkusアプリケーションがSmallRye Reactive Messagingを利用してApache Pulsarとやり取りする方法を説明します。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:16
#, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:20
#, fuzzy
msgid "https://pulsar.apache.org[Apache Pulsar] is an open-source, distributed messaging and streaming platform built for the cloud.  It provides a multi-tenant, high-performance solution to server messaging with tiered storage capabilities."
msgstr "link:https://pulsar.apache.org[Apache Pulsarは] 、クラウド向けに構築されたオープン・ソースの分散型メッセージングおよびストリーミング・プラットフォームです。階層型ストレージ機能を備えたサーバ・メッセージングに、マルチテナント型の高性能ソリューションを提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:22
#, fuzzy
msgid "Pulsar implements the publish-subscribe pattern:"
msgstr "Pulsarはパブリッシュ-サブスクライブ・パターンを実装しています："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:24
#, fuzzy
msgid "Producers publish messages to _topics_."
msgstr "プロデューサーは _トピックに_ メッセージを公開する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:25
#, fuzzy
msgid "Consumers create _subscriptions_ to those topics to receive and process incoming messages, and send _acknowledgments_ to the broker when processing is finished."
msgstr "コンシューマはこれらのトピックに _サブスクリプションを_ 作成し、着信メッセージを受信して処理し、処理が終了するとブローカに _確認応答を_ 送信する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:27
#, fuzzy
msgid "When a subscription is created, Pulsar retains all messages, even if the consumer is disconnected.  The retained messages are discarded only when a consumer acknowledges that all these messages are processed successfully."
msgstr "サブスクリプションが作成されると、Pulsarはコンシューマが切断されても全てのメッセージを保持します。保持されたメッセージは、全てのメッセージが正常に処理されたことをコンシューマが確認した場合にのみ破棄されます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:29
#, fuzzy
msgid "A Pulsar cluster consists of"
msgstr "パルサー群"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:31
#, fuzzy
msgid "One or more _brokers_, which are stateless components."
msgstr "ステートレス・コンポーネントである1つ以上の _ブローカー_ 。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:32
#, fuzzy
msgid "A _metadata store_ for maintaining topic metadata, schema, coordination and cluster configuration."
msgstr "トピックのメタデータ、スキーマ、コーディネーション、クラスタ構成を管理するための _メタデータストア_ 。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:33
#, fuzzy
msgid "A set of _bookies_ used for persistent storage of messages."
msgstr "メッセージの永続的な保存に使用される _ブッキーの_ セット。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:34
#, fuzzy, no-wrap
msgid "Quarkus Extension for Apache Pulsar"
msgstr "Apache Pulsar用Quarkusエクステンション"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:38
#, fuzzy
msgid "Quarkus provides support for Apache Pulsar through https://smallrye.io/smallrye-reactive-messaging/[SmallRye Reactive Messaging] framework.  Based on Eclipse MicroProfile Reactive Messaging specification 3.0, it proposes a flexible programming model bridging CDI and event-driven."
msgstr "Quarkusは、SmallRye link:https://smallrye.io/smallrye-reactive-messaging/[Reactive Messaging] フレームワークを通じてApache Pulsarをサポートします。Eclipse MicroProfile Reactive Messaging仕様3.0に基づき、CDIとイベント駆動を橋渡しする柔軟なプログラミング・モデルを提案しています。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:43
#, fuzzy
msgid "This guide provides an in-depth look on Apache Pulsar and SmallRye Reactive Messaging framework.  For a quick start take a look at xref:pulsar-getting-started.adoc[Getting Started to SmallRye Reactive Messaging with Apache Pulsar]."
msgstr "このガイドでは、Apache PulsarとSmallRye Reactive Messagingフレームワークについて詳しく説明します。クイック・スタートについては、「 xref:pulsar-getting-started.adoc[Apache Pulsarを] 使用したSmallRye xref:pulsar-getting-started.adoc[リアクティブ・メッセージング入門] 」をご覧ください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:46
#, fuzzy
msgid "You can add the `smallrye-reactive-messaging-pulsar` extensions to your project by running the following command in your project base directory:"
msgstr "プロジェクトのベース・ディレクトリで以下のコマンドを実行すれば、 `smallrye-reactive-messaging-pulsar` のエクステンションをプロジェクトに追加できる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:51
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:53
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:59
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-reactive-messaging-pulsar</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:62
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:65
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-reactive-messaging-pulsar\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:70
#, fuzzy
msgid "The extension includes `pulsar-clients-original` version 3.0.0 as a transitive dependency and is compatible with Pulsar brokers version 2.10.x."
msgstr "このエクステンションは、 `pulsar-clients-original` バージョン3.0.0を相互依存関係として含み、パルサー・ブローカー・バージョン2.10.xと互換性があります。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:72
#, fuzzy, no-wrap
msgid "Configuring Smallrye Pulsar Connector"
msgstr "SmallRyeパルサーコネクターの設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:75
#, fuzzy
msgid "Because Smallrye Reactive Messaging framework supports different messaging backends like Apache Kafka, Apache Pulsar, AMQP, Apache Camel, JMS, MQTT, etc., it employs a generic vocabulary:"
msgstr "SmallRye Reactive Messagingフレームワークは、Apache Kafka、Apache Pulsar、AMQP、Apache Camel、JMS、MQTTなど、さまざまなメッセージング・バックエンドをサポートしているため、汎用的な語彙を採用しています："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:79
#, fuzzy
msgid "Applications send and receive *messages*. https://javadoc.io/doc/io.smallrye.reactive/smallrye-reactive-messaging-api/latest/org/eclipse/microprofile/reactive/messaging/Message.html[`Message`] wraps a _payload_ and can be extended with some _metadata_.  This should not be confused with a Pulsar https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/client/api/Message.html[`Message`], which consists of value, key With the Pulsar connector, a Reactive Messaging _message_ corresponds to a Pulsar _message_."
msgstr "アプリケーションは *メッセージを* 送受信する。 link:https://javadoc.io/doc/io.smallrye.reactive/smallrye-reactive-messaging-api/latest/org/eclipse/microprofile/reactive/messaging/Message.html[Message] _ペイロードを_ ラップし、いくつかの _メタデータで_ 拡張することができる。これは、Pulsar link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/client/api/Message.html[Message] Pulsarコネクタでは、 _リアクティブ・メッセージング・メッセージは_ Pulsar _メッセージに_ 対応します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:80
#, fuzzy
msgid "Messages transit on *channels*. Application components connect to channels to publish and consume messages. The Pulsar connector maps _channels_ to Pulsar _topics_."
msgstr "メッセージは *チャネルを* 経由する。アプリケーション・コンポーネントはチャネルに接続し、メッセージの公開と消費を行います。Pulsarコネクタは、 _チャネルを_ Pulsar _トピックに_ マッピングします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:84
#, fuzzy
msgid "Channels are connected to message backends using *connectors*.  Connectors are configured to map incoming messages to a specific channel (consumed by the application) and collect outgoing messages sent to a specific channel.  Each connector is dedicated to a specific messaging technology.  For example, the connector dealing with Pulsar is named `smallrye-pulsar`."
msgstr "チャネルは *コネクタを使って* メッセージバックエンドに接続される。コネクタは、受信メッセージを特定のチャネル（アプリケーションによって消費される）にマッピングし、特定のチャネルに送信された送信メッセージを収集するように設定される。各コネクターは特定のメッセージング・テクノロジーに特化している。例えば、Pulsarを扱うコネクタの名前は `smallrye-pulsar` 。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:86
#, fuzzy
msgid "A minimal configuration for the Pulsar connector with an incoming channel looks like the following:"
msgstr "着信チャンネルを持つパルサー・コネクターの最小コンフィギュレーションは以下のようになります："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:91
#, no-wrap
msgid ""
"%prod.pulsar.client.serviceUrl=pulsar:6650 <1>\n"
"mp.messaging.incoming.prices.connector=smallrye-pulsar <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:95
#, fuzzy
msgid "Configure the Pulsar broker service url for the production profile.  You can configure it globally or per channel using `mp.messaging.incoming.$channel.serviceUrl` property.  In dev mode and when running tests, xref:pulsar-dev-services[Dev Services for Pulsar] automatically starts a Pulsar broker."
msgstr "プロダクション・プロファイル用にPulsarブローカー・サービスURLを構成します。 `mp.messaging.incoming.$channel.serviceUrl` プロパティを使って、グローバルまたはチャネルごとに設定することができます。devモードでテストを実行すると、Dev Services xref:pulsar-dev-services[for Pulsarが] 自動的にPulsarブローカーを起動します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:98
#, fuzzy
msgid "Configure the connector to manage the prices channel.  By default, the _topic_ name is same as the channel name."
msgstr "価格チャネルを管理するコネクタを設定します。デフォルトでは、 _トピック_ 名はチャネル名と同じです。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:100
#, fuzzy
msgid "You can configure the topic attribute to override it."
msgstr "トピック属性を設定することで、それを上書きすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:102
msgid "The `%prod` prefix indicates that the property is only used when the application runs in prod mode (so not in dev or test). Refer to the xref:config-reference.adoc#profiles[Profile documentation] for further details."
msgstr "`%prod` 接頭辞は、アプリケーションが prod モードで実行されている場合にのみプロパティーが使用されることを示します (つまり、dev または test モードでは使用されません)。詳細は、xref:config-reference.adoc#profiles[プロファイルに関するドキュメント] を参照してください。"

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:104
#, no-wrap
msgid "Connector auto-attachment"
msgstr "コネクターの自動アタッチ"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:109
#, fuzzy
msgid "If you have a single connector on your classpath, you can omit the `connector` attribute configuration.  Quarkus automatically associates _orphan_ channels to the (unique) connector found on the classpath.  _Orphan_ channels are outgoing channels without a downstream consumer or incoming channels without an upstream producer."
msgstr "クラスパスにコネクタが1つしかない場合は、 `connector` 属性設定を省略できます。Quarkusは、クラスパスで見つかった（一意の）コネクタに、 _オーファンチャンネルを_ 自動的に関連付けます。 _オーファンチャンネルとは_ 、ダウンストリームのコンシューマーが存在しない送信チャンネル、またはアップストリームプロデューサーが存在しない受信チャンネルのことです。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:111
msgid "This auto-attachment can be disabled using:"
msgstr "この自動アタッチは、以下を使用して無効にできます。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:115
#, no-wrap
msgid "quarkus.reactive-messaging.auto-connector-attachment=false\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:119
#, fuzzy
msgid "For more configuration options see xref:configuring-pulsar-clients[Configuring Pulsar clients]."
msgstr "その他の設定オプションについては、 xref:configuring-pulsar-clients[Pulsarクライアントの設定を] ご覧ください。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:121
#, fuzzy, no-wrap
msgid "Receiving messages from Pulsar"
msgstr "パルサーからのメッセージ受信"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:125
#, fuzzy
msgid "The Pulsar Connector connects to a Pulsar broker using a Pulsar client and creates consumers to receive messages from Pulsar brokers, and it maps each Pulsar `Message` into Reactive Messaging `Message`."
msgstr "Pulsar Connectorは、Pulsarクライアントを使ってPulsarブローカーに接続し、Pulsarブローカーからメッセージを受け取るコンシューマを作成します。そして、各Pulsar `Message` をReactive Messaging `Message` にマッピングします。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:126
#: upstream/_versions/main/guides/pulsar.adoc:460
#, no-wrap
msgid "Example"
msgstr "例"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:130
#, fuzzy
msgid "Let’s imagine you have a Pulsar broker running, and accessible using the `pulsar:6650` address.  Configure your application to receive Pulsar messages on the `prices` channel as follows:"
msgstr "パルサー・ブローカーが稼動しており、 `pulsar:6650` アドレスを使ってアクセスできるとします。 `prices` チャンネルでPulsarメッセージを受信するよう、アプリケーションを以下のように設定します："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:135
#, no-wrap
msgid ""
"mp.messaging.incoming.prices.serviceUrl=pulsar://pulsar:6650 # <1>\n"
"mp.messaging.incoming.prices.subscriptionInitialPosition=Earliest # <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:138
#: upstream/_versions/main/guides/pulsar.adoc:471
#, fuzzy
msgid "Configure the Pulsar broker service url."
msgstr "Pulsarブローカー・サービスのURLを設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:139
#, fuzzy
msgid "Make sure consumer subscription starts receiving messages from the `Earliest` position."
msgstr "コンシューマのサブスクリプションが `Earliest` の位置からメッセージの受信を開始することを確認する。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:145
#, fuzzy
msgid "You don’t need to set the Pulsar topic, nor the consumer name.  By default, the connector uses the channel name (`prices`).  You can configure the `topic` and `consumerName` attributes to override them."
msgstr "Pulsarトピックやコンシューマ名を設定する必要はありません。デフォルトでは、コネクタはチャネル名（ `prices` ）を使用します。 `topic` および `consumerName` 属性を設定することで、それらを上書きすることができます。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:151
#, fuzzy
msgid "In Pulsar, consumers need to provide a `subscriptionName` for topic subscriptions.  If not provided the connector generates a unique **subscription name**."
msgstr "Pulsarでは、コンシューマはトピック・サブスクリプションに `subscriptionName` 。提供されない場合、コネクタは一意の *サブスクリプション* 名を生成します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:154
#, fuzzy
msgid "Then, your application can receive the `double` payload directly:"
msgstr "そうすれば、アプリケーションは `double` ペイロードを直接受け取ることができる："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:158
#, no-wrap
msgid "import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:160
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:163
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PriceConsumer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:168
#, no-wrap
msgid ""
"    @Incoming(\"prices\")\n"
"    public void consume(double price) {\n"
"        // process your price.\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:170
#: upstream/_versions/main/guides/pulsar.adoc:287
#: upstream/_versions/main/guides/pulsar.adoc:505
#: upstream/_versions/main/guides/pulsar.adoc:595
#: upstream/_versions/main/guides/pulsar.adoc:699
#: upstream/_versions/main/guides/pulsar.adoc:766
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:173
#, fuzzy
msgid "Or, you can retrieve the Reactive Messaging type `Message<Double>`:"
msgstr "または、リアクティブ・メッセージング・タイプ `Message<Double>` を取得することもできます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:185
#, no-wrap
msgid ""
"@Incoming(\"prices\")\n"
"public CompletionStage<Void> consume(Message<Double> msg) {\n"
"    // access record metadata\n"
"    var metadata = msg.getMetadata(PulsarIncomingMessageMetadata.class).orElseThrow();\n"
"    // process the message payload.\n"
"    double price = msg.getPayload();\n"
"    // Acknowledge the incoming message (acknowledge the Pulsar message back to the broker)\n"
"    return msg.ack();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:188
#, fuzzy
msgid "The Reactive Messaging `Message` type lets the consuming method access the incoming message metadata and handle the acknowledgment manually."
msgstr "Reactive Messaging `Message` タイプは、コンシューマメソッドが受信メッセージのメタデータにアクセスし、確認応答を手動で処理することを可能にします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:190
#, fuzzy
msgid "If you want to access the Pulsar message objects directly, use:"
msgstr "パルサー・メッセージ・オブジェクトに直接アクセスしたい場合は、以下を使用する："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:200
#, no-wrap
msgid ""
"@Incoming(\"prices\")\n"
"public void consume(org.apache.pulsar.client.api.Message<Double> msg) {\n"
"    String key = msg.getKey();\n"
"    String value = msg.getValue();\n"
"    String topic = msg.topicName();\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:203
#, fuzzy
msgid "`org.apache.pulsar.client.api.Message` is provided by the underlying Pulsar client and can be used directly with the consumer method."
msgstr "`org.apache.pulsar.client.api.Message` は、基礎となるPulsarクライアントによって提供され、コンシューマー・メソッドで直接使うことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:206
#, fuzzy
msgid "Alternatively, your application can inject a `Multi` in your bean, identified with the channel name and subscribe to its events as the following example:"
msgstr "あるいは、アプリケーションは、次の例のように、チャネル名で識別され、そのイベントをサブスクライブするBeanに `Multi` ："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:211
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:218
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
"import org.jboss.resteasy.reactive.RestStreamElementType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:221
#, no-wrap
msgid ""
"@Path(\"/prices\")\n"
"public class PriceResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:225
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"prices\")\n"
"    Multi<Double> prices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:233
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/prices\")\n"
"    @RestStreamElementType(MediaType.TEXT_PLAIN)\n"
"    public Multi<Double> stream() {\n"
"        return prices;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:239
msgid "When consuming messages with `@Channel`, the application code is responsible for the subscription.  In the example above, the RESTEasy Reactive endpoint handles that for you."
msgstr "`@Channel` でメッセージを消費する場合、アプリケーションコードがサブスクリプションを行います。上記の例では、RESTEasy Reactive エンドポイントが処理します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:242
msgid "Following types can be injected as channels:"
msgstr "チャンネルとして注入できるのは、以下のタイプです。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:246
#, no-wrap
msgid "@Inject @Channel(\"prices\") Multi<Double> streamOfPayloads;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:248
#, no-wrap
msgid "@Inject @Channel(\"prices\") Multi<Message<Double>> streamOfMessages;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:250
#, no-wrap
msgid "@Inject @Channel(\"prices\") Publisher<Double> publisherOfPayloads;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:252
#, no-wrap
msgid "@Inject @Channel(\"prices\") Publisher<Message<Double>> publisherOfMessages;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:256
#, fuzzy
msgid "As with the previous `Message` example, if your injected channel receives payloads (`Multi<T>`), it acknowledges the message automatically, and support multiple subscribers.  If your injected channel receives Message (`Multi<Message<T>>`), you will be responsible for the acknowledgment and broadcasting."
msgstr "前の `Message` の例と同様に、注入されたチャネルがペイロード ( `Multi<T>` ) を受信すると、自動的にメッセージを確認し、複数の購読者をサポートします。あなたの注入されたチャネルが Message ( `Multi<Message<T>>` ) を受信した場合、その確認とブロードキャストはあなたの責任となります。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:258
#, no-wrap
msgid "Blocking processing"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:264
msgid "Reactive Messaging invokes your method on an I/O thread.  See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.  But, you often need to combine Reactive Messaging with blocking processing such as database interactions.  For this, you need to use the `@Blocking` annotation indicating that the processing is _blocking_ and should not be run on the caller thread."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:266
msgid "For example, The following code illustrates how you can store incoming payloads to a database using Hibernate with Panache:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:271
#, no-wrap
msgid ""
"import io.smallrye.reactive.messaging.annotations.Blocking;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:274
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:277
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PriceStorage {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:285
#, no-wrap
msgid ""
"    @Incoming(\"prices\")\n"
"    @Transactional\n"
"    public void store(int priceInUsd) {\n"
"        Price price = new Price();\n"
"        price.value = priceInUsd;\n"
"        price.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:292
msgid "There are 2 `@Blocking` annotations:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:294
msgid "`io.smallrye.reactive.messaging.annotations.Blocking`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:295
msgid "`io.smallrye.common.annotation.Blocking`"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:300
msgid "They have the same effect.  Thus, you can use both.  The first one provides more fine-grained tuning such as the worker pool to use and whether it preserves the order.  The second one, used also with other reactive features of Quarkus, uses the default worker pool and preserves the order."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:302
msgid "Detailed information on the usage of `@Blocking` annotation can be found in https://smallrye.io/smallrye-reactive-messaging/latest/concepts/blocking/[SmallRye Reactive Messaging – Handling blocking execution]."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:305
#, no-wrap
msgid "@RunOnVirtualThread"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:308
msgid "For running the blocking processing on Java _virtual threads_, see the xref:messaging-virtual-threads.adoc[Quarkus Virtual Thread support with Reactive Messaging documentation]."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/pulsar.adoc:311
#, no-wrap
msgid "@Transactional"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:314
msgid "If your method is annotated with `@Transactional`, it will be considered _blocking_ automatically, even if the method is not annotated with `@Blocking`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:316
#, fuzzy, no-wrap
msgid "Pulsar Subscription Types"
msgstr "パルサー・サブスクリプション・タイプ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:319
#, fuzzy
msgid "Pulsar *subscriptionType* consumer configuration can be used flexibly to achieve different messaging scenarios, such as publish-subscribe or queuing."
msgstr "Pulsar *subscriptionType* コンシューマ構成は、パブリッシュ-サブスクライブやキューイングなど、様々なメッセージング・シナリオを実現するために柔軟に使用することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:321
#, fuzzy, no-wrap
msgid "*Exclusive* subscription type allows specifying a _unique subscription name_ for \"fan-out pub-sub messaging\". This is the default subscription type.\n"
msgstr "*排他的* サブスクリプションタイプでは、\"fan-out pub-sub messaging \"のための _一意なサブスクリプション名を_ 指定することができます。これはデフォルトのサブスクリプションタイプです。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:322
#, fuzzy, no-wrap
msgid "*Shared*, *Key_Shared* or *Failover* subscription types allow multiple consumers to share the _same subscription name_, to achieve \"message queuing\" among consumers.\n"
msgstr "*共有(Shared)* 、 *鍵共有(Key_Shared)* 、 *フェイルオーバー(Failover)の* サブスクリプションタイプは、コンシューマー間で「メッセージキューイング」を実現するために、複数のコンシューマーが _同じサブスクリプション名を_ 共有することを可能にする。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:324
#, fuzzy
msgid "If a subscription name is not provided Quarkus generates a unique id."
msgstr "サブスクリプション名が指定されない場合、Quarkusは一意のIDを生成します。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:325
#, fuzzy, no-wrap
msgid "Deserialization and Pulsar Schema"
msgstr "デシリアライズとパルサースキーマ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:329
#, fuzzy
msgid "The Pulsar Connector allows configuring Schema configuration for the underlying Pulsar consumer.  See the xref:pulsar-schema-configuration[Pulsar Schema Configuration & Auto Schema Discovery] for more information."
msgstr "Pulsar Connectorでは、基盤となるPulsarコンシューマ用にスキーマ構成を構成することができます。詳細は xref:pulsar-schema-configuration[Pulsarスキーマ構成と自動スキーマ検出を] ご覧ください。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:330
#, fuzzy, no-wrap
msgid "Acknowledgement Strategies"
msgstr "謝辞の戦略"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:335
#, fuzzy
msgid "When a message produced from a Pulsar Message is *acknowledged*, the connector sends an https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment[acknowledgement request] to the Pulsar broker.  All Reactive Messaging messages need to be *acknowledged*, which is handled automatically in most cases.  Acknowledgement requests can be sent to the Pulsar broker using the following two strategies:"
msgstr "Pulsarメッセージから生成されたメッセージが *確認さ* れると、コネクタはPulsarブローカに link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment[確認リクエストを] 送信します。すべてのリアクティブ・メッセージング・メッセージは *確認される* 必要がありますが、ほとんどの場合自動的に処理されます。確認応答リクエストは、以下の2つのストラテジーを使ってPulsarブローカに送ることができます："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:337
#, fuzzy, no-wrap
msgid "**Individual acknowledgement** is the default strategy, an acknowledgement request is to the broker for each message.\n"
msgstr "*個別確認は* デフォルトのストラテジーであり、各メッセージに対してブローカーに確認要求が送られる。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:339
#, fuzzy, no-wrap
msgid ""
"**Cumulative acknowledgement**, configured using `ack-strategy=cumulative`, the consumer only acknowledges the last message it received.\n"
"All messages in the stream up to (and including) the provided message are not redelivered to that consumer.\n"
msgstr "*累積確認応答(Cumulative acknowledgement* )、 `ack-strategy=cumulative` を使用して構成され、コンシューマは最後に受信したメッセージのみを確認する。提供されたメッセージ(を含む)までのストリー ムのすべてのメッセージは、そのコンシューマーに再配達されない。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:344
#, fuzzy
msgid "By default, the Pulsar consumer does not wait for the acknowledgement confirmation from the broker to validate an acknowledgement.  You can enable this using `ackReceiptEnabled=true`."
msgstr "デフォルトでは、Pulsarコンシューマーは確認応答を検証するために、ブローカーからの確認応答を待ちません。これを有効にするには、 `ackReceiptEnabled=true` を使用します。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:346
#, fuzzy, no-wrap
msgid "Failure Handling Strategies"
msgstr "故障処理戦略"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:350
#, fuzzy
msgid "If a message produced from a Pulsar message is *nacked*, a failure strategy is applied.  The Quarkus Pulsar extension supports 4 strategies:"
msgstr "Pulsarメッセージから生成されたメッセージが *ナックさ* れた場合、失敗ストラテジーが適用されます。Quarkus Pulsarエクステンションは4つのストラテジーをサポートしています："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:353
#, fuzzy
msgid "`nack` *(default)* sends https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#negative-acknowledgment[negative acknowledgment] to the broker, triggering the broker to redeliver this message to the consumer.  The negative acknowledgment can be further configured using `negativeAckRedeliveryDelayMicros` and `negativeAck.redeliveryBackoff` properties."
msgstr "`nack` *(デフォルト)* は link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#negative-acknowledgment[否定応答を] ブローカーに送信し、ブローカーがこのメッセージをコンシューマーに再送信するトリガーとなる。否定応答は、 と プロパティを使用してさらに設定することができます。 `negativeAckRedeliveryDelayMicros` `negativeAck.redeliveryBackoff` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:354
#, fuzzy
msgid "`fail` fail the application, no more messages will be processed."
msgstr "`fail` アプリケーションを終了すると、メッセージは処理されなくなる。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:355
#, fuzzy
msgid "`ignore` the failure is logged, but the acknowledgement strategy will be applied and the processing will continue."
msgstr "`ignore` の場合、失敗は記録されるが、確認ストラテジーが適用され、処理は続行される。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:356
msgid "`continue` the failure is logged, but processing continues without applying acknowledgement or negative acknowledgement. This strategy can be used with xref:ack-timeout[Acknowledgement timeout] configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:359
#, fuzzy
msgid "`reconsume-later` sends the message to the https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[retry letter topic] using the `reconsumeLater` API to be reconsumed with a delay.  The delay can be configured using the `reconsumeLater.delay` property and defaults to 3 seconds.  Custom delay or properties per message can be configured by adding an instance of `io.smallrye.reactive.messaging.pulsar.PulsarReconsumeLaterMetadata` to the failure metadata."
msgstr "`reconsume-later` は、 API を使用して `reconsumeLater` link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[再試行レター・トピックに] メッセージを送信し、遅延を伴って再試行される。遅延は プロパティを使用して設定でき、デフォルトは 3 秒です。メッセージごとのカスタム遅延や設定プロパティは、 のインスタンスを失敗メタデータに追加することで設定できます。 `reconsumeLater.delay` `io.smallrye.reactive.messaging.pulsar.PulsarReconsumeLaterMetadata` "

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:361
#, fuzzy, no-wrap
msgid "Acknowledgement timeout"
msgstr "確認タイムアウト"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:365
#, fuzzy
msgid "Similar to the negative acknowledgement, with the https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment-timeout[acknowledgement timeout] mechanism, the Pulsar client tracks the unacknowledged messages, for the given *ackTimeout* period and sends *redeliver unacknowledged messages request* to the broker, thus the broker resends the unacknowledged messages to the consumer."
msgstr "否定応答と同様、 link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#acknowledgment-timeout[確認応答タイムアウト・] メカニズムでは、Pulsarクライアントは指定された *ackTimeout* 期間の未承認メッセージを追跡し、ブローカーに *未承認メッセージ再送要求を* 送信します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:368
#, fuzzy
msgid "To configure the timeout and redelivery backoff mechanism you can set `ackTimeoutMillis` and `ackTimeout.redeliveryBackoff` properties.  The `ackTimeout.redeliveryBackoff` value accepts comma separated values of min delay in milliseconds, max delay in milliseconds and multiplier respectively:"
msgstr "タイムアウトと再配信のバックオフ・メカニズムを設定するには、 `ackTimeoutMillis` と `ackTimeout.redeliveryBackoff` プロパティを設定することができる。 `ackTimeout.redeliveryBackoff` の値には、コンマで区切られた最小遅延（ミリ秒）、最大遅延（ミリ秒）、および乗数をそれぞれ指定できます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:374
#, no-wrap
msgid ""
"mp.messaging.incoming.out.failure-strategy=continue\n"
"mp.messaging.incoming.out.ackTimeoutMillis=10000\n"
"mp.messaging.incoming.out.ackTimeout.redeliveryBackoff=1000,60000,2\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:376
#, fuzzy, no-wrap
msgid "Reconsume later and retry letter topic"
msgstr "後で再開し、手紙のトピックに再挑戦する"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:380
#, fuzzy
msgid "The https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[retry letter topic] pushes messages that are not consumed successfully to a dead letter topic and continue message consumption.  Note that dead letter topic can be used in different message redelivery methods, such as acknowledgment timeout, negative acknowledgment or retry letter topic."
msgstr "link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#retry-letter-topic[retry letter トピックは] 、正常に消費されなかったメッセージを dead letter トピックにプッシュし、メッセージの消費を継続する。デッド・レター・トピックは、acknowledgement timeout、negative acknowledgment、retry letter topic など、さまざまなメッセージ再配送メソッドで使用できることに注意してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:387
#, no-wrap
msgid ""
"mp.messaging.incoming.data.failure-strategy=reconsume-later\n"
"mp.messaging.incoming.data.reconsumeLater.delay=5000\n"
"mp.messaging.incoming.data.enableRetry=true\n"
"mp.messaging.incoming.data.negativeAck.redeliveryBackoff=1000,60000,2\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:389
#, fuzzy, no-wrap
msgid "Dead-letter topic"
msgstr "デッドレターの話題"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:393
#, fuzzy
msgid "The https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#dead-letter-topic[dead letter topic] pushes messages that are not consumed successfully to a dead letter topic an continue message consumption.  Note that dead letter topic can be used in different message redelivery methods, such as acknowledgment timeout, negative acknowledgment or retry letter topic."
msgstr "link:https://pulsar.apache.org/docs/3.0.x/concepts-messaging/#dead-letter-topic[デッド・レター・トピックは] 、正常に消費されなかったメッセージをデッド・レター・トピックにプッシュし、メッセージの消費を継続させる。デッド・レター・トピックは、acknowledgement timeout、negative acknowledgment、retry letter topicなど、さまざまなメッセージ再配送メソッドで使うことができることに注意してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:401
#, no-wrap
msgid ""
"mp.messaging.incoming.data.failure-strategy=nack\n"
"mp.messaging.incoming.data.deadLetterPolicy.maxRedeliverCount=2\n"
"mp.messaging.incoming.data.deadLetterPolicy.deadLetterTopic=my-dead-letter-topic\n"
"mp.messaging.incoming.data.deadLetterPolicy.initialSubscriptionName=my-dlq-subscription\n"
"mp.messaging.incoming.data.subscriptionType=Shared\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:407
#, fuzzy, no-wrap
msgid ""
"*Negative acknowledgment* or *acknowledgment timeout* methods for redelivery will redeliver the whole batch of messages containing at least an unprocessed message.\n"
"See xref:producer-batching[Producer Batching] for more information.\n"
msgstr "再送に対する *否定的な確認応答* または *確認応答タイムアウトの* メソッドは、少なくとも未処理のメッセージを含むメッセージのバッチ全体を再送します。詳細は、 xref:producer-batching[Producer Batchingを] 参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:409
#, fuzzy, no-wrap
msgid "Receiving Pulsar Messages in Batches"
msgstr "パルサー・メッセージの一括受信"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:413
#, fuzzy
msgid "By default, incoming methods receive each Pulsar message individually.  You can enable batch mode using `batchReceive=true` property, or setting a `batchReceivePolicy` in consumer configuration."
msgstr "デフォルトでは、受信メソッドは各パルサー・メッセージを個別に受信します。 `batchReceive=true` プロパティを使うか、コンシューマ設定で `batchReceivePolicy` 、バッチ・モードを有効にすることができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:429
#, no-wrap
msgid ""
"@Incoming(\"prices\")\n"
"public CompletionStage<Void> consumeMessage(PulsarIncomingBatchMessage<Double> messages) {\n"
"    for (PulsarMessage<Double> msg : messages) {\n"
"        msg.getMetadata(PulsarIncomingMessageMetadata.class).ifPresent(metadata -> {\n"
"            String key = metadata.getKey();\n"
"            String topic = metadata.getTopicName();\n"
"            long timestamp = metadata.getEventTime();\n"
"            //... process messages\n"
"        });\n"
"    }\n"
"    // ack will commit the latest offsets (per partition) of the batch.\n"
"    return messages.ack();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:436
#, no-wrap
msgid ""
"@Incoming(\"prices\")\n"
"public void consumeRecords(Messages<Double> messages) {\n"
"    for (Message<Double> msg : messages) {\n"
"        //... process messages\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:439
#, fuzzy
msgid "Or you can directly receive the list of payloads to the consume method:"
msgstr "あるいは、ペイロードのリストを直接consumeメソッドに受け取ることもできる："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:448
#, no-wrap
msgid ""
"@Incoming(\"prices\")\n"
"public void consume(List<Double> prices) {\n"
"    for (double price : prices) {\n"
"        // process price\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:454
#, fuzzy
msgid "Quarkus auto-detects batch types for incoming channels and sets batch configuration automatically.  You can configure batch mode explicitly with `mp.messaging.incoming.$channel.batchReceive` property."
msgstr "Quarkusは、受信チャンネルのバッチタイプを自動検出し、バッチ構成を自動的に設定します。バッチモードは、 `mp.messaging.incoming.$channel.batchReceive` プロパティで明示的に設定できます。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:456
#, fuzzy, no-wrap
msgid "Sending messages to Pulsar"
msgstr "パルサーにメッセージを送る"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:459
#, fuzzy
msgid "The Pulsar Connector can write Reactive Messaging Messages as Pulsar Message."
msgstr "Pulsar Connectorはリアクティブ・メッセージング・メッセージをPulsarメッセージとして書き込むことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:464
#, fuzzy
msgid "Let’s imagine you have a Pulsar broker running, and accessible using the `pulsar:6650` address.  Configure your application to write the messages from the `prices` channel into a Pulsar Messages as follows:"
msgstr "Pulsarブローカーが稼動しており、 `pulsar:6650` アドレスを使ってアクセスできるとします。以下のように、 `prices` チャネルからのメッセージをPulsarメッセージに書き込むよう、アプリケーションを設定します："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:468
#, no-wrap
msgid "mp.messaging.outgoing.prices.serviceUrl=pulsar://pulsar:6650 # <1>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:477
#, fuzzy
msgid "You don’t need to set the Pulsar topic, nor the producer name.  By default, the connector uses the channel name (`prices`).  You can configure the `topic` and `producerName` attributes to override them."
msgstr "Pulsarトピックやプロデューサー名を設定する必要はありません。デフォルトでは、コネクタはチャネル名（ `prices` ）を使用します。 `topic` および `producerName` 属性を設定することで、それらを上書きすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:481
#, fuzzy
msgid "Then, your application must send `Message<Double>` to the `prices` channel. It can use `double` payloads as in the following snippet:"
msgstr "次に、アプリケーションは `Message<Double>` を `prices` チャンネルに送信しなければならない。次のスニペットのように、 `double` ペイロードを使うことができる："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:486
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:490
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import java.time.Duration;\n"
"import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:493
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarPriceProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:495
#, no-wrap
msgid "    private final Random random = new Random();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:503
#, no-wrap
msgid ""
"    @Outgoing(\"prices-out\")\n"
"    public Multi<Double> generate() {\n"
"        // Build an infinite stream of random prices\n"
"        // It emits a price every second\n"
"        return Multi.createFrom().ticks().every(Duration.ofSeconds(1))\n"
"            .map(x -> random.nextDouble());\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:509
#, fuzzy
msgid "Note that the generate method returns a `Multi<Double>`, which implements the `Flow.Publisher` interface.  This publisher will be used by the framework to generate messages and send them to the configured Pulsar topic."
msgstr "generateメソッドは、 `Flow.Publisher` インタフェースを実装した `Multi<Double>` を返すことに注意してください。このパブリッシャーは、フレームワークがメッセージを生成し、設定されたパルサートピックに送るために使われます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:511
#, fuzzy
msgid "Instead of returning a payload, you can return a `io.smallrye.reactive.messaging.pulsar.OutgoingMessage` to send Pulsar messages:"
msgstr "ペイロードを返す代わりに、 `io.smallrye.reactive.messaging.pulsar.OutgoingMessage` 、パルサー・メッセージを送ることができます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:519
#, no-wrap
msgid ""
"@Outgoing(\"out\")\n"
"public Multi<OutgoingMessage<Double>> generate() {\n"
"    return Multi.createFrom().ticks().every(Duration.ofSeconds(1))\n"
"        .map(x -> OutgoingMessage.of(\"my-key\", random.nextDouble()));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:522
msgid "Payload can be wrapped inside `org.eclipse.microprofile.reactive.messaging.Message` to have more control on the written records:"
msgstr "ペイロードを `org.eclipse.microprofile.reactive.messaging.Message` 内にラップして、書き込まれたレコードをより詳細に制御できます。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:534
#, no-wrap
msgid ""
"@Outgoing(\"generated-price\")\n"
"public Multi<Message<Double>> generate() {\n"
"    return Multi.createFrom().ticks().every(Duration.ofSeconds(1))\n"
"            .map(x -> Message.of(random.nextDouble())\n"
"                    .addMetadata(PulsarOutgoingMessageMetadata.builder()\n"
"                            .withKey(\"my-key\")\n"
"                            .withProperties(Map.of(\"property-key\", \"value\"))\n"
"                            .build()));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:538
#, fuzzy
msgid "When sending `Messages`, you can add an instance of `io.smallrye.reactive.messaging.pulsar.PulsarOutgoingMessageMetadata` to influence how the message is going to be written to Pulsar."
msgstr "`Messages` を送信する際、 `io.smallrye.reactive.messaging.pulsar.PulsarOutgoingMessageMetadata` のインスタンスを追加することで、パルサーへのメッセージの書き方に影響を与えることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:541
#, fuzzy
msgid "Other than method signatures returning a `Flow.Publisher`, outgoing method can also return single message.  In this case the producer will use this method as generator to create an infinite stream."
msgstr "`Flow.Publisher` を返すメソッド・シグネチャ以外に、発信メソッドは単一のメッセージを返すこともできる。この場合、プロ デューサーはこのメソッドをジェネレーターとして使い、無限ストリームを作成する。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:545
#, no-wrap
msgid "@Outgoing(\"prices-out\") T generate(); // T excluding void\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:547
#, no-wrap
msgid "@Outgoing(\"prices-out\") Message<T> generate();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:549
#, no-wrap
msgid "@Outgoing(\"prices-out\") Uni<T> generate();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:551
#, no-wrap
msgid "@Outgoing(\"prices-out\") Uni<Message<T>> generate();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:553
#, no-wrap
msgid "@Outgoing(\"prices-out\") CompletionStage<T> generate();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:555
#, no-wrap
msgid "@Outgoing(\"prices-out\") CompletionStage<Message<T>> generate();\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:557
#, fuzzy, no-wrap
msgid "Serialization and Pulsar Schema"
msgstr "シリアライゼーションとパルサー・スキーマ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:561
#, fuzzy
msgid "The Pulsar Connector allows configuring Schema configuration for the underlying Pulsar producer.  See the xref:pulsar-schema-configuration[Pulsar Schema Configuration & Auto Schema Discovery] for more information."
msgstr "Pulsar Connectorでは、基盤となるPulsarプロデューサのスキーマ構成を設定することができます。詳細は xref:pulsar-schema-configuration[Pulsarスキーマ構成と自動スキーマ検出を] ご覧ください。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:562
#, fuzzy, no-wrap
msgid "Sending key/value pairs"
msgstr "キーと値のペアの送信"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:566
#, fuzzy
msgid "In order to send Kev/Value pairs to Pulsar, you can configure the Pulsar producer Schema with a https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/KeyValue.html[KeyValue] schema."
msgstr "Kev/ValueペアをPulsarに送るには、Pulsarプロデューサー・スキーマを link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/KeyValue.html[KeyValue] スキーマで構成します。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:570
#: upstream/_versions/main/guides/pulsar.adoc:662
#: upstream/_versions/main/guides/pulsar.adoc:736
#, no-wrap
msgid "package pulsar.outbound;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:573
#: upstream/_versions/main/guides/pulsar.adoc:836
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:578
#, no-wrap
msgid ""
"import org.apache.pulsar.client.api.Schema;\n"
"import org.apache.pulsar.common.schema.KeyValue;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:580
#: upstream/_versions/main/guides/pulsar.adoc:842
#, no-wrap
msgid "import io.smallrye.common.annotation.Identifier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:583
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarKeyValueExample {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:587
#, no-wrap
msgid ""
"    @Identifier(\"out\")\n"
"    @Produces\n"
"    Schema<KeyValue<String, Long>> schema = Schema.KeyValue(Schema.STRING, Schema.INT64);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:593
#, no-wrap
msgid ""
"    @Incoming(\"in\")\n"
"    @Outgoing(\"out\")\n"
"    public KeyValue<String, Long> process(long in) {\n"
"        return new KeyValue<>(\"my-key\", in);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:598
#, fuzzy
msgid "If you need more control on the written records, use `PulsarOutgoingMessageMetadata`."
msgstr "文書による記録をさらに管理する必要がある場合は、 `PulsarOutgoingMessageMetadata` 。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:599
#, no-wrap
msgid "Acknowledgement"
msgstr "確認"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:603
#, fuzzy
msgid "Upon receiving a message from a Producer, a Pulsar broker assigns a `MessageId` to the message and sends it back to the producer, confirming that the message is published."
msgstr "プロデューサーからメッセージを受信すると、Pulsarブローカーはメッセージに `MessageId` 、メッセージが公開されたことを確認し、プロデューサーに送り返します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:607
#, fuzzy
msgid "By default, the connector does wait for Pulsar to acknowledge the record to continue the processing (acknowledging the received `Message`).  You can disable this by setting the `waitForWriteCompletion` attribute to `false`."
msgstr "デフォルトでは、コネクタは処理を続行するために、Pulsarがレコードを確認するのを待ちます（受信した `Message` を確認）。これを無効にするには、 `waitForWriteCompletion` 属性を `false` に設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:609
#, fuzzy
msgid "If a record cannot be written, the message is `nacked`."
msgstr "レコードを書き込めない場合、メッセージは `nacked` となる。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:614
#, fuzzy
msgid "The Pulsar client automatically retries sending messages in case of failure, until the *send timeout* is reached.  The *send timeout* is configurable with `sendTimeoutMs` attribute and by default is 30 seconds."
msgstr "Pulsarクライアントは、 *送信に* 失敗した場合、 *送信タイムアウトに* 達するまで自動的にメッセージ送信を再試行します。 *送信タイムアウトは* `sendTimeoutMs` 属性で設定可能で、デフォルトでは30秒です。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:616
#, fuzzy, no-wrap
msgid "Back-pressure and inflight records"
msgstr "背圧と機内記録"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:620
#, fuzzy
msgid "The Pulsar outbound connector handles back-pressure, monitoring the number of pending messages waiting to be written to the Pulsar broker.  The number of pending messages is configured using the `maxPendingMessages` attribute and defaults to 1000."
msgstr "Pulsarアウトバウンド・コネクタはバックプレッシャーを処理し、Pulsarブローカへの書き込みを待つ保留メッセージ数を監視します。保留メッセージ数は `maxPendingMessages` 属性を使って構成され、デフォルトは1000です。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:624
#, fuzzy
msgid "The connector only sends that amount of messages concurrently.  No other messages will be sent until at least one pending message gets acknowledged by the broker.  Then, the connector writes a new message to Pulsar when one of the broker’s pending messages get acknowledged."
msgstr "コネクタは同時にその量のメッセージしか送信しない。少なくとも一つの保留メッセージがブローカーに確認されるまで、他のメッセージは送信されません。そしてコネクタは、ブローカーの保留メッセージが一つ確認されると、Pulsarに新しいメッセージを書き込みます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:627
#, fuzzy
msgid "You can also remove the limit of pending messages by setting `maxPendingMessages` to `0`.  Note that Pulsar also enables to configure the number of pending messages per partition using `maxPendingMessagesAcrossPartitions`."
msgstr "また、 `maxPendingMessages` を `0` に設定することで、保留メッセージの制限を解除することもできます。パルサーでは、 `maxPendingMessagesAcrossPartitions` を使って、パーティションごとの保留メッセージ数を設定することもできます。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:629
#, fuzzy, no-wrap
msgid "Producer Batching"
msgstr "生産者バッチ"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:634
#, fuzzy
msgid "By default, the Pulsar producer batches individual messages together to be published to the broker.  You can configure batching parameters using `batchingMaxPublishDelayMicros`, `batchingPartitionSwitchFrequencyByPublishDelay`, `batchingMaxMessages`, `batchingMaxBytes` configuration properties, or disable it completely with `batchingEnabled=false`."
msgstr "デフォルトでは、Pulsarプロデューサーは、ブローカーにパブリッシュされる個々のメッセージをまとめてバッチします。 `batchingMaxPublishDelayMicros` , `batchingPartitionSwitchFrequencyByPublishDelay` , `batchingMaxMessages` , `batchingMaxBytes` 設定プロパティを使ってバッチ・パラメータを設定するか、 `batchingEnabled=false` で完全に無効にすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:636
#, fuzzy
msgid "When using `Key_Shared` consumer subscriptions, the `batcherBuilder` can be configured to `BatcherBuilder.KEY_BASED`."
msgstr "`Key_Shared` コンシューマー・サブスクリプションを使用する場合、 `batcherBuilder` を `BatcherBuilder.KEY_BASED` に設定することができる。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:637
#, fuzzy, no-wrap
msgid "Pulsar Transactions and Exactly-Once Processing"
msgstr "パルサー・トランザクションと完全一回処理"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:640
#, fuzzy
msgid "https://pulsar.apache.org/docs/3.0.x/txn-why/[Pulsar transactions] enable event streaming applications to consume, process, and produce messages in one atomic operation."
msgstr "link:https://pulsar.apache.org/docs/3.0.x/txn-why/[Pulsarトランザクションは] 、イベント・ストリーミング・アプリケーションが、1つのアトミック操作でメッセージを消費、処理、生成することを可能にします。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:642
#, fuzzy
msgid "Transactions allow one or multiple producers to send batch of messages to multiple topics where all messages in the batch are eventually visible to any consumer, or none is ever visible to consumers."
msgstr "トランザクションは、1つまたは複数のプロデューサが複数のトピックにメッセージのバッチを送信することを可能にし、バッチ内のすべてのメッセージは、最終的にどのコンシューマにも表示されるか、またはコンシューマには何も表示されません。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:646
#, fuzzy
msgid "In order to be used, transaction support needs to be activated on the broker configuration, using `transactionCoordinatorEnabled=true` and `systemTopicEnabled=true` broker configuration."
msgstr "使用するためには、 `transactionCoordinatorEnabled=true` と `systemTopicEnabled=true` ブローカー・コンフィギュレーションを使用して、ブローカー・コンフィギュレーション上でトランザクション・サポートを有効化する必要がある。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:649
#, fuzzy
msgid "On the client side, the transaction support also needs to be enabled on `PulsarClient` configuration:"
msgstr "クライアント側でも、 `PulsarClient` の設定でトランザクション・サポートを有効にする必要がある："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:653
#, no-wrap
msgid "mp.messaging.outgoing.tx-producer.enableTransaction=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:656
#, fuzzy
msgid "Pulsar connector provides `PulsarTransactions` custom emitter for writing records inside a transaction."
msgstr "Pulsarコネクタは、トランザクション内のレコードを書き込むための `PulsarTransactions` カスタム・エミッターを提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:658
#, fuzzy
msgid "It can be used as a regular emitter `@Channel`:"
msgstr "通常のエミッターとしても使用できる `@Channel` ："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:665
#: upstream/_versions/main/guides/pulsar.adoc:739
#, no-wrap
msgid ""
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:669
#, no-wrap
msgid ""
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:673
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.smallrye.reactive.messaging.pulsar.OutgoingMessage;\n"
"import io.smallrye.reactive.messaging.pulsar.transactions.PulsarTransactions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:676
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarTransactionalProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:680
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"tx-out-example\")\n"
"    PulsarTransactions<OutgoingMessage<Integer>> txProducer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:684
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"other-producer\")\n"
"    PulsarTransactions<String> producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:697
#, no-wrap
msgid ""
"    @Incoming(\"in\")\n"
"    public Uni<Void> emitInTransaction(Message<Integer> in) {\n"
"        return txProducer.withTransaction(emitter -> {\n"
"            emitter.send(OutgoingMessage.of(\"a\", 1));\n"
"            emitter.send(OutgoingMessage.of(\"b\", 2));\n"
"            emitter.send(OutgoingMessage.of(\"c\", 3));\n"
"            producer.send(emitter, \"4\");\n"
"            producer.send(emitter, \"5\");\n"
"            producer.send(emitter, \"6\");\n"
"            return Uni.createFrom().completionStage(in::ack);\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:704
#, fuzzy
msgid "The function given to the `withTransaction` method receives a `TransactionalEmitter` for producing records, and returns a `Uni` that provides the result of the transaction.  If the processing completes successfully, the producer is flushed and the transaction is committed.  If the processing throws an exception, returns a failing `Uni`, or marks the `TransactionalEmitter` for abort, the transaction is aborted."
msgstr "`withTransaction` メソッドに与えられた関数は、レコードを生成するための `TransactionalEmitter` を受け取り、トランザクションの結果を提供する `Uni` を返す。処理が正常に完了した場合、プロデューサはフラッシュされ、トランザクショ ンはコミットされる。処理が例外を投げるか、失敗した `Uni` を返すか、 `TransactionalEmitter` に中止のマークを付けると、トランザクションは中止される。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:709
#, fuzzy
msgid "Multiple transactional producers can participate in a single transaction.  This ensures all messages are sent using the started transaction and before the transaction is committed, all participating producers are flushed."
msgstr "複数のトランザクション・プロデューサーが単一のトランザクションに参加できる。これは、すべてのメッセージが開始されたトランザクションを使用して送信され、トランザクションがコミットされる前に、参加しているすべてのプロデューサーがフラッシュされることを保証します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:713
#, fuzzy
msgid "If this method is called on a Vert.x context, the processing function is also called on that context.  Otherwise, it is called on the sending thread of the producer."
msgstr "このメソッドがVert.xコンテキスト上で呼び出された場合、処理関数もそのコンテキスト上で呼び出される。そうでない場合は、プロデューサの送信スレッド上で呼び出されます。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:714
#, no-wrap
msgid "Exactly-Once Processing"
msgstr "Exactly-Once 処理"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:720
#, fuzzy
msgid "Pulsar Transactions API also allows managing consumer offsets inside a transaction, together with produced messages.  This in turn enables coupling a consumer with a transactional producer in a consume-transform-produce pattern, also known as exactly-once processing.  It means that an application consumes messages, processes them, publishes the results to a topic, and commits offsets of the consumed messages in a transaction."
msgstr "Pulsar Transactions APIはまた、プロデュース・メッセージと共に、トランザクション内のコンシューマ・オフセットを管理することもできます。これにより、コンシューマとトランザクション・プロデューサを、コンシューマ-トランスフォーム-プロデュースのパターンで結合することができます。つまり、アプリケーションはメッセージを消費し、処理し、結果をトピックにパブリッシュし、消費されたメッセージのオフセットをトランザクション内でコミットする。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:722
#, fuzzy
msgid "The `PulsarTransactions` emitter also provides a way to apply exactly-once processing to an incoming Pulsar message inside a transaction."
msgstr "`PulsarTransactions` エミッターはまた、トランザクションの中で、受信したパルサー・メッセージにジャストワンス処理を適用する方法を提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:724
#, fuzzy
msgid "The following example includes a batch of Pulsar messages inside a transaction."
msgstr "以下の例は、トランザクションの中にPulsarメッセージのバッチを含んでいます。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:731
#, no-wrap
msgid ""
"mp.messaging.outgoing.tx-out-example.enableTransaction=true\n"
"# ...\n"
"mp.messaging.incoming.in-channel.enableTransaction=true\n"
"mp.messaging.incoming.in-channel.batchReceive=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:742
#, no-wrap
msgid ""
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:747
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.smallrye.reactive.messaging.pulsar.PulsarIncomingBatchMessage;\n"
"import io.smallrye.reactive.messaging.pulsar.PulsarMessage;\n"
"import io.smallrye.reactive.messaging.pulsar.transactions.PulsarTransactions;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:750
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarExactlyOnceProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:754
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"tx-out-example\")\n"
"    PulsarTransactions<Integer> txProducer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:764
#, no-wrap
msgid ""
"    @Incoming(\"in-channel\")\n"
"    public Uni<Void> emitInTransaction(PulsarIncomingBatchMessage<Integer> batch) {\n"
"        return txProducer.withTransactionAndAck(batch, emitter -> {\n"
"            for (PulsarMessage<Integer> record : batch) {\n"
"                emitter.send(PulsarMessage.of(record.getPayload() + 1, record.getKey()));\n"
"            }\n"
"            return Uni.createFrom().voidItem();\n"
"        });\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:769
#, fuzzy
msgid "If the processing completes successfully, the message is acknowledged inside the transaction and the transaction is committed."
msgstr "処理が正常に完了すると、メッセージはトランザクション内で承認され、トランザク ションはコミットされる。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:773
#, fuzzy
msgid "When using exactly-once processing, messages can only be acked individually rather than cumulatively."
msgstr "exactly-once 処理を使う場合、メッセージは累積的にではなく、個別にしかアックできない。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:777
#, fuzzy
msgid "If the processing needs to abort, the message is nack'ed. One of the failure strategies can be employed in order to retry the processing or simply fail-stop.  Note that the `Uni` returned from the `withTransaction` will yield a failure if the transaction fails and is aborted."
msgstr "処理を中断する必要がある場合、メッセージはnack'edされる。処理を再試行するか、単にフェイルストップするために、失敗ストラテジーのいずれかを採用することができる。トランザクションが失敗して中止された場合、 `withTransaction` から返される `Uni` は失敗となることに注意。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:781
#, fuzzy
msgid "The application can choose to handle the error case, but for the message consumption to continue, `Uni` returned from the `@Incoming` method must not result in failure.  `PulsarTransactions#withTransactionAndAck` method will ack and nack the message but will not stop the reactive stream.  Ignoring the failure simply resets the consumer to the last committed offsets and resumes the processing from there."
msgstr "アプリケーションはエラーのケースを処理することを選択できるが、メッ セージ消費を継続するためには、 `@Incoming` メソッドから返される `Uni` が失敗であってはならない。 `PulsarTransactions#withTransactionAndAck` メソッドはメッセージをackしてnackするが、リアクティブ・ストリームを停止することはない。失敗を無視すると、コンシューマーは単に最後にコミットしたオフセットにリセットされ、そこから処理が再開される。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:785
#, fuzzy
msgid "In order to avoid duplicates in case of failure, it is recommended to enable message deduplication and batch index level acknowledgment on the broker side:"
msgstr "障害時の重複を避けるため、ブローカー側でメッセージの重複排除とバッチ・インデックス・レベルの確認応答を有効にすることを推奨する："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:791
#, no-wrap
msgid ""
"quarkus.pulsar.devservices.broker-config.brokerDeduplicationEnabled=true\n"
"quarkus.pulsar.devservices.broker-config.brokerDeduplicationEntriesInterval=1000\n"
"quarkus.pulsar.devservices.broker-config.brokerDeduplicationSnapshotIntervalSeconds=3000\n"
"quarkus.pulsar.devservices.broker-config.acknowledgmentAtBatchIndexLevelEnabled=3000\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:793
#, no-wrap
msgid "mp.messaging.incoming.data.batchIndexAckEnabled=true\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:797
#, fuzzy, no-wrap
msgid "Pulsar Schema Configuration & Auto Schema Discovery"
msgstr "Pulsarスキーマ構成 & 自動スキーマ検出"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:803
#, fuzzy
msgid "Pulsar messages are stored with payloads as unstructured byte array.  A Pulsar **schema** defines how to serialize structured data to the raw message bytes.  The **schema** is applied in producers and consumers to write and read with an enforced data structure.  It serializes data into raw bytes before they are published to a topic and deserializes the raw bytes before they are delivered to consumers."
msgstr "Pulsarメッセージは、構造化されていないバイト配列としてペイロードと共に保存されます。Pulsar *スキーマは* 、構造化データを生のメッセージ・バイトにシリアル化する方法を定義します。 *スキーマは* プロデューサとコンシューマに適用され、強制されたデータ構造で書き込みと読み込みを行います。トピックにパブリッシュされる前にデータを未加工バイトにシリアライズし、コンシューマに配信される前に未加工バイトをデシリアライズします。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:807
#, fuzzy
msgid "Pulsar uses a schema registry as a central repository to store the registered schema information, which enables producers/consumers to coordinate the schema of a topic's messages through brokers.  By default the Apache BookKeeper is used to store schemas."
msgstr "Pulsarは、登録されたスキーマ情報を保存する中央リポジトリとしてスキーマ・レジストリを使用します。これにより、プロデューサ/コンシューマはブローカーを通じて、トピック・メッセージのスキーマを調整することができます。デフォルトでは、Apache BookKeeperがスキーマの保存に使用されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:811
#, fuzzy
msgid "Pulsar API provides built-in schema information for a number of https://pulsar.apache.org/docs/3.0.x/schema-understand#primitive-type[primitive types] and https://pulsar.apache.org/docs/3.0.x/schema-understand#complex-type[complex types] such as Key/Value, Avro and Protobuf."
msgstr "Pulsar APIは、キー/値、Avro、Protobufといった数多くの link:https://pulsar.apache.org/docs/3.0.x/schema-understand#primitive-type[プリミティブ・タイプと] link:https://pulsar.apache.org/docs/3.0.x/schema-understand#complex-type[複雑なタイプの] ための組み込みスキーマ情報を提供します。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:813
#, fuzzy
msgid "The Pulsar Connector allows specifying the schema as a primitive type using the `schema` property:"
msgstr "Pulsar Connectorでは、 `schema` プロパティを使用して、スキーマをプリミティブ・タイプとして指定することができます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:818
#, no-wrap
msgid ""
"mp.messaging.incoming.prices.connector=smallrye-pulsar\n"
"mp.messaging.incoming.prices.schema=INT32\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:821
#, no-wrap
msgid ""
"mp.messaging.outgoing.prices-out.connector=smallrye-pulsar\n"
"mp.messaging.outgoing.prices-out.schema=DOUBLE\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:825
#, fuzzy
msgid "If the value for the `schema` property matches a https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/SchemaType.html[Schema Type] a simple schema will be created with that type and will be used for that channel."
msgstr "`schema` プロパティの値が link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-api/latest/org/apache/pulsar/common/schema/SchemaType.html[スキーマ・タイプと] 一致する場合、そのタイプでシンプル・スキーマが作成され、そのチャネルに使用される。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:827
#, fuzzy
msgid "The Pulsar Connector allows configuring complex schema types by providing `Schema` beans through CDI, identified with the `@Identifier` qualifier."
msgstr "Pulsar Connectorは、 `@Identifier` 修飾子で識別された `Schema` BeanをCDIを通して提供することで、複雑なスキーマ・タイプを構成することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:829
#, fuzzy
msgid "For example the following bean provides an JSON schema and a Key/Value schema:"
msgstr "例えば、以下のBeanはJSONスキーマとKey/Valueスキーマを提供します："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:833
#, no-wrap
msgid "package pulsar.configuration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:840
#, no-wrap
msgid ""
"import org.apache.pulsar.client.api.Schema;\n"
"import org.apache.pulsar.common.schema.KeyValue;\n"
"import org.apache.pulsar.common.schema.KeyValueEncodingType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:845
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarSchemaProvider {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:849
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"user-schema\")\n"
"    Schema<User> userSchema = Schema.JSON(User.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:855
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"a-channel\")\n"
"    Schema<KeyValue<Integer, User>> keyValueSchema() {\n"
"        return Schema.KeyValue(Schema.INT32, Schema.JSON(User.class), KeyValueEncodingType.SEPARATED);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:859
#, no-wrap
msgid ""
"    public static class User {\n"
"        String name;\n"
"        int age;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:862
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:865
#, fuzzy
msgid "To configure the incoming channel `users` with defined schema, you need to set the `schema` property to the identifier of the schema `user-schema`:"
msgstr "受信チャンネル `users` を定義されたスキーマで設定するには、 `schema` プロパティをスキーマの識別子 `user-schema` に設定する必要がある："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:870
#, no-wrap
msgid ""
"mp.messaging.incoming.users.connector=smallrye-pulsar\n"
"mp.messaging.incoming.users.schema=user-schema\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:874
#, fuzzy
msgid "If no `schema` property is found, the connector looks for `Schema` beans identified with the channel name.  For example, the outgoing channel `a-channel` will use the key/value schema."
msgstr "`schema` プロパティが見つからない場合、コネクタはチャネル名で識別される `Schema` Bean を探す。例えば、発信チャネル `a-channel` は、キー/値スキーマを使用する。"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:878
#, no-wrap
msgid "mp.messaging.outgoing.a-channel.connector=smallrye-pulsar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:881
#, fuzzy
msgid "If no schema information is provided incoming channels will use `Schema.AUTO_CONSUME()`, whereas outgoing channels will use `Schema.AUTO_PRODUCE_BYTES()` schemas."
msgstr "スキーマ情報が提供されない場合、受信チャンネルは `Schema.AUTO_CONSUME()` を使用し、送信チャンネルは `Schema.AUTO_PRODUCE_BYTES()` スキーマを使用する。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:882
#, fuzzy, no-wrap
msgid "Auto Schema Discovery"
msgstr "自動スキーマ検出"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:886
#, fuzzy
msgid "When using SmallRye Reactive Messaging Pulsar (`io.quarkus:quarkus-smallrye-reactive-messaging-pulsar`), Quarkus can often automatically detect the correct Pulsar Schema to configure.  This autodetection is based on declarations of `@Incoming` and `@Outgoing` methods, as well as injected ``@Channel``s."
msgstr "SmallRye Reactive Messaging Pulsar ( `io.quarkus:quarkus-smallrye-reactive-messaging-pulsar` ) を使用する際、Quarkusは多くの場合、設定すべき正しいPulsarスキーマを自動的に検出することができます。この自動検出は、 `@Incoming` と `@Outgoing` メソッドの宣言と、注入された `@Channel` sに基づいています。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:888
msgid "For example, if you declare"
msgstr "たとえば、以下のように宣言した場合"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:895
#, no-wrap
msgid ""
"@Outgoing(\"generated-price\")\n"
"public Multi<Integer> generate() {\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:898
#, fuzzy
msgid "and your configuration indicates that the `generated-price` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` attribute of the `generated-price` channel to Pulsar Schema `INT32`."
msgstr "で、 `generated-price` チャネルが `smallrye-pulsar` コネクタを使用する設定になっている場合、Quarkusは自動的に `generated-price` チャネルの `schema` 属性をPulsar Schema `INT32` に設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:900
msgid "Similarly, if you declare"
msgstr "同様に、以下を宣言した場合"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:907
#, no-wrap
msgid ""
"@Incoming(\"my-pulsar-consumer\")\n"
"public void consume(org.apache.pulsar.api.client.Message<byte[]> record) {\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:910
#, fuzzy
msgid "and your configuration indicates that the `my-pulsar-consumer` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` attribute to Pulsar `BYTES` Schema."
msgstr "コンフィギュレーションが、 `my-pulsar-consumer` チャンネルが `smallrye-pulsar` コネクタを使用することを示している場合、Quarkusは自動的に `schema` 属性をPulsar `BYTES` Schemaに設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:912
msgid "Finally, if you declare"
msgstr "最後に、以下を宣言した場合"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:918
#, no-wrap
msgid ""
"@Inject\n"
"@Channel(\"price-create\")\n"
"Emitter<Double> priceEmitter;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:921
#, fuzzy
msgid "and your configuration indicates that the `price-create` channel uses the `smallrye-pulsar` connector, then Quarkus will automatically set the `schema` to Pulsar `INT64` Schema."
msgstr "設定が、 `price-create` チャンネルが `smallrye-pulsar` コネクタを使用することを示している場合、Quarkusは自動的に `schema` をPulsar `INT64` Schemaに設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:923
#, fuzzy
msgid "The full set of types supported by the Pulsar Schema autodetection is:"
msgstr "パルサー・スキーマ自動検出がサポートする型は以下の通り："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:925
msgid "`short` and `java.lang.Short`"
msgstr "`short` および `java.lang.Short`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:926
msgid "`int` and `java.lang.Integer`"
msgstr "`int` および `java.lang.Integer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:927
msgid "`long` and `java.lang.Long`"
msgstr "`long` および `java.lang.Long`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:928
msgid "`float` and `java.lang.Float`"
msgstr "`float` および `java.lang.Float`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:929
msgid "`double` and `java.lang.Double`"
msgstr "`double` および`java.lang.Double`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:930
msgid "`byte[]`"
msgstr "`byte[]`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:931
#, fuzzy
msgid "`java.time.Instant`"
msgstr "`java.time.Instant`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:932
#, fuzzy
msgid "`java.sql.Timestamp`"
msgstr "`java.sql.Timestamp`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:933
#, fuzzy
msgid "`java.time.LocalDate`"
msgstr "`java.time.LocalDate`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:934
#, fuzzy
msgid "`java.time.LocalTime`"
msgstr "`java.time.LocalTime`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:935
#, fuzzy
msgid "`java.time.LocalDateTime`"
msgstr "`java.time.LocalDateTime`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:936
msgid "`java.nio.ByteBuffer`"
msgstr "`java.nio.ByteBuffer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:937
#, fuzzy
msgid "classes generated from Avro schemas, as well as Avro `GenericRecord`, will be configured with `AVRO` schema type"
msgstr "Avro スキーマから生成されたクラスは、Avro `GenericRecord` と同様に、 `AVRO` スキーマタイプで構成されます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:938
#, fuzzy
msgid "classes generated from Protobuf schemas, will be configured with `PROTOBUF` schema type"
msgstr "Protobuf スキーマから生成されたクラスは、 `PROTOBUF` スキーマタイプで構成されます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:939
#, fuzzy
msgid "other classes will automatically be configured with `JSON` schema type"
msgstr "他のクラスは自動的に `JSON` スキーマタイプで構成されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:943
#, fuzzy
msgid "Note that `JSON` schema type enforces schema validation."
msgstr "`JSON` スキーマ・タイプはスキーマ検証を強制することに注意。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:946
#, fuzzy
msgid "In addition to those Pulsar-provided schemas, Quarkus provides following schema implementations _without enforcing validation_ :"
msgstr "Pulsarが提供するスキーマに加え、Quarkusは以下のスキーマ実装を提供しています _：_"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:948
#, fuzzy
msgid "`io.vertx.core.buffer.Buffer` will be configured with `io.quarkus.pulsar.schema.BufferSchema` schema"
msgstr "`io.vertx.core.buffer.Buffer` は スキーマで構成されます。 `io.quarkus.pulsar.schema.BufferSchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:949
#, fuzzy
msgid "`io.vertx.core.json.JsonObject` will be configured with `io.quarkus.pulsar.schema.JsonObjectSchema` schema"
msgstr "`io.vertx.core.json.JsonObject` は スキーマで構成されます。 `io.quarkus.pulsar.schema.JsonObjectSchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:950
#, fuzzy
msgid "`io.vertx.core.json.JsonArray` will be configured with `io.quarkus.pulsar.schema.JsonArraySchema` schema"
msgstr "`io.vertx.core.json.JsonArray` は スキーマで構成されます。 `io.quarkus.pulsar.schema.JsonArraySchema` "

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:953
#, fuzzy
msgid "For schema-less Json serialization, if the `schema` configuration is set to `ObjectMapper<fully_qualified_name_of_the_bean>`, a Schema will be generated using the Jackson `ObjectMapper`, without enforcing a Pulsar Schema validation.  `io.quarkus.pulsar.schema.ObjectMapperSchema` can be used to explicitly configure JSON schema without validation."
msgstr "スキーマ・レスJsonシリアライゼーションのために、 `schema` 構成が `ObjectMapper<fully_qualified_name_of_the_bean>` に設定されている場合、Pulsarスキーマ検証を強制することなく、Jackson `ObjectMapper` を使ってスキーマが生成されます。 `io.quarkus.pulsar.schema.ObjectMapperSchema` 、検証なしでJSONスキーマを明示的に構成することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:955
#, fuzzy
msgid "If a `schema` is set by configuration, it won't be replaced by the auto-detection."
msgstr "コンフィギュレーションによって `schema` が設定されている場合、自動検出によって置き換えられることはない。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:958
#, fuzzy
msgid "In case you have any issues with serializer auto-detection, you can switch it off completely by setting `quarkus.reactive-messaging.pulsar.serializer-autodetection.enabled=false`.  If you find you need to do this, please file a bug in the link:https://github.com/quarkusio/quarkus/issues[Quarkus issue tracker] so we can fix whatever problem you have."
msgstr "シリアライザの自動検出に問題がある場合は、 `quarkus.reactive-messaging.pulsar.serializer-autodetection.enabled=false` を設定することで完全にオフにすることができます。その必要がある場合は、Quarkus link:https://github.com/quarkusio/quarkus/issues[のissue trackerに] バグを報告してください。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:963
#, fuzzy, no-wrap
msgid "Configuring Pulsar clients"
msgstr "パルサー・クライアントの設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:965
#, fuzzy
msgid "Pulsar clients, consumers and producers are very customizable to configure how a Pulsar client application behaves."
msgstr "Pulsarクライアント、コンシューマーおよびプロデューサーは、Pulsarクライアント・アプリケーションの動作を設定するために、非常にカスタマイズが可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:968
#, fuzzy
msgid "The Pulsar connector creates a Pulsar client and, a consumer or a producer per channel, each with sensible defaults to ease their configuration.  Although the creation is handled, all available configuration options remain configurable through Pulsar channels."
msgstr "Pulsarコネクターは、Pulsarクライアントと、チャンネルごとにコンシューマーまたはプロデューサを作成します。作成は処理されますが、利用可能な設定オプションはすべて、Pulsarチャンネルを通して設定可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:974
#, fuzzy
msgid "While idiomatic way of creating `PulsarClient`, `PulsarConsumer` or `PulsarProducer` are through builder APIs, in its essence those APIs build each time a configuration object, to pass onto the implementation.  Those are https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ClientConfigurationData.html[ClientConfigurationData], https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.html[ConsumerConfigurationData] and https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.html[ProducerConfigurationData]."
msgstr "`PulsarClient` 、 `PulsarConsumer` 、 `PulsarProducer` を作成する慣用的な方法は、ビルダーAPIを介することであるが、本質的には、これらのAPIは、実装に渡すためのコンフィギュレーション・オブジェクトを毎回構築する。それが link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ClientConfigurationData.html[ClientConfigurationData] 、 link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ConsumerConfigurationData.html[ConsumerConfigurationData] 、 link:https://javadoc.io/doc/org.apache.pulsar/pulsar-client-original/latest/org/apache/pulsar/client/impl/conf/ProducerConfigurationData.html[ProducerConfigurationData] です。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:978
#, fuzzy
msgid "Pulsar Connector allows receiving properties for those configuration objects directly.  For example, the broker authentication information for `PulsarClient` is received using `authPluginClassName` and `authParams` properties.  In order to configure the authentication for the incoming channel `data` :"
msgstr "Pulsar Connectorはこれらの設定オブジェクトのプロパティを直接受け取ることができます。例えば、 `PulsarClient` のブローカ認証情報は、 `authPluginClassName` と `authParams` プロパティを使って受け取ります。着信チャネル `data` の認証を構成するには、以下のようにします："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:988
#, no-wrap
msgid ""
"mp.messaging.incoming.data.connector=smallrye-pulsar\n"
"mp.messaging.incoming.data.serviceUrl=pulsar://localhost:6650\n"
"mp.messaging.incoming.data.topic=topic\n"
"mp.messaging.incoming.data.subscriptionInitialPosition=Earliest\n"
"mp.messaging.incoming.data.schema=INT32\n"
"mp.messaging.incoming.data.authPluginClassName=org.apache.pulsar.client.impl.auth.AuthenticationBasic\n"
"mp.messaging.incoming.data.authParams={\"userId\":\"superuser\",\"password\":\"admin\"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:991
#, fuzzy
msgid "Note that the Pulsar consumer property `subscriptionInitialPosition` is also configured with the `Earliest` value which represents with enum value `SubscriptionInitialPosition.Earliest`."
msgstr "パルサーのコンシューマ・プロパティ `subscriptionInitialPosition` も、列挙値 `SubscriptionInitialPosition.Earliest` を表す `Earliest` 値で設定されていることに注意してください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:996
#, fuzzy
msgid "This approach covers most of the configuration cases.  However, non-serializable objects such as `CryptoKeyReader`, `ServiceUrlProvider` etc. cannot be configured this way.  The Pulsar Connector allows taking into account instances of Pulsar configuration data objects – `ClientConfigurationData`, `ConsumerConfigurationData`, `ProducerConfigurationData`:"
msgstr "この方法は、ほとんどの設定ケースをカバーする。しかし、 `CryptoKeyReader` 、 `ServiceUrlProvider` などのシリアライズ不可能なオブジェクトは、この方法では構成できません。Pulsar Connectorでは、Pulsar構成データ・オブジェクトのインスタンス、 `ClientConfigurationData` 、 `ConsumerConfigurationData` 、 `ProducerConfigurationData` を考慮に入れることができます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1002
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Produces;\n"
"import io.smallrye.common.annotation.Identifier;\n"
"import org.apache.pulsar.client.impl.conf.ConsumerConfigurationData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1004
#: upstream/_versions/main/guides/pulsar.adoc:1036
#: upstream/_versions/main/guides/pulsar.adoc:1062
#: upstream/_versions/main/guides/pulsar.adoc:1108
#, no-wrap
msgid "class PulsarConfig {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1016
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"my-consumer-options\")\n"
"    public ConsumerConfigurationData<String> getConsumerConfig() {\n"
"        ConsumerConfigurationData<String> data = new ConsumerConfigurationData<>();\n"
"        data.setAckReceiptEnabled(true);\n"
"        data.setCryptoKeyReader(DefaultCryptoKeyReader.builder()\n"
"                //...\n"
"                .build());\n"
"        return data;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1020
#, fuzzy
msgid "This instance is retrieved and used to configure the client used by the connector.  You need to indicate the name of the client using the `client-configuration`, `consumer-configuration` or `producer-configuration` attributes:"
msgstr "このインスタンスが取得され、コネクタが使用するクライアントの構成に使用される。 `client-configuration` , `consumer-configuration` または `producer-configuration` 属性を使用してクライアントの名前を指定する必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1024
#, no-wrap
msgid "mp.messaging.incoming.prices.consumer-configuration=my-consumer-options\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1027
#, fuzzy
msgid "If no `[client|consumer|producer]-configuration` is configured, the connector will look for instances identified with the channel name:"
msgstr "`[client|consumer|producer]-configuration` が設定されていない場合、コネクタはチャネル名で識別されるインスタンスを探します："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1034
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Produces;\n"
"import io.smallrye.common.annotation.Identifier;\n"
"import org.apache.pulsar.client.impl.AutoClusterFailover;\n"
"import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1048
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"prices\")\n"
"    public ClientConfigurationData getClientConfig() {\n"
"        ClientConfigurationData data = new ClientConfigurationData();\n"
"        data.setEnableTransaction(true);\n"
"        data.setServiceUrlProvider(AutoClusterFailover.builder()\n"
"                // ...\n"
"                .build());\n"
"        return data;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1051
#, fuzzy
msgid "You also can provide a `Map<String, Object>` containing configuration values by key:"
msgstr "また、キー別に設定値を含む `Map<String, Object>` ："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1060
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Produces;\n"
"import io.smallrye.common.annotation.Identifier;\n"
"import org.apache.pulsar.client.api.BatcherBuilder;\n"
"import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n"
"import org.apache.pulsar.client.impl.customroute.PartialRoundRobinMessageRouterImpl;\n"
"import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1072
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"prices\")\n"
"    public Map<String, Object> getProducerConfig() {\n"
"        return Map.of(\n"
"                \"batcherBuilder\", BatcherBuilder.KEY_BASED,\n"
"                \"sendTimeoutMs\", 3000,\n"
"                \"customMessageRouter\", new PartialRoundRobinMessageRouterImpl(4));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1075
#, fuzzy
msgid "Different configuration sources are loaded in the following order of precedence, from the least important to the highest:"
msgstr "異なるコンフィギュレーション・ソースは、重要度の低いものから高いものへと、以下の優先順位でロードされる："

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1077
#, fuzzy
msgid "`Map<String, Object>` config map produced with default config identifier, `default-pulsar-client`, `default-pulsar-consumer`, `default-pulsar-producer`."
msgstr "`Map<String, Object>` デフォルトのコンフィグ識別子 , , で作成されたコンフィグマップ。 `default-pulsar-client` `default-pulsar-consumer` `default-pulsar-producer`"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1078
#, fuzzy
msgid "`Map<String, Object>` config map produced with identifier in the configuration or channel name"
msgstr "`Map<String, Object>` コンフィギュレーションまたはチャンネル名の識別子で生成される設定マッピング"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1079
#, fuzzy
msgid "`[Client|Producer|Consuemr]ConfigurationData` object produced with identifier in the channel configuration or the channel name"
msgstr "`[Client|Producer|Consuemr]ConfigurationData` チャネルのコンフィギュレーションまたはチャネル名の識別子で生成されるオブジェクト。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1080
#, fuzzy
msgid "Channel configuration properties named with `[Client|Producer|Consuemr]ConfigurationData` field names."
msgstr "`[Client|Producer|Consuemr]ConfigurationData` フィールド名で命名されたチャンネル設定プロパティ。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1082
#, fuzzy
msgid "See xref:configuration-reference[Configuration Reference] for the exhaustive list of configuration options."
msgstr "コンフィギュレーション・オプションの完全なリストについては、 xref:configuration-reference[コンフィギュレーション・リファレンスを] 参照のこと。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1083
#, fuzzy, no-wrap
msgid "Configuring Pulsar Authentication"
msgstr "Pulsar認証の設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1086
#, fuzzy
msgid "Pulsar provides a pluggable authentication framework, and Pulsar brokers/proxies use this mechanism to authenticate clients."
msgstr "Pulsarはプラグ可能な認証フレームワークを提供し、Pulsarブローカー/プロキシはこの認証メカニズムを使用してクライアントを認証します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1088
#, fuzzy
msgid "Clients can be configured in `application.properties` file using `authPluginClassName` and `authParams` attributes:"
msgstr "クライアントは `authPluginClassName` と `authParams` 属性を使用して `application.properties` ファイルで設定できます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1094
#, no-wrap
msgid ""
"pulsar.client.serviceUrl=pulsar://pulsar:6650\n"
"pulsar.client.authPluginClassName=org.apache.pulsar.client.impl.auth.AuthenticationBasic\n"
"pulsar.client.authParams={\"userId\":\"superuser\",\"password\":\"admin\"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1097
#, fuzzy
msgid "Or programmatically:"
msgstr "あるいはプログラム的に："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1101
#, no-wrap
msgid "import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1106
#, no-wrap
msgid ""
"import jakarta.enterprise.inject.Produces;\n"
"import io.smallrye.common.annotation.Identifier;\n"
"import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n"
"import org.apache.pulsar.client.impl.auth.AuthenticationBasic;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1119
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"prices\")\n"
"    public ClientConfigurationData config() {\n"
"        var data = new ClientConfigurationData();\n"
"        var auth = new AuthenticationBasic();\n"
"        auth.configure(Map.of(\"userId\", \"superuser\", \"password\", \"admin\"));\n"
"        data.setAuthentication(auth);\n"
"        return data;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:1121
#, fuzzy, no-wrap
msgid "Configuring access to Datastax Luna Streaming"
msgstr "Datastax Luna Streamingへのアクセス設定"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1125
#, fuzzy
msgid "Luna Streaming is a production-ready distribution of Apache Pulsar, with tools and support from DataStax.  After creating your DataStax Luna Pulsar tenant, note the auto generated token, and configure the token authentication:"
msgstr "Luna Streamingは、DataStaxがツールとサポートを提供する、Apache Pulsarの製品版ディストリビューションです。DataStax Luna Pulsarテナントを作成したら、自動生成されるトークンに注意し、トークン認証を構成します："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1131
#, no-wrap
msgid ""
"pulsar.client.serviceUrl=pulsar+ssl://pulsar-aws-eucentral1.streaming.datastax.com:6651\n"
"pulsar.client.authPluginClassName=org.apache.pulsar.client.impl.auth.AuthenticationToken\n"
"pulsar.client.authParams=token:eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2ODY4MTc4MzQsImlzcyI6ImRhdGFzdGF4Iiwic3ViIjoiY2xpZW50OzA3NGZhOTI4LThiODktNDBhNC04MDEzLWNlNjVkN2JmZWIwZTtjSEpwWTJWejsyMDI5ODdlOGUyIiwidG9rZW5pZCI6IjIwMjk4N2U4ZTIifQ....\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1134
#, fuzzy
msgid "Make sure to create topics beforehand, or enable the _Auto Topic Creation_ in the namespace configuration."
msgstr "事前にトピックを作成しておくか、ネームスペースの設定で _トピックの自動_ 作成を有効にしてください。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1136
#, fuzzy
msgid "Note that the topic configuration needs to reference full name of topics:"
msgstr "トピックのコンフィギュレーションは、トピックのフルネームを参照する必要があることに注意："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1140
#, no-wrap
msgid "mp.messaging.incoming.prices.topic=persistent://my-tenant/default/prices\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/pulsar.adoc:1142
#, no-wrap
msgid "Configuring access to StreamNative Cloud"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1146
msgid "StreamNative Cloud is a fully managed Pulsar-as-a-Service available in different deployment options, whether it is fully-hosted, on a public cloud but managed by StreamNative or self-managed on Kubernetes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1150
msgid "The StreamNative Pulsar clusters use Oauth2 authentication, so you need to make sure that a https://docs.streamnative.io/docs/service-account[service account] exists with required https://docs.streamnative.io/docs/access-control#authorize-namespaces[permissions to the Pulsar namespace/topic] your application is using."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1154
msgid "Next, you need to download the **Key file** (which serves as **private key**) of the service account and note the **issuer URL** (typically `https://auth.streamnative.cloud/`)  and the **audience** (for example `urn:sn:pulsar:o-rf3ol:redhat`) for your cluster.  The **Pulsar Clients** page in the **Admin** section in the StreamNative Cloud console helps you with this process."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1156
msgid "To configure your application with Pulsar Oauth2 authentication:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1164
#, no-wrap
msgid ""
"pulsar.tenant=public\n"
"pulsar.namespace=default\n"
"pulsar.client.serviceUrl=pulsar+ssl://quarkus-71eaadbf-a6f3-4355-85d2-faf436b23d86.aws-euc1-prod-snci-pool-slug.streamnative.aws.snio.cloud:6651\n"
"pulsar.client.authPluginClassName=org.apache.pulsar.client.impl.auth.oauth2.AuthenticationOAuth2\n"
"pulsar.client.authParams={\"type\":\"client_credentials\",\"privateKey\":\"data:application/json;base64,<base64-encoded value>\",\"issuerUrl\":\"https://auth.streamnative.cloud/\",\"audience\":\"urn:sn:pulsar:o-rfwel:redhat\"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1167
msgid "Note that the `pulsar.client.authParams` configuration contains a Json string with `issuerUrl`, `audience` and the `privateKey` in the `data:application/json;base64,<base64-encoded-key-file>` format."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1169
msgid "Alternatively you can configure the authentication programmatically:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1173
#, no-wrap
msgid "package org.acme.pulsar;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1176
#, no-wrap
msgid ""
"import java.net.MalformedURLException;\n"
"import java.net.URL;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1180
#, no-wrap
msgid ""
"import org.apache.pulsar.client.impl.auth.oauth2.AuthenticationFactoryOAuth2;\n"
"import org.apache.pulsar.client.impl.conf.ClientConfigurationData;\n"
"import org.eclipse.microprofile.config.inject.ConfigProperty;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1184
#, no-wrap
msgid ""
"import io.smallrye.common.annotation.Identifier;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
"import jakarta.enterprise.inject.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1187
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PulsarAuth {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1190
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"pulsar.issuerUrl\")\n"
"    String issuerUrl;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1193
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"pulsar.credentials\")\n"
"    String credentials;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1196
#, no-wrap
msgid ""
"    @ConfigProperty(name = \"pulsar.audience\")\n"
"    String audience;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1205
#, no-wrap
msgid ""
"    @Produces\n"
"    @Identifier(\"pulsar-auth\")\n"
"    public ClientConfigurationData pulsarClientConfig() throws MalformedURLException {\n"
"        var data = new ClientConfigurationData();\n"
"        data.setAuthentication(AuthenticationFactoryOAuth2.clientCredentials(new URL(issuerUrl), PulsarAuth.class.getResource(credentials), audience));\n"
"        return data;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1208
msgid "This assumes that the key file is included to the application classpath as a resource, then the configuration would like the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1212
#, no-wrap
msgid "mp.messaging.incoming.prices.client-configuration=pulsar-auth\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1219
#, no-wrap
msgid ""
"pulsar.tenant=public\n"
"pulsar.namespace=default\n"
"pulsar.client.serviceUrl=pulsar+ssl://quarkus-71eaadbf-a6f3-4355-85d2-faf436b23d86.aws-euc1-prod-snci-pool-slug.streamnative.aws.snio.cloud:6651\n"
"pulsar.issuerUrl=https://auth.streamnative.cloud/\n"
"pulsar.audience=urn:sn:pulsar:o-rfwel:redhat\n"
"pulsar.credentials=/o-rfwel-quarkus-app.json\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1222
msgid "Note that channels using the client configuration identified with `pulsar-auth` need to set the `client-configuration` attribute."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1224
#, no-wrap
msgid "Health Checks"
msgstr "ヘルスチェック"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1228
#, fuzzy
msgid "The Quarkus extension reports startup, readiness and liveness of each channel managed by the Pulsar connector.  Health checks rely on the Pulsar client to verify that a connection is established with the broker."
msgstr "Quarkusエクステンションは、Pulsarコネクターが管理する各チャネルの起動、準備完了、有効性をレポートします。ヘルス・チェックは、Pulsarクライアントがブローカーとの接続が確立されていることを確認することに依存します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1231
#, fuzzy, no-wrap
msgid ""
"**Startup** and **Readiness** probes for both inbound and outbound channels report *OK* when the\n"
"connection with the broker is established.\n"
msgstr "ブローカーとの接続が確立されると、インバウンド・チャンネルとアウトバウンド・チャンネルの両方で、 *起動* プローブと *準備* プローブが *OKを* 報告する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1234
#, fuzzy
msgid "The **Liveness** probe for both inbound and outbound channels reports *OK* when the connection is established with the broker **AND** that no failures have been caught."
msgstr "インバウンド・チャンネルとアウトバウンド・チャンネルの両方で、 *liveness* プローブは、ブローカーとの接続が確立さ *れ、* 失敗が検出されなかった場合に *OKを* 報告する。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1240
#, fuzzy
msgid "Note that a message processing failures *nacks* the message which is then handled by the failure-strategy. It is the responsibility of the failure-strategy to report the failure and influence the outcome of the liveness checks. The `fail` failure strategy reports the failure and so the liveness check will report the failure."
msgstr "メッセージ処理に失敗すると *、* そのメッセージは失敗戦略によって処理される。失敗を報告し、有効性チェックの結果に影響を与えるのは、失敗ストラテジーの責任である。 `fail` 、失敗ストラテジーは失敗を報告する。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1242
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1246
#, fuzzy
msgid "Following are the list of configuration attributes for the Pulsar connector channels, consumers, producers and clients.  See the xref:pulsar-client-configuration[Pulsar Client Configuration] for more information on how the Pulsar clients are configured."
msgstr "以下は、Pulsarコネクター・チャンネル、コンシューマー、プロデューサー、クライアントの構成属性のリストです。Pulsarクライアントの構成方法については、 xref:pulsar-client-configuration[Pulsarクライアント構成を] ご覧ください。"

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1247
#, fuzzy, no-wrap
msgid "Incoming channel configuration (receiving from Pulsar)"
msgstr "受信チャンネル設定（パルサーからの受信）"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1250
msgid "The following attributes are configured using:"
msgstr "以下の属性は以下のように設定します:"

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1254
#, no-wrap
msgid "mp.messaging.incoming.your-channel-name.attribute=value\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1259
#, fuzzy
msgid "You can also configure properties supported by the underlying Pulsar consumer."
msgstr "基礎となるPulsarコンシューマーがサポートするプロパティを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1261
#, fuzzy
msgid "These properties can also be globally configured using `pulsar.consumer` prefix:"
msgstr "これらのプロパティは、 `pulsar.consumer` プレフィックスを使用してグローバルに設定することもできる："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1265
#, no-wrap
msgid "pulsar.consumer.subscriptionInitialPosition=Earliest\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1269
#, fuzzy, no-wrap
msgid "Outgoing channel configuration (publishing to Pulsar)"
msgstr "発信チャンネル設定（パルサーへのパブリッシング）"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1274
#, fuzzy
msgid "You can also configure properties supported by the underlying Pulsar producer."
msgstr "基礎となるPulsarプロデューサーがサポートするプロパティを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1276
#, fuzzy
msgid "These properties can also be globally configured using `pulsar.producer` prefix:"
msgstr "これらのプロパティは、 `pulsar.producer` プレフィックスを使用してグローバルに設定することもできる："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1280
#, no-wrap
msgid "pulsar.producer.batchingEnabled=false\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/pulsar.adoc:1285
#, fuzzy, no-wrap
msgid "Pulsar Client Configuration"
msgstr "パルサー・クライアント構成"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1289
#, fuzzy
msgid "Following is the configuration reference for the underlying `PulsarClient`.  These options can be configured using the channel attribute:"
msgstr "以下は、 `PulsarClient` のコンフィギュレーション・リファレンスです。これらのオプションは channel 属性を使用して設定できます："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1293
#, no-wrap
msgid "mp.messaging.incoming.your-channel-name.numIoThreads=4\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1296
#, fuzzy
msgid "Or configured globally using `pulsar.client` prefix:"
msgstr "または、 `pulsar.client` プレフィックスを使ってグローバルに設定する："

#. type: delimited block -
#: upstream/_versions/main/guides/pulsar.adoc:1300
#, no-wrap
msgid "pulsar.client.serviceUrl=pulsar://pulsar:6650\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/pulsar.adoc:1307
#, fuzzy
msgid "Configuration properties not configurable in configuration files (non-serializable) is noted in the column `Config file`."
msgstr "設定ファイルで設定不可能な（シリアライズ不可能な）設定プロパティは、 `Config file` の列に記されています。"

#. type: Title ==
#: upstream/_versions/main/guides/pulsar.adoc:1309
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1313
#, fuzzy
msgid "This guide has shown how you can interact with Pulsar using Quarkus.  It utilizes SmallRye Reactive Messaging to build data streaming applications."
msgstr "このガイドでは、Quarkusを使ってPulsarと対話する方法を紹介しました。SmallRyeリアクティブ・メッセージングを利用して、データ・ストリーミング・アプリケーションを構築します。"

#. type: Plain text
#: upstream/_versions/main/guides/pulsar.adoc:1314
msgid "If you want to go further, check the documentation of https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging], the implementation used in Quarkus."
msgstr "さらに詳しく知りたい場合は、Quarkusで使用されている実装、 https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] のドキュメントを確認してください。"
