# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/dev-ui.adoc:6
#, no-wrap
msgid "Dev UI"
msgstr "Dev UI"

#. type: Block title
#: upstream/_versions/main/guides/dev-ui.adoc:14
#, no-wrap
msgid "Dev UI v2"
msgstr "Dev UI v2"

#. type: delimited block =
#: upstream/_versions/main/guides/dev-ui.adoc:17
#, fuzzy
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards."
msgstr "このガイドでは、Quarkus 3以降のデフォルトであるDev UI v2について説明します。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:20
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr "このガイドでは、 link:building-my-first-extension.html[エクステンションの作成者]向けにQuarkus Dev UIについて説明します。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:24
#, fuzzy
msgid "Quarkus ships with a Developer UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like this:"
msgstr "QuarkusにはDeveloper UIが同梱されており、devモード（ `mvn quarkus:dev` ）でQuarkusを起動すると、デフォルトで link:http://localhost:8080/q/dev-ui[/q/dev-uiに] 表示されます。このような画面が表示されます："

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/dev-ui.adoc:25
#: upstream/_versions/main/guides/dev-ui.adoc:39
#: upstream/_versions/main/guides/dev-ui.adoc:63
#: upstream/_versions/main/guides/dev-ui.adoc:108
#: upstream/_versions/main/guides/dev-ui.adoc:126
#: upstream/_versions/main/guides/dev-ui.adoc:169
#: upstream/_versions/main/guides/dev-ui.adoc:190
#: upstream/_versions/main/guides/dev-ui.adoc:499
#: upstream/_versions/main/guides/dev-ui.adoc:612
#: upstream/_versions/main/guides/dev-ui.adoc:684
#: upstream/_versions/main/guides/dev-ui.adoc:754
#: upstream/_versions/main/guides/dev-ui.adoc:808
#: upstream/_versions/main/guides/dev-ui.adoc:1021
#, no-wrap
msgid "Dev"
msgstr "Dev"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:25
#, no-wrap
msgid "dev-ui-overview-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:28
msgid "It allows you to:"
msgstr "これにより、次のことが可能になります:"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:30
#, fuzzy
msgid "quickly visualize all the extensions currently loaded"
msgstr "現在ロードされているすべてのエクステンションを素早く視覚化"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:31
#, fuzzy
msgid "view extension statuses and go directly to extension documentation"
msgstr "拡張機能のステータスを表示し、拡張機能のドキュメントに直接アクセスできます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:32
#, fuzzy
msgid "view and change `Configuration`"
msgstr "見方と変え方 `Configuration`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:33
#, fuzzy
msgid "manage and visualize `Continuous Testing`"
msgstr "管理と可視化 `Continuous Testing`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:34
msgid "view `Dev Services` information"
msgstr "`Dev Services` の情報の表示"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:35
msgid "view the Build information"
msgstr "ビルド情報の表示"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:36
#, fuzzy
msgid "view and stream various logs"
msgstr "各種ログの表示とストリーミング"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:38
#, fuzzy
msgid "Each extension used in the application will be listed and you can navigate to the guide for each extension, see some more information on the extension, and view configuration applicable for that extension:"
msgstr "アプリケーションで使用されている各エクステンションが一覧表示され、各エクステンションのガイドに移動したり、エクステンションの詳細情報を参照したり、そのエクステンションに適用可能な設定を表示したりすることができます："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:39
#, no-wrap
msgid "dev-ui-extension-card-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:41
#, fuzzy, no-wrap
msgid "Make my extension extend the Dev UI"
msgstr "私のエクステンションでDev UIを拡張する"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:44
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr "エクステンションをDev UIに表示させるためには、何もする必要はありません!"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:46
msgid "So you can always start with that :)"
msgstr "だから、いつでもそれから始めることができます :)"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:48
#, fuzzy
msgid "Extensions can:"
msgstr "エクステンションは可能である："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:50
#, fuzzy
msgid "xref:add-links-to-an-extension-card[Add links to an extension card]"
msgstr "xref:add-links-to-an-extension-card[拡張カードにリンクを追加する]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:51
msgid "xref:add-full-pages[Add full custom pages]"
msgstr "xref:add-full-pages[フルカスタムページの追加]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:52
msgid "xref:add-a-log-file[Add a log stream]"
msgstr "xref:add-a-log-file[ログストリームの追加]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:53
msgid "xref:add-a-section-menu[Add a section menu]"
msgstr "xref:add-a-section-menu[セクションメニューの追加]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:54
msgid "xref:custom-cards[Create a custom card]"
msgstr "xref:custom-cards[カスタムカードの作成]"

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:55
#, no-wrap
msgid "Add links to an extension card"
msgstr "エクステンションカードにリンクを追加"

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:57
#, no-wrap
msgid "External Links"
msgstr "外部リンク"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:60
#, fuzzy
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text or other data."
msgstr "これらは他の（Dev UIの外部の）データを参照するリンクです。このデータはHTMLページ、テキスト、またはその他のデータです。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:62
#, fuzzy
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated openapi schema in both json and yaml format, and a link to Swagger UI:"
msgstr "この良い例がSmallRye OpenAPI拡張機能で、生成されたopenapiスキーマへのリンクがjsonとyamlの両方の形式で含まれており、Swagger UIへのリンクもあります："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:63
#, no-wrap
msgid "dev-ui-extension-openapi-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:66
#, fuzzy
msgid "The links to these external references is known at build time, so to get links like this on your card, all you need to do is add the following Build Step in your extension:"
msgstr "このような外部参照へのリンクはビルド時にわかるので、このようなリンクをカードに表示するには、エクステンションに以下のビルド・ステップを追加するだけでよい："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:71
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"public CardPageBuildItem pages(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:73
#, no-wrap
msgid "    CardPageBuildItem cardPageBuildItem = new CardPageBuildItem(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:78
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema yaml\") // <3>\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\")) // <4>\n"
"            .isYamlContent() // <5>\n"
"            .icon(\"font-awesome-solid:file-lines\")); // <6>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:83
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema json\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\") + \"?format=json\")\n"
"            .isJsonContent()\n"
"            .icon(\"font-awesome-solid:file-code\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:88
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Swagger UI\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"swagger-ui\"))\n"
"            .isHtmlContent()\n"
"            .icon(\"font-awesome-solid:signs-post\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:91
#, no-wrap
msgid ""
"    return cardPageBuildItem;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:93
#, fuzzy
msgid "Always make sure that this build step is only run when in dev mode"
msgstr "このビルド・ステップは、常にdevモードのときだけ実行されるようにしてください。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:94
#, fuzzy
msgid "To add anything on the card, you need to return/produce a `CardPageBuildItem`."
msgstr "カードに何かを追加するには、 `CardPageBuildItem` を返送/作成する必要がある。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:95
#, fuzzy
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`"
msgstr "リンクを追加するには、 `addPage` 。すべてのリンクは \"ページ \"に移動します。 `Page` 、ページ構築を支援するビルダーがいくつかあります。 `external` 。 `externalPageBuilder`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:96
#, fuzzy
msgid "Adding the url of the external link (in this case we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr "外部リンクのURLを追加する（この場合、このリンクは設定可能なアプリケーション以外のパスの下にあるため、このリンクを作成するために `NonApplicationRootPathBuildItem` を使用します、デフォルトは `/q` ）。リンクが `/q` で利用可能な場合は、常に `NonApplicationRootPathBuildItem` を使用してください。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:97
#, fuzzy
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr "(オプションで)ナビゲート先のコンテンツのコンテントタイプをヒン トすることができる。ヒントがない場合、 `MediaType` を決定するためにヘッダー呼び出しが行われます；"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:98
#, fuzzy
msgid "You can add an icon. All free font-awesome icons are available."
msgstr "アイコンを追加できます。すべてのフリーフォントオーサムアイコンが利用可能です。"

#. type: Block title
#: upstream/_versions/main/guides/dev-ui.adoc:100
#, fuzzy, no-wrap
msgid "Note about icons"
msgstr "アイコンについて"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:103
#, fuzzy
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`;"
msgstr "link:https://fontawesome.com/search?o=r&m=free[Font awesomeで] アイコンを見つけたら、次のようにマッピングできます：例 `<i class=\"fa-solid fa-house\"></i>` は `font-awesome-solid:house` にマップされるので、 `fa` は `font-awesome` になり、アイコンの名前は `fa-` を削除します；"

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:104
#, fuzzy, no-wrap
msgid "Embedding external content"
msgstr "外部コンテンツの埋め込み"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:107
#, fuzzy
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example the open api schema document in `yaml` format:"
msgstr "デフォルトでは、外部リンクもDev UIの内部（埋め込み）でレンダリングされます。HTMLの場合、ページがレンダリングされ、その他のコンテンツはメディアタイプをマークアップするために link:https://codemirror.net/[code-mirrorを] 使用して表示されます。例えば、 `yaml` 形式のオープン API スキーマ・ドキュメント："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:108
#, no-wrap
msgid "dev-ui-extension-openapi-embed-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:111
#, fuzzy
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr "コンテンツを埋め込みたくない場合は、ページビルダーの `.doNotEmbed()` 、リンクを新しいタブで開くことができます。"

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:112
#, fuzzy, no-wrap
msgid "Runtime external links "
msgstr "ランタイム外部リンク"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:115
#, fuzzy
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case you can use a xref:JsonRPC[JsonRPC] Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr "上記の例では、ビルド時に使用するリンクを知っていることを前提としている。実行時にしかわからない場合もあるでしょう。その場合は、追加するリンクを返す xref:JsonRPC[JsonRPC] メソッドを使い、リンク作成時にそれを使うことができます。ページ・ビルダーで `.url` メソッドを使うのではなく、 `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")` ."

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:116
#, fuzzy, no-wrap
msgid "Adding labels"
msgstr "ラベルの追加"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:119
#, fuzzy
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr "ページビルダーのビルダーメソッドの1つを使って、カード内のリンクにオプションラベルを追加できます。これらのラベルは"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:121
#, fuzzy
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr "静的（ビルド時に既知） `.staticLabel(\"staticLabelValue\")`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:122
#, fuzzy
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "ダイナミック（実行時にロードされる） `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:123
#, fuzzy
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "ストリーミング（実行時に更新された値を継続的にストリーミングする） `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:125
#, fuzzy
msgid "For dynamic and streaming labels, see the xref:JsonRPC[JsonRPC] Section."
msgstr "ダイナミック・ラベルとストリーミング・ラベルについては、 xref:JsonRPC[JsonRPC] セクションを参照のこと。"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:126
#, no-wrap
msgid "dev-ui-extension-card-label-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:128
#, fuzzy, no-wrap
msgid "Add full pages"
msgstr "全ページを追加"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:131
#, fuzzy
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr "上記の「外部」ページではなく、「内部」ページにリンクすることもできます。つまり、ページを作成し、Dev UIでレンダリングするためのデータとアクションを追加することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:132
#: upstream/_versions/main/guides/dev-ui.adoc:1155
#, fuzzy, no-wrap
msgid "Build time data"
msgstr "ビルド時間データ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:135
#, fuzzy
msgid "To make build time data available in your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr "ビルドタイムデータをフルページで利用できるようにするには、 `CardPageBuildItem` に任意のデータをキーと値で追加します："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:140
#, no-wrap
msgid ""
"CardPageBuildItem pageBuildItem = new CardPageBuildItem();\n"
"pageBuildItem.addBuildTimeData(\"someKey\", getSomeValueObject());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:143
#, fuzzy
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr "これらのキーと値のペアを複数追加することで、ページ上で必要なすべてのデータを構築することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:145
#, fuzzy
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr "Dev UIでフルページコンテンツを追加するには、いくつかのオプションがあります。最も基本的なもの（良いスタート）から、本格的なウェブコンポーネント（望ましいもの）まで。"

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:146
#, fuzzy, no-wrap
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr "フロントエンドでコーディングすることなく）ビルドタイムのデータを画面に表示する："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:149
#, fuzzy
msgid "If you have some data that is known at build time that you want to display you can use one of the following builders in `Page`:"
msgstr "ビルド時に既知の表示したいデータがある場合、 `Page` の以下のビルダーのいずれかを使用できます："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:151
#, fuzzy
msgid "xref:raw-data[Raw data]"
msgstr "xref:raw-data[生データ]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:152
#, fuzzy
msgid "xref:table-data[Table data]"
msgstr "xref:table-data[表データ]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:153
#, fuzzy
msgid "xref:qute-data[Qute data]"
msgstr "xref:qute-data[Quteデータ]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:154
#, fuzzy
msgid "xref:web-component-page[Web Component page]"
msgstr "xref:web-component-page[ウェブコンポーネントのページ]"

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:155
#, fuzzy, no-wrap
msgid "Raw data"
msgstr "生データ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:157
#, fuzzy
msgid "This will display your data in it's raw (serialised) json value:"
msgstr "これは、データを生の（シリアライズされた）json値で表示します："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:163
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.rawDataPageBuilder(\"Raw data\") // <1>\n"
"                .icon(\"font-awesome-brands:js\")\n"
"                .buildTimeDataKey(\"someKey\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:165
#, fuzzy
msgid "Use the `rawDataPageBuilder`."
msgstr "`rawDataPageBuilder` を使用する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:166
#: upstream/_versions/main/guides/dev-ui.adoc:187
#, fuzzy
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr "ページBuildItemの `addBuildTimeData` 、ビルド時間データを追加したときに使用したキーにリンクバックします。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:168
#, fuzzy
msgid "That will create a link to a page that renders the raw data in json:"
msgstr "そうすると、生データをjsonでレンダリングするページへのリンクが作成される："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:169
#, no-wrap
msgid "dev-ui-raw-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:171
#, fuzzy, no-wrap
msgid "Table data"
msgstr "表データ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:174
#, fuzzy
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr "また、構造上可能であれば、ビルド時間のデータを表に表示することもできます："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:183
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.tableDataPageBuilder(\"Table data\") // <1>\n"
"                .icon(\"font-awesome-solid:table\")\n"
"                .showColumn(\"timestamp\") // <2>\n"
"                .showColumn(\"user\") // <2>\n"
"                .showColumn(\"fullJoke\") // <2>\n"
"                .buildTimeDataKey(\"someKey\")); // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:185
#, fuzzy
msgid "Use the `tableDataPageBuilder`."
msgstr "`tableDataPageBuilder` を使用する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:186
#, fuzzy
msgid "Optionally only show certain fields."
msgstr "オプションで特定のフィールドのみを表示することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:189
#, fuzzy
msgid "That will create a link to a page that renders the data in a table:"
msgstr "そうすれば、データをテーブルに表示するページへのリンクが作成される："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:190
#, no-wrap
msgid "dev-ui-table-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:192
#, fuzzy, no-wrap
msgid "Qute data"
msgstr "Quteデータ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:195
#, fuzzy
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr "quteテンプレートを使用して、ビルドタイムデータを表示することもできます。すべてのビルドタイム・データ・キーは、テンプレートで使用できます："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:201
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.quteDataPageBuilder(\"Qute data\") // <1>\n"
"                .icon(\"font-awesome-solid:q\")\n"
"                .templateLink(\"qute-jokes-template.html\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:203
#, fuzzy
msgid "Use the `quteDataPageBuilder`."
msgstr "`quteDataPageBuilder` を使用する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:204
#, fuzzy
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr "`/deployment/src/main/resources/dev-ui/` のQuteテンプレートへのリンク。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:206
#, fuzzy
msgid "Using any Qute template to display the data, for example `qute-jokes-template.html`:"
msgstr "データを表示するために任意のQuteテンプレートを使用する。例えば、 `qute-jokes-template.html` ："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:227
#, no-wrap
msgid ""
"<table>\n"
"    <thead>\n"
"        <tr>\n"
"            <th>Timestamp</th>\n"
"            <th>User</th>\n"
"            <th>Joke</th>\n"
"        </tr>\n"
"    </thead>\n"
"    <tbody>\n"
"        {#for joke in jokes} // <1>\n"
"        <tr>\n"
"            <td>{joke.timestamp}</td>\n"
"            <td><span><img src=\"{joke.profilePic}\" height=\"30px\"></img> {joke.user}</span></td>\n"
"            <td>{joke.fullJoke}</td>\n"
"        </tr>\n"
"        {/for}\n"
"    </tbody>\n"
"</table>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:229
#, fuzzy
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr "`jokes` ページビルドアイテムのビルドタイムデータキーとして追加。"

#. type: Title ====
#: upstream/_versions/main/guides/dev-ui.adoc:230
#, fuzzy, no-wrap
msgid "Web Component page"
msgstr "ウェブコンポーネントのページ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:233
#, fuzzy
msgid "To build an interactive page with actions and runtime (or build time) data, you need to use the web component page:"
msgstr "アクションとランタイム（またはビルドタイム）データを使ってインタラクティブなページを作るには、ウェブコンポーネントページを使う必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:240
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.webComponentPageBuilder() // <1>\n"
"                    .icon(\"font-awesome-solid:egg\")\n"
"                    .componentLink(\"qwc-arc-beans.js\") // <2>\n"
"                    .staticLabel(String.valueOf(beans.size())));\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:242
#, fuzzy
msgid "Use the `webComponentPageBuilder`."
msgstr "`webComponentPageBuilder` を使用する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:243
#, fuzzy
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr "ウェブコンポーネントへのリンクは `/deployment/src/main/resources/dev-ui/` で指定します。タイトルを定義することもできます（ビルダーで `.title(\"My title\")` を使用）が、そうでない場合、タイトルは、常に `qwc` （Quarkus Web Component の略）ダッシュ `extensionName` （この場合は `arc` の例）ダッシュ `page title` （この場合は \"Beans\" ）の形式を持つ componentLink から想定されます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:245
#, fuzzy
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr "Dev UIは link:https://lit.dev/[Litを使って] 、これらのWebコンポーネントを簡単に構築できます。ウェブコンポーネントとLitについて、詳しくはこちらをご覧ください："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:247
#, fuzzy
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr "link:https://www.webcomponents.org/introduction[ウェブコンポーネント はじめに]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:248
#, fuzzy
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr "link:https://lit.dev/docs/[資料]"

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:249
#, fuzzy, no-wrap
msgid "Basic structure of a Web component page"
msgstr "ウェブ・コンポーネント・ページの基本構造"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:252
#, fuzzy
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr "ウェブ・コンポーネント・ページは、新しいHTMLエレメントを作成するJavaScriptクラスです："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:257
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit'; // <1>\n"
"import { beans } from 'build-time-data'; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:262
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement { // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:267
#, no-wrap
msgid ""
"    static styles = css` // <4>\n"
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct); // <5>\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:272
#: upstream/_versions/main/guides/dev-ui.adoc:346
#, no-wrap
msgid ""
"        .producer {\n"
"          color: var(--lumo-primary-text-color);\n"
"        }\n"
"        `;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:276
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true}, // <6>\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:281
#, no-wrap
msgid ""
"    constructor() { // <7>\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:294
#, no-wrap
msgid ""
"    render() { // <8>\n"
"        if (this._beans) {\n"
"            return html`<ul>\n"
"                ${this._beans.map((bean) => // <9>\n"
"                    html`<li>${bean.providerType.name}</li>`\n"
"                )}</ul>`;\n"
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans); // <10>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:298
#, fuzzy
msgid "You can import Classes and/or functions from other libraries.  In this case we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr "他のライブラリからクラスや関数をインポートすることができます。この例では、 `LitElement` クラスと、 `html` & `css` 関数を使用しています。 `Lit`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:299
#, fuzzy
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr "ビルド・ステップで定義されたビルド・タイム・データは、キーを使用して `build-time-data` から常にインポートすることができます。ビルド・ステップで追加されたすべてのキーが使用可能になります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:300
#, fuzzy
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component) then Extension Name then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr "コンポーネントの名前は、次の形式でなければなりません：Qwc（Quarkusウェブコンポーネントの略）、拡張子名、ページタイトルの順に、すべてキャメルケースで連結します。これは、前述のファイル名の形式とも一致します。また、コンポーネントは、 `LitComponent` を拡張する必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:301
#, fuzzy
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr "CSSスタイルは `css` 関数を使って追加することができ、これらのスタイルはあなたのコンポーネントにのみ適用されます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:302
#, fuzzy
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc)"
msgstr "スタイルはグローバルに定義されたCSS変数を参照し、特にライトモードとダークモードの切り替え時に、ページが正しくレンダリングされるようにすることができます。すべてのCSS変数はVaadinのドキュメントにあります( link:https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[色] 、 link:https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[サイズ、間隔など] )。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:303
#, fuzzy
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr "プロパティを追加することができます。プロパティがプライベートである場合は、プロパティの前に `_` を使用します。プロパティは通常HTMLテンプレートに注入され、そのプロパティが変更された場合、コンポーネントを再レンダリングすることを意味する状態を持つように定義できます。この場合、ビーンズはビルド時間データであり、ホットリロード時にのみ変更されます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:304
#, fuzzy
msgid "Constructors (optional) should always call `super` first, and then set the default values for the properties."
msgstr "コンストラクタ（オプション）は、常に最初に `super` を呼び出し、その後にプロパティのデフォルト値を設定する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:305
#, fuzzy
msgid "The render method (from `LitElement`) will be called to render the page. In this method you return the markup of the page you want. You can use the `html` function from `Lit`, that gives you a template language to output the HTML you want. Once the template is created, you only need to set/change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr "ページをレンダリングするために、renderメソッド（ `LitElement` ）が呼び出される。このメソッドでは、希望するページのマークアップを返します。 `Lit` の `html` 関数を使用すると、必要なHTMLを出力するためのテンプレート言語が得られます。テンプレートが作成されたら、ページの内容を再レンダリングするためにプロパティを設定/変更するだけです。 link:https://lit.dev/docs/components/rendering/[Lit htmlについて] もっと読む"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:306
#, fuzzy
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr "組み込みのテンプレート関数を使用して、条件分岐やリスト表示などを行うことができます。 link:https://lit.dev/docs/templates/overview/[Litテンプレートについて] もっと読む"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:307
#, fuzzy
msgid "You always need to register your Web component as a custom element, with a unique tag. Here the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr "ウェブ・コンポーネントは必ずカスタム要素として登録し、固有のタグを付ける必要があります。ここで、タグはファイル名と同じ形式 ( `qwc` ダッシュ `extension name` ダッシュ `page title` ) に従います；"

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:308
#, fuzzy, no-wrap
msgid "Using Vaadin UI components for rendering"
msgstr "レンダリングにVaadin UIコンポーネントを使用する"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:311
#, fuzzy
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr "Dev UIは、UIビルディング・ブロックとして link:https://vaadin.com/docs/latest/components[Vaadinウェブ・コンポーネントを] 多用しています。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:313
#, fuzzy
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr "例として、Arc Beansは link:https://vaadin.com/docs/latest/components/grid[Vaadin Gridを] 使用してレンダリングされます："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:322
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit';\n"
"import { beans } from 'build-time-data';\n"
"import '@vaadin/grid'; // <1>\n"
"import { columnBodyRenderer } from '@vaadin/grid/lit.js'; // <2>\n"
"import '@vaadin/vertical-layout';\n"
"import 'qui-badge'; // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:327
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:333
#, no-wrap
msgid ""
"    static styles = css`\n"
"        .arctable {\n"
"          height: 100%;\n"
"          padding-bottom: 10px;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:337
#, no-wrap
msgid ""
"        code {\n"
"          font-size: 85%;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:341
#, no-wrap
msgid ""
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:350
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true},\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:355
#, no-wrap
msgid ""
"    constructor() {\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:358
#, no-wrap
msgid ""
"    render() {\n"
"        if (this._beans) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:366
#, no-wrap
msgid ""
"            return html`\n"
"                <vaadin-grid .items=\"${this._beans}\" class=\"arctable\" theme=\"no-border\">\n"
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Bean\"\n"
"                        ${columnBodyRenderer(this._beanRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:372
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Kind\"\n"
"                        ${columnBodyRenderer(this._kindRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:379
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Associated Interceptors\"\n"
"                        ${columnBodyRenderer(this._interceptorsRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
"                </vaadin-grid>`;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:384
#, no-wrap
msgid ""
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:394
#, no-wrap
msgid ""
"    _beanRenderer(bean) {\n"
"        return html`<vaadin-vertical-layout>\n"
"      <code class=\"annotation\">@${bean.scope.simpleName}</code>\n"
"      ${bean.nonDefaultQualifiers.map(qualifier =>\n"
"            html`${this._qualifierRenderer(qualifier)}`\n"
"        )}\n"
"      <code>${bean.providerType.name}</code>\n"
"      </vaadin-vertical-layout>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:403
#, no-wrap
msgid ""
"    _kindRenderer(bean) {\n"
"      return html`\n"
"        <vaadin-vertical-layout>\n"
"          ${this._kindBadgeRenderer(bean)}\n"
"          ${this._kindClassRenderer(bean)}\n"
"        </vaadin-vertical-layout>\n"
"    `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:407
#, no-wrap
msgid ""
"    _kindBadgeRenderer(bean){\n"
"      let kind = this._camelize(bean.kind);\n"
"      let level = null;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:417
#, no-wrap
msgid ""
"      if(bean.kind.toLowerCase() === \"field\"){\n"
"        kind = \"Producer field\";\n"
"        level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"method\"){\n"
"          kind = \"Producer method\";\n"
"          level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"synthetic\"){\n"
"        level = \"contrast\";\n"
"      }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:424
#, no-wrap
msgid ""
"      return html`\n"
"        ${level\n"
"          ? html`<qui-badge level='${level}' small><span>${kind}</span></qui-badge>` \n"
"          : html`<qui-badge small><span>${kind}</span></qui-badge>`\n"
"        }`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:433
#, no-wrap
msgid ""
"    _kindClassRenderer(bean){\n"
"      return html`\n"
"          ${bean.declaringClass\n"
"            ? html`<code class=\"producer\">${bean.declaringClass.simpleName}.${bean.memberName}()</code>`\n"
"            : html`<code class=\"producer\">${bean.memberName}</code>`\n"
"          }\n"
"      `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:446
#, no-wrap
msgid ""
"    _interceptorsRenderer(bean) {\n"
"        if (bean.interceptors && bean.interceptors.length > 0) {\n"
"            return html`<vaadin-vertical-layout>\n"
"                          ${bean.interceptorInfos.map(interceptor =>\n"
"                              html`<div>\n"
"                                    <code>${interceptor.interceptorClass.name}</code> \n"
"                                    <qui-badge class=\"${bean.kind.toLowerCase()}\" small pill><span>${interceptor.priority}</span></qui-badge>\n"
"                                  </div>`\n"
"                          )}\n"
"                        </vaadin-vertical-layout>`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:450
#, no-wrap
msgid ""
"    _qualifierRenderer(qualifier) {\n"
"        return html`<code class=\"annotation\">${qualifier.simpleName}</code>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:460
#, no-wrap
msgid ""
"    _camelize(str) {\n"
"        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n"
"            if (+match === 0)\n"
"                return \"\";\n"
"            return index === 0 ? match.toUpperCase() : match.toLowerCase();\n"
"        });\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:462
#, fuzzy
msgid "Import the Vaadin component you want to use"
msgstr "使用したいVaadinコンポーネントをインポートする。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:463
#, fuzzy
msgid "You can also import other functions if needed"
msgstr "必要に応じて、他の関数をインポートすることもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:464
#, fuzzy
msgid "There are some internal UI components that you can use, described below"
msgstr "使用できる内部UIコンポーネントがいくつかあります。"

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:465
#, fuzzy, no-wrap
msgid "Using internal UI components"
msgstr "内部UIコンポーネントの使用"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:468
#, fuzzy
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[internal UI components] (under the `qui` namespace) are available to make certain things easier:"
msgstr "いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[内部UIコンポーネント] （ `qui` ネームスペース）は、特定のことを簡単にするために利用可能です："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:470
#, fuzzy
msgid "Card"
msgstr "カード"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:471
#, fuzzy
msgid "Badge"
msgstr "バッジ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:472
#, fuzzy
msgid "Alert"
msgstr "アラート"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:473
#, fuzzy
msgid "Code block"
msgstr "コードブロック"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:474
#, fuzzy
msgid "IDE Link"
msgstr "IDEリンク"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:476
#, fuzzy
msgid "====== Card"
msgstr "カード"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:478
#, fuzzy
msgid "Card component to display contents in a card"
msgstr "カードにコンテンツを表示するカードコンポーネント"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:482
#, no-wrap
msgid "import 'qui-card';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:491
#, no-wrap
msgid ""
"<qui-card title=\"My title\">\n"
"    <div slot=\"content\">\n"
"        My contents\n"
"    </div>\n"
"</qui-card>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:494
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:496
#, fuzzy
msgid "====== Badge"
msgstr "バッジ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:498
#, fuzzy
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr "link:https://vaadin.com/docs/latest/components/badge[vaadinをテーマにした] バッジUIコンポーネント"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:499
#, no-wrap
msgid "dev-ui-qui-badge-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:504
#, no-wrap
msgid "import 'qui-badge';\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:507
#, fuzzy
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast` or set your own colors."
msgstr "`default` , `success` , `warning` , `error` , `contrast` のどのレベルでも、スモール、プライマリー、ピル、アイコン付き、クリッカブルのどの組み合わせでも、また独自の色を設定することもできます。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:602
#, no-wrap
msgid ""
"<div class=\"badges\">\n"
"    <h3>Badges</h3>\n"
"    <p>Badges wrap the Vaadin theme in a component.\n"
"        See <a href=\"https://vaadin.com/docs/latest/components/badge\">https://vaadin.com/docs/latest/components/badge</a> for more info.\n"
"    </p>\n"
"    <div class=\"cards\">\n"
"        <qui-card title=\"Small\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge small><span>Default</span></qui-badge>\n"
"                    <qui-badge level=\"success\" small><span>Success</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" small><span>Warning</span></qui-badge>\n"
"                    <qui-badge level=\"error\" small><span>Error</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" small><span>Contrast</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" small><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card> \n"
"        <qui-card title=\"Primary\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge primary><span>Default primary</span></qui-badge>\n"
"                    <qui-badge level=\"success\" primary><span>Success primary</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" primary><span>Warning primary</span></qui-badge>\n"
"                    <qui-badge level=\"error\" primary><span>Error primary</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" primary><span>Contrast primary</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" primary><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Pill\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge pill><span>Default pill</span></qui-badge>\n"
"                    <qui-badge level=\"success\" pill><span>Success pill</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" pill><span>Warning pill</span></qui-badge>\n"
"                    <qui-badge level=\"error\" pill><span>Error pill</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" pill><span>Contrast pill</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" pill><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"With icon\">\n"
"            <div slot=\"content\">            \n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge text=\"Default\" icon=\"font-awesome-solid:circle-info\">\n"
"                        <span>Default icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Success\" level=\"success\" icon=\"font-awesome-solid:check\">\n"
"                        <span>Success icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Warning\" level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\">\n"
"                        <span>Warning icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Error\" level=\"error\" icon=\"font-awesome-solid:circle-exclamation\">\n"
"                        <span>Error icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Contrast\" level=\"contrast\" icon=\"font-awesome-solid:hand\">\n"
"                        <span>Contrast icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Custom\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\">\n"
"                        <span>Custom colours</span>\n"
"                    </qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Icon only\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge icon=\"font-awesome-solid:clock\"></qui-badge>\n"
"                    <qui-badge level=\"success\" icon=\"font-awesome-solid:check\"></qui-badge>\n"
"                    <qui-badge level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"error\" icon=\"font-awesome-solid:circle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" icon=\"font-awesome-solid:hand\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\"></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Clickable\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge clickable @click=${() => this._info()}><span>Default</span></qui-badge>\n"
"                    <qui-badge clickable level=\"success\" @click=${() => this._success()}><span>Success</span></qui-badge>\n"
"                    <qui-badge clickable level=\"warning\" @click=${() => this._warning()}><span>Warning</span></qui-badge>\n"
"                    <qui-badge clickable level=\"error\" @click=${() => this._error()}><span>Error</span></qui-badge>\n"
"                    <qui-badge clickable level=\"contrast\" @click=${() => this._contrast()}><span>Contrast</span></qui-badge>\n"
"                    <qui-badge clickable background=\"pink\" color=\"purple\" @click=${() => this._info()}><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:605
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:607
#, fuzzy
msgid "====== Alert"
msgstr "アラート"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:609
#, fuzzy
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr "アラートはBootstrapアラートをモデルにしています。詳しくは link:https://getbootstrap.com/docs/4.0/components/alerts[こちらを] クリックしてください。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:611
#, fuzzy
msgid "Also see Notification controller below as an alternative."
msgstr "別の方法として、以下の通知コントローラも参照してください。"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:612
#, no-wrap
msgid "dev-ui-qui-alert-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:617
#, no-wrap
msgid "import 'qui-alert';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:674
#, no-wrap
msgid ""
"<div class=\"cards\">\n"
"    <div class=\"cardcontents\">\n"
"        <qui-alert><span>Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\"><span>Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\"><span>Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\"><span>Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert permanent><span>Permanent Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" permanent><span>Permanent Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" permanent><span>Permanent Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" permanent><span>Permanent Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert center><span>Center Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" center><span>Center Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" center><span>Center Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" center><span>Center Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert icon=\"font-awesome-brands:redhat\"><span>Info alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" icon=\"font-awesome-brands:redhat\"><span>Success alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" icon=\"font-awesome-brands:redhat\"><span>Warning alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" icon=\"font-awesome-brands:redhat\"><span>Error alert with custom icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert size=\"small\" showIcon><span>Small Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" size=\"small\" showIcon><span>Small Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" size=\"small\" showIcon><span>Small Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" size=\"small\" showIcon><span>Small Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon primary><span>Primary Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon primary><span>Primary Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon primary><span>Primary Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon primary><span>Primary Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\"><span>Info alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\"><span>Success alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\"><span>Warning alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\"><span>Error alert with title</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\" showIcon><span>Info alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\" showIcon><span>Success alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\" showIcon><span>Warning alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\" showIcon><span>Error alert with title and icon</span></qui-alert>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:677
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:680
#, fuzzy
msgid "====== Code block"
msgstr "コードブロック"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:682
#, fuzzy
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr "コードブロックを表示する。このコンポーネントはテーマを認識し、明暗モードに合わせて正しいcodemirrorテーマを使用します。"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:684
#, no-wrap
msgid "dev-ui-qui-code-block-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:689
#, no-wrap
msgid "import 'qui-code-block';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:699
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='yaml'\n"
"        content='${yaml}'>\n"
"    </qui-code-block>\n"
"</div>;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:702
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:704
#, fuzzy
msgid "or fetching the contents from a URL:"
msgstr "またはURLからコンテンツをフェッチする："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:713
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='${this._mode}'\n"
"        src='${this._externalUrl}'>\n"
"    </qui-code-block>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:716
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:718
#, fuzzy
msgid "====== IDE link"
msgstr "IDEリンク"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:720
#, fuzzy
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr "ユーザーのIDEで開くことができるリソース（Javaソースファイルなど）へのリンクを作成します（IDEを検出できた場合）。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:724
#, no-wrap
msgid "import 'qui-ide-link';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:732
#, no-wrap
msgid ""
"<qui-ide-link title='Source full class name' \n"
"                        class='text-source'\n"
"                        fileName='${sourceClassNameFull}'\n"
"                        lineNumber=${sourceLineNumber}>[${sourceClassNameFull}]</qui-ide-link>;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:735
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[コード例]"

#. type: Title =====
#: upstream/_versions/main/guides/dev-ui.adoc:736
#, fuzzy, no-wrap
msgid "Using internal controllers"
msgstr "内部コントローラーの使用"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:739
#, fuzzy
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr "特定のことを簡単にするために、いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[内部コントローラーが] 用意されている："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:741
msgid "Notifier"
msgstr "Notifier"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:742
msgid "Storage"
msgstr "Storage"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:743
msgid "Log"
msgstr "Log"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:744
msgid "Router"
msgstr "Router"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:745
msgid "JsonRPC"
msgstr "JsonRPC"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:747
msgid "====== Notifier"
msgstr "====== Notifier"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:749
#, fuzzy
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, that will create a more prominent toast message."
msgstr "これは乾杯メッセージを表示する簡単な方法です。乾杯メッセージは画面上（デフォルトでは左下）に配置でき、レベル（Info、Success、Warning、Error）を設定できます。どのレベルもプライマリにすることができ、より目立つトーストメッセージになります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:751
#, fuzzy
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr "このコントローラーのソースは link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[こちら] 。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:753
#, fuzzy
msgid "Example usage:"
msgstr "使用例："

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:754
#, no-wrap
msgid "dev-ui-controller-notifier.gif"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:759
#, no-wrap
msgid "import { notifier } from 'notifier';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:764
#, no-wrap
msgid "<a @click=${() => this._info()}>Info</a>;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:771
#, no-wrap
msgid ""
"_info(position = null){\n"
"    notifier.showInfoMessage(\"This is an information message\", position);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:774
#, fuzzy
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr "有効なポジションはすべて link:https://vaadin.com/docs/latest/components/notification/#position[こちらで] 確認できる。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:776
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:778
#, fuzzy
msgid "====== Storage"
msgstr "ストレージ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:780
#, fuzzy
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, scoped to your extension. This way you do not have to worry that you might clash with another extension."
msgstr "ローカルストレージに安全にアクセスする簡単な方法です。これは、ローカルストレージに値を保存します。こうすることで、他の拡張モジュールと衝突する心配がなくなります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:782
#, fuzzy
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr "ローカルストレージは、ユーザーの好みや状態を記憶するのに便利です。例えば、フッターは一番下の引き出しの状態（開閉）と開いたときのサイズを記憶しています。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:786
#, no-wrap
msgid "import { StorageController } from 'storage-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:788
#: upstream/_versions/main/guides/dev-ui.adoc:792
#: upstream/_versions/main/guides/dev-ui.adoc:796
#: upstream/_versions/main/guides/dev-ui.adoc:815
#: upstream/_versions/main/guides/dev-ui.adoc:915
#: upstream/_versions/main/guides/dev-ui.adoc:919
#: upstream/_versions/main/guides/dev-ui.adoc:1009
#: upstream/_versions/main/guides/dev-ui.adoc:1036
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:790
#, no-wrap
msgid "storageControl = new StorageController(this); // Passing in this will scope the storage to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:794
#, no-wrap
msgid "const storedHeight = this.storageControl.get(\"height\"); // Get some value\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:798
#, no-wrap
msgid "this.storageControl.set('height', 123); // Set some val\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:801
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:804
#, fuzzy
msgid "====== Log"
msgstr "ログ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:807
#, fuzzy
msgid "The log controller is used to add control buttons to a (footer) log.  See <<Add a log file>>."
msgstr "ログコントローラーは、（フッター）ログにコントロールボタンを追加するために使用します。 <<Add a log file>> を参照。"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:808
#, no-wrap
msgid "dev-ui-log-control-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:813
#, no-wrap
msgid "import { LogController } from 'log-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:817
#, no-wrap
msgid "logControl = new LogController(this); // Passing in this will scope the control to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:835
#, no-wrap
msgid ""
"// ...\n"
"this.logControl\n"
"                .addToggle(\"On/off switch\", true, (e) => {\n"
"                    this._toggleOnOffClicked(e);\n"
"                }).addItem(\"Log levels\", \"font-awesome-solid:layer-group\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._logLevels();\n"
"                }).addItem(\"Columns\", \"font-awesome-solid:table-columns\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._columns();\n"
"                }).addItem(\"Zoom out\", \"font-awesome-solid:magnifying-glass-minus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomOut();\n"
"                }).addItem(\"Zoom in\", \"font-awesome-solid:magnifying-glass-plus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomIn();\n"
"                }).addItem(\"Clear\", \"font-awesome-solid:trash-can\", \"var(--lumo-error-color)\", (e) => {\n"
"                    this._clearLog();\n"
"                }).addFollow(\"Follow log\", true , (e) => {\n"
"                    this._toggleFollowLog(e);\n"
"                }).done();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:838
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:840
#, fuzzy
msgid "====== Router"
msgstr "ルーター"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:842
#, fuzzy
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr "ルーターは主に内部で使用されます。これは、SPA内の正しいページ/セクションにURLをルーティングするために、隠れて link:https://github.com/vaadin/router[Vaadin Routerを] 使用しています。これはナビゲーションを更新し、履歴(戻るボタン)を許可します。これはまた、複数のページを持つエクステンションで利用可能なサブメニューを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:844
#, fuzzy
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr "便利なメソッドについては、 link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[コントローラを] 参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:847
#, fuzzy
msgid "====== JsonRPC"
msgstr "JsonRPC"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:849
#, fuzzy
msgid "This controller allows you to fetch or stream runtime data. (vs. <<Build time data>> discussed earlier). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr "このコントローラは、ランタイムデータのフェッチやストリーミングを可能にする。(前述した <<Build time data>> ）。実行時にデータを取得するには2つの部分があります。ランタイムモジュールでのJava側と、ウェブコンポーネントでの使用です。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:851
#, fuzzy, no-wrap
msgid "*Java part*\n"
msgstr "*Javaパート*"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:853
#, fuzzy
msgid "This code is responsible for making data available to display on the UI."
msgstr "このコードは、データをUIに表示できるようにする役割を担っている。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:855
#, fuzzy
msgid "You need to register the JsonPRCService in your processor in the deployment module:"
msgstr "デプロイメント・モジュールのプロセッサにJsonPRCServiceを登録する必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:862
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"JsonRPCProvidersBuildItem createJsonRPCServiceForCache() {// <2>\n"
"    return new JsonRPCProvidersBuildItem(CacheJsonRPCService.class);// <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:864
#, fuzzy
msgid "Always only do this in Dev Mode"
msgstr "常にDev Modeでのみ行う"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:865
#, fuzzy
msgid "Produce / return a `JsonRPCProvidersBuildItem`"
msgstr "プロデュース／リターン `JsonRPCProvidersBuildItem`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:866
#, fuzzy
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr "ランタイム・モジュールの中に、UIでデータを利用可能にするメソッドを含むクラスを定義する。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:868
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:870
#, fuzzy
msgid "Now, in your Runtime module create the JsonRPC Service. This class will default to an application scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr "次に、RuntimeモジュールでJsonRPC Serviceを作成します。このクラスは、明示的にBeanをスコープする場合を除き、デフォルトでアプリケーション・スコープドBeanになります。何かを返すすべてのパブリック・メソッドは、WebコンポーネントJavascriptから呼び出せるようになります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:872
#, fuzzy
msgid "The return object in these methods can be:"
msgstr "これらのメソッドのリターン・オブジェクトには、次のようなものがある："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:874
#, fuzzy
msgid "primitives or `String`,"
msgstr "プリミティブまたは `String` 、"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:875
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:876
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:877
#, fuzzy
msgid "any other POJO that can be serializable to Json"
msgstr "Jsonにシリアライズ可能なその他のPOJO"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:879
#, fuzzy
msgid "All of the above can be blocking (POJO) or non-blocking (`@NonBlocking` or `Uni`). Or alternatively data can be streamed using `Multi`."
msgstr "上記はすべて、ブロッキング（POJO）またはノンブロッキング（ `@NonBlocking` または `Uni` ）が可能である。あるいは、 `Multi` を使ってデータをストリームすることもできる。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:893
#, no-wrap
msgid ""
"@NonBlocking // <1>\n"
"public JsonArray getAll() { // <2>\n"
"    Collection<String> names = manager.getCacheNames();\n"
"    List<CaffeineCache> allCaches = new ArrayList<>(names.size());\n"
"    for (String name : names) {\n"
"        Optional<Cache> cache = manager.getCache(name);\n"
"        if (cache.isPresent() && cache.get() instanceof CaffeineCache) {\n"
"            allCaches.add((CaffeineCache) cache.get());\n"
"        }\n"
"    }\n"
"    allCaches.sort(Comparator.comparing(CaffeineCache::getName));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:900
#, no-wrap
msgid ""
"    var array = new JsonArray();\n"
"    for (CaffeineCache cc : allCaches) {\n"
"        array.add(getJsonRepresentationForCache(cc));\n"
"    }\n"
"    return array;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:902
#, fuzzy
msgid "This example runs non blocking. We could also return `Uni<JsonArray>`"
msgstr "この例はノンブロッキングで実行される。また `Uni<JsonArray>`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:903
#, fuzzy
msgid "The method name `getAll` will be available in the Javascript"
msgstr "メソッド名 `getAll` は、Javascriptの"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:905
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:907
#, fuzzy, no-wrap
msgid "*Webcomponent (Javascript) part*\n"
msgstr "*ウェブコンポーネント（Javascript）部分*"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:909
#, fuzzy
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in you JsonRPC Service)"
msgstr "これで、JsonRPC コントローラを使用して `getAll` メソッド (および JsonRPC サービスのその他のメソッド) にアクセスできるようになります。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:913
#, no-wrap
msgid "import { JsonRpc } from 'jsonrpc';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:917
#, no-wrap
msgid "jsonRpc = new JsonRpc(this); // Passing in this will scope the rpc calls to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:932
#, no-wrap
msgid ""
"/**\n"
"  * Called when displayed\n"
"  */\n"
"connectedCallback() {\n"
"    super.connectedCallback();\n"
"    this.jsonRpc.getAll().then(jsonRpcResponse => { // <1>\n"
"        this._caches = new Map();\n"
"        jsonRpcResponse.result.forEach(c => { //<2>\n"
"            this._caches.set(c.name, c);\n"
"        });\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:935
#, fuzzy
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr "メソッド `getAll` は、Java Service のメソッドに対応していることに注意してください。このメソッドは、JsonRPC の結果を link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] で返します。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:936
#, fuzzy
msgid "In this case the result is an array, so we can loop over it."
msgstr "この場合、結果は配列なので、それをループすることができる。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:938
#, fuzzy
msgid "JsonArray (or any Java collection) in either blocking or non-blocking will return an array, else a JsonObject will be returned."
msgstr "ブロッキングまたはノンブロッキングのJsonArray（または任意のJavaコレクション）は配列を返し、そうでなければJsonObjectを返す。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:940
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:943
#, fuzzy
msgid "You can also pass in parameters in the method being called, for example: (In the Runtime Java code)"
msgstr "呼び出されるメソッドの中でパラメーターを渡すこともできます。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:954
#, no-wrap
msgid ""
"public Uni<JsonObject> clear(String name) { //<1>\n"
"    Optional<Cache> cache = manager.getCache(name);\n"
"    if (cache.isPresent()) {\n"
"        return cache.get().invalidateAll().map((t) -> getJsonRepresentationForCache(cache.get()));\n"
"    } else {\n"
"        return Uni.createFrom().item(new JsonObject().put(\"name\", name).put(\"size\", -1));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:956
#, fuzzy
msgid "the clear method takes one parameter called `name`"
msgstr "clearメソッドは `name`"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:958
#, fuzzy
msgid "In the Webcomponent (Javascript):"
msgstr "ウェブコンポーネント（Javascript）で："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:966
#, no-wrap
msgid ""
"_clear(name) {\n"
"    this.jsonRpc.clear({name: name}).then(jsonRpcResponse => { //<1>\n"
"        this._updateCache(jsonRpcResponse.result)\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:968
#, fuzzy
msgid "the `name` parameter is passed in."
msgstr "`name` パラメーターが渡される。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:970
#, fuzzy
msgid "====== Streaming data"
msgstr "ストリーミング・データ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:972
#, fuzzy
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr "UI画面に継続的にデータをストリーミングすることで、UI画面を最新のデータに更新し続けることができる。これは、 `Multi` （Java側）と `Observer` （Javascript側）で実現できる。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:974
#, fuzzy
msgid "Java side of streaming data:"
msgstr "ストリーミング・データのJava側："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:978
#, no-wrap
msgid "public class JokesJsonRPCService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:980
#, no-wrap
msgid "    private final BroadcastProcessor<Joke> jokeStream = BroadcastProcessor.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:987
#, no-wrap
msgid ""
"    @PostConstruct\n"
"    void init() {\n"
"        Multi.createFrom().ticks().every(Duration.ofHours(4)).subscribe().with((item) -> {\n"
"            jokeStream.onNext(getJoke());\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:991
#, no-wrap
msgid ""
"    public Multi<Joke> streamJokes() { // <1>\n"
"        return jokeStream;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:994
#, no-wrap
msgid ""
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:996
#, fuzzy
msgid "Return the Multi that will stream jokes"
msgstr "ジョークを流すマルチを返す"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:998
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1000
#, fuzzy
msgid "Javascript side of streaming data:"
msgstr "ストリーミング・データのJavascript側："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1007
#, no-wrap
msgid ""
"this._observer = this.jsonRpc.streamJokes().onNext(jsonRpcResponse => { //<1>\n"
"    this._addToJokes(jsonRpcResponse.result);\n"
"    this._numberOfJokes = this._numberOfJokes++;\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1011
#, no-wrap
msgid "this._observer.cancel(); //<2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1013
#, fuzzy
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr "メソッドを呼び出し（オプションでパラメータを渡す）、次のイベントで呼び出されるコードを提供することができる。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1014
#, fuzzy
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr "必要であれば、後でキャンセルできるように、オブザーバーのインスタンスを残しておくこと。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1016
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1018
#, fuzzy
msgid "====== Dev UI Log"
msgstr "開発UIログ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1020
#, fuzzy
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful to debug all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr "`999-SNAPSHOT` バージョンを使用してローカルアプリケーションを実行すると、Dev UI のフッターに `Dev UI` ログが表示されます。これは、ブラウザとQuarkusアプリの間で流れるすべてのJSON RPCメッセージをデバッグするのに便利です。"

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:1021
#, no-wrap
msgid "dev-ui-jsonrpc-log-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1023
#, fuzzy, no-wrap
msgid "Hot reload"
msgstr "ホットリロード"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1026
#, fuzzy
msgid "You can update a screen automatically when a Hot reload has happened. To do this replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr "ホットリロードが発生したときに、自動的に画面を更新することができます。これを行うには、Webcomponent が継承する `LitElement` を `QwcHotReloadElement` で置き換えてください。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1028
#, fuzzy
msgid "`QwcHotReloadElement` extends `LitElement` so your component is still a Lit Element."
msgstr "`QwcHotReloadElement` extends ですから、あなたのコンポーネントはまだLit Elementです。 `LitElement` "

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1030
#, fuzzy
msgid "When extending a `QwcHotReloadElement` you have to provide the `hotReload` method. (You also still need to provide the `render` method from Lit)"
msgstr "`QwcHotReloadElement` を拡張する場合は、 `hotReload` メソッドを提供する必要があります。(Litから `render` メソッドを提供する必要もあります）。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1034
#, no-wrap
msgid "import { QwcHotReloadElement, html, css} from 'qwc-hot-reload-element';\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1038
#, no-wrap
msgid "export class QwcMyExtensionPage extends QwcHotReloadElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1042
#, no-wrap
msgid ""
"    render(){\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1046
#, no-wrap
msgid ""
"    hotReload(){\n"
"        // ..\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1048
#: upstream/_versions/main/guides/dev-ui.adoc:1201
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1050
#, fuzzy, no-wrap
msgid "Custom cards"
msgstr "カスタムカード"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1053
#, fuzzy
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr "デフォルトの内蔵カードを使用したくない場合は、拡張ページに表示されるカードをカスタマイズすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1055
#, fuzzy
msgid "To do this, you need to provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr "そのためには、提供されたカードの代わりにロードされるWebcomponentを提供し、これをJava Processorに登録する必要がある："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1059
#, no-wrap
msgid "cardPageBuildItem.setCustomCard(\"qwc-mycustom-card.js\");\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1062
#, fuzzy
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr "Javascript側では、すべてのページにアクセスできます（リンクを作成する場合）。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1066
#, no-wrap
msgid "import { pages } from 'build-time-data';\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1069
#, fuzzy
msgid "And the following properties will be passed in:"
msgstr "そして、以下のプロパティが渡される："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1071
#, fuzzy
msgid "extensionName"
msgstr "拡張名"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1072
#, fuzzy
msgid "description"
msgstr "記述"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1073
#, fuzzy
msgid "guide"
msgstr "ガイド"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1074
#, fuzzy
msgid "namespace"
msgstr "名前空間"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1083
#, no-wrap
msgid ""
"static properties = {\n"
"    extensionName: {type: String},\n"
"    description: {type: String},\n"
"    guide: {type: String},\n"
"    namespace: {type: String}    \n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1085
#, fuzzy, no-wrap
msgid "State (Advance)"
msgstr "州（アドバンス）"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1088
#, fuzzy
msgid "State allows properties to contain state and can be reused globally. An example of state properties are the theme, the connection state (if we are connected to the backend), etc."
msgstr "ステートでは、プロパティにステートを含めることができ、グローバルに再利用することができます。ステートのプロパティの例としては、テーマや接続状態（バックエンドに接続している場合）などがあります。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1090
#, fuzzy
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr "link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[現在のビルトイン・ステート・オブジェクトを] 参照。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1092
#, fuzzy
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState] and you can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr "Dev UIのステートは link:https://github.com/gitaarik/lit-state[LitStateを] 使用しており、その link:https://gitaarik.github.io/lit-state/build/[ドキュメントで] 詳細を読むことができる。"

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1094
#, fuzzy, no-wrap
msgid "Add a log file"
msgstr "ログファイルの追加"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1097
#, fuzzy
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful to log things happening continuously. A page will lose connection to the backend when navigating away from that page, a log in the footer is permanently connected."
msgstr "カードやページの追加とは別に、エクステンションはフッターにログを追加できる。これは継続的に起きていることを記録するのに便利です。ページはそのページから離れるとバックエンドとの接続を失いますが、フッターのログは永久に接続されます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1099
#, fuzzy
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "フッターへの追加は、 `CardPageBuildItem` ではなく `FooterPageBuildItem` を使う点を除けば、カードを追加するのとまったく同じように機能する。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1103
#, no-wrap
msgid "FooterPageBuildItem footerPageBuildItem = new FooterPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1108
#, no-wrap
msgid ""
"footerPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"Joke Log\")\n"
"        .componentLink(\"qwc-jokes-log.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1110
#, no-wrap
msgid "footerProducer.produce(footerPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1113
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1115
#, fuzzy
msgid "In your Webcomponent you can then stream the log to the UI:"
msgstr "ウェブコンポーネントで、ログをUIにストリーミングすることができます："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1121
#, no-wrap
msgid ""
"export class QwcJokesLog extends LitElement {\n"
"    jsonRpc = new JsonRpc(this);\n"
"    logControl = new LogController(this);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1124
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1127
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[コード例]"

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1128
#, no-wrap
msgid "Add a section menu"
msgstr "セクションメニューの追加"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1131
#, fuzzy
msgid "This allows an extension to link a page directly in the section Menu."
msgstr "これにより、エクステンションはセクションメニューにページを直接リンクすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1133
#, fuzzy
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "セクションメニューへの追加は、 `CardPageBuildItem` ではなく、 `MenuPageBuildItem` を使うことを除けば、カードを追加するのとまったく同じように機能する。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1137
#, no-wrap
msgid "MenuPageBuildItem menuPageBuildItem = new MenuPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1142
#, no-wrap
msgid ""
"menuPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"One Joke\")\n"
"        .componentLink(\"qwc-jokes-menu.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1144
#, no-wrap
msgid "menuProducer.produce(menuPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1147
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[コード例]"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1149
#, fuzzy
msgid "Your page can be any Page similar to Cards."
msgstr "あなたのページは、カードと同じようなページであれば何でも構いません。"

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:1150
#, no-wrap
msgid "Testing"
msgstr "テスト"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1153
#, fuzzy
msgid "You can add tests to your extension that test:"
msgstr "エクステンションにテストを追加することができます："

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1156
#, fuzzy
msgid "Runtime data via JsonRPC"
msgstr "JsonRPC経由のランタイムデータ"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1158
#, fuzzy
msgid "You need to add this to your pom:"
msgstr "これをポムに加える必要がある："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1166
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-http-dev-ui-tests</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1169
#, fuzzy
msgid "This will give you access to two base classes for creating these tests."
msgstr "これで、これらのテストを作成するための2つの基本クラスにアクセスできるようになる。"

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:1170
#, fuzzy, no-wrap
msgid "Testing Build time data"
msgstr "ビルド時間データのテスト"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1173
#, fuzzy
msgid "If you added Build time data, for example:"
msgstr "例えば、ビルド時間のデータを追加した場合："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1177
#, no-wrap
msgid "cardPageBuildItem.addBuildTimeData(\"somekey\", somevalue);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1180
#, fuzzy
msgid "To test that your build time data is generated correctly you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr "ビルド時間データが正しく生成されることをテストするには、 `DevUIBuildTimeDataTest` を拡張したテストを追加します。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1184
#, no-wrap
msgid "public class SomeTest extends DevUIBuildTimeDataTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1187
#: upstream/_versions/main/guides/dev-ui.adoc:1222
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static final QuarkusDevModeTest config = new QuarkusDevModeTest().withEmptyApplication();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1191
#: upstream/_versions/main/guides/dev-ui.adoc:1226
#, no-wrap
msgid ""
"    public SomeTest() {\n"
"        super(\"io.quarkus.my-extension\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1196
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSomekey() throws Exception {\n"
"        JsonNode somekeyResponse = super.getBuildTimeData(\"somekey\");\n"
"        Assertions.assertNotNull(somekeyResponse);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1199
#, no-wrap
msgid ""
"        // Check more values on somekeyResponse\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:1203
#, fuzzy, no-wrap
msgid "Testing Runtime data"
msgstr "ランタイムデータのテスト"

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1206
#, fuzzy
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr "例えば、ランタイム・データ・レスポンスを持つJsonRPCサービスを追加した場合："

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1212
#, no-wrap
msgid ""
"public boolean updateProperties(String content, String type) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:1215
#, fuzzy
msgid "To test that `updateProperties` execute correctly via JsonRPC you can add a test that extends `DevUIJsonRPCTest`."
msgstr "`updateProperties` が JsonRPC 経由で正しく実行されることをテストするには、 `DevUIJsonRPCTest` を継承したテストを追加します。"

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1219
#, no-wrap
msgid "public class SomeTest extends DevUIJsonRPCTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1229
#, no-wrap
msgid ""
"    @Test\n"
"    public void testUpdateProperties() throws Exception {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1235
#, no-wrap
msgid ""
"        JsonNode updatePropertyResponse = super.executeJsonRPCMethod(\"updateProperty\",\n"
"                Map.of(\n"
"                        \"name\", \"quarkus.application.name\",\n"
"                        \"value\", \"changedByTest\"));\n"
"        Assertions.assertTrue(updatePropertyResponse.asBoolean());\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:1242
#, no-wrap
msgid ""
"        // Get the properties to make sure it is changed\n"
"        JsonNode allPropertiesResponse = super.executeJsonRPCMethod(\"getAllValues\");\n"
"        String applicationName = allPropertiesResponse.get(\"quarkus.application.name\").asText();\n"
"        Assertions.assertEquals(\"changedByTest\", applicationName);\n"
"    }\n"
"}\n"
msgstr ""

#, fuzzy
#~ msgid "Dev UI v1"
#~ msgstr "Dev UI v1"

#, fuzzy
#~ msgid "This guide covers the Dev UI v1, which has been replaced in Quarkus 3 with xref:dev-ui-v2.adoc[a new Dev UI].  You can still access the Dev UI v1 using http://localhost:8080/q/dev-v1[/q/dev-v1]"
#~ msgstr "このガイドでは、Quarkus 3で新しいD xref:dev-ui-v2.adoc[ev UIに] 置き換えられたDev UI v1について説明します。dev UI v1には、 link:http://localhost:8080/q/dev-v1[/q/dev-v] 1を使用してアクセスできます。"

#, fuzzy
#~ msgid "Quarkus ships with a new experimental Dev UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-v1[/q/dev-v1] by default. It will show you something like this:"
#~ msgstr "Quarkusには新しい実験的なDev UIが搭載されており、devモード（ `mvn quarkus:dev` ）でQuarkusを起動すると、デフォルトで link:http://localhost:8080/q/dev-v1[/q/dev-v1] に表示されます。このUIは、次のようなものを表示します："

#~ msgid "It allows you to quickly visualize all the extensions currently loaded, see their status and go directly to their documentation."
#~ msgstr "これにより、現在ロードされているすべてのエクステンションを素早く可視化し、そのステータスを確認し、ドキュメントに直接アクセスすることができます。"

#~ msgid "On top of that, each extension can add:"
#~ msgstr "その上で、各エクステンションは以下を追加することができます。"

#, fuzzy
#~ msgid "xref:how-can-i-make-my-extension-support-the-dev-ui[Custom useful bits of runtime information in the overview]"
#~ msgstr "xref:how-can-i-make-my-extension-support-the-dev-ui[概要にある実行時情報の有用なビットをカスタムします。]"

#, fuzzy
#~ msgid "xref:adding-full-pages[Full custom pages]"
#~ msgstr "xref:adding-full-pages[フルカスタムページ]"

#, fuzzy
#~ msgid "xref:advanced-usage-adding-actions[Interactive pages with actions]"
#~ msgstr "xref:advanced-usage-adding-actions[アクションを伴うインタラクティブなページ]"

#~ msgid "How can I make my extension support the Dev UI?"
#~ msgstr "エクステンションをDev UIに対応させるにはどうすればいいですか?"

#~ msgid "If you want to contribute badges or links in your extension card on the Dev UI overview page, like this:"
#~ msgstr "Dev UI概要ページのエクステンションのカードにバッジやリンクを追加したい場合は、このようにします:"

#~ msgid "image:dev-ui-embedded.png[alt=Dev UI embedded,role=\"center\"]"
#~ msgstr "image:dev-ui-embedded.png[alt=Dev UI embedded,role=\"center\"]"

#~ msgid "You have to add a file named `dev-templates/embedded.html` in your xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] extension module's resources:"
#~ msgstr "link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`]エクステンションモジュールのリソースに `dev-templates/embedded.html` というファイルを追加する必要があります。"

#~ msgid "The contents of this file will be included in your extension card, so for example we can place two links with some styling and icons:"
#~ msgstr "このファイルの内容が、エクステンションカードに含まれますので、例えば、次のようにいくつかのスタイリングとアイコンと共に2つのリンクを配置することができます:"

#~ msgid "We use the Font Awesome Free icon set."
#~ msgstr "Font Awesome Freeアイコンセットを使用しています。"

#~ msgid "Note how the paths are specified: `{config:http-path('quarkus.smallrye-openapi.path')}`. This is a special directive that the quarkus dev console understands: it will replace that value with the resolved route named 'quarkus.smallrye-openapi.path'."
#~ msgstr "パスの指定方法に注意してください: `{config:http-path('quarkus.smallrye-openapi.path')}` 。これは、quarkus devコンソールが理解する特別なディレクティブで、その値を'quarkus.smallrye-openapi.path'という名前の解決済みルートに置き換えます"

#~ msgid "The corresponding non-application endpoint is declared using `.routeConfigKey` to associate the route with a name:"
#~ msgstr "対応する非アプリケーションのエンドポイントは、 `.routeConfigKey` を使って宣言され、ルートと名前が関連付けられます。"

#~ msgid "The configured path is resolved into a valid route."
#~ msgstr "設定されたパスが有効なルートに解決されます。"

#~ msgid "The resolved route path is then associated with the key `quarkus.smallrye-openapi.path`."
#~ msgstr "そして、解決されたルートパスは、キー `quarkus.smallrye-openapi.path` に関連付けられます。"

#~ msgid "Path considerations"
#~ msgstr "パスの考慮事項"

#~ msgid "Paths are tricky business. Keep the following in mind:"
#~ msgstr "パスというのは厄介なものです。以下の点に注意してください。"

#~ msgid "Assume your UI will be nested under the dev endpoint. Do not provide a way to customize this without a strong reason."
#~ msgstr "UIがdevエンドポイントの下に入れ子になっていることを想定してください。強い理由がない限り、これをカスタマイズする方法を提供しないでください。"

#~ msgid "Never construct your own absolute paths. Adding a suffix to a known, normalized and resolved path is fine."
#~ msgstr "自分で絶対パスを構築してはいけません。正規化された既知のパスにサフィックスを追加することは問題ありません。"

#~ msgid "Configured paths, like the `dev` endpoint used by the console or the SmallRye OpenAPI path shown in the example above, need to be properly resolved against both `quarkus.http.root-path` and `quarkus.http.non-application-root-path`.  Use `NonApplicationRootPathBuildItem` or `HttpRootPathBuildItem` to construct endpoint routes and identify resolved path values that can then be used in templates."
#~ msgstr "コンソールで使用される `dev` エンドポイントや、上記の例で示されている SmallRye OpenAPI パスなどの設定されたパスは、 `quarkus.http.root-path` と `quarkus.http.non-application-root-path` の両方に対して適切に解決される必要があります。 `NonApplicationRootPathBuildItem` または `HttpRootPathBuildItem` を使用してエンドポイントのルートを構築し、テンプレートで使用できる解決済みのパス値を特定します。"

#~ msgid "The `{devRootAppend}` variable can also be used in templates to construct URLs for static dev console resources, for example:"
#~ msgstr "`{devRootAppend}` 変数は、テンプレートでも使用することができ、例えば、静的なdev consoleリソースのURLを構築することができます:"

#~ msgid "Refer to the xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP configuration reference] for details on how the non-application root path is configured."
#~ msgstr "非アプリケーションルートパスの設定方法について、詳しくは xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP 設定リファレンス] を参照してください。"

#~ msgid "Template and styling support"
#~ msgstr "テンプレートとスタイリングのサポート"

#~ msgid "Both the `embedded.html` files and any full page you add in `/dev-templates` will be interpreted by xref:qute.adoc[the Qute template engine]."
#~ msgstr "`embedded.html` のファイルも、 `/dev-templates` で追加したフルページも、 link:qute.html[Qute テンプレートエンジン]によって解釈されます。"

#~ msgid "This also means that you can xref:qute-reference.adoc#user_tags[add custom Qute tags] in `/dev-templates/tags` for your templates to use."
#~ msgstr "これにより、 `/dev-templates/tags` にテンプレートが使用する link:qute-reference.html#user_tags[カスタムQuteタグを追加]することもできます。"

#~ msgid "The style system currently in use is https://getbootstrap.com/docs/4.6/getting-started/introduction/[Bootstrap V4 (4.6.0)] but note that this might change in the future."
#~ msgstr "現在使用されているスタイルシステムは link:https://getbootstrap.com/docs/4.6/getting-started/introduction/[Bootstrap V4(4.6.0)] ですが、将来的に変更される可能性があるので注意してください。"

#~ msgid "The main template also includes https://jquery.com/[jQuery 3.5.1], but here again this might change."
#~ msgstr "メインテンプレートには link:https://jquery.com/[jQuery 3.5.1] も含まれていますが、こちらも変わるかもしれません。"

#~ msgid "Accessing Config Properties"
#~ msgstr "設定プロパティーへのアクセス"

#~ msgid "A `config:property(name)` expression can be used to output the config value for the given property name.  The property name can be either a string literal or obtained dynamically by another expression.  For example `{config:property('quarkus.lambda.handler')}` and `{config:property(foo.propertyName)}`."
#~ msgstr "`config:property(name)` 式を使用して、指定されたプロパティー名の設定値を出力することができます。プロパティー名は、文字列リテラルか、別の式で動的に取得することができます。例えば `{config:property('quarkus.lambda.handler')}` や `{config:property(foo.propertyName)}` が可能です。"

#~ msgid "Reminder: do not use this to retrieve raw configured path values. As shown above, use `{config:http-path(...)}` with a known route configuration key when working with resource paths."
#~ msgstr "注意：設定された生のパス値を取得するためには使用しないでください。上述のように、リソースパスを扱う際には、既知のルート設定キーを持つ `{config:http-path(...)}` を使用してください。"

#~ msgid "Adding full pages"
#~ msgstr "フルページの追加"

#~ msgid "To add full pages for your Dev UI extension such as this one:"
#~ msgstr "以下のようなDev UIエクステンションにフルページを追加するには"

#~ msgid "You need to place them in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module's `/dev-templates` resource folder, like this page for the xref:cache.adoc[`quarkus-cache` extension]:"
#~ msgstr "xref:cache.adoc[`quarkus-cache` エクステンション]: に対するこのページのように、エクステンションの xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] モジュールの `/dev-templates` リソース フォルダーに配置する必要があります。"

#~ msgid "In order to benefit from the same style as other Dev UI pages, extend the `main` template"
#~ msgstr "他の Dev UI ページと同じスタイルを利用するには、 `main` テンプレートを拡張します。"

#~ msgid "You can pass extra CSS for your page in the `style` template parameter"
#~ msgstr "`style` テンプレートパラメーターで、ページに追加の CSS を渡すことができます。"

#~ msgid "You can pass extra JavaScript for your page in the `script` template parameter. This will be added inline after the JQuery script, so you can safely use JQuery in your script."
#~ msgstr "`script` テンプレートパラメータで、ページ用の追加JavaScriptを渡すことができます。これは、JQuery スクリプトの後にインラインで追加されるため、スクリプト内で安全に JQuery を使用することができます。"

#~ msgid "Don't forget to set your page title in the `title` template parameter"
#~ msgstr "`title` テンプレートパラメーターにページタイトルを設定することを忘れないでください。"

#~ msgid "The `body` template parameter will contain your content"
#~ msgstr "`body` テンプレートパラメーターには、コンテンツが含まれます。"

#~ msgid "In order for your template to read custom information from your Quarkus extension, you can use the `info` xref:qute-reference.adoc#namespace_extension_methods[namespace]."
#~ msgstr "テンプレートがQuarkusエクステンションからカスタム情報を読み取るためには、 `info`  link:qute-reference.html#namespace_extension_methods[名前空間]を使用することができます。"

#, fuzzy
#~ msgid "This shows an xref:advanced-usage-adding-actions[interactive page]"
#~ msgstr "xref:advanced-usage-adding-actions[インタラクティブなページが] 表示されます"

#~ msgid "Linking to your full-page templates"
#~ msgstr "フルページテンプレートへのリンク"

#, fuzzy
#~ msgid "Full-page templates for extensions live under a pre-defined `{devRootAppend}/{groupId}.{artifactId}/` directory that is referenced using the `urlbase` template parameter. Using configuration defaults, that would resolve to `/q/dev-v1/io.quarkus.quarkus-cache/`, as an example."
#~ msgstr "エクステンションのフルページテンプレートは、 `urlbase` templateパラメータを使用して参照される、あらかじめ定義された `{devRootAppend}/{groupId}.{artifactId}/` ディレクトリの下にあります。設定のデフォルトを使用すると、例として、 `/q/dev-v1/io.quarkus.quarkus-cache/` に解決されます。"

#~ msgid "Use the `{urlbase}` template parameter to reference this folder in `embedded.html`:"
#~ msgstr "`embedded.html` でこのフォルダを参照するには、 `{urlbase}` のテンプレートパラメータを使用します:"

#~ msgid "Use the `urlbase` template parameter to reference full-page templates for your extension"
#~ msgstr "エクステンションのフルページテンプレートを参照するには、 `urlbase` templateパラメータを使用します。"

#~ msgid "Passing information to your templates"
#~ msgstr "テンプレートに情報を渡す"

#~ msgid "In `embedded.html` or in full-page templates, you will likely want to display information that is available from your extension."
#~ msgstr "`embedded.html` やフルページのテンプレートでは、エクステンションから得られる情報を表示したい場合が多いでしょう。"

#~ msgid "There are two ways to make that information available, depending on whether it is available at build time or at run time."
#~ msgstr "その情報を利用可能にするには、ビルド時に利用可能か、実行時に利用可能かによって、2つの方法があります。"

#~ msgid "In both cases we advise that you add support for the Dev UI in your `{pkg}.deployment.devconsole` package in a `DevConsoleProcessor` class (in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module)."
#~ msgstr "どちらの場合も、 `{pkg}.deployment.devconsole` パッケージの Dev UI のサポートを、 `DevConsoleProcessor` クラス (エクステンションの  link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`]モジュール)に追加することをお勧めします。"

#~ msgid "Passing run-time information"
#~ msgstr "実行時情報を渡す"

#~ msgid "Don't forget to make this xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] conditional on being in dev mode"
#~ msgstr "この link:building-my-first-extension.html#deploying-the-greeting-feature[ビルドステップ]では、devモードであることを条件とすることを忘れないでください。"

#~ msgid "Declare a run-time dev `info:cacheInfos` template value"
#~ msgstr "実行時 dev `info:cacheInfos` テンプレート値を宣言します。"

#~ msgid "This will map the `info:cacheInfos` value to this supplier in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
#~ msgstr "これにより、 エクステンションの link:building-my-first-extension.html#description-of-a-quarkus-extension[`runtime module`] で `info:cacheInfos` の値が、このサプライヤーにマッピングされます。"

#~ msgid "Passing build-time information"
#~ msgstr "ビルド時情報を渡す"

#~ msgid "Sometimes you only need build-time information to be passed to your template, so you can do it like this:"
#~ msgstr "ビルド時の情報だけをテンプレートに渡す必要がある場合もあります。その場合、このようにすることができます:"

#~ msgid "Use whatever dependencies you need as input"
#~ msgstr "必要な依存関係を入力として使用します。"

#~ msgid "Declare a build-time `info:devQuteInfos` DEV template value"
#~ msgstr "ビルド時 `info:devQuteInfos` DEVテンプレート値を宣言します。"

#~ msgid "Advanced usage: adding actions"
#~ msgstr "高度な使用法:アクションの追加"

#~ msgid "You can also add actions to your Dev UI templates:"
#~ msgstr "Dev UI テンプレートにアクションを追加することもできます。"

#~ msgid "This can be done by adding another xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] to declare the action in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module:"
#~ msgstr "これは、別の link:building-my-first-extension.html#deploying-the-greeting-feature[ビルドステップ]を追加して、アクションをエクステンションの  link:building-my-first-extension.html#description-of-a-quarkus-extension[`deployment`]モジュールでアクションを宣言することで実現可能です。"

#~ msgid "Mark the recorder as optional, so it will only be invoked when in dev mode"
#~ msgstr "レコーダーをオプションとしてマークし、開発モードの時にのみ起動されるようにします。"

#~ msgid "Declare a `POST {urlbase}/caches` route handled by the given handler"
#~ msgstr "与えられたハンドラーによって処理される `POST {urlbase}/caches` ルートを宣言します。"

#, fuzzy
#~ msgid "Note: you can see xref:action-example[how to invoke this action from your full page]."
#~ msgstr "注： xref:action-example[このアクションを呼び出す方法は、あなたのフルページから] 確認することができます。"

#~ msgid "Now all you have to do is implement the recorder in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
#~ msgstr "あとは、エクステンションの xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`] でレコーダーを実装するだけです:"

#~ msgid "While you can use https://vertx.io/docs/vertx-web/java/#_routing_by_http_method[any Vert.x handler], the `DevConsolePostHandler` superclass will handle your POST actions nicely, and auto-redirect to the `GET` URI right after your `POST` for optimal behavior."
#~ msgstr "link:https://vertx.io/docs/vertx-web/java/#_routing_by_http_method[どのVert.x ハンドラーでも] 使用することができますが、 `DevConsolePostHandler` スーパークラスは POST アクションをうまく処理し、最適な動作を実現するために `POST` の直後に `GET` URI に自動リダイレクトします。"

#~ msgid "You can get the Vert.x `RoutingContext` as well as the `form` contents"
#~ msgstr "Vert.x `RoutingContext` の他、 `form` のコンテンツも入手できます。"

#~ msgid "Don't forget to add a message for the user to let them know everything went fine"
#~ msgstr "すべてがうまくいったことを知らせるために、ユーザーにメッセージを追加することを忘れないでください。"

#~ msgid "You can also add error messages"
#~ msgstr "エラーメッセージを追加することもできます。"

#~ msgid "Flash messages are handled by the `main` DEV template and will result in nice notifications for your users:"
#~ msgstr "フラッシュメッセージは `main` DEV テンプレートで処理され、ユーザーへの素敵な通知になります。"

#, fuzzy
#~ msgid "This guide covers the Dev UI v1, which has been replaced in Quarkus 3.  You can still access the Dev UI v1 using http://localhost/q/dev-v1/"
#~ msgstr "このガイドでは、Quarkus 3で置き換えられたDev UI v1について説明します。 http://localhost/q/dev-v1/ を使用しても、Dev UI v1 にアクセスすることができます。"

#~ msgid "Quarkus - Dev UI"
#~ msgstr "Quarkus - Dev UI"
