# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-15 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:7
#, no-wrap
msgid "Micrometer Metrics"
msgstr "Micrometerメトリクス"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:19
#, fuzzy
msgid "Micrometer provides an abstraction layer for metrics collection.  It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr "Micrometerは、メトリクス収集のための抽象化レイヤーを提供します。カウンタ、ゲージ、タイマ、ディストリビューション・サマリなどの基本的なメータ・タイプのための API と、さまざまなバックエンド監視システムのためのメトリクスの収集と伝搬を一般化する `MeterRegistry` API を定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:21
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "Micrometerは、Quarkusのメトリクスとして推奨されるアプローチです。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:24
#, fuzzy
msgid "By default, the metrics are exposed on the main HTTP server.  If you would like to surface metrics from a separate management port, see the xref:management-interface[Managed interface] section."
msgstr "デフォルトでは、メトリクスはメインの HTTP サーバーで公開されます。別の管理ポートからメトリッ クを表示したい場合は、「 xref:management-interface[管理インターフェイス] 」のセクションを参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:25
#, fuzzy, no-wrap
msgid "Micrometer and monitoring system extensions"
msgstr "マイクロメーターとモニタリングシステムのエクステンション"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:30
#, fuzzy
msgid "Quarkus Micrometer extensions are structured in the same way as the Micrometer project.  The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.  Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr "Quarkus Micrometerエクステンションは、Micrometerプロジェクトと同じ構造になっています。 `quarkus-micrometer` 。エクステンションは、Micrometerのコアサポートとランタイムの統合を提供します。他のQuarkusやQuarkiverseのエクステンションは、Quarkus Micrometerエクステンションを使用して、他のモニタリングシステムのサポートを提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:32
#, fuzzy
msgid "Quarkus extensions:"
msgstr "エクステンション："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:34
#, fuzzy
msgid "micrometer"
msgstr "micrometer"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:35
#, fuzzy
msgid "micrometer-registry-prometheus"
msgstr "マイクロメーター・レジストリ・プロメテウス"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:37
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverseの] エクステンション（不完全かもしれません）："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:39
#, fuzzy
msgid "micrometer-registry-azure-monitor"
msgstr "micrometer-registry-azureモニター"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:40
#, fuzzy
msgid "micrometer-registry-datadog"
msgstr "micrometerレジストリデータドッグ"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:41
#, fuzzy
msgid "micrometer-registry-graphite"
msgstr "micrometer-registry-グラファイト"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:42
#, fuzzy
msgid "micrometer-registry-influx"
msgstr "マイクロメーター・レジストリ・インフラックス"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:43
#, fuzzy
msgid "micrometer-registry-jmx"
msgstr "micrometer-registry-jmx"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:44
#, fuzzy
msgid "micrometer-registry-newrelic-telemetry"
msgstr "micrometer-registry-newrelic-telemetry"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:45
#, fuzzy
msgid "micrometer-registry-otlp"
msgstr "micrometer-registry-otlp"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:46
#, fuzzy
msgid "micrometer-registry-signalfx"
msgstr "micrometer-registry-signalfx"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:47
#, fuzzy
msgid "micrometer-registry-stackdriver"
msgstr "micrometerレジストリ・スタックドライバ"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:48
#, fuzzy
msgid "micrometer-registry-statsd"
msgstr "micrometer-registry-statsd"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:51
#, fuzzy
msgid "To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.  It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr "例えば、アプリケーションに Prometheus メトリクスのサポートを追加するには、 `micrometer-registry-prometheus` エクステンションを使用します。これにより、Quarkus MicrometerエクステンションとMicrometerコアライブラリが依存ライブラリとして追加されます。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:53
#, fuzzy
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "以下のコマンドを使用して、エクステンションをプロジェクトに追加します（プロジェクト・ディレクトリから）："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:58
msgid "This will add the following to your build file:"
msgstr "これにより、ビルドファイルに以下が追加されます。"

#. type: Block title
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:60
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:84
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:104
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:643
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:66
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-prometheus</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:69
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:93
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:118
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:652
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:72
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-micrometer-registry-prometheus\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:75
#, fuzzy
msgid "And you're all set!"
msgstr "これで準備万端だ！"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:79
#, fuzzy
msgid "A similar process applies for other meter registry extensions.  To use the Micrometer StackDriver MeterRegistry, for example, you would use the `quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr "同様のプロセスは、他のメーターレジストリ拡張にも適用されます。例えば、Micrometer StackDriver MeterRegistryを使用するには、Quarkiverseの `quarkus-micrometer-registry-stackdriver` エクステンションを使用します："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:90
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkiverse.micrometer.registry</groupId>\n"
"    <artifactId>quarkus-micrometer-registry-stackdriver</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:96
#, no-wrap
msgid "implementation(\"io.quarkiverse.micrometer.registry:quarkus-micrometer-registry-stackdriver\")\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:98
#, fuzzy, no-wrap
msgid "Other registry implementations"
msgstr "その他のレジストリ実装"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:102
#, fuzzy
msgid "If the Micrometer registry you would like to use does not yet have an associated extension, use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr "使用するMicrometerレジストリに関連エクステンションがない場合は、 `quarkus-micrometer` エクステンションを使用し、Micrometerレジストリの依存関係を直接取り込んでください："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:115
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-micrometer</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>com.acme</groupId>\n"
"    <artifactId>custom-micrometer-registry</artifactId>\n"
"    <version>...</version>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:122
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-micrometer\")\n"
"implementation(\"com.acme:custom-micrometer-registry\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:126
msgid "You will then need to specify your own provider to configure and initialize the MeterRegistry, as discussed in the next section."
msgstr "次に、次のセクションで説明するように、MeterRegistry を設定して初期化するために、独自のプロバイダを指定する必要があります。"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:127
#, fuzzy, no-wrap
msgid "Create a customized MeterRegistry"
msgstr "カスタマイズされたMeterRegistryを作成する"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:130
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "必要であれば、カスタム `@Produces` メソッドを使って、独自の `MeterRegistry` を作成し、設定する。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:132
msgid "The following example customizes the line format used for StatsD:"
msgstr "以下の例では、StatsDで使用される行フォーマットをカスタマイズしています。"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:140
#, no-wrap
msgid ""
"@Produces\n"
"@Singleton // <1>\n"
"public StatsdMeterRegistry createStatsdMeterRegistry(StatsdConfig statsdConfig, Clock clock) { // <2>\n"
"    // define what to do with lines\n"
"    Consumer<String> lineLogger = line -> logger.info(line);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:147
#, no-wrap
msgid ""
"    // inject a configuration object, and then customize the line builder\n"
"    return StatsdMeterRegistry.builder(statsdConfig)\n"
"          .clock(clock)\n"
"          .lineSink(lineLogger)\n"
"          .build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:150
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "このメソッドは `@Singleton` を返す。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:151
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "このメソッドは `MeterRegistry`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:153
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "この例は、Micrometerのドキュメントの以下の指示に対応しています： link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD：メトリックスシンクのカスタマイズ]"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:157
#, fuzzy
msgid "Use MicroProfile Config to inject any configuration attributes you need to configure the registry.  Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.  The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr "MicroProfile Config を使用して、レジストリを構成するために必要な構成属性を注入します。ほとんどのMicrometerレジストリエクステンション（ `quarkus-micrometer-registry-statsd` など）は、Quarkus設定モデルと統合されたレジストリ固有の設定オブジェクトを提供します。 link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repositoryは] 、有用な実装リファレンスとなります。"

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:158
#, fuzzy, no-wrap
msgid "Create your own metrics"
msgstr "独自のメトリクスを作成する"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:163
#, fuzzy
msgid "Metrics data is used in the aggregate to observe how data changes over time.  This data is used for trend analysis, anomaly detection, and alerting.  Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr "メトリックスデータは、データが時間とともにどのように変化するかを観察するために集約して使用される。このデータは、傾向分析、異常検知、アラートに使用される。データは、バックエンドの監視システムによって時系列データベースに保存され、新しい値がシリーズの最後に追加される。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:165
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "メトリクスは遅延的に構築される。エンドポイントにアクセスするなど、メトリックを作成するアクションを実行するまで、探しているメトリックのデータが表示されないことがあります。"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:166
#, fuzzy, no-wrap
msgid "Naming conventions"
msgstr "命名規則"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:170
#, fuzzy
msgid "Meter names should use dots to separate segments, `a.name.like.this`.  Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr "メーター名は、セグメントを区切るためにドットを使用する必要があります。 `a.name.like.this` 。Micrometerは、登録されたメーター名をバックエンドのモニタリングシステムの期待値に合わせて変換するために、命名規則を適用しています。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:172
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "次のようなタイマーの宣言があるとすると、 `registry.timer(\"http.server.requests\")` 、適用される命名規則は、異なるモニタリング・システムに対して次のようなメトリクスを生成する："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:174
#, fuzzy
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "プロメテウス `http_server_requests_duration_seconds`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:175
#, fuzzy
msgid "Atlas: `httpServerRequests`"
msgstr "アトラス `httpServerRequests`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:176
#, fuzzy
msgid "Graphite: `http.server.requests`"
msgstr "グラファイト： `http.server.requests`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:177
#, fuzzy
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB： `http_server_requests`"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:179
#, fuzzy, no-wrap
msgid "Define dimensions for aggregation"
msgstr "集計のためのディメンションを定義する"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:183
#, fuzzy
msgid "Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.  The Micrometer API refers to this dimensional data as tags, but you may it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr "メトリックス（単一の数値測定値）には、多くの場合、付加的なデータが取り込まれます。この補助データは、分析のためにメトリクスをグループ化または集約するために使用されます。Micrometer API では、この次元データをタグと呼びますが、他のドキュメント・ソースでは「ラベル」または「属性」 と呼ばれることもあります。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:186
#, fuzzy
msgid "Micrometer is built primariliy for backend monitoring systems that support dimensional data (metric names that are enchriched with key/value pairs).  For heirarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr "Micrometerは、主に次元データ（キーと値のペアでエンリッチされたメトリック名）をサポートするバックエンド監視システム用に構築されています。フラットなメトリック名しかサポートしない階層型システムの場合、Micrometerはキーと値のペアのセットをフラット化し（キーでソート）、名前に追加します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:188
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a xref:meter-filter[Meter Filter]."
msgstr "タグは、メーターが `MeterRegistry` 、または xref:meter-filter[メーターフィルターを] 使用して登録されるときに指定できます。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:190
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "link:{concepts}#_tag_naming[タグの命名に関する] その他のアドバイスについては、Micrometerのドキュメントを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:193
#, fuzzy
msgid "Each unique combination of metric name and dimension produces a unique time series.  Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr "メトリック名と次元のユニークな組み合わせは、それぞれユニークな時系列を生成する。次元データの無限のセットを使用すると、新しい時系列の作成が指数関数的に増加する「カーディナリティの爆発」につながる可能性がある。"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:194
#, fuzzy, no-wrap
msgid "Obtain a reference to a MeterRegistry"
msgstr "MeterRegistryへの参照を取得する。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:197
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "Micrometerを登録するには、 `MeterRegistry` への参照が必要です。この参照はMicrometerエクステンションによって設定され、維持されます。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:199
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "以下のいずれかの方法で、 `MeterRegistry` への参照を取得する："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:201
#, fuzzy
msgid "Use CDI Constructor injection:"
msgstr "CDIコンストラクタ注入を使用する："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:205
#, no-wrap
msgid "package org.acme.micrometer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:207
#, no-wrap
msgid "import io.micrometer.core.instrument.MeterRegistry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:211
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:215
#, no-wrap
msgid ""
"@Path(\"/example\")\n"
"@Produces(\"text/plain\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:217
#, no-wrap
msgid "    private final MeterRegistry registry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:222
#, no-wrap
msgid ""
"    ExampleResource(MeterRegistry registry) {\n"
"        this.registry = registry;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:225
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "メンバ変数 `MeterRegistry` を使用し、 `@Inject` ："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:230
#, no-wrap
msgid ""
"    @Inject\n"
"    MeterRegistry registry;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:233
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "グローバル `MeterRegistry` ："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:237
#, no-wrap
msgid "    MeterRegistry registry = Metrics.globalRegistry;\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:239
#, no-wrap
msgid "Gauges"
msgstr "ゲージ"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:243
#, fuzzy
msgid "Gauges measure a value that can increase or decrease over time, like the speedometer on a car.  Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr "ゲージは、車のスピードメーターのように、時間の経過とともに増減する値を測定します。ゲージは、キャッシュやコレクションの統計を監視するときに便利です。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:246
#, fuzzy
msgid "Gauge values are sampled rather than set; there is no record of how the value associated with a gauge may have changed between measurements."
msgstr "ゲージの値は設定されたものではなく、サンプリングされたものであるため、計測の間にゲージに関連する値がどのように変化したかの記録はない。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:248
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "Micrometerは、ゲージを作成するためのいくつかのメカニズムを提供します："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:250
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "コレクションをラップして、そのサイズを監視する："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:256
#, no-wrap
msgid ""
"List<String> list = registry.gaugeCollectionSize(\"fantastic.list\", // <1>\n"
"        Tags.of(\"key\", \"value\") // optional <2>\n"
"        new ArrayList<>());  // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:259
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "新しいゲージ、 `list.size` をドット区切りで作成する。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:261
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge.  Gauge tag values are constant, and must be assigned at construction time."
msgstr "xref:define-tags[タグを] ゲージに関連付けます。ゲージのタグの値は一定であり、構築時に割り当てる必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:262
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "サイズが観測されるべき配列リストを構築する。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:264
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "ビルダーを使用して、関数を呼び出すゲージを作成します："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:272
#, no-wrap
msgid ""
"Gauge.builder(\"jvm.threads.peak\", threadBean, ThreadMXBean::getPeakThreadCount) // <1>\n"
"    .baseUnit(BaseUnits.THREADS) // optional <2>\n"
"    .description(\"The peak live thread count...\") // optional <3>\n"
"    .tags(\"key\", \"value\") // optional <4>\n"
"    .register(registry); // <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:275
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "のインスタンスである `threadBean` で `getPeakThreadCount` を呼び出す `jvm.threads.peak` という新しいゲージを作成する。 `ThreadMXBean`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:276
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:277
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "ゲージの説明"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:278
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge"
msgstr "xref:define-tags[タグを] ゲージに関連付ける"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:279
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "MeterRegistryにゲージを登録します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:282
#, fuzzy
msgid "See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.  Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr "詳細と例については、Micrometerドキュメントの link:{concepts}#_gauges[Gaugesを] 参照してください。特筆すべきは2つの特殊なケースです。 `TimeGauge` 、時間を測定するためのもの、そして `MultiGauge` 、いくつかの基準をまとめて報告するためのものです。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:286
#, fuzzy
msgid "Micrometer does not create strong references to the objects it observes by default.  Depending on the registry, Micrometer either omits gauges that observe objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr "Micrometerはデフォルトで、観測するオブジェクトへの強い参照を作成しません。レジストリによって、Micrometerはガベージコレクションされたオブジェクトを観測するゲージを完全に省略するか、 `NaN` （数値ではない）を観測値として使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:291
#, fuzzy
msgid "When should you use a gauge? Only use a gauge when you can't use something else.  Gauges can be less straight-forward to use than other meters.  If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr "ゲージはいつ使うべきか？ゲージを使うのは、他のものが使えないときだけです。ゲージは、他のメーターに比べて使い方が単純ではありません。測定するものが数えられるものであれば（値が常に増加するため）、代わりにカウンターを使います。"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:292
#, no-wrap
msgid "Counters"
msgstr "カウンター"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:296
#, fuzzy
msgid "Counters measure values that only increase.  Use one of the methods below to create a counter."
msgstr "カウンターは、増加する値のみを測定する。カウンタを作成するには、以下のメソッドのいずれかを使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:298
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:361
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:394
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "`MeterRegistry` で便利なメソッドを使う："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:302
#, no-wrap
msgid "registry.counter(\"example.prime.number\", \"type\", \"prime\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:305
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr "`example.prime.number` はカウンター名である。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:306
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr "`type` は値 を持つ次元タグである。 `prime`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:309
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "`Counter.builder` 、説明と単位を記入する："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:317
#, no-wrap
msgid ""
"Counter.builder(\"count.me\") // <1>\n"
"    .baseUnit(\"beans\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"region\", \"test\")       // optional <4>\n"
"    .register(registry);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:320
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "という新しいカウンターを作成する。 `count.me`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:321
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "カスタムの基本単位を定義します。定義済みの値については link:{base-units}[BaseUnits.java] を参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:322
#, fuzzy
msgid "Provide a description for the counter"
msgstr "カウンターの説明を記入してください。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:323
#, fuzzy
msgid "Associate xref:define-tags[tags] with the counter"
msgstr "xref:define-tags[タグを] カウンターに関連付ける"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:325
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:420
#, fuzzy
msgid "xref:annotations[Annotate] a method"
msgstr "メソッドの xref:annotations[アノテーション]"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:332
#, no-wrap
msgid ""
"@Counted(value = \"counted.method\", extraTags = { \"extra\", \"annotated\" }) // <1> <2>\n"
"void countThisMethod(){\n"
"    ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:335
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "CDIインターセプターは、以下のようなカウンターを作成し、登録する。 `counted.method`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:336
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "インターセプターが作成したカウンターは、値 \"アノテーション \"を持つ \"extra \"ディメンジョンタグを持つ。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:338
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "常時増加する関数が返す結果を測定するために使用できる、あまり一般的でない `FunctionCounter` を含む、より詳細な情報と例については、Micrometerドキュメントの link:{concepts}#_counters[カウンタを] 参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:344
#, fuzzy
msgid "When should you use a counter? Use a counter if you are doing something that can not be either timed or summarized.  If you want to understand more about how a value is changing, a timer (when the base unit of measurement is time) or a distribution summary might be more appropriate."
msgstr "どんなときにカウンターを使うべきか？カウンタを使うのは、時間を計ったり要約したりできないことをするときです。値がどのように変化しているかをもっと理解したい場合は、タイマー（計測の基本単位が時間の場合）や分布要約の方が適切かもしれません。"

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:345
#, no-wrap
msgid "Summaries and Timers"
msgstr "サマリーとタイマー"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:348
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "Micrometerのタイマーと分布サマリーは非常によく似ている。どちらのメーターもデータを記録し、さらにヒストグラムやパーセンタイルのデータを取り込むことができます。分布サマリーは任意のタイプのデータに使用できますが、タイマーは時間と持続時間の測定に最適化されています。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:350
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "タイマーとディストリビューション・サマリーは、少なくとも3つの値を内部に保存する："

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:352
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "記録されたすべての値を合計したもの。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:353
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "記録された値の数（カウンタ）"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:354
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "減衰する時間窓（ゲージ）内で見られる最高値。"

#. type: Title ====
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:355
#, fuzzy, no-wrap
msgid "Create a distribution summary"
msgstr "配信サマリーの作成"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:359
#, fuzzy
msgid "Use a distribution summary to record a value, not time.  Use one of the following methods to create a distribution summary."
msgstr "分布要約を使用して、時間ではなく値を記録する。分布要約を作成するには、以下のいずれかの方法を使用する。"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:365
#, no-wrap
msgid "registry.summary(\"bytes.written\", \"protocol\", \"http\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:368
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr "`bytes.written` は要約名"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:369
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr "`protocol` は、値 を持つ次元タグである。 `http`"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:372
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "`DistributionSummary.builder` 、説明と単位を記入する："

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:380
#, no-wrap
msgid ""
"DistributionSummary.builder(\"response.size\") // <1>\n"
"    .baseUnit(\"bytes\")            // optional <2>\n"
"    .description(\"a description\") // optional <3>\n"
"    .tags(\"protocol\", \"http\")     // optional <4>\n"
"    .register(registry);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:383
msgid "Create a new distribution summary called `response.size`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:384
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:385
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:417
msgid "Provide a description for the distribution summary"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:386
msgid "Associate xref:define-tags[tags] with the distribution summary"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:387
#, fuzzy, no-wrap
msgid "Create a timer"
msgstr "タイマーを作成する"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:390
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:392
msgid "Use one of the following methods to construct a timer."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:398
#, no-wrap
msgid "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:401
msgid "`fabric.selection` is the summary name"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:402
msgid "`primary` is a dimensional tag with value `blue`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:405
msgid "Use `Timer.builder` to provide a description and units:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:412
#, fuzzy, no-wrap
msgid ""
"Timer.builder(\"my.timer\")        // <1> <2>\n"
"    .description(\"description \") // optional <3>\n"
"    .tags(\"region\", \"test\")      // optional <4>\n"
"    .register(registry);\n"
msgstr "Timer.builder(\"my.timer\") // <1> <2> .description(\"description \") // オプション <3> .tags(\"region\", \"test\") // オプション <4> .register(registry)；"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:415
msgid "Create a new timer called `my.timer`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:416
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:418
msgid "Associate xref:define-tags[tags] with the timer"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:424
#, no-wrap
msgid "@Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:427
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:428
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:429
#, fuzzy, no-wrap
msgid "Measure durations with Timers"
msgstr "タイマーを使った持続時間の測定"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:432
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:434
msgid "Wrap the invocation of a `Runnable`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:438
#, no-wrap
msgid "timer.record(() -> noReturnValue());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:441
msgid "Wrap the invocation of a `Callable`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:445
#, no-wrap
msgid "timer.recordCallable(() -> returnValue());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:448
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:452
#, no-wrap
msgid "Runnable r = timer.wrap(() -> noReturnValue());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:455
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:459
#, no-wrap
msgid "Callable c = timer.wrap(() -> returnValue());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:462
msgid "Use a `Sample` for more complex code paths:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:466
#, no-wrap
msgid "Sample sample = Timer.start(registry); // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:468
#, no-wrap
msgid "doStuff; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:470
#, no-wrap
msgid "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:473
msgid "We create a sample, which records the start of the timer."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:474
msgid "The sample can be passed along as context"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:475
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:476
#, fuzzy, no-wrap
msgid "Histograms and percentiles"
msgstr "ヒストグラムとパーセンタイル"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:480
msgid "Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.  See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:484
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:486
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:488
#, fuzzy, no-wrap
msgid "Automatically generated metrics"
msgstr "自動的に生成されるメトリクス"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:494
msgid "The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and `http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method (GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr "Micrometerエクステンションは、HTTPサーバーのリクエストの時間を自動的に計測します。Prometheus のタイマーの命名規則に従い、 `http_server_requests_seconds_count` 、 `http_server_requests_seconds_sum` 、 `http_server_requests_seconds_max` を参照してください。要求された URI、HTTP メソッド (GET、POST など)、ステータスコード (200、302、404 など)、そしてより一般的な結果フィールドのための次元ラベルが追加されました。"

#. type: Block title
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:495
#, no-wrap
msgid "Ignoring endpoints"
msgstr "エンドポイントの無視"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:505
msgid "You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns` property.  This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should be ignored.  For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will ignore a request to `http://localhost:8080/example/prime/7919`.  A request to `http://localhost:8080/example/gauge/7919` would still be measured."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:506
#, no-wrap
msgid "URI templates"
msgstr "URIテンプレート"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:511
msgid "The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.  Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of `http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr "micrometerエクステンションでは、パスパラメータを含むURIをテンプレート化して表現することに最善の努力を払います。上の例を使うと、次のようなリクエストは `http://localhost:8080/example/prime/7919` へのリクエストは、 `http_server_requests_seconds_*` メトリクスの属性として、 `uri=/example/prime/{number}` という値で表示されます。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:518
msgid "Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.  This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement string.  For example, setting `quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value `/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:519
#, no-wrap
msgid "Exported metrics format"
msgstr "エクスポートされるメトリクスフォーマット"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:523
msgid "By default, the metrics are exported using the Prometheus format `application/openmetrics-text`, you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr "デフォルトでは、メトリクスはPrometheusのフォーマット `application/openmetrics-text` を使用してエクスポートされます。 `Accept` リクエストヘッダを `plain/text` ( `curl -H \"Accept: plain/text\" localhost:8080/q/metrics/` ) に指定することで、以前のフォーマットに戻すことも可能です。"

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:524
#, fuzzy, no-wrap
msgid "Customizing Micrometer"
msgstr "マイクロメーターのカスタマイズ"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:527
msgid "Quarkus provides a variety of way to customize Micrometer."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:529
#, fuzzy, no-wrap
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "`MeterFilter` を使用して、放出されるタグとメトリックをカスタマイズする。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:534
msgid "Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.  The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry` instances."
msgstr "Micrometerは `MeterFilter` インスタンスを使って、 `MeterRegistry` インスタンスが出力するメトリクスをカスタマイズします。 Micrometer エクステンションは、 `MeterFilter` のCDI Beanを検出して、 `MeterRegistry` インスタンスを初期化するときにそれを使います。"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:539
#, no-wrap
msgid ""
"@Singleton\n"
"public class CustomConfiguration {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:542
#, fuzzy, no-wrap
msgid ""
"    @ConfigProperty(name = \"deployment.env\")\n"
"    String deploymentEnv;\n"
msgstr ""
"@ConfigProperty(name = \"deployment.env\")\n"
"文字列 deploymentEnv；"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:551
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply only to a Prometheus Registry */\n"
"    @Produces\n"
"    @Singleton\n"
"    @MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"    public MeterFilter configurePrometheusRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"registry\", \"prometheus\")));\n"
"    }\n"
msgstr ""
"/** プロメテウスレジストリにのみ適用される共通タグを定義します。\n"
"プロデュース\n"
"シングルトン\n"
"@MeterFilterConstraint(applyTo = PrometheusMeterRegistry.class)\n"
"public MeterFilter configurePrometheusRegistries() { プロメテウスレジストリにのみ適用されます。\n"
"    return MeterFilter.commonTags(Arrays.asList(\n"
"            タグ.オブ(\"レジストリ\", \"プロメテウス\"))；\n"
"}"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:559
#, fuzzy, no-wrap
msgid ""
"    /** Define common tags that apply globally */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter configureAllRegistries() {\n"
"        return MeterFilter.commonTags(Arrays.asList(\n"
"                Tag.of(\"env\", deploymentEnv)));\n"
"    }\n"
msgstr ""
"/** グローバルに適用される共通タグを定義します。\n"
"プロデュース\n"
"シングルトン\n"
"public MeterFilter configureAllRegistries() { メーターフィルター.commonTags(Arrays.asList())\n"
"    return MeterFilter.commonTags(Arrays.asList(\n"
"            タグ.of(\"env\", deploymentEnv)))；\n"
"}"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:579
#, fuzzy, no-wrap
msgid ""
"    /** Enable histogram buckets for a specific timer */\n"
"    @Produces\n"
"    @Singleton\n"
"    public MeterFilter enableHistogram() {\n"
"        return new MeterFilter() {\n"
"            @Override\n"
"            public DistributionStatisticConfig configure(Meter.Id id, DistributionStatisticConfig config) {\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    return DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95)     // median and 95th percentile, not aggregable\n"
"                        .percentilesHistogram(true) // histogram buckets (e.g. prometheus histogram_quantile)\n"
"                        .build()\n"
"                        .merge(config);\n"
"                }\n"
"                return config;\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""
"    /** 特定のタイマーのヒストグラム・バケットを有効にします */.\n"
"    生成する\n"
"    シングルトン\n"
"    public MeterFilter enableHistogram() { ヒストグラムを有効にする。\n"
"        return new MeterFilter() { を返します。\n"
"            オーバーライド\n"
"            public DistributionStatisticConfig configure(Meter.Id id, DistributionStatisticConfig config) { if(id.getName().startswith(\"mymyName\").\n"
"                if(id.getName().startsWith(\"myservice\")) {\n"
"                    return DistributionStatisticConfig.builder()\n"
"                        .percentiles(0.5, 0.95) // 中央値と95パーセンタイル。\n"
"                        .percentilesHistogram(true) // ヒストグラムバケット（例：prometheus histogram_quantile）\n"
"                        .build()\n"
"                        .merge(config)；\n"
"                }\n"
"                return config；\n"
"            }\n"
"        };\n"
"    }\n"
"}"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:588
msgid "In this example, a singleton CDI bean will produce two different `MeterFilter` beans.  One will be applied only to Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied to all `MeterRegistry` instances.  An application configuration property is also injected and used as a tag value.  Additional examples of MeterFilters can be found in the link:https://micrometer.io/docs/concepts[official documentation]."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:589
#, fuzzy, no-wrap
msgid "Use `HttpServerMetricsTagsContributor` for server HTTP requests"
msgstr "サーバーのHTTPリクエストには `HttpServerMetricsTagsContributor` 。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:592
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:593
#, fuzzy, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "メータ登録の任意のカスタマイズには `MeterRegistryCustomizer` を使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:597
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` user code has the change to change the configuration of any `MeterRegistry` that has been activated.  Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:599
#, no-wrap
msgid "Does Micrometer support annotations?"
msgstr "Micrometerはアノテーションをサポートしていますか？"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:605
msgid "Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.  The `@Timed` annotation will wrap the execution of a method and will emit the following tags in addition to any tags defined on the annotation itself: class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:608
msgid "Using annotations is limited, as you can't dynamically assign meaningful tag values.  Also note that many methods, e.g. REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:609
#, no-wrap
msgid "Support for the MicroProfile Metrics API"
msgstr "MicroProfile Metrics API のサポート"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:614
msgid "If you use the MicroProfile Metrics API in your application, the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.  Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:616
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:623
#, fuzzy, no-wrap
msgid ""
"@Produces\n"
"@Singleton\n"
"public MeterFilter renameApplicationMeters() {\n"
"    final String targetMetric = MPResourceClass.class.getName() + \".mpAnnotatedMethodName\";\n"
msgstr "を生成する @Singleton public MeterFilter renameApplicationMeters() { final String targetMetric = MPResourceClass.class.getName() + \".mpAnnotatedMethodName\"；"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:638
#, fuzzy, no-wrap
msgid ""
"    return MeterFilter() {\n"
"        @Override\n"
"        public Meter.Id map(Meter.Id id) {\n"
"            if (id.getName().equals(targetMetric)) {\n"
"                // Drop the scope tag (MP Registry type: application, vendor, base)\n"
"                List<Tag> tags = id.getTags().stream().filter(x -> !\"scope\".equals(x.getKey()))\n"
"                        .collect(Collectors.toList());\n"
"                // rename the metric\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags);\n"
"            }\n"
"            return id;\n"
"        }\n"
"    };\n"
"}\n"
msgstr ""
"    return MeterFilter() {.\n"
"        オーバーライド\n"
"        public Meter.Id map(Meter.Id id) { if (id.getName().equals(targetMetric)) { @verride\n"
"            if (id.getName().equals(targetMetric)) { // スコープタグを削除します。\n"
"                // スコープ・タグを削除します（MP レジストリのタイプ：アプリケーション、ベンダー、ベース）。\n"
"                List<Tag> tags = id.getTags().stream().filter(x -> !\"scope\".equals(x.getKey()))\n"
"                        .collect(Collectors.toList())；\n"
"                // メトリックの名前を変更する\n"
"                return id.withName(\"my.metric.name\").replaceTags(tags)；\n"
"            }\n"
"            return id；\n"
"        }\n"
"    };\n"
"}"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:641
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:649
#, fuzzy, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.eclipse.microprofile.metrics</groupId>\n"
"    <artifactId>microprofile-metrics-api</artifactId>\n"
"</dependency>\n"
msgstr "<dependency> <groupId>org.eclipse.microprofile.metrics</groupId> <artifactId>microprofile-metrics-api</artifactId> </dependency> <グループID>org.eclipse.microprofile.metrics</グループID"

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:655
#, no-wrap
msgid "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:658
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:660
#, no-wrap
msgid "Management interface"
msgstr "マネジメントインターフェース"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:663
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:667
msgid "You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.  Note that this property is a build-time property.  The value cannot be overridden at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:669
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:671
msgid "You can configure the path of each exposed format using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:676
#, no-wrap
msgid ""
"quarkus.micrometer.export.json.enabled=true # Enable json metrics\n"
"quarkus.micrometer.export.json.path=metrics/json\n"
"quarkus.micrometer.export.prometheus.path=metrics/prometheus\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:680
msgid "With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.  The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr "このような設定にすることで、json メトリクスが `http://0.0.0.0:9000/q/metrics/json` で利用可能になります。prometheus メトリクスは、 `http://0.0.0.0:9000/q/metrics/prometheus` で利用可能になります。"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:682
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr "詳しくは、 xref:./management-interface-reference.adoc[マネジメントインターフェイスのリファレンス] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:684
#, fuzzy, no-wrap
msgid "Quarkus core extensions instrumented with Micrometer"
msgstr "マイクロメーターで計測されたクアルカスコアエクステンション"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:687
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:688
msgid "https://quarkus.io/guides/cache[`quarkus-cache`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:689
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:690
msgid "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:691
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:692
msgid "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:693
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:694
msgid "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:695
msgid "https://quarkus.io/guides/logging[`jboss-logging`] (logging API in Quarkus)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:696
msgid "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:697
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:698
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:699
msgid "https://quarkus.io/guides/rest-client[`quarkus-rest-client`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:700
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:701
msgid "https://quarkus.io/guides/resteasy-reactive[`quarkus-resteasy-reactive`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:702
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:703
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:704
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-reactive-messaging[`quarkus-smallrye-reactive-messaging`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:705
msgid "AMQP 1.0"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:706
msgid "RabbitMQ"
msgstr "RabbitMQ"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:707
msgid "Kafka"
msgstr "Kafka"

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:708
msgid "Pulsar"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:709
msgid "JMS"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:710
msgid "MQTT"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:711
msgid "Camel Messaging"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:712
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/telemetry-micrometer.adoc:713
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#, fuzzy
#~ msgid "  DistributionSummary.builder(\"response.size\") // <1>"
#~ msgstr "DistributionSummary.builder(\"response.size\")//。(1)"

#, fuzzy
#~ msgid ""
#~ ".baseUnit(\"bytes\")            // optional <2>\n"
#~ ".description(\"a description\") // optional <3>\n"
#~ ".tags(\"protocol\", \"http\")     // optional <4>\n"
#~ ".register(registry);\n"
#~ msgstr ""
#~ ".baseUnit(\"bytes\") // 任意<2>\n"
#~ ".description(\"a description\") // 任意<3>\n"
#~ ".tags(\"protocol\", \"http\") // 任意<4>\n"
#~ ".register(registry)；\n"

#, fuzzy
#~ msgid "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <1> <2>"
#~ msgstr "registry.timer(\"fabric.selection\", \"primary\", \"blue\"); // <1> <2>."

#, fuzzy
#~ msgid "@Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // <1> <2>"
#~ msgstr "Timed(value = \"call\", extraTags = {\"region\", \"test\"}) // <1> <2>."

#, fuzzy
#~ msgid "timer.record(() -> noReturnValue());"
#~ msgstr "timer.record) → noReturnValue(；"

#, fuzzy
#~ msgid "timer.recordCallable(() -> returnValue());"
#~ msgstr "timer.recordCallable) → returnValue(；"

#, fuzzy
#~ msgid "Runnable r = timer.wrap(() -> noReturnValue());"
#~ msgstr "Runnable r = timer.wrap) → noReturnValue(；"

#, fuzzy
#~ msgid "Callable c = timer.wrap(() -> returnValue());"
#~ msgstr "callable c = timer.wrap) → returnValue(；"

#, fuzzy
#~ msgid "Sample sample = Timer.start(registry); // <1>"
#~ msgstr "サンプル sample = Timer.start(レジストリ); // <1>."

#, fuzzy
#~ msgid "doStuff; // <2>"
#~ msgstr "doStuff; // <2"

#, fuzzy
#~ msgid "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>"
#~ msgstr "sample.stop(registry.timer(\"my.timer\", \"response\", response.status())); // <3>."

#, fuzzy
#~ msgid "@Singleton public class CustomConfiguration {"
#~ msgstr "シングルトン public class CustomConfiguration {"

#, fuzzy
#~ msgid "implementation(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")"
#~ msgstr "実装(\"org.eclipse.microprofile.metrics:microprofile-metrics-api\")"

#, fuzzy
#~ msgid "quarkus.micrometer.export.json.enabled=true # Enable json metrics quarkus.micrometer.export.json.path=metrics/json quarkus.micrometer.export.prometheus.path=metrics/prometheus"
#~ msgstr "quarkus.micrometer.export.json.enabled=true # json メトリクスを有効にする quarkus.micrometer.export.json.path=metrics/json quarkus.micrometer.export.prometheus.path=metrics/prometheus"
