# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-06-04 02:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/opentelemetry.adoc:6
#, no-wrap
msgid "Quarkus - Using OpenTelemetry"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:12
msgid "This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] to provide distributed tracing for interactive web applications."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:16
msgid "To complete this guide, you need:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:18
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:19
msgid "an IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:20
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:21
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:22
msgid "Docker"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:25
#, no-wrap
msgid "Architecture"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:28
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:29
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:33
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:35
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:37
msgid "The solution is located in the `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:38
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:41
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:51
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=opentelemetry-quickstart \\\n"
"    -DclassName=\"org.acme.opentelemetry.TracedResource\" \\\n"
"    -Dpath=\"/hello\" \\\n"
"    -Dextensions=\"resteasy,quarkus-opentelemetry-exporter-jaeger\"\n"
"cd opentelemetry-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:56
msgid "This command generates the Maven project with a REST endpoint and imports the `quarkus-opentelemetry-exporter-jaeger` extension, which includes the OpenTelemetry support, and a gRPC span exporter for https://www.jaegertracing.io/[Jaeger]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:59
msgid "If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry-exporter-jaeger` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:63
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"opentelemetry-jaeger-exporter\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:66
msgid "This will add the following to your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:73
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-opentelemetry-exporter-jaeger</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/opentelemetry.adoc:75
#, no-wrap
msgid "Examine the JAX-RS resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:78
msgid "Open the `src/main/java/org/acme/opentelemetry/TracedResource.java` file and see the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:82
#, no-wrap
msgid "package org.acme.opentelemetry;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:88
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:91
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class TracedResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:93
#, no-wrap
msgid "    private static final Logger LOG = Logger.getLogger(TracedResource.class);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:101
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        LOG.info(\"hello\");\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:105
msgid "Notice that there is no tracing specific code included in the application. By default, requests sent to this endpoint will be traced without any required code changes."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/opentelemetry.adoc:106
#, no-wrap
msgid "Create the configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:109
msgid "There are two ways to configure the Jaeger gRPC Exporter within the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:111
msgid "The first approach is by providing the properties within the `src/main/resources/application.properties` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:117
#, no-wrap
msgid ""
"quarkus.application.name=myservice // <1>\n"
"quarkus.opentelemetry.enabled=true // <2>\n"
"quarkus.opentelemetry.tracer.exporter.jaeger.endpoint=http://localhost:14250 // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:120
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:121
msgid "Whether OpenTelemetry is enabled or not. The default is `true`, but shown here to indicate how it can be disabled"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:122
msgid "gRPC endpoint for sending spans."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:123
#, no-wrap
msgid "Run the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:126
msgid "The first step is to start the https://www.jaegertracing.io/[Jaeger] \"all in one\" to collect and display the captured traces:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:130
#, no-wrap
msgid "docker run -p 5775:5775/udp -p 6831:6831/udp -p 6832:6832/udp -p 5778:5778 -p 16686:16686 -p 14250:14250 jaegertracing/all-in-one:latest\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:133
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:137
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:140
msgid "or if configuring the Jaeger gRPC endpoint via environment variables:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:144
#, no-wrap
msgid "./mvnw compile quarkus:dev -Djvm.args=\"-DQUARKUS_OPENTELEMETRY_TRACER_EXPORTER_JAEGER_ENDPOINT=http://localhost:14250\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:147
msgid "With the Jaeger system and application running, you can make a request to the provided endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:152
#, no-wrap
msgid ""
"$ curl http://localhost:8080/hello\n"
"hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:155
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:157
msgid "Hit `CTRL+C` to stop the application."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:158
#, no-wrap
msgid "Additional instrumentation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:162
msgid "Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.  These sections will outline what is necessary to propagate traces across process boundaries."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:164
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/opentelemetry.adoc:165
#, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:169
msgid "When using the SmallRye Reactive Messaging extension for Kafka, we are able to propagate the span into the Kafka Record with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/opentelemetry.adoc:173
#, no-wrap
msgid "Metadata.of(TracingMetadata.withPrevious(Context.current()));\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/opentelemetry.adoc:177
msgid "The above creates a `Metadata` object we can add to the `Message` being produced, which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/opentelemetry.adoc:179
#, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr ""
