msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"It is now recommended to use RESTEasy Reactive, which supports equally well traditional blocking workloads and reactive workloads.\n"
"For more information about RESTEasy Reactive,\n"
"please see the xref:rest-client-reactive.adoc[REST Client Reactive guide] and, for the server side, the xref:rest-json.adoc[introductory REST JSON guide] or the more detailed xref:resteasy-reactive.adoc[RESTEasy Reactive guide]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"This guide explains how to use the RESTEasy REST Client in order to interact with REST APIs\n"
"with very little effort."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `rest-client` and the `rest-client-jackson` extensions\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://stage.code.quarkus.io[stage.code.quarkus.io] service.\n"
"Our first order of business is to set up the model we will be using, in the form of an `Extension` POJO."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for\n"
"CDI injection as a REST Client"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"When a JSON extension is installed such as `quarkus-rest-client-jackson` or `quarkus-rest-client-jsonb`, Quarkus will use the `application/json` media type\n"
"by default for most return values, unless the media type is explicitly set via\n"
"`@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream`\n"
"respectively)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"If you don't want JSON by default you can set `quarkus.resteasy-json.default-json=false` and the default will change back to being auto-negotiated. If you set this\n"
"you will need to add `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` to your endpoints in order to use JSON."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.\n"
"It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.\n"
"The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"Having this configuration means that all requests performed using `ExtensionsService` will use `https://stage.code.quarkus.io` as the base URL.\n"
"Using the configuration above, calling the `getById` method of `ExtensionsService` with a value of `io.quarkus:quarkus-rest-client` would result in an HTTP GET request being made to `https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client`."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"Having this configuration means that the default scope of `ExtensionsService` will be `@Singleton`. Supported scope values are `@Singleton`, `@Dependent`, `@ApplicationScoped` and `@RequestScoped`. The default scope is `@Dependent`.\n"
"The default scope can also be defined on the interface."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"We also need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` file and change the content of the `testExtensionIdEndpoint` method to:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"The rest client supports asynchronous rest calls.\n"
"Async support comes in 2 flavors: you can return a `CompletionStage` or a `Uni` (requires the `quarkus-rest-client-mutiny` extension).\n"
"Let's see it in action by adding a `getByIdAsync` method in our `ExtensionsService` REST interface. The code should look like:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"The previous snippet uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"When returning a `Uni`, every _subscription_ invokes the remote service.\n"
"It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follows:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"If you use a `CompletionStage`, you would need to call the service's method to retry.\n"
"This difference comes from the laziness aspect of Mutiny and its subscription protocol.\n"
"More details about this can be found in https://smallrye.io/smallrye-mutiny/latest/reference/uni-and-multi/[the Mutiny documentation]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"As you see in the example above, you can make your `ClientHeadersFactory` implementation a CDI bean by\n"
"annotating it with a scope-defining annotation, such as `@Singleton`, `@ApplicationScoped`, etc."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"In Quarkus, the REST Client extension and xref:rest-json.adoc[the RESTEasy extension] share the same infrastructure.\n"
"One important consequence of this consideration is that they share the same list of providers (in the Jakarta REST meaning of the word)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"For instance, if you declare a `WriterInterceptor`, it will by default intercept both the servers calls and the client calls,\n"
"which might not be the desired behavior."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"Setting up a mock HTTP server, against which tests are run, is a common testing pattern.\n"
"Examples of such servers are link:https://wiremock.org/[Wiremock] and link:https://docs.hoverfly.io/projects/hoverfly-java/en/latest/index.html[Hoverfly].\n"
"In this section we'll demonstrate how Wiremock can be leveraged for testing the `ExtensionsService` which was developed above."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n"
"annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n"
"values that Quarkus will use."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid "For more details about `@QuarkusTestResource` refer to  xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_versions/main/guides/rest-client.adoc
msgid ""
"As the `start` method returns configuration that applies for tests, we set the rest-client property that controls the base URL which is used by the implementation\n"
"of `ExtensionsService` to the base URL where Wiremock is listening for incoming requests."
msgstr ""

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/rest-client.adoc:6
#, no-wrap
msgid "Using the legacy REST Client"
msgstr "レガシーREST クライアントの利用"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:14
#, fuzzy
msgid "This guide is about the REST Client compatible with https://resteasy.dev[RESTEasy Classic] which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "このガイドは、Quarkus 2.8までデフォルトのjakarta REST（旧称JAX-RS）実装であった link:https://resteasy.dev[RESTEasy Classicと] 互換性のあるREST Clientに関するものです。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:24
msgid "there is another guide if you need to write server xref:rest-json.adoc[JSON REST APIs]."
msgstr "サーバーサイドで JSON REST API を書く必要がある場合は、link:rest-json.html[JSON REST API ガイド]を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:25
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:29
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:35
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:37
#, fuzzy
msgid "The solution is located in the `rest-client-quickstart` link:{quickstarts-tree-url}/rest-client-quickstart[directory]."
msgstr "ソリューションは `rest-client-quickstart` link:{quickstarts-tree-url}/rest-client-quickstart[ディレクトリに] あります。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:38
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:41
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:47
msgid "This command generates the Maven project with a REST endpoint and imports:"
msgstr "このコマンドは、REST エンドポイントを持つ Maven プロジェクトを生成し、 `rest-client` と `resteasy-jackson` のエクステンションをインポートします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:49
msgid "the `resteasy` and `resteasy-jackson` extensions for the REST server support;"
msgstr "REST サーバーのサポートのために `resteasy` と `resteasy-jackson` のエクステンションを使用しています。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:50
msgid "the `rest-client` and `rest-client-jackson` extensions for the REST client support."
msgstr "REST クライアントのサポートのために `rest-client` と `rest-client-jackson` のエクステンションを使用しています。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:58
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます。"

#. type: Block title
#: upstream/_versions/main/guides/rest-client.adoc:60
#: upstream/_versions/main/guides/rest-client.adoc:669
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: upstream/_versions/main/guides/rest-client.adoc:73
#: upstream/_versions/main/guides/rest-client.adoc:681
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:79
#, no-wrap
msgid "Setting up the model"
msgstr "モデルの設定"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:85
msgid "Create a `src/main/java/org/acme/rest/client/Extension.java` file and set the following content:"
msgstr "`src/main/java/org/acme/rest/client/Extension.java` ファイルを作成し、以下の内容を設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:103
msgid "The model above is only a subset of the fields provided by the service, but it suffices for the purposes of this guide."
msgstr "上記のモデルは、サービスによって提供されるフィールドのサブセットに過ぎませんが、このガイドの目的には十分です。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:104
#, no-wrap
msgid "Create the interface"
msgstr "インターフェースの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:107
#, fuzzy
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper Jakarta REST and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/ExtensionsService.java` and have the following content:"
msgstr "RESTEasy REST Client の使用方法は、適切な Jakarta REST と MicroProfile アノテーションを使用してインターフェースを作成するだけです。この場合、インターフェースは `src/main/java/org/acme/rest/client/ExtensionsService.java` で作成し、以下の内容を持つ必要があります："

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:130
msgid "The `getById` method gives our code the ability to get an extension by id from the Code Quarkus API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "`getById` メソッドは、私たちのコードに、Code Quarkus API からidを指定してエクステンションを問い合わせる機能を与えます。クライアントがすべてのネットワーキングとマーシャリングを処理してくれるので、このような技術的な詳細は一切ありません。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:132
msgid "The purpose of the annotations in the code above is the following:"
msgstr "上のコードのアノテーションの目的は以下の通りです。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:136
#, fuzzy
msgid "`@Path`, `@GET` and `@QueryParam` are the standard Jakarta REST annotations used to define how to access the service"
msgstr "`@Path` `@GET` と は、サービスへのアクセス方法を定義するために使用される標準的な Jakarta REST アノテーションです。 `@QueryParam` "

#. type: Title ===
#: upstream/_versions/main/guides/rest-client.adoc:151
#, no-wrap
msgid "Path Parameters"
msgstr "パスパラメーター"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:154
msgid "If the GET request requires path parameters you can leverage the `@PathParam(\"parameter-name\")` annotation instead of (or in addition to) the `@QueryParam`. Path and query parameters can be combined, as required, as illustrated in a mock example below."
msgstr "GETリクエストにパスパラメータが必要な場合は、 `@QueryParam` の代わりに（または追加で） `@PathParam(\"parameter-name\")` を利用することができます。パスとクエリパラメータは、必要に応じて組み合わせることができます（以下のモックの例を参照してください）。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:178
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:196
msgid "Note that `org.acme.rest.client.ExtensionsService` _must_ match the fully qualified name of the `ExtensionsService` interface we created in the previous section."
msgstr "`org.acme.rest.client.ExtensionsService` は、前のセクションで作成した`ExtensionsService` インターフェイスの完全修飾名と _一致しなければならない_ ことに注意してください。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:200
msgid "The standard MicroProfile Rest Client properties notation can also be used to configure the client:"
msgstr "標準のMicroProfile Rest Clientのプロパティ表記を使用して、クライアントを設定することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:208
msgid "If a property is specified via both the Quarkus notation and the MicroProfile notation, the Quarkus notation takes a precedence."
msgstr "プロパティがQuarkus記法とMicroProfile記法の両方で指定されている場合、Quarkus記法が優先されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:212
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use another configuration root than the fully qualified name of your interface."
msgstr "構成を容易にするために、 `@RegisterRestClient` `configKey` プロパティーを使用して、インターフェイスの完全修飾名とは別の構成ルートを使用することができます。"

#. type: Title ===
#: upstream/_versions/main/guides/rest-client.adoc:229
#, no-wrap
msgid "Disabling Hostname Verification"
msgstr "ホスト名の検証を無効にする"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:232
msgid "To disable the SSL hostname verification for a specific REST client, add the following property to your configuration:"
msgstr "特定のRESTクライアントのSSLホスト名検証を無効にするには、次のプロパティーを構成に追加します。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:240
msgid "This setting should not be used in production as it will disable the SSL hostname verification."
msgstr "この設定は、あらゆる種類の SSL ホスト名検証を無効にするため、実運用環境では使用しないでください。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:243
msgid "Moreover, you can configure a REST client to use your custom hostname verify strategy. All you need to do is to provide a class that implements the interface `javax.net.ssl.HostnameVerifier` and add the following property to your configuration:"
msgstr "さらに、カスタムのホスト名検証ストラテジーを使用するようにRESTクライアントを設定することができます。必要なのは、インターフェース `javax.net.ssl.HostnameVerifier` を実装したクラスを用意し、以下のプロパティを設定に追加することだけです。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:252
msgid "Quarkus REST client provides an embedded hostname verifier strategy to disable the hostname verification called `io.quarkus.restclient.NoopHostnameVerifier`."
msgstr "Quarkus REST クライアントは、 `io.quarkus.restclient.NoopHostnameVerifier` と呼ばれるホスト名検証を無効にするための組込ホスト名検証ストラテジーを提供しています。"

#. type: Title ===
#: upstream/_versions/main/guides/rest-client.adoc:254
#, no-wrap
msgid "Disabling SSL verifications"
msgstr "SSL の検証の無効化"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:257
msgid "To disable all SSL verifications, add the following property to your configuration:"
msgstr "全てのSSL検証を無効にするには、次のプロパティーを設定に追加します。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:265
msgid "This setting should not be used in production as it will disable any kind of SSL verification."
msgstr "この設定は、あらゆる種類のSSL検証を無効にするため、実運用環境では使用しないでください。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:267
#, fuzzy, no-wrap
msgid "Create the Jakarta REST resource"
msgstr "Jakarta RESTリソースの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:270
msgid "Create the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file with the following content:"
msgstr "以下の内容の `src/main/java/org/acme/rest/client/ExtensionsResource.java` ファイルを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:299
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `ExtensionsService`."
msgstr "標準の CDI `@Inject` アノテーションに加えて、MicroProfile `@RestClient` アノテーションを使用して `ExtensionsService` を注入する必要があることに注意してください。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:300
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:341
msgid "The code above uses link:https://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "上記のコードでは、 link:http://rest-assured.io/[REST Assured] の link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] 機能を使用しています。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:343
#, no-wrap
msgid "Redirection"
msgstr "リダイレクト"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:346
#, fuzzy
msgid "A HTTP server can redirect a response to another location by sending a response with a status code that starts with \"3\" and a HTTP header \"Location\" holding the URL to be redirected to. When the REST Client receives a redirection response from a HTTP server, it won't automatically perform another request to the new location. However, you can enable the automatic redirection by enabling the \"follow-redirects\" property:"
msgstr "HTTPサーバーは、ステータスコードが \"3 \"で始まるレスポンスと、リダイレクト先のURLを保持するHTTPヘッダー \"Location \"を送信することで、レスポンスを別の場所にリダイレクトできます。RESTクライアントがHTTPサーバーからリダイレクトレスポンスを受信しても、新しい場所への再リクエストは自動的に実行されません。ただし、\"follow-redirects \"プロパティを有効にすることで、自動リダイレクトを有効にすることができます："

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:348
#, fuzzy
msgid "`quarkus.rest-client.follow-redirects` to enable redirection for all REST clients."
msgstr "`quarkus.rest-client.follow-redirects` をクリックすると、すべてのRESTクライアントに対してリダイレクトが有効になります。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:349
#, fuzzy
msgid "`quarkus.rest-client.<client-prefix>.follow-redirects` to enable redirection for a specific REST client."
msgstr "`quarkus.rest-client.<client-prefix>.follow-redirects` をクリックすると、特定のRESTクライアントに対してリダイレクトを有効にすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:351
#, fuzzy
msgid "If this property is true, then REST Client will perform a new request that it receives a redirection response from the HTTP server."
msgstr "このプロパティがtrueの場合、REST Clientは、HTTPサーバーからリダイレクトレスポンスを受信すると、新しいリクエストを実行します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:353
#, fuzzy
msgid "Additionally, we can limit the number of redirections using the property \"max-redirects\"."
msgstr "さらに、プロパティ「max-redirects」を使って、リダイレクトの回数を制限することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:355
#, fuzzy
msgid "One important note is that according to the https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616] specs, by default the redirection will only happen for GET or HEAD methods."
msgstr "link:https://www.rfc-editor.org/rfc/rfc2616#section-10.3.8[RFC2616の] 仕様によると、デフォルトではGETまたはHEADメソッドに対してのみリダイレクトが行われるという重要な注意点があります。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:356
#, no-wrap
msgid "Async Support"
msgstr "非同期サポート"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:389
msgid "Open the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file and update it with the following content:"
msgstr "`src/main/java/org/acme/rest/client/ExtensionsResource.java` ファイルを開き、以下の内容で更新してください。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:427
msgid "To test asynchronous methods, add the test method below in `ExtensionsResourceTest`:"
msgstr "非同期メソッドをテストするには、`ExtensionsResourceTest` に以下のテストメソッドを追加します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:444
msgid "The `Uni` version is very similar:"
msgstr "`Uni` 版は非常に似ています。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:472
msgid "The `ExtensionsResource` becomes:"
msgstr "`ExtensionsResource` は次のようになります。"

#. type: Block title
#: upstream/_versions/main/guides/rest-client.adoc:508
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:532
#, no-wrap
msgid "Custom headers support"
msgstr "カスタムヘッダーのサポート"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:535
msgid "The MicroProfile REST client allows amending request headers by registering a `ClientHeadersFactory` with the `@RegisterClientHeaders` annotation."
msgstr "MicroProfile REST クライアントでは、 `ClientHeadersFactory` を `@RegisterClientHeaders` アノテーションで登録することで、リクエストヘッダを修正することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:537
msgid "Let's see it in action by adding a `@RegisterClientHeaders` annotation pointing to a `RequestUUIDHeaderFactory` class in our `ExtensionsService` REST interface:"
msgstr "`ExtensionsResource` REST インタフェースに `@RegisterClientHeaders` アノテーションを追加して、 `RequestUUIDHeaderFactory` クラスを指すようにしてみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:571
msgid "And the `RequestUUIDHeaderFactory` would look like:"
msgstr "そして、 `RequestUUIDHeaderFactory` は次のようになります。"

#. type: Title ===
#: upstream/_versions/main/guides/rest-client.adoc:599
#, no-wrap
msgid "Default header factory"
msgstr "デフォルトのヘッダーファクトリー"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:602
msgid "You can also use `@RegisterClientHeaders` annotation without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used and all headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property will be amended. Individual header names are comma-separated."
msgstr "また、カスタムファクトリーを指定せずに `@RegisterClientHeaders` アノテーションを使用することもできます。その場合は、 `DefaultClientHeadersFactoryImpl` ファクトリーが使用され、 `org.eclipse.microprofile.rest.client.propagateHeaders` 設定プロパティに記載されているすべてのヘッダーが修正されます。個々のヘッダー名はコンマで区切られています。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:626
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:629
msgid "Run the application with:"
msgstr "次のコマンドでアプリケーションを実行します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:633
msgid "Open your browser to http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client."
msgstr "ブラウザで http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client を開きます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:635
msgid "You should see a JSON object containing some basic information about the REST Client extension."
msgstr "REST Client extensionに関する基本情報を含む JSON オブジェクトが表示されます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:637
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:641
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして、`java -jar target/quarkus-app/quarkus-run.jar` で実行されます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:643
msgid "You can also generate the native executable with:"
msgstr "次のようにネイティブ実行可能ファイルを生成することもできます。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:646
#, no-wrap
msgid "REST Client and RESTEasy interactions"
msgstr "REST クライアントと RESTEasy のやりとり"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:655
msgid "However, you can change this default behavior and constrain a provider to:"
msgstr "しかし、このデフォルトの動作を変更してプロバイダを制約することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:657
msgid "only consider *client* calls by adding the `@ConstrainedTo(RuntimeType.CLIENT)` annotation to your provider;"
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.CLIENT)` アノテーションを追加することで、 *クライアント* コールのみを考慮します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:658
msgid "only consider *server* calls by adding the `@ConstrainedTo(RuntimeType.SERVER)` annotation to your provider."
msgstr "プロバイダに `@ConstrainedTo(RuntimeType.SERVER)` アノテーションを追加することで、 *サーバー* コールのみを考慮します。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:660
#, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "テストにモックHTTPサーバーを使用する"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:667
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "最初に、 Wiremock をテストの依存関係として追加する必要があります。 Maven プロジェクトの場合は以下のようになります。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:679
#: upstream/_versions/main/guides/rest-client.adoc:686
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/org.wiremock/wiremock[here]."
msgstr "適切なWiremockバージョンを使用してください。利用可能なすべてのバージョンは、 link:https://search.maven.org/artifact/org.wiremock/wiremock[こちらを] ご覧ください。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:697
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `WiremockExtensions` like so:"
msgstr "このように `QuarkusTestResourceLifecycleManager` の実装である `WiremockExtensions` を作成してみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:743
msgid "Statically importing the methods in the Wiremock package makes it easier to read the test."
msgstr "Wiremockパッケージのメソッドを静的にインポートすると、テストを読みやすくなります。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:744
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr "`start` メソッドは、テストを実行する前にQuarkusによって呼び出され、テスト実行中に適用される設定プロパティーの `Map` を返します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:745
msgid "Launch Wiremock."
msgstr "Wiremockを起動します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:746
msgid "Configure Wiremock to stub the calls to `/extensions?id=io.quarkus:quarkus-rest-client` by returning a specific canned response."
msgstr "特定の定型文を返すことで、 Wiremockが `/extensions?id=io.quarkus:quarkus-rest-client` への呼び出しをスタブするように設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:747
msgid "All HTTP calls that have not been stubbed are handled by calling the real service. This is done for demonstration purposes, as it is not something that would usually happen in a real test."
msgstr "スタブ化されていないすべての HTTP 呼び出しは、実際のサービスを呼び出すことで処理されます。これは、実際のテストでは通常発生しないことなので、デモンストレーションのために行われています。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:750
msgid "When all tests have finished, shutdown Wiremock."
msgstr "すべてのテストが終了したら、Wiremockをシャットダウンします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:753
msgid "The `ExtensionsResourceTest` test class needs to be annotated like so:"
msgstr "`ExtensionsResourceTest` テストクラスには、このようなアノテーションが必要です。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client.adoc:766
msgid "`@QuarkusTestResource` applies to all tests, not just `ExtensionsResourceTest`."
msgstr "`@QuarkusTestResource` は `ExtensionsResourceTest` だけでなく、すべてのテストに適用されます。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client.adoc:768
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client.adoc:770
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
