# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-18 08:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:7
#, no-wrap
msgid "Protect a service application by using OpenID Connect (OIDC) bearer authentication"
msgstr "OpenID Connect（OIDC）ベアラー認証を使用したサービスアプリケーションの保護"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:14
#, fuzzy
msgid "Here, you use the Quarkus OpenID Connect (OIDC) extension to secure a Jakarta REST application using Bearer authentication.  The bearer tokens are issued by OIDC and OAuth 2.0 compliant authorization servers, such as link:https://www.keycloak.org[Keycloak]."
msgstr "ここでは、Quarkus OpenID Connect（OIDC）エクステンションを使用して、ベアラー認証を使用してjakarta RESTアプリケーションを保護します。ベアラートークンは、OIDCやOAuth 2.0に準拠した認可サーバー（ link:https://www.keycloak.org[Keycloakなど] ）から発行されます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:16
#, fuzzy
msgid "To better understand OIDC Bearer authentication, see xref:security-oidc-bearer-token-authentication-concept.adoc[OIDC Bearer authentication]."
msgstr "OIDCベアラ認証の理解を深めるには、 xref:security-oidc-bearer-token-authentication-concept.adoc[OIDCベアラ] 認証を参照のこと。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:22
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "https://stedolan.github.io/jq/[jq tool]"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:23
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:26
#, fuzzy
msgid "In this example, we build a simple microservice which offers two endpoints:"
msgstr "この例では、2つのエンドポイントを提供するシンプルなマイクロサービスを構築します："

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:28
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:29
msgid "`/api/admin`"
msgstr "`/api/admin`"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:31
msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgstr "これらのエンドポイントは保護されており、クライアントがリクエストと一緒にベアラートークンを送信している場合にのみアクセスすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:33
msgid "The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for. For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "Bearer Tokenは、Keycloakサーバーによって発行され、トークンが発行された対象を表します。OAuth 2.0 認可サーバーであるため、トークンはユーザーの代わりに動作するクライアントも参照します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:35
msgid "The `/api/users/me` endpoint can be accessed by any user with a valid token. As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token."
msgstr "`/api/users/me` エンドポイントは、有効なトークンを持つ任意のユーザーがアクセスできます。レスポンスとして、トークンに記録されている情報から取得したユーザーの詳細を含む JSON ドキュメントを返します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:37
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint."
msgstr "`/api/admin` エンドポイントは RBAC (Role-Based Access Control) で保護されており、 `admin` ロールで許可されたユーザーのみがアクセスできます。このエンドポイントでは、 `@RolesAllowed` アノテーションを使用して、アクセス制約を宣言的に強制します。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:38
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:42
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションの指示に従って、段階的にアプリケーションを作成していくことをお勧めします。ただし、完成した例にすぐにアクセスすることもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:44
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする： `git clone {quickstarts-clone-url}` 、または{quickstarts-archive-url}[archive] をダウンロードする。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:46
msgid "The solution is located in the `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[directory]."
msgstr "ソリューションは `security-openid-connect-quickstart` {quickstarts-tree-url}/security-openid-connect-quickstart[ディレクトリー] にあります。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:47
#, no-wrap
msgid "Procedure"
msgstr "手順"

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:50
#, no-wrap
msgid "Create the Maven project"
msgstr "Maven プロジェクトの作成"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:53
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:60
msgid "This command generates a Maven project, importing the `oidc` extension which is an implementation of OIDC for Quarkus."
msgstr "このコマンドは、QuarkusのOIDCの実装である `oidc` エクステンションをインポートして、Mavenプロジェクトを生成します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:63
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `oidc` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:68
msgid "This will add the following to your build file:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:70
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:76
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:79
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:82
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:84
#, no-wrap
msgid "Write the application"
msgstr "アプリケーションの記述"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:87
#, fuzzy
msgid "Let's start by implementing the `/api/users/me` endpoint. As you can see from the source code below it is just a regular Jakarta REST resource:"
msgstr "まず、 `/api/users/me` のエンドポイントを実装することから始めましょう。以下のソースコードからわかるように、これは通常の Jakarta REST リソースです："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:91
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:134
#, no-wrap
msgid "package org.acme.security.openid.connect;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:96
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:99
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.NoCache;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:102
#, no-wrap
msgid ""
"@Path(\"/api/users\")\n"
"public class UsersResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:105
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityIdentity securityIdentity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:113
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/me\")\n"
"    @RolesAllowed(\"user\")\n"
"    @NoCache\n"
"    public User me() {\n"
"        return new User(securityIdentity);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:115
#, no-wrap
msgid "    public static class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:117
#, no-wrap
msgid "        private final String userName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:121
#, no-wrap
msgid ""
"        User(SecurityIdentity securityIdentity) {\n"
"            this.userName = securityIdentity.getPrincipal().getName();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:127
#, no-wrap
msgid ""
"        public String getUserName() {\n"
"            return userName;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:130
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "`/api/admin` エンドポイントのソースコードも非常にシンプルです。ここでの主な違いは、 `admin` ロールで付与されたユーザーだけがエンドポイントにアクセスできるように `@RolesAllowed` アノテーションを使用していることです:"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:140
#, no-wrap
msgid ""
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:143
#, no-wrap
msgid ""
"@Path(\"/api/admin\")\n"
"public class AdminResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:151
#, no-wrap
msgid ""
"    @GET\n"
"    @RolesAllowed(\"admin\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String admin() {\n"
"        return \"granted\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:154
msgid "Injection of the `SecurityIdentity` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "`SecurityIdentity` のインジェクションは、 `@RequestScoped` と `@ApplicationScoped` の両方のコンテキストでサポートされています。"

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:155
#, no-wrap
msgid "Configure the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:158
#, fuzzy
msgid "Configure the Quarkus OpenID Connect (OIDC) extension by setting the following configuration properties in the `src/main/resources/application.properties` file."
msgstr "`src/main/resources/application.properties` ファイルで次の設定プロパティを設定して、Quarkus OpenID Connect（OIDC）エクステンションを構成します。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:164
#, no-wrap
msgid ""
"%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=backend-service\n"
"quarkus.oidc.credentials.secret=secret\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:167
#, no-wrap
msgid ""
"# Tell Dev Services for Keycloak to import the realm file\n"
"# This property is not effective when running the application in JVM or Native modes\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:169
#, no-wrap
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm.json\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:172
msgid "Where:"
msgstr "何処に"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:175
#, fuzzy
msgid "`%prod.quarkus.oidc.auth-server-url` sets the base URL of the OpenID Connect (OIDC) server. The `%prod.` profile prefix ensures that `Dev Services for Keycloak` launches a container when you run the application in dev mode.  See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr "`%prod.quarkus.oidc.auth-server-url` は、OpenID Connect（OIDC）サーバーのベース URL を設定します。 プロファイルプレフィックスは、アプリケーションをdevモードで実行する際に、 がコンテナを起動することを保証します。詳細は、以下の「 `%prod.` `Dev Services for Keycloak` xref:keycloak-dev-mode[Devモードでアプリケーションを実行] する」セクションを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:176
#, fuzzy
msgid "`quarkus.oidc.client-id` sets a client-id that identifies the application."
msgstr "`quarkus.oidc.client-id` は、アプリケーションを識別するためのクライアントIDを設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:177
#, fuzzy
msgid "`quarkus.oidc.credentials.secret` sets the client secret, which is used by the `client_secret_basic` authentication method."
msgstr "`quarkus.oidc.credentials.secret` は、 の認証方式で使用されるクライアントシークレットを設定します。 `client_secret_basic` "

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:179
#, fuzzy
msgid "For more information, see xref:security-openid-connect-oidc-configuration-properties-reference.adoc[OpenID Connect (OIDC) configuration properties]."
msgstr "詳しくは、OpenID xref:security-openid-connect-oidc-configuration-properties-reference.adoc[Connect（OIDC）の] 設定プロパティをご覧ください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:180
#, fuzzy, no-wrap
msgid "Start and configure the Keycloak server"
msgstr "Keycloakサーバーの起動と設定"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:184
#, fuzzy
msgid "Before you start with configuration, put the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) to import it automatically when running in dev mode - unless you have already built a {quickstarts-tree-url}/security-openid-connect-quickstart[complete solution].  In this case, the realm file is added to the classpath during the build."
msgstr "設定を始める前に、{quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[レルム設定ファイル] をクラスパス ( `target/classes` ディレクトリ ) に置いて、開発モードで実行時に自動的にインポートします - 既に {quickstarts-tree-url}/security-openid-connect-quickstart[complete solution] を構築した場合は別。この場合、realm ファイルはビルド中にクラスパスに追加されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:189
#, fuzzy
msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container.  See the xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr "アプリケーションをdevモードで実行するときは、Keycloakサーバーを起動しないでください - `Dev Services for Keycloak` はコンテナを起動します。詳しくは、以下の「 xref:keycloak-dev-mode[Devモードでアプリケーション] を実行する」のセクションを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:192
#, fuzzy
msgid "To start a Keycloak Server, you can use Docker and just run the following command:"
msgstr "Keycloak Serverを起動するには、Dockerを使用し、以下のコマンドを実行するだけです："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:196
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:199
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "ここで、`keycloak.version` は `17.0.0` 以上に設定する必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:201
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "http://localhost:8180[localhost:8180] で Keycloak サーバーにアクセスできるはずです。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:203
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "Keycloak 管理コンソールにアクセスするには、 `admin` ユーザーとしてログインしてください。ユーザー名は `admin` 、パスワードは `admin` です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:206
#, fuzzy
msgid "Import the {quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.  For more details, see the Keycloak documentation about how to link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "quickstarts-tree-url}/security-openid-connect-quickstart/config/quarkus-realm.json[レルム設定ファイル]をインポートして新しいレルムを作成します。詳細については、 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成] する方法について、Keycloakのドキュメントを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:210
#, fuzzy
msgid "If you want to use the Keycloak Admin Client to configure your server from your application, include the either `quarkus-keycloak-admin-client` or the `quarkus-keycloak-admin-client-reactive` (if the application uses `quarkus-rest-client-reactive`) extension.  See the xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client] guide for more information."
msgstr "Keycloak Admin Clientを使用してアプリケーションからサーバーを設定する場合は、 `quarkus-keycloak-admin-client` または `quarkus-keycloak-admin-client-reactive` （アプリケーションが `quarkus-rest-client-reactive` を使用している場合）のいずれかのエクステンションを含めます。詳細については、『Quarkus xref:security-keycloak-admin-client.adoc[Keycloak Admin Client] 』ガイドを参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:212
#, fuzzy, no-wrap
msgid "Run the application in Dev mode"
msgstr "Devモードでアプリケーションを実行する"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:215
msgid "To run the application in a dev mode, use:"
msgstr "アプリケーションを開発モードで実行するには、次を使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:219
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] は、Keycloak コンテナーを起動し、`quarkus-realm.json` をインポートします。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:221
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-v1[/q/dev-v1] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "link:http://localhost:8080/q/dev-v1[q/dev-v1] で利用できる xref:dev-ui.adoc[Dev UI] を開き、 `OpenID Connect` `Dev UI` カードの `Provider: Keycloak` リンクをクリックします。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:223
msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "`OpenID Connect Dev UI` が提供する `Single Page Application` へのログインを求められます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:225
msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgstr "`user` のロールを持つ `alice` (パスワード: `alice`) としてログインします"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:226
msgid "accessing `/api/admin` will return `403`"
msgstr "`/api/admin` にアクセスすると、`403` が返されます"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:227
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:230
msgid "accessing `/api/users/me` will return `200`"
msgstr "`/api/users/me` にアクセスすると、`200` が返されます"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:228
msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgstr "ログアウトし、`admin` と `user` ロールの両方を持つ `admin` (パスワード: `admin`) としててログインします"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:229
msgid "accessing `/api/admin` will return `200`"
msgstr "`/api/admin` にアクセスすると、`200` が返されます"

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:231
#, fuzzy, no-wrap
msgid "Run the Application in JVM mode"
msgstr "JVMモードでアプリケーションを実行する"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:234
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "「`dev` モード」で遊び終わったら、標準のJavaアプリケーションとして実行することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:236
msgid "First compile it:"
msgstr "まずコンパイルします。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:240
msgid "Then run it:"
msgstr "次に、以下を実行してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:244
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:246
#, fuzzy, no-wrap
msgid "Run the application in Native mode"
msgstr "Native モードでアプリケーションを実行する"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:249
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "同じデモをネイティブコードにコンパイルすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:251
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "これは、生成されたバイナリーにランタイム技術が含まれており、最小限のリソースオーバーヘッドで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:254
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトで無効になっています。 `native` プロファイルを有効にして再度ビルドしてみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:258
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "コーヒーを飲み終わると、このバイナリーは以下のように直接実行出来るようになります:"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:262
#, no-wrap
msgid "./target/security-openid-connect-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:264
#, no-wrap
msgid "Test the application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:267
#, fuzzy
msgid "See the xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in a dev mode."
msgstr "devモードでのアプリケーションのテストについては、上記の「 xref:keycloak-dev-mode[Running the Application in Dev] mode」のセクションを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:269
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "`curl` を使用して、JVM またはネイティブモードで起動したアプリケーションをテストできます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:271
#, fuzzy
msgid "The application is using Bearer authentication and the first thing to do is obtain an access token from the Keycloak Server in order to access the application resources:"
msgstr "アプリケーションはベアラー認証を使用しており、アプリケーションリソースにアクセスするために、まずKeycloak Serverからアクセストークンを取得する必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:280
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=alice&password=alice&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:283
msgid "The example above obtains an access token for user `alice`."
msgstr "上記の例では、ユーザー `alice` のアクセストークンを取得しています。"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:285
#, fuzzy
msgid "Any user is allowed to access the `http://localhost:8080/api/users/me` endpoint, which basically returns a JSON payload with details about the user."
msgstr "どのようなユーザーでもアクセス可能です。 `<a data-doc-l10n-kit-type=\"link\" data-doc-l10n-kit-target=\"http://localhost:8080/api/users/me\">http://localhost:8080/api/users/me</a>` エンドポイントでは、基本的にユーザーに関する詳細情報を含むJSONペイロードを返します。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:291
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"  http://localhost:8080/api/users/me \\\n"
"  -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:295
msgid "The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.  If you try to access this endpoint with the previously issued access token, you should get a `403` response from the server."
msgstr "`http://localhost:8080/api/admin` エンドポイントは、 `admin` ロールを持つユーザーのみがアクセスできます。先程発行されたアクセストークンを使用してこのエンドポイントにアクセスしようとすると、サーバーから `403` 応答が返ってくるはずです。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:301
#, no-wrap
msgid ""
"curl -v -X GET \\\n"
"   http://localhost:8080/api/admin \\\n"
"   -H \"Authorization: Bearer \"$access_token\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:304
#, fuzzy
msgid "In order to access the admin endpoint, you should obtain a token for the `admin` user:"
msgstr "admin エンドポイントにアクセスするためには、 `admin` ユーザのトークンを取得する必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:313
#, no-wrap
msgid ""
"export access_token=$(\\\n"
"    curl --insecure -X POST http://localhost:8180/realms/quarkus/protocol/openid-connect/token \\\n"
"    --user backend-service:secret \\\n"
"    -H 'content-type: application/x-www-form-urlencoded' \\\n"
"    -d 'username=admin&password=admin&grant_type=password' | jq --raw-output '.access_token' \\\n"
" )\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:316
#, fuzzy
msgid "Please also see the xref:security-oidc-bearer-token-authentication-concept.adoc#integration-testing-keycloak-devservices[OIDC Bearer authentication, Dev Services for Keycloak] section, about writing the integration tests which depend on `Dev Services for Keycloak`."
msgstr "`Dev Services for Keycloak` に依存する統合テストの記述については、 xref:security-oidc-bearer-token-authentication-concept.adoc#integration-testing-keycloak-devservices[OIDC] ベアラー認証 xref:security-oidc-bearer-token-authentication-concept.adoc#integration-testing-keycloak-devservices[、Keycloak 用] Dev Services のセクションも参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:317
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:320
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[OIDC configuration properties]"
msgstr "xref:security-oidc-configuration-properties-reference.adoc[OIDC設定プロパティ]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:321
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication-concept.adoc[OIDC Bearer authentication]"
msgstr "xref:security-oidc-bearer-token-authentication-concept.adoc[OIDCベアラー認証]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:322
#, fuzzy
msgid "link:https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloakのドキュメンテーション]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:323
#, fuzzy
msgid "link:https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:324
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:325
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:326
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:327
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[JSONウェブトークン (JWT) のビルド、署名、暗号化]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:328
#, fuzzy
msgid "xref:security-authentication-mechanisms-concept.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms-concept.adoc#combining-authentication-mechanisms[認証メカニズムの組み合わせ]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:329
#, fuzzy
msgid "xref:security-overview-concept.adoc[Quarkus Security]"
msgstr "xref:security-overview-concept.adoc[Quarkus Security]"

#. type: Plain text
#: upstream/_versions/main/guides/security-oidc-bearer-token-authentication-tutorial.adoc:329
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"

#, fuzzy
#~ msgid "To better understand OIDC Bearer authentication, see xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]."
#~ msgstr "OIDCベアラ認証の理解を深めるには、「 xref:security-oidc-bearer-authentication-concept.adoc[OIDCベアラ認証] 」をご覧ください。"

#, fuzzy
#~ msgid "Please also see the xref:security-oidc-bearer-authentication-concept.adoc#integration-testing-keycloak-devservices[OIDC Bearer authentication, Dev Services for Keycloak] section, about writing the integration tests which depend on `Dev Services for Keycloak`."
#~ msgstr "`Dev Services for Keycloak` に依存する統合テストの書き方については、 xref:security-oidc-bearer-authentication-concept.adoc#integration-testing-keycloak-devservices[OIDC] ベアラー認証 xref:security-oidc-bearer-authentication-concept.adoc#integration-testing-keycloak-devservices[、Dev Services for Keycloakの] 項もご覧ください。"

#, fuzzy
#~ msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
#~ msgstr "xref:security-oidc-bearer-authentication-concept.adoc[OIDC ベアラー認証]"
