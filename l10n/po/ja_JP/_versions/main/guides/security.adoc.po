# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-27 00:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/security.adoc:6
#, no-wrap
msgid "Quarkus Security overview"
msgstr "Quarkus Securityの概要"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:13
#, no-wrap
msgid "Getting started with Quarkus Security"
msgstr "Quarkus セキュリティー入門"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:16
#, fuzzy
msgid "Before you start building security into your Quarkus applications, review the overview information to learn about the Quarkus Security architecture and the different authentication and authorization mechanisms that Quarkus supports."
msgstr "Quarkusアプリケーションにセキュリティを組み込む前に、概要情報を確認し、Quarkusのセキュリティアーキテクチャと、Quarkusがサポートするさまざまな認証および認可メカニズムについて学んでください。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:20
#, fuzzy
msgid "To get started with security in Quarkus, we recommend that you first combine the Quarkus built-in xref:security-basic-authentication-concept.adoc[Basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).  Complete the steps in the xref:security-getting-started.adoc[Secure a Quarkus application with Basic authentication] tutorial.  After you have successfully secured your Quarkus application with basic HTTP authentication, you can increase the security further by adding more advanced authentication mechanisms, for example, OpenID Connect (OIDC) authentication."
msgstr "Quarkusでセキュリティを始めるには、まず、Quarkusに組み込まれている link:security-basic-authentication-concept.html[Basic HTTP認証と] JPA IDプロバイダーを組み合わせて、ロールベースのアクセス制御（RBAC）を有効にすることをお勧めします。チュートリアルの「 link:security-getting-started.html[QuarkusアプリケーションのBasic認証による保護] 」のステップを完了します。Quarkusアプリケーションの基本HTTP認証によるセキュリティ確保に成功したら、OpenID Connect（OIDC）認証など、より高度な認証メカニズムを追加して、セキュリティをさらに高めることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:31
msgid "For every authenticated resource, you can inject a `SecurityIdentity` instance to get the authenticated identity information."
msgstr "認証済みリソースごとに、 `SecurityIdentity`  インスタンスを注入して、認証済みの ID 情報を取得することができます。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:35
#, no-wrap
msgid "Authentication mechanisms"
msgstr "認証メカニズム"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:57
#, fuzzy
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol. OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and to retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）は、OAuth 2.0プロトコルの上で動作するIDレイヤーである。OIDCは、クライアントアプリケーションが、OIDCプロバイダーによって実行された認証に基づいてユーザーの身元を確認し、そのユーザーに関する基本情報を取得することを可能にします。"

#. type: Title ====
#: upstream/_versions/main/guides/security.adoc:71
#, fuzzy, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "OIDC認証のためのQuarkusの追加リソース"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:74
#, fuzzy
msgid "For more information about OIDC authentication and authorization methods you can use to secure your Quarkus applications, see the following detailed resources:"
msgstr "Quarkusアプリケーションの安全性を確保するために使用できるOIDC認証および認可方法の詳細については、以下の詳細なリソースを参照してください："

#. type: Table
#: upstream/_versions/main/guides/security.adoc:77
#, no-wrap
msgid "OIDC topic"
msgstr "OIDCトピック"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:78
#, no-wrap
msgid "Quarkus information resource"
msgstr "Quarkusの情報リソース"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:80
#, fuzzy, no-wrap
msgid "Multiple tenants that can support Bearer Token or Authorization Code Flow mechanism"
msgstr "ベアラートークンや認証コードフロー機構に対応した複数のテナントが存在する。"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:81
#, fuzzy, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "link:security-openid-connect-multitenancy.html[OpenID Connect（OIDC）のマルチテナンシーを利用する。]"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:81
#, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr "Keycloakを使用した認可の一元化"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:82
#, fuzzy, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "link:security-keycloak-authorization.html[OpenID Connect（OIDC）とKeycloakを使った認証の一元化について]"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:82
#, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr "Keycloakのプログラムによる設定"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:83
#, fuzzy, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr "link:security-keycloak-admin-client.html[Keycloakの管理クライアントを使用する]"

#. type: delimited block =
#: upstream/_versions/main/guides/security.adoc:89
#, fuzzy
msgid "If you need to enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time and then re-enable it at runtime by using a system property.  For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the _Disabling tenant configurations_ section in the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Using OpenID Connect (OIDC) multi-tenancy] guide."
msgstr "Quarkus OIDC拡張を実行時に有効にする必要がある場合は、ビルド時に `quarkus.oidc.tenant-enabled=false` 、システムプロパティを使用して実行時に再有効化します。マルチテナントOIDC展開における個々のテナント構成の管理に関する詳細は、『 link:security-openid-connect-multitenancy.html#disable-tenant[Using OpenID Connect（OIDC）』マルチテナンシーガイドの] 「 _テナント構成の無効 _化」のセクションを参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/security.adoc:91
#, no-wrap
msgid "OpenID Connect client and filters"
msgstr "OpenID Connectクライアントとフィルター"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:95
msgid "`client-credentials`"
msgstr "`client-credentials`"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:96
msgid "`password`"
msgstr "`password`"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:97
msgid "`refresh_token`"
msgstr "`refresh_token`"

#. type: delimited block =
#: upstream/_versions/main/guides/security.adoc:105
#, fuzzy
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "このシナリオでは、Quarkus OpenID Connectアダプターを使用してQuarkusエンドポイントを保護する必要はありません。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:120
#, fuzzy
msgid "`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer Token authentication mechanism, and verifies only `JWT` tokens by using either PEM keys or the refreshable `JWK` key set.  `quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr "`quarkus-smallrye-jwt` は、 ベアラートークン認証機構の代替となるもので、PEMキーまたはリフレッシュ可能な キーセットを使用して、 トークンだけを検証します。 は、JWT生成APIも提供しており、これを使用して , ,  トークンを容易に作成できます。 `quarkus-oidc` `JWK` `JWT` `quarkus-smallrye-jwt` `signed` `inner-signed` `encrypted` `JWT` "

#. type: Title ===
#: upstream/_versions/main/guides/security.adoc:129
#, fuzzy, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "OpenID Connect、SmallRye JWT、OAuth2の認証機構から選択する。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:132
#, fuzzy
msgid "Use the following information to help you to decide which authentication mechanism to use to secure your Quarkus applications:"
msgstr "Quarkusアプリケーションの安全性を確保するために、どの認証メカニズムを使用するかを決定する際に、次の情報を使用してください："

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:146
#, fuzzy
msgid "If you need to introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support the verification of the opaque or binary tokens by using remote introspection.  `quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "JWTトークンをリモートでイントロスペクションする必要がある場合、 `quarkus-oidc` または `quarkus-elytron-security-oauth2` のいずれかを使用することができます。これらは、リモートイントロスペクションを使用して不透明またはバイナリートークンの検証をサポートしているからです。 `quarkus-smallrye-jwt` は、不透明または JWT トークンの両方のリモートイントロスペクションをサポートしていませんが、代わりに、通常は OpenID Connect プロバイダから取得されるローカルに利用可能な鍵に依存します。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:166
#, fuzzy
msgid "The following table provides a summary of the options for each authentication mechanism:"
msgstr "各認証メカニズムのオプションの概要は、次の表のとおりです："

#. type: Table
#: upstream/_versions/main/guides/security.adoc:168
#, no-wrap
msgid "quarkus-oidc"
msgstr "quarkus-oidc"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:168
#, no-wrap
msgid "quarkus-smallrye-jwt"
msgstr "quarkus-smallrye-jwt"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:170
#, no-wrap
msgid "quarkus-elytron-security-oauth2"
msgstr "quarkus-elytron-security-oauth2"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:174
#: upstream/_versions/main/guides/security.adoc:176
#: upstream/_versions/main/guides/security.adoc:178
#: upstream/_versions/main/guides/security.adoc:211
#: upstream/_versions/main/guides/security.adoc:213
#, no-wrap
msgid "Introspection"
msgstr "イントロスペクション"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:177
#: upstream/_versions/main/guides/security.adoc:182
#: upstream/_versions/main/guides/security.adoc:189
#: upstream/_versions/main/guides/security.adoc:192
#: upstream/_versions/main/guides/security.adoc:193
#: upstream/_versions/main/guides/security.adoc:196
#: upstream/_versions/main/guides/security.adoc:197
#: upstream/_versions/main/guides/security.adoc:200
#: upstream/_versions/main/guides/security.adoc:201
#: upstream/_versions/main/guides/security.adoc:203
#: upstream/_versions/main/guides/security.adoc:205
#: upstream/_versions/main/guides/security.adoc:207
#: upstream/_versions/main/guides/security.adoc:209
#: upstream/_versions/main/guides/security.adoc:215
#: upstream/_versions/main/guides/security.adoc:217
#: upstream/_versions/main/guides/security.adoc:219
#: upstream/_versions/main/guides/security.adoc:221
#, no-wrap
msgid "No"
msgstr "No"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:179
#, fuzzy, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "JWTトークンを検証するための `JsonWebKey` セットをリフレッシュする。"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:180
#: upstream/_versions/main/guides/security.adoc:181
#: upstream/_versions/main/guides/security.adoc:184
#: upstream/_versions/main/guides/security.adoc:185
#: upstream/_versions/main/guides/security.adoc:186
#: upstream/_versions/main/guides/security.adoc:188
#: upstream/_versions/main/guides/security.adoc:191
#: upstream/_versions/main/guides/security.adoc:195
#: upstream/_versions/main/guides/security.adoc:199
#: upstream/_versions/main/guides/security.adoc:204
#: upstream/_versions/main/guides/security.adoc:220
#, no-wrap
msgid "Yes"
msgstr "Yes"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:187
#, fuzzy, no-wrap
msgid "Inject JWT as MP JSON Web Token (JWT)"
msgstr "MP JSON Web Token（JWT）としてJWTをインジェクトする。"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:190
#, no-wrap
msgid "Authorization Code Flow"
msgstr "認可コードフロー"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:194
#, no-wrap
msgid "Multi-tenancy"
msgstr "マルチテナンシー"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:198
#, fuzzy, no-wrap
msgid "User info support"
msgstr "ユーザー情報サポート"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:202
#, fuzzy, no-wrap
msgid "PEM key format support"
msgstr "PEMキーフォーマット対応"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:206
#, no-wrap
msgid "SecretKey support"
msgstr "SecretKey のサポート"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:208
#, fuzzy, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr "JSON Web Key（JWK）フォーマットで。"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:210
#, fuzzy, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "内部署名付きで暗号化されたトークン、または暗号化されたトークン"

#. type: Table
#: upstream/_versions/main/guides/security.adoc:218
#, fuzzy, no-wrap
msgid "Accept JWT as a cookie"
msgstr "JWTをCookieとして受け止める"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:228
#, fuzzy
msgid "The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "JPA `IdentityProvider` は、 `SecurityIdentity` インスタンスを作成します。このインスタンスは、ユーザー認証時に使用され、アクセス要求の確認と承認を行い、Quarkus アプリケーションを安全にします。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:242
#, no-wrap
msgid "Authorization"
msgstr "認可"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:246
#, fuzzy
msgid "Quarkus also supports role-based access control (RBAC).  For more information about RBAC and other authorization options in Quarkus, see xref:security-authorization-of-web-endpoints-reference.adoc[Security authorization]."
msgstr "Quarkusは、ロールベースのアクセスコントロール（RBAC）もサポートしています。RBACとQuarkusのその他の認証オプションの詳細については、「 link:security-authorization-of-web-endpoints-reference.html[セキュリティ認証] 」を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:247
#, fuzzy, no-wrap
msgid "Quarkus Security customization"
msgstr "Quarkus Securityのカスタマイズ"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:250
#, fuzzy
msgid "Quarkus Security is highly customizable. You can customize the following core security components of Quarkus:"
msgstr "Quarkusのセキュリティは、高度なカスタマイズが可能です。Quarkusの以下のコアセキュリティコンポーネントをカスタマイズすることができます："

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:254
msgid "`SecurityidentityAugmentor`"
msgstr "`SecurityidentityAugmentor`"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:256
#, fuzzy
msgid "For more information about customizing Quarkus Security including reactive security, and how to register a security provider, see xref:security-customization.adoc[Security customization]."
msgstr "リアクティブセキュリティを含むQuarkus Securityのカスタマイズ、およびセキュリティプロバイダーの登録方法の詳細については、「 link:security-customization.html[セキュリティのカスタマイズ] 」を参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:261
#, fuzzy
msgid "If the user credentials are provided by different sources, you can combine authentication mechanisms.  For example, you can combine built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms."
msgstr "ユーザー認証情報が異なるソースから提供される場合、認証メカニズムを組み合わせることができます。たとえば、組み込みの `Basic` と `quarkus-oidc` `Bearer` の認証メカニズムを組み合わせることができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:275
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic-or-bearer.paths=/service\n"
"quarkus.http.auth.permission.basic-or-bearer.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:279
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic.paths=/basic-only\n"
"quarkus.http.auth.permission.basic.policy=authenticated\n"
"quarkus.http.auth.permission.basic.auth-mechanism=basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:283
#, no-wrap
msgid ""
"quarkus.http.auth.permission.bearer.paths=/bearer-only\n"
"quarkus.http.auth.permission.bearer.policy=authenticated\n"
"quarkus.http.auth.permission.bearer.auth-mechanism=bearer\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:292
#, no-wrap
msgid "Secure connections with SSL/TLS"
msgstr "SSL/TLSによるセキュアな接続"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:295
#, fuzzy, no-wrap
msgid " For more information about how Quarkus supports secure connections with SSL/TLS, see the xref:http-reference.adoc#ssl[HTTP reference] information.\n"
msgstr "QuarkusがSSL/TLSによる安全な接続をサポートする方法の詳細については、xref:http-reference.adoc#ssl[HTTP reference]の情報をご覧ください。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:301
#, fuzzy, no-wrap
msgid "Cross-site Request Forgery (CSRF) prevention"
msgstr "クロスサイトリクエストフォージェリ（CSRF）対策"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:305
#, fuzzy
msgid "Quarkus Security provides a RESTEasy Reactive filter that can protect your applications against a https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] attack.  For more information, see xref:security-csrf-prevention.adoc[Cross-Site Request Forgery Prevention]."
msgstr "Quarkus Securityは、 link:https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] 攻撃からアプリケーションを保護できるRESTEasy Reactiveフィルタを提供しています。詳細については、「 link:security-csrf-prevention.html[Cross-Site Request Forgeryの防止] 」を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:306
#, no-wrap
msgid "SameSite cookies"
msgstr "SameSite クッキー"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:313
#, fuzzy
msgid "Secrets engines are components that store, generate, or encrypt data."
msgstr "シークレットエンジンは、データを保存、生成、暗号化するコンポーネントです。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:317
#, no-wrap
msgid "Secure serialization"
msgstr "セキュア・シリアライゼーション"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:322
#, fuzzy, no-wrap
msgid "Secure auto-generated resources by REST Data with Panache"
msgstr "RESTデータで自動生成されたリソースをPanacheで保護する"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:326
#, fuzzy
msgid "If you're using the REST Data with Panache extension to auto-generate your resources, you can still use the Security annotations within the package `javax.annotation.security`.  For more information, see xref:rest-data-panache.adoc#securing-endpoints[Securing auto-generated resources]."
msgstr "REST Data with Panache 拡張機能を使用してリソースを自動生成している場合でも、パッケージ `javax.annotation.security` 内の Security アノテーションを使用することができます。詳しくは、自動生成さ link:rest-data-panache.html#securing-endpoints[れたリソ] ースのセキュリティを参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:327
#, no-wrap
msgid "National Vulnerability Database"
msgstr "National Vulnerability Database"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:333
#, fuzzy
msgid "If the NVE database flags a CVE against a Quarkus tag, a link that provides more details about the CVE is added to the given CPE name entry."
msgstr "NVEデータベースがQuarkusタグに対してCVEフラグを立てた場合、CVEの詳細を提供するリンクが所定のCPE名エントリに追加されます。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:335
#, fuzzy
msgid "The NVD CPE team updates the list regularly, but if you encounter a false positive, report the details by creating an issue in the link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] repository."
msgstr "NVD CPEチームは定期的にリストを更新していますが、誤検出が発生した場合は、 link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] リポジトリにissueを作成して詳細を報告してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:337
#, fuzzy
msgid "You can detect the vulnerabilities at the application build time with an NVD feed by using the Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency check plugin]."
msgstr "Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency checkプラグインを] 使用することで、NVDフィードを使用してアプリケーションビルド時に脆弱性を検出することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:340
#, fuzzy
msgid "To add the OWASP Dependency check plugin to your Quarkus Maven project, add the following XML configuration to the `pom.xml` file:"
msgstr "Quarkus MavenプロジェクトにOWASP Dependency checkプラグインを追加するには、 `pom.xml` ファイルに次のXML設定を追加します："

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:348
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>org.owasp</groupId>\n"
"    <artifactId>dependency-check-maven</artifactId>\n"
"    <version>${owasp-dependency-check-plugin.version}</version>\n"
"</plugin>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:372
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>org.owasp</groupId>\n"
"    <artifactId>dependency-check-maven</artifactId>\n"
"    <version>${owasp-dependency-check-plugin.version}</version>\n"
"    <configuration>\n"
"        <!-- Fail only when detecting High Vulnerability issues -->\n"
"        <failBuildOnCVSS>7</failBuildOnCVSS>\n"
"        <suppressionFiles>\n"
"            <suppressionFile>${project.basedir}/dependency-cpe-suppression.xml</suppressionFile>\n"
"        </suppressionFiles>\n"
"    </configuration>\n"
"</plugin>\n"
"---- \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:375
#, no-wrap
msgid ""
"To detect less severe issues, adjust the value of `failBuildOnCVSS` to suppress the false positives, as demonstrated in the following code sample:\n"
"[source,xml]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security.adoc:437
#, fuzzy, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.2.xsd\">\n"
"    <!--\n"
"        This is a CPE suppression file for the maven dependency check plugin.\n"
"        Each CPE that is found by error (false positive) needs to be suppressed for a specific jar using its' GAV.\n"
"        See https://jeremylong.github.io/DependencyCheck/general/suppression.html\n"
"     -->\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for netty-tcnative-classes to netty\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.netty:netty-tcnative-classes.*:.*$</gav>\n"
"        <cpe>cpe:/a:netty:netty</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Quarkus Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.quarkus:quarkus-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:smallrye-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:vertx-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for graal-sdk to GraalVM (the JVM distribution)\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^org\\.graalvm\\.sdk:g like this\n"
"    </suppress>\n"
"</suppressions>\n"
msgstr "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.2.xsd\"> <!-- これは、maven依存性チェックプラグインのためのCPE抑制ファイルである。エラー(偽陽性)で見つかった各CPEは、そのGAVを使用して特定のjarに対して抑制する必要があります。 https://jeremylong.github.io/DependencyCheck/general/suppression.html -→ <suppress> <notes> <![CDATA[ netty-tcnative-classes to netty ]]> </notes> <gav regex=\"true\">^io.netty:netty-tcnative-classes. *:. *$</gav> <cpe>cpe:/a:netty:netty</cpe> </suppress> <suppress> <notes> <！[CDATA[ Quarkus Mutinyの偽陽性CPEをmutiny:mutinyに抑制する ]]> </notes> <gav regex=\"true\">^io.quarkus:quarkus-mutiny. *:. *$</gav> <cpe>cpe:/a:mutiny:mutiny</cpe> </suppress> <suppress> <notes> <！[CDATA[ Smallrye MutinyのCPEをmutiny:mutinyに誤検出しないようにする ]]> </notes> <gav regex=\"true\">^io.smallrye.reactive:mutiny.. *.:. *$</gav> <cpe>cpe:/a:mutiny:mutiny</cpe> </suppress> <suppress> <notes> <![CDATA[ Smallrye Mutiny to mutiny:mutiny ]> </notes> <gav regex=\"true\">^ioie.smallrye.reactive:smallrye-mutiny. *:. *$</gav> <cpe>cpe:/a:mutiny:mutiny</cpe> </suppress> <suppress> <notes> <！[CDATA[ Smallrye Mutinyの偽陽性CPEをmutiny:mutinyに抑制する ]]> </notes> <gav regex=\"true\">^io.smallrye.reactive:vertx-mutiny. *:. *$</gav> <cpe>cpe:/a:mutiny:mutiny</cpe> </suppress> <suppress> <notes> <！[CDATA[ Graal-sdkの偽陽性CPEをGraalVM（JVMディストリビューション）に抑制する ]]> </notes> <gav regex=\"true\">^org.graalvm.sdk:g like this </suppress> </suppress> <!"

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:441
#, no-wrap
msgid ""
"Ensure that you review and update the suppression list regularly to ensure that the results are up to date.\n"
"You can optionally apply a time limit to individual suppressions by adding an expiry attribute, as outlined in the following example: \n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:444
#, no-wrap
msgid ""
"`<suppress until=\"2022-01-01Z\">...</suppress>`\n"
"You can adjust the expiry date if you need to.\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/security.adoc:445
#, no-wrap
msgid "Quarkus Security testing"
msgstr "Quarkus Securityのテスト"

#. type: delimited block -
#: upstream/_versions/main/guides/security.adoc:448
msgid "When testing Quarkus security, ensure that your `IdentityProvider` is already set with usernames, passwords, and roles in `application.properties`.  For more information about testing Quarkus Security, see xref:security-testing.adoc#configuring-user-information[Configuring user information]."
msgstr ""

#~ msgid "This document provides a brief overview of Quarkus Security and links to the individual guides."
#~ msgstr "このドキュメントでは、Quarkus Securityの簡単な概要と、各ガイドへのリンクについて説明しています。"

#~ msgid "Getting Started"
#~ msgstr "はじめに"

#~ msgid "Architecture"
#~ msgstr "アーキテクチャ"

#~ msgid "For example, the credentials may be coming with the HTTP `Authorization` header, client HTTPS certificates or cookies."
#~ msgstr "例えば、資格情報は、HTTP `Authorization`  ヘッダー、クライアントの HTTPS 証明書、またはクッキーを使用している場合があります。"

#~ msgid "Quarkus supports several sources to load authentication information from."
#~ msgstr "Quarkusは、認証情報をロードするためのいくつかのソースをサポートしています。"

#~ msgid "Please see xref:security-built-in-authentication.adoc#mutual-tls[Mutual TLS Authentication] for more information."
#~ msgstr "詳しくは link:security-built-in-authentication#mutual-tls[相互TLS認証] をご覧ください。"

#~ msgid "SmallRye JWT"
#~ msgstr "SmallRye JWT"

#~ msgid "It provides an alternative to `quarkus-oidc` Bearer Token Authentication Mechanism. It can currently verify only `JWT` tokens using the PEM keys or refreshable `JWK` key set."
#~ msgstr "それは `quarkus-oidc` ベアラートークン認証メカニズムに代わるものを提供します。現在、PEM 鍵または更新可能な `JWK` 鍵セットを使用して `JWT` トークンのみを検証することができます。"

#~ msgid "OAuth2"
#~ msgstr "OAuth2"

#~ msgid "See the xref:security-oauth2.adoc[Using OAuth2] guide for more information."
#~ msgstr "詳細は、xref:security-oauth2.adoc[Using OAuth2] ガイドを参照してください。"

#~ msgid "`quarkus-smallrye-jwt` does not support the remote introspection of the opaque tokens or even JWT tokens - it always relies on the locally available keys - possibly fetched from the OpenID Connect provider. So if you need to introspect the JWT tokens remotely then both `quarkus-oidc` and `quarkus-elytron-security-oauth2` will work. Both extensions also support the verification of the opaque/binary tokens by using the remote introspection."
#~ msgstr "`quarkus-smallrye-jwt` は、不透明なトークンや JWT トークンのリモートイントロスペクションをサポートしていません。これは常に、ローカルで利用可能なキー (おそらく OpenID Connect プロバイダーから取得されたもの) に依存します。JWT トークンをリモートでイントロスペクションする必要がある場合は、`quarkus-oidc` と `quarkus-elytron-security-oauth2` の両方が利用出来ます。どちらのエクステンションも、リモートイントロスペクションによる不透明/バイナリトークンの検証もサポートしています。"

#~ msgid "Below is a summary of the options."
#~ msgstr "以下、選択肢の概要をご紹介します。"

#~ msgid "xref:security-getting-started.adoc[JPA IdentityProvider]"
#~ msgstr "xref:security-getting-started.adoc[JPA IdentityProvider]"

#~ msgid "For a a Basic Authentication configuration walk-through using JPA, see:"
#~ msgstr "JPAを使用したBasic認証の設定のウォークスルーについては、こちらをご覧ください。"

#~ msgid "For testing, use the xref:security-testing.adoc#configuring-user-information[User Properties IdentityProvider] section with the `IdentityProvider` with already set usernames, passwords, and roles in `application.properties`."
#~ msgstr "テスト用途の場合は、 `application.properties` でユーザー名、パスワード、およびロールがすでに設定されている `IdentityProvider` で xref:security-testing.adoc#configuring-user-information[ユーザープロパティ IdentityProvider] セクションを使用します。"

#~ msgid "See xref:security-built-in-authentication.adoc#proactive-authentication[Proactive Authentication] for more information."
#~ msgstr "詳細については、 link:security-built-in-authentication#proactive-authentication[プロアクティブ認証]を参照してください。"

#~ msgid "See xref:security-authorization.adoc[Security Authorization] for more information about Role Based Access Control and other authorization options."
#~ msgstr "役割ベースのアクセス制御およびその他の認可オプションの詳細については、 link:security-authorization[セキュリティー認可]を参照してください。"

#~ msgid "Customization and other useful tips"
#~ msgstr "カスタマイズやその他の便利なヒント"

#~ msgid "Quarkus Security is highly customizable. One can register custom ``HttpAuthenticationMechanism``s, ``IdentityProvider``s and ``SecurityidentityAugmentor``s."
#~ msgstr "Quarkus Securityは、高度なカスタマイズが可能です。カスタム `HttpAuthenticationMechanism` 、 `IdentityProvider` 、 `SecurityidentityAugmentor` を登録することができます。"

#~ msgid "See xref:security-customization.adoc[Security Customization] for more information about customizing Quarkus Security and other useful tips about the reactive security, registering the security providers, etc."
#~ msgstr "Quarkus Securityのカスタマイズの詳細や、リアクティブセキュリティー、セキュリティープロバイダーの登録などに関する便利なヒントについては、xref:security-customization.adoc[Security Customization] を参照してください。"

#~ msgid "See the xref:http-reference.adoc#ssl[Supporting secure connections with SSL] guide for more information."
#~ msgstr "詳細は、xref:http-reference.adoc#ssl[Supporting secure connections with SSL] ガイドを参照してください。"

#~ msgid "Testing"
#~ msgstr "テスト"

#~ msgid "See xref:security-testing.adoc[Security Testing] for more information about testing Quarkus Security."
#~ msgstr "Quarkus Securityのテストの詳細については、 link:security-testing[セキュリティーのテスト]を参照してください。"

#~ msgid "Vault"
#~ msgstr "Vault"

#~ msgid "We will be asking the NVD CPE team to update the list as well as link Quarkus CPE name entries with the related CVEs on a regular basis.  If you work with the link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency Check Plugin] which is using NVD feeds to detect the vulnerabilities at the application build time and see a false positive reported then please re-open link:https://github.com/quarkusio/quarkus/issues/2611[this issue] and provide the details."
#~ msgstr "リストの更新のほか、Quarkus CPE 名のエントリーを関連する CVE に定期的にリンクするよう NVD CPE チームに依頼します。NVD フィードを使用して、アプリケーションのビルド時に脆弱性を検出し、誤検知を確認する link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency Check Plugin] を使用する場合は、link:https://github.com/quarkusio/quarkus/issues/2611[this issue] を再び開き、詳細を提供してください。"

#~ msgid "You can add `OWASP Dependency Check Plugin` to your project's `pom.xml` like this:"
#~ msgstr "以下のように、プロジェクトの `pom.xml` に `OWASP Dependency Check Plugin` を追加できます。"

#~ msgid "You can change `failBuildOnCVSS` value to detect less severe issues as well.\n"
#~ msgstr "`failBuildOnCVSS` 値を変更することで、それほど深刻ではない問題も検出できます。\n"

#~ msgid ""
#~ "A suppression list may vary depending on whether you'd like to keep checking the false positives to avoid missing something or not.\n"
#~ "For example, it can look like this:\n"
#~ msgstr ""
#~ "抑制リストは、見逃さないように誤検知をチェックし続けるかどうかによって異なる場合があります。\n"
#~ "たとえば、次のようになります:\n"

#~ msgid "[source,xml]\n"
#~ msgstr "[source,xml]\n"

#~ msgid "See xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] for more information about multiple tenants which can support `Bearer` or `Authorization Code Flow` authentication mechanism and configured statically or dynamically."
#~ msgstr "`Bearer` または `Authorization Code Flow` 認証メカニズムをサポートし、静的または動的に設定できる複数のテナントの詳細については、xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy] を参照してください。"

#~ msgid "Note link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency Check Plugin] `6.5.3` or later should be used with Quarkus.\n"
#~ msgstr "link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency Check Plugin] `6.5.3` 以降を Quarkus で使用する必要があることに留意してください。\n"
