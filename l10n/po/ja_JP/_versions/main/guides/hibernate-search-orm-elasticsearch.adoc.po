# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-02 08:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:6
#, no-wrap
msgid "Hibernate Search guide"
msgstr "Hibernate Search ガイド"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:12
msgid "You have a Hibernate ORM-based application? You want to provide a full-featured full-text search to your users? You're at the right place."
msgstr "Hibernate ORMベースのアプリケーションをお持ちですか?フル機能のフルテキスト検索をユーザーに提供したいですか?あなたは正しい場所にいます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:15
msgid "With this guide, you'll learn how to synchronize your entities to an Elasticsearch or OpenSearch cluster in a heartbeat with Hibernate Search.  We will also explore how you can query your Elasticsearch or OpenSearch cluster using the Hibernate Search API."
msgstr "このガイドでは、Hibernate Search を使用して、エンティティを Elasticsearch または OpenSearch クラスタに瞬時に同期させる方法を学びます。また、Hibernate Search API を使用して Elasticsearch または OpenSearch クラスタにクエリを実行する方法についても説明します。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:22
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:25
msgid "The application described in this guide allows to manage a (simple) library: you manage authors and their books."
msgstr "このガイドに記載されているアプリケーションは、(シンプルな) 図書館を管理することができます:あなたは、著者とその本を管理します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:27
msgid "The entities are stored in a PostgreSQL database and indexed in an Elasticsearch cluster."
msgstr "エンティティはPostgreSQLデータベースに格納され、Elasticsearchクラスターにインデックスされます。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:28
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:32
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:34
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:36
msgid "The solution is located in the `hibernate-search-orm-elasticsearch-quickstart` {quickstarts-tree-url}/hibernate-search-orm-elasticsearch-quickstart[directory]."
msgstr "ソリューションは `hibernate-search-orm-elasticsearch-quickstart` {quickstarts-tree-url}/hibernate-search-orm-elasticsearch-quickstart[ディレクトリ] にあります。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:40
msgid "The provided solution contains a few additional elements such as tests and testing infrastructure."
msgstr "提供されるソリューションには、テストやテストのインフラストラクチャなど、いくつかの追加要素が含まれています。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:42
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:45
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:51
msgid "This command generates a Maven structure importing the following extensions:"
msgstr "このコマンドは、以下のエクステンションをインポートするMaven構造体を生成します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:53
msgid "Hibernate ORM with Panache,"
msgstr "Hibernate ORM with Panache,"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:54
msgid "the PostgreSQL JDBC driver,"
msgstr "PostgreSQL JDBCドライバー"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:55
msgid "Hibernate Search + Elasticsearch,"
msgstr "Hibernate Search + Elasticsearch,"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:56
msgid "RESTEasy Reactive and Jackson."
msgstr "RESTEasy Reactive と Jackson."

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:59
msgid "If you already have your Quarkus project configured, you can add the `hibernate-search-orm-elasticsearch` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `hibernate-search-orm-elasticsearch` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:64
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます。"

#. type: Block title
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:66
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:72
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-hibernate-search-orm-elasticsearch</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:75
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:78
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-hibernate-search-orm-elasticsearch\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:80
#, no-wrap
msgid "Creating the bare entities"
msgstr "ベアエンティティーの作成"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:83
msgid "First, let's create our Hibernate ORM entities `Book` and `Author` in the `model` subpackage."
msgstr "まず、 `model` サブパッケージに Hibernate ORM エンティティー `Book` と `Author` を作成しましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:87
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:135
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:292
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:334
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:90
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:337
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:95
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:342
#, no-wrap
msgid ""
"import jakarta.persistence.CascadeType;\n"
"import jakarta.persistence.Entity;\n"
"import jakarta.persistence.FetchType;\n"
"import jakarta.persistence.OneToMany;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:97
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:144
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:304
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:350
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:100
#, no-wrap
msgid ""
"@Entity\n"
"public class Author extends PanacheEntity { // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:102
#, no-wrap
msgid "    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:104
#, no-wrap
msgid "    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:107
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER) // <2>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:116
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Author)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:118
#, no-wrap
msgid "        Author other = (Author) o;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:121
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:167
#, no-wrap
msgid ""
"        return Objects.equals(id, other.id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:127
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:173
#, no-wrap
msgid ""
"    @Override\n"
"    public int hashCode() {\n"
"        return 31;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:129
msgid "We are using Hibernate ORM with Panache, it is not mandatory."
msgstr "PanacheでHibernate ORMを使用していますが、必須ではありません。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:131
msgid "We are loading these elements eagerly so that they are present in the JSON output.  In a real world application, you should probably use a DTO approach."
msgstr "私たちは、これらの要素がJSON出力に存在するように前もってロードしています。実際のアプリケーションでは、おそらくDTOアプローチを使うべきでしょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:137
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:294
#, no-wrap
msgid "import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:140
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:297
#, no-wrap
msgid ""
"import jakarta.persistence.Entity;\n"
"import jakarta.persistence.ManyToOne;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:142
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:302
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonIgnore;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:147
#, no-wrap
msgid ""
"@Entity\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:149
#, no-wrap
msgid "    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:153
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonIgnore <1>\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:162
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Book)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:164
#, no-wrap
msgid "        Book other = (Book) o;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:175
msgid "We mark this property with `@JsonIgnore` to avoid infinite loops when serializing with Jackson."
msgstr "このプロパティを `@JsonIgnore` でマークしてJacksonでシリアル化する際の無限ループを避けます。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:176
#, no-wrap
msgid "Initializing the REST service"
msgstr "RESTサービスの初期化"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:179
msgid "While everything is not yet set up for our REST service, we can initialize it with the standard CRUD operations we will need."
msgstr "まだRESTサービスの設定はすべて終わっていませんが、必要となる標準的なCRUD操作で初期化することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:181
msgid "Create the `org.acme.hibernate.search.elasticsearch.LibraryResource` class:"
msgstr "`org.acme.hibernate.search.elasticsearch.LibraryResource` クラスを作成します:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:185
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:188
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:198
#, no-wrap
msgid ""
"import jakarta.enterprise.event.Observes;\n"
"import jakarta.inject.Inject;\n"
"import jakarta.transaction.Transactional;\n"
"import jakarta.ws.rs.DELETE;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.PUT;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:204
#, no-wrap
msgid ""
"import org.acme.hibernate.search.elasticsearch.model.Author;\n"
"import org.acme.hibernate.search.elasticsearch.model.Book;\n"
"import org.hibernate.search.mapper.orm.session.SearchSession;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:206
#, no-wrap
msgid "import io.quarkus.runtime.StartupEvent;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:209
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:219
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"book\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addBook(@RestForm String title, @RestForm Long authorId) {\n"
"        Author author = Author.findById(authorId);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:224
#, no-wrap
msgid ""
"        Book book = new Book();\n"
"        book.title = title;\n"
"        book.author = author;\n"
"        book.persist();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:228
#, no-wrap
msgid ""
"        author.books.add(book);\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:239
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"book/{id}\")\n"
"    @Transactional\n"
"    public void deleteBook(Long id) {\n"
"        Book book = Book.findById(id);\n"
"        if (book != null) {\n"
"            book.author.books.remove(book);\n"
"            book.delete();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:250
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"author\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addAuthor(@RestForm String firstName, @RestForm String lastName) {\n"
"        Author author = new Author();\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:264
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void updateAuthor(Long id, @RestForm String firstName, @RestForm String lastName) {\n"
"        Author author = Author.findById(id);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:275
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    public void deleteAuthor(Long id) {\n"
"        Author author = Author.findById(id);\n"
"        if (author != null) {\n"
"            author.delete();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:278
msgid "Nothing out of the ordinary here: it is just good old Hibernate ORM with Panache operations in a REST service."
msgstr "特別なことは何もありません。RESTサービスでのPanacheの処理と古き良きHibernateです。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:280
msgid "In fact, the interesting part is that we will need to add very few elements to make our full text search application working."
msgstr "実は、全文検索アプリケーションを動作させるために必要な要素はごくわずかです。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:281
#, no-wrap
msgid "Using Hibernate Search annotations"
msgstr "Hibernate Searchアノテーションの使用"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:284
msgid "Let's go back to our entities."
msgstr "エンティティに戻りましょう"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:286
msgid "Enabling full text search capabilities for them is as simple as adding a few annotations."
msgstr "フルテキスト検索機能を有効にするには、いくつかのアノテーションを追加するだけで簡単です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:288
msgid "Let's edit the `Book` entity again to include this content:"
msgstr "`Book` エンティティを再度編集して、この内容を入れてみましょう:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:300
#, no-wrap
msgid ""
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:308
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed // <1>\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:311
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"english\") // <2>\n"
"    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:315
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonIgnore\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:318
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:369
#, no-wrap
msgid ""
"    // Preexisting equals()/hashCode() methods\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:320
msgid "First, let's use the `@Indexed` annotation to register our `Book` entity as part of the full text index."
msgstr "まず、 `@Indexed` アノテーションを使って、 `Book` エンティティを全文検索インデックスの一部として登録してみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:322
msgid "The `@FullTextField` annotation declares a field in the index specifically tailored for full text search.  In particular, we have to define an analyzer to split and analyze the tokens (~ words) - more on this later."
msgstr "`@FullTextField` アノテーションは、全文検索用に特別に調整されたインデックスのフィールドを宣言します。特に、トークン（～単語）を分割して分析するためのアナライザーを定義する必要があります。 - これについては後で説明します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:324
msgid "Now that our books are indexed, we can do the same for the authors."
msgstr "`Book` がインデックス化されたことで、 `Author` にも同じことができるようになりました。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:326
msgid "Open the `Author` class and include the content below."
msgstr "`Author` クラスを開き、以下の内容を記載します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:328
msgid "Things are quite similar here: we use the `@Indexed`, `@FullTextField` and `@KeywordField` annotations."
msgstr "`@Indexed` 、 `@FullTextField` 、 `@KeywordField` のアノテーションを使用していますが、こちらもよく似ている機能です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:330
msgid "There are a few differences/additions though. Let's check them out."
msgstr "しかし、いくつかの違いや付加価値があります。それを見てみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:348
#, no-wrap
msgid ""
"import org.hibernate.search.engine.backend.types.Sortable;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.KeywordField;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:354
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed\n"
"public class Author extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:358
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\") // <1>\n"
"    @KeywordField(name = \"firstName_sort\", sortable = Sortable.YES, normalizer = \"sort\") // <2>\n"
"    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:362
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\")\n"
"    @KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
"    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:366
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)\n"
"    @IndexedEmbedded // <3>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:371
msgid "We use a `@FullTextField` similar to what we did for `Book` but you'll notice that the analyzer is different - more on this later."
msgstr "`@FullTextField` は `Book` と同様のものを使用しますが、アナライザーが異なることに気がつくでしょう - これについては後で説明します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:375
msgid "As you can see, we can define several fields for the same property.  Here, we define a `@KeywordField` with a specific name.  The main difference is that a keyword field is not tokenized (the string is kept as one single token) but can be normalized (i.e. filtered) - more on this later.  This field is marked as sortable as our intention is to use it for sorting our authors."
msgstr "このように、同じプロパティに複数のフィールドを定義することができます。ここでは、固有の名前を持つ `@KeywordField` を定義しています。主な違いは、キーワードフィールドはトークン化されません（文字列は1つのトークンとして保持される）が、正規化（すなわちフィルタリング）することができるということです。これについては後で説明します。このフィールドは `Author` のソートに使用することを意図しているため、ソート可能であるとマークされています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:380
msgid "The purpose of `@IndexedEmbedded` is to include the `Book` fields into the `Author` index.  In this case, we just use the default configuration: all the fields of the associated `Book` entities are included in the index (i.e. the `title` field).  The nice thing with `@IndexedEmbedded` is that it is able to automatically reindex an `Author` if one of its ``Book``s has been updated thanks to the bidirectional relation.  `@IndexedEmbedded` also supports nested documents (using the `storage = NESTED` attribute), but we don't need it here.  You can also specify the fields you want to include in your parent index using the `includePaths` attribute if you don't want them all."
msgstr "`@IndexedEmbedded` の目的は `Book` のフィールドを `Author` のインデックスに含めることです。この場合はデフォルトの設定を使用します。つまり、関連する `Book` エンティティのすべてのフィールドがインデックスに含まれます (つまり `title` フィールドも含まれます)。 `@IndexedEmbedded` の優れた点は双方向の関係により `Book` のいずれかが更新された場合も `Author` のインデックスを自動的に再作成できることです。 `@IndexedEmbedded` は、入れ子になったドキュメントもサポートしていますが（ `storage = NESTED` 属性を使用）ここでは必要ありません。また、すべてのフィールドを親インデックスに含める必要のない場合は、 `includePaths` 属性を使って含めるフィールドを指定することができます。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:381
#, no-wrap
msgid "Analyzers and normalizers"
msgstr "アナライザーとノーマライザー"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:383
#, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:386
msgid "Analysis is a big part of full text search: it defines how text will be processed when indexing or building search queries."
msgstr "アナライズは全文検索の大きな部分を占めています。インデックス作成や検索クエリ構築の際に、テキストがどのように処理されるかを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:388
msgid "The role of analyzers is to split the text into tokens (~ words) and filter them (making it all lowercase and removing accents for instance)."
msgstr "アナライザーの役割は、テキストをトークン（～単語）に分割し、フィルターをかけることです（例えば、すべて小文字にしたり、アクセントを削除したり）。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:391
msgid "Normalizers are a special type of analyzers that keeps the input as a single token.  It is especially useful for sorting or indexing keywords."
msgstr "ノーマライザーは入力を1つのトークンとして保持する特殊なアナライザです。特に、キーワードのソートやインデックス作成に有効です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:393
msgid "There are a lot of bundled analyzers, but you can also develop your own for your own specific purposes."
msgstr "多くのバンドルされたアナライザーがありますが、自分の目的に合わせて独自に開発することもできます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:395
msgid "You can learn more about the Elasticsearch analysis framework in the https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[Analysis section of the Elasticsearch documentation]."
msgstr "Elasticsearchアナリシスフレームワークについては、 link:https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[ElasticsearchドキュメントのText analysis セクション] で詳しく説明しています。"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:396
#, no-wrap
msgid "Defining the analyzers used"
msgstr "使用するアナライザーの定義"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:400
msgid "When we added the Hibernate Search annotations to our entities, we defined the analyzers and normalizers used.  Typically:"
msgstr "エンティティにHibernate Searchアノテーションを追加する際に、使用するアナライザーとノーマライザーを定義しました。典型的には:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:404
#, no-wrap
msgid "@FullTextField(analyzer = \"english\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:409
#, no-wrap
msgid "@FullTextField(analyzer = \"name\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:414
#, no-wrap
msgid "@KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:417
msgid "We use:"
msgstr "以下のものを使用しています:"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:419
msgid "an analyzer called `name` for person names,"
msgstr "人名用の `name` というアナライザー,"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:420
msgid "an analyzer called `english` for book titles,"
msgstr "書籍のタイトル用の `english` というアナライザー,"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:421
msgid "a normalizer called `sort` for our sort fields"
msgstr "ソートフィールド用の `sort` というノーマライザー"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:423
msgid "but we haven't set them up yet."
msgstr "ですが、まだ設定していません。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:425
msgid "Let's see how you can do it with Hibernate Search."
msgstr "それでは、Hibernate Searchを使ってどのように設定できるのか見てみましょう。"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:427
#, no-wrap
msgid "Setting up the analyzers"
msgstr "アナライザーのセットアップ"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:431
msgid "It is an easy task, we just need to create an implementation of `ElasticsearchAnalysisConfigurer` (and configure Quarkus to use it, more on that later)."
msgstr "これは簡単な作業で、 `ElasticsearchAnalysisConfigurer` の実装を作成するだけです（そして、それを使用するようにQuarkusを設定します、詳細は後述します）。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:433
msgid "To fulfill our requirements, let's create the following implementation:"
msgstr "要件を満たすために、次のような実装を作ってみましょう:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:437
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:440
#, no-wrap
msgid ""
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurationContext;\n"
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:443
#, no-wrap
msgid ""
"import jakarta.enterprise.context.Dependent;\n"
"import jakarta.inject.Named;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:446
#, no-wrap
msgid ""
"@SearchExtension // <1>\n"
"public class AnalysisConfigurer implements ElasticsearchAnalysisConfigurer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:452
#, no-wrap
msgid ""
"    @Override\n"
"    public void configure(ElasticsearchAnalysisConfigurationContext context) {\n"
"        context.analyzer(\"name\").custom() // <2>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:456
#, no-wrap
msgid ""
"        context.analyzer(\"english\").custom() // <3>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\", \"porter_stem\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:461
#, no-wrap
msgid ""
"        context.normalizer(\"sort\").custom() // <4>\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:464
msgid "Annotate the configurer implementation with the `@SearchExtension` qualifier to tell Quarkus it should be used in the default persistence unit, for all Elasticsearch indexes (by default)."
msgstr "Configurerの実装に `@SearchExtension` アノテーションを付けて、QuarkusにすべてのElasticsearchインデックスに(デフォルトで)デフォルトの永続化ユニットを使用するように指示します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:469
msgid "The annotation can also target a specific persistence unit (`@SearchExtension(persistenceUnit = \"nameOfYourPU\")`), backend (`@SearchExtension(backend = \"nameOfYourBackend\")`), index (`@SearchExtension(index = \"nameOfYourIndex\")`), or a combination of those (`@SearchExtension(persistenceUnit = \"nameOfYourPU\", backend = \"nameOfYourBackend\", index = \"nameOfYourIndex\")`)."
msgstr "アノテーションは、特定の永続ユニット (`@SearchExtension(persistenceUnit = \"nameOfYourPU\")`)、 バックエンド (`@SearchExtension(backend = \"nameOfYourBackend\")`)、 インデックス (`@SearchExtension(index = \"nameOfYourIndex\")`)もターゲットにすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:471
msgid "This is a simple analyzer separating the words on spaces, removing any non-ASCII characters by its ASCII counterpart (and thus removing accents) and putting everything in lowercase.  It is used in our examples for the author's names."
msgstr "これは、スペースで単語を分離し、ASCII以外の文字をASCIIの対応する文字で置換し（したがって、アクセントを除去し）、すべてを小文字にするシンプルなアナライザーです。これは、例では著者名に使用されています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:473
msgid "We are a bit more aggressive with this one and we include some stemming: we will be able to search for `mystery` and get a result even if the indexed input contains `mysteries`.  It is definitely too aggressive for person names, but it is perfect for the book titles."
msgstr "これはもう少し積極的で、ステミングも含まれています。インデックス化された入力に `mysteries` が含まれていても、 `mystery` を検索して結果を得ることができます。人名に対しては確かに強引すぎますが、書籍のタイトルに対しては完璧です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:474
msgid "Here is the normalizer used for sorting. Very similar to our first analyzer, except we don't tokenize the words as we want one and only one token."
msgstr "ここではソートに使われるノーマライザーを紹介します。最初のアナライザーと非常によく似ていますが、1つだけのトークンが欲しいので、単語をトークン化しないことを除けば同じです。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:480
msgid "Alternatively, if for some reason you can't or don't want to annotate your analysis configurer with `@SearchExtension`, you can simply annotate it with `@Dependent @Named(\"myAnalysisConfigurer\")` and then reference it from configuration properties:"
msgstr "また、何らかの理由で `@SearchExtension` アノテーションを付けられない、あるいは付けたくない場合には、単純に `@Dependent @Named(\"myAnalysisConfigurer\")` のアノテーションを付けて設定のプロパティから参照することも可能です:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:484
#, no-wrap
msgid "quarkus.hibernate-search-orm.elasticsearch.analysis.configurer=bean:myAnalysisConfigurer\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:487
#, no-wrap
msgid "Adding full text capabilities to our REST service"
msgstr "RESTサービスに全文検索機能を追加"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:490
msgid "In our existing `LibraryResource`, we just need to inject the `SearchSession`:"
msgstr "既存の `LibraryResource` に、`SearchSession` をインジェクションするだけです:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:495
#, no-wrap
msgid ""
"    @Inject\n"
"    SearchSession searchSession; // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:500
#, fuzzy
msgid "Inject a Hibernate Search session, which relies on the `EntityManager` under the hood.  Applications with multiple persistence units can use the CDI qualifier `@io.quarkus.hibernate.orm.PersistenceUnit` to select the right one: see xref:multiple-persistence-units-attaching-cdi[CDI integration]."
msgstr "HibernateのSearchセッションを注入します。これは、フードの下の `EntityManager` に依存します。複数の永続化ユニットを持つアプリケーションは、CDI修飾子 `@io.quarkus.hibernate.orm.PersistenceUnit` を使って正しいものを選択することができます: xref:multiple-persistence-units-attaching-cdi[CDI統合を] 参照。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:502
msgid "And then we can add the following methods (and a few ``import``s):"
msgstr "そして、次のようなメソッドを追加します（いくつかの `import` もあります）:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:513
#, no-wrap
msgid ""
"    @Transactional // <1>\n"
"    void onStart(@Observes StartupEvent ev) throws InterruptedException { // <2>\n"
"        // only reindex if we imported some content\n"
"        if (Book.count() > 0) {\n"
"            searchSession.massIndexer()\n"
"                    .startAndWait();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:529
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"author/search\") // <3>\n"
"    @Transactional\n"
"    public List<Author> searchAuthors(@RestQuery String pattern, // <4>\n"
"            @RestQuery Optional<Integer> size) {\n"
"        return searchSession.search(Author.class) // <5>\n"
"                .where(f ->\n"
"                    pattern == null || pattern.trim().isEmpty() ?\n"
"                        f.matchAll() : // <6>\n"
"                        f.simpleQueryString()\n"
"                                .fields(\"firstName\", \"lastName\", \"books.title\").matching(pattern) // <7>\n"
"                )\n"
"                .sort(f -> f.field(\"lastName_sort\").then().field(\"firstName_sort\")) // <8>\n"
"                .fetchHits(size.orElse(20)); // <9>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:531
msgid "Important point: we need a transactional context for these methods."
msgstr "重要なポイント：これらのメソッドには、トランザクションコンテキストが必要です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:536
msgid "As we will import data into the PostgreSQL database using an SQL script, we need to reindex the data at startup.  For this, we use Hibernate Search's mass indexer, which allows to index a lot of data efficiently (you can fine tune it for better performances).  All the upcoming updates coming through Hibernate ORM operations will be synchronized automatically to the full text index.  If you don't import data manually in the database, you don't need that: the mass indexer should then only be used when you change your indexing configuration (adding a new field, changing an analyzer's configuration...) and you want the new configuration to be applied to your existing entities."
msgstr "SQLスクリプトを使用してPostgreSQLデータベースにデータをインポートするために起動時にデータのインデックスを再作成する必要があります。Hibernate Searchのマスインデクサーを使用して大量のデータを効率的にインデクシングすることができます（パフォーマンスを向上させるために微調整できます）。Hibernate ORMの操作によるその後のすべての更新は自動的に全文インデックスに同期されます。マスインデクサーを使用するのはインデクシング構成を変更したりして（新しいフィールドの追加、アナライザーの構成の変更など）、新しい構成を既存のエンティティに適用したい場合のみです。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:537
msgid "This is where the magic begins: just adding the annotations to our entities makes them available for full text search: we can now query the index using the Hibernate Search DSL."
msgstr "エンティティにアノテーションを追加するだけで、全文検索が可能になり、Hibernate Search DSLを使ってインデックスにクエリーを投げることができるようになります。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:538
msgid "Use the `org.jboss.resteasy.reactive.RestQuery` annotation type to avoid repeating the parameter name."
msgstr "パラメーター名の繰り返しを避けるために `org.jboss.resteasy.annotations.jaxrs.QueryParam` アノテーションを使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:539
msgid "We indicate that we are searching for ``Author``s."
msgstr "`Author` を検索していることを示しています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:540
msgid "We create a predicate: if the pattern is empty, we use a `matchAll()` predicate."
msgstr "述語を作成します。パターンが空の場合は `matchAll()` 述語を使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:541
msgid "If we have a valid pattern, we create a https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] predicate on the `firstName`, `lastName` and `books.title` fields matching our pattern."
msgstr "有効なパターンがあれば、パターンにマッチする `firstName` 、 `lastName` 、 `books.title` フィールドに対する https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] 述語を作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:542
msgid "We define the sort order of our results. Here we sort by last name, then by first name. Note that we use the specific fields we created for sorting."
msgstr "結果のソート順を定義します。ここでは、姓でソートし、次に名でソートしています。ソートには作成した特定のフィールドを使用していることに注意してください。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:543
msgid "Fetch the `size` top hits, `20` by default. Obviously, paging is also supported."
msgstr "`size` で指定した数の一致度が高いものをフェッチします。デフォルトでは `20` です。もちろんページングもサポートしています。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:548
msgid "The Hibernate Search DSL supports a significant subset of the Elasticsearch predicates (match, range, nested, phrase, spatial...).  Feel free to explore the DSL using autocompletion."
msgstr "Hibernate Search DSLはElasticsearchの述語（match、range、nested、phrase、spatial...）の重要なサブセットをサポートしています。オートコンプリートを使ってDSLをご自由にお試しください。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:551
msgid "When that's not enough, you can always fall back to link:{hibernate-search-docs-url}#search-dsl-predicate-extensions-elasticsearch-from-json[defining a predicate using JSON directly]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:553
#, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:556
msgid "As usual, we can configure everything in the Quarkus configuration file, `application.properties`."
msgstr "いつものように、Quarkusの設定ファイル（ `application.properties` ）ですべての設定を行うことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:558
msgid "Edit `src/main/resources/application.properties` and inject the following configuration:"
msgstr "以下の内容の `src/main/resources/import.sql` ファイルを作成してみましょう:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:562
#, no-wrap
msgid "quarkus.ssl.native=false <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:564
#, no-wrap
msgid "quarkus.datasource.db-kind=postgresql <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:566
#, no-wrap
msgid "quarkus.hibernate-orm.sql-load-script=import.sql <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:569
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.elasticsearch.version=7 <4>\n"
"quarkus.hibernate-search-orm.indexing.plan.synchronization.strategy=sync <5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:575
#, no-wrap
msgid ""
"%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/quarkus_test <6>\n"
"%prod.quarkus.datasource.username=quarkus_test\n"
"%prod.quarkus.datasource.password=quarkus_test\n"
"%prod.quarkus.hibernate-orm.database.generation=create\n"
"%prod.hibernate-search-orm.elasticsearch.hosts=localhost:9200 <6>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:577
msgid "We won't use SSL, so we disable it to have a more compact native executable."
msgstr "SSLは使用しないので、ネイティブ実行可能ファイルをよりコンパクトにするために無効にしています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:578
msgid "Let's create a PostgreSQL datasource."
msgstr "それでは、PostgreSQLのデータソースを作成してみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:579
msgid "We load some initial data on startup."
msgstr "いくつかの初期データを読み込みます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:583
#, fuzzy
msgid "We need to tell Hibernate Search about the version of Elasticsearch we will use.  It is important because there are significant differences between Elasticsearch mapping syntax depending on the version.  Since the mapping is created at build time to reduce startup time, Hibernate Search cannot connect to the cluster to automatically detect the version.  Note that, for OpenSearch, you need to prefix the version with `opensearch:`; see xref:opensearch[OpenSearch compatibility]."
msgstr "使用するElasticsearchのバージョンについて、Hibernate Searchに伝える必要があります。バージョンによってElasticsearchのマッピング構文に大きな違いがあるため、重要です。マッピングは起動時間を短縮するためにビルド時に作成されるため、Hibernate Searchはクラスタに接続してバージョンを自動検出することはできません。なお、OpenSearchの場合、バージョンの前に `opensearch:` を付ける必要があります ; xref:opensearch[OpenSearchの互換] 性を参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:586
msgid "This means that we wait for the entities to be searchable before considering a write complete.  On a production setup, the `write-sync` default will provide better performance.  Using `sync` is especially important when testing as you need the entities to be searchable immediately."
msgstr "これは、エンティティが検索可能になるのを待ってから書き込みが完了したとみなすことを意味します。本番環境では、デフォルトの `write-sync` の方がパフォーマンスが高くなります。テスト時にはエンティティがすぐに検索可能になる必要があるため `sync` を使用することが特に重要です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:591
#, fuzzy
msgid "For development and tests, we rely on xref:dev-services[Dev Services], which means Quarkus will start a PostgreSQL database and Elasticsearch cluster automatically.  In production mode, however, you will want to start a PostgreSQL database and Elasticsearch cluster manually, which is why we provide Quarkus with this connection info in the `prod` profile (`%prod.` prefix)."
msgstr "開発およびテストでは、 xref:dev-services[Dev] Servicesに依存しています。つまり、QuarkusはPostgreSQLデータベースとElasticsearchクラスタを自動的に開始します。しかし、本番モードでは、PostgreSQLデータベースとElasticsearchクラスターを手動で起動したいと思うでしょう。そのため、Quarkusに、この接続情報を `prod` プロファイル（ `%prod.` プレフィックス）で提供するのです。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:598
#, fuzzy
msgid "Because we rely on xref:dev-services[Dev Services], the database and Elasticsearch schema will automatically be dropped and re-created on each application startup in tests and dev mode (unless link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`] is set explicitly)."
msgstr "Dev Services xref:dev-services[に] 依存しているため、データベースと Elasticsearch スキーマは、tests と dev モードの各アプリケーション起動時に自動的にドロップされて再作成されます（ただし link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`] が明示的に設定されている）。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:601
msgid "If for some reason you cannot use Dev Services, you will have to set the following properties to get similar behavior:"
msgstr "何らかの理由でDev Servicesを利用できない場合は以下のプロパティを設定することで、同様の動作をさせることができます:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:608
#, no-wrap
msgid ""
"%dev.quarkus.hibernate-orm.database.generation=drop-and-create\n"
"%test.quarkus.hibernate-orm.database.generation=drop-and-create\n"
"%dev.quarkus.hibernate-search-orm.schema-management.strategy=drop-and-create\n"
"%test.quarkus.hibernate-search-orm.schema-management.strategy=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:611
msgid "See also link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`]."
msgstr "link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`] を参照してください。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:616
#, fuzzy
msgid "For more information about the Hibernate Search extension configuration please refer to the xref:configuration-reference[Configuration Reference]."
msgstr "Hibernate Searchエクステンションの設定の詳細については、 xref:configuration-reference[Configuration Referenceを] 参照してください。"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:618
#, no-wrap
msgid "Dev Services (Configuration Free Databases)"
msgstr "開発サービス（コンフィグレーション・フリー・データベース）"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:623
msgid "Quarkus supports a feature called Dev Services that allows you to start various containers without any config.  In the case of Elasticsearch this support extends to the default Elasticsearch connection.  What that means practically, is that if you have not configured `quarkus.hibernate-search-orm.elasticsearch.hosts` Quarkus will automatically start an Elasticsearch container when running tests or in xref:dev-mode-differences.adoc[dev mode], and automatically configure the connection."
msgstr "Quarkusは、Dev Servicesという機能をサポートしており、設定なしでさまざまなコンテナを起動することができます。Elasticsearchの場合はこのサポートはデフォルトのElasticsearch接続にも及んでいます。つまり、 `quarkus.hibernate-search-orm.elasticsearch.hosts` を設定していない場合、テスト実行時や xref:dev-mode-differences.adoc[開発モード] 時にQuarkusは自動的にElasticsearchコンテナを起動し、接続を自動的に設定します。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:627
msgid "When running the production version of the application, the Elasticsearch connection needs to be configured as normal, so if you want to include a production database config in your `application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your Elasticsearch settings."
msgstr "アプリケーションの本番環境版を実行する場合、Elasticsearch接続は通常通り設定する必要があります。したがって、 `application.properties` に本番環境版のデータベース設定を含め、Dev Servicesを引き続き使用したい場合は、 `%prod.` プロファイルを使用してElasticsearch設定を定義することをお勧めします。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:629
msgid "Dev Services for Elasticsearch is currently unable to start multiple clusters concurrently, so it only works with the default backend of the default persistence unit: named persistence units or named backends won't be able to take advantage of Dev Services for Elasticsearch."
msgstr "Dev Services for Elasticsearchは現時点では複数のクラスタを同時に起動することができず、デフォルトの永続化ユニットのデフォルトのバックエンドでのみ動作します:名前付き永続化ユニットや名前付きバックエンドはDev Services for Elasticsearchを利用することができません。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:631
msgid "For more information you can read the xref:elasticsearch-dev-services.adoc[Dev Services for Elasticsearch guide]."
msgstr "詳細については、 xref:elasticsearch-dev-services.adoc[Dev Services for Elasticsearch ガイド] をご覧ください。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:632
#, no-wrap
msgid "Creating a frontend"
msgstr "フロントエンドの作成"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:638
msgid "Now let's add a simple web page to interact with our `LibraryResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, overwrite the existing `index.html` file with the content from this {quickstarts-blob-url}/hibernate-search-orm-elasticsearch-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file."
msgstr "それでは、 `LibraryResource` を操作するための簡単なWebページを追加してみましょう。Quarkusは、 `META-INF/resources` ディレクトリの下にある静的リソースを自動的に提供します。 `src/main/resources/META-INF/resources` ディレクトリで、既存の `index.html` ファイルを、この {quickstarts-blob-url}/hibernate-search-orm-elasticsearch-quickstart/src/main/resources/META-INF/resources/index.html[index.html] ファイルの内容で上書きしてください。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:639
#, no-wrap
msgid "Automatic import script"
msgstr "自動インポートスクリプト"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:642
msgid "For the purpose of this demonstration, let's import an initial dataset."
msgstr "このデモの目的のために、初期データセットをインポートしてみましょう。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:644
msgid "Let's create a `src/main/resources/import.sql` file with the following content:"
msgstr "以下の内容の `src/main/resources/import.sql` ファイルを作成してみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:650
#, no-wrap
msgid ""
"INSERT INTO author(id, firstname, lastname) VALUES (1, 'John', 'Irving');\n"
"INSERT INTO author(id, firstname, lastname) VALUES (2, 'Paul', 'Auster');\n"
"ALTER SEQUENCE author_seq RESTART WITH 3;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:665
#, no-wrap
msgid ""
"INSERT INTO book(id, title, author_id) VALUES (1, 'The World According to Garp', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (2, 'The Hotel New Hampshire', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (3, 'The Cider House Rules', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (4, 'A Prayer for Owen Meany', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (5, 'Last Night in Twisted River', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (6, 'In One Person', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (7, 'Avenue of Mysteries', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (8, 'The New York Trilogy', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (9, 'Mr. Vertigo', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (10, 'The Brooklyn Follies', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (11, 'Invisible', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (12, 'Sunset Park', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (13, '4 3 2 1', 2);\n"
"ALTER SEQUENCE book_seq RESTART WITH 14;\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:667
#, no-wrap
msgid "Time to play with your application"
msgstr "アプリケーションで遊ぶ時間"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:670
msgid "You can now interact with your REST service:"
msgstr "これで、REST サービスと対話できるようになりました。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:674
msgid "start your Quarkus application with:"
msgstr "Quarkusアプリケーションを次のように起動します:"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:677
msgid "open a browser to `http://localhost:8080/`"
msgstr "ブラウザで `http://localhost:8080/` を開きます"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:678
msgid "search for authors or book titles (we initialized some data for you)"
msgstr "著者や書名の検索してください（いくつかのデータを入れておきました）"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:679
msgid "create new authors and books and search for them too"
msgstr "新しい著者や書籍を作成し、それらを検索することもできます"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:683
msgid "As you can see, all your updates are automatically synchronized to the Elasticsearch cluster."
msgstr "ご覧のように、すべての更新が自動的にElasticsearchクラスタに同期されます。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:685
#, no-wrap
msgid "OpenSearch compatibility"
msgstr "OpenSearch対応"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:690
msgid "Hibernate Search is compatible with both https://www.elastic.co/elasticsearch[Elasticsearch] and https://www.opensearch.org/[OpenSearch], but it assumes it is working with an Elasticsearch cluster by default."
msgstr "Hibernate Searchは link:https://www.elastic.co/elasticsearch[Elasticsearch]と link:https://www.opensearch.org/[OpenSearch]の両方に対応していますが、デフォルトではElasticsearchクラスタとの連携を前提としています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:694
msgid "To have Hibernate Search work with an OpenSearch cluster instead, link:{hibernate-search-docs-url}#backend-elasticsearch-configuration-version[prefix the configured version with `opensearch:`], as shown below."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:698
#, no-wrap
msgid "quarkus.hibernate-search-orm.elasticsearch.version=opensearch:1.2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:701
msgid "All other configuration options and APIs are exactly the same as with Elasticsearch."
msgstr "その他の設定オプションやAPIはElasticsearchの場合と全く同じです。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:704
msgid "You can find more information about compatible distributions and versions of Elasticsearch in link:{hibernate-search-docs-url}#compatibility[this section of Hibernate Search's reference documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:706
#, no-wrap
msgid "Multiple persistence units"
msgstr "複数の永続性ユニット"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:708
#, no-wrap
msgid "Configuring multiple persistence units"
msgstr "複数の永続化ユニットを設定"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:713
msgid "With the Hibernate ORM extension, xref:hibernate-orm.adoc#multiple-persistence-units[you can set up multiple persistence units], each with its own datasource and configuration."
msgstr "Hibernate ORM エクステンションでは、 xref:hibernate-orm.adoc#multiple-persistence-units[複数の永続化ユニットを設定することができ]、それぞれが独自のデータソースと設定を持つことができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:716
msgid "If you do declare multiple persistence units, you will also configure Hibernate Search separately for each persistence unit."
msgstr "複数の永続化ユニットを宣言する場合は、それぞれの永続化ユニットに対して個別にHibernate Searchを設定することになります。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:720
msgid "The properties at the root of the `quarkus.hibernate-search-orm.` namespace define the default persistence unit.  For instance, the following snippet defines a default datasource and a default persistence unit, and sets the Elasticsearch host for that persistence unit to `es1.mycompany.com:9200`."
msgstr "`quarkus.hibernate-search-orm.` 名前空間のルートにあるプロパティは、デフォルトの永続化ユニットを定義します。たとえば、次のスニペットでは、デフォルトのデータソースとデフォルトの永続化ユニットを定義し、その永続化ユニットのElasticsearchホストを `es1.mycompany.com:9200` に設定しています。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:725
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:728
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.elasticsearch.hosts=es1.mycompany.com:9200\n"
"quarkus.hibernate-search-orm.elasticsearch.version=7\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:731
msgid "Using a map based approach, it is also possible to configure named persistence units:"
msgstr "マップベースのアプローチで名前付きの永続化ユニットを構成することも可能です:"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:736
#, no-wrap
msgid ""
"quarkus.datasource.\"users\".db-kind=h2 <1>\n"
"quarkus.datasource.\"users\".jdbc.url=jdbc:h2:mem:users;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:739
#, no-wrap
msgid ""
"quarkus.datasource.\"inventory\".db-kind=h2 <2>\n"
"quarkus.datasource.\"inventory\".jdbc.url=jdbc:h2:mem:inventory;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:742
#, no-wrap
msgid ""
"quarkus.hibernate-orm.\"users\".datasource=users <3>\n"
"quarkus.hibernate-orm.\"users\".packages=org.acme.model.user\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:745
#, no-wrap
msgid ""
"quarkus.hibernate-orm.\"inventory\".datasource=inventory <4>\n"
"quarkus.hibernate-orm.\"inventory\".packages=org.acme.model.inventory\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:748
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.\"users\".elasticsearch.hosts=es1.mycompany.com:9200 <5>\n"
"quarkus.hibernate-search-orm.\"users\".elasticsearch.version=7\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:751
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.\"inventory\".elasticsearch.hosts=es2.mycompany.com:9200 <6>\n"
"quarkus.hibernate-search-orm.\"inventory\".elasticsearch.version=7\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:753
msgid "Define a datasource named `users`."
msgstr "`users` という名前のデータソースを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:754
msgid "Define a datasource named `inventory`."
msgstr "`inventory` という名前のデータソースを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:755
msgid "Define a persistence unit called `users` pointing to the `users` datasource."
msgstr "`users` データソースを指す `users` という名前の永続化ユニットを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:756
msgid "Define a persistence unit called `inventory` pointing to the `inventory` datasource."
msgstr "`users` という永続化ユニットを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:758
msgid "Configure Hibernate Search for the `users` persistence unit, setting the Elasticsearch host for that persistence unit to `es1.mycompany.com:9200`."
msgstr "`users` 永続化ユニットにHibernate Searchを設定し、その永続化ユニットのElasticsearchホストを `es1.mycompany.com:9200` に設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:760
msgid "Configure Hibernate Search for the `inventory` persistence unit, setting the Elasticsearch host for that persistence unit to `es2.mycompany.com:9200`."
msgstr "`inventory` 永続化ユニットにHibernate Searchを設定し、その永続化ユニットのElasticsearchホストを `es2.mycompany.com:9200` に設定します。"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:762
#, no-wrap
msgid "Attaching model classes to persistence units"
msgstr "モデルクラスを永続化ユニットにアタッチする"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:767
msgid "For each persistence unit, Hibernate Search will only consider indexed entities that are attached to that persistence unit.  Entities are attached to a persistence unit by xref:hibernate-orm.adoc#multiple-persistence-units-attaching-model-classes[configuring the Hibernate ORM extension]."
msgstr "各永続化ユニットについて、Hibernate Searchは、その永続化ユニットにアタッチされているインデックス付きエンティティのみを考慮します。エンティティは、 xref:hibernate-orm.adoc#multiple-persistence-units-attaching-model-classes[Hibernate ORMエクステンションを設定する]ことで、永続化ユニットにアタッチされます。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:769
#, no-wrap
msgid "CDI integration"
msgstr "CDI統合"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:772
msgid "You can inject Hibernate Search's main entry points, `SearchSession` and `SearchMapping`, using CDI:"
msgstr "CDI を使用して、Hibernate Search のメインエントリーポイント `SearchSession` と `SearchMapping` を注入することができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:777
#, no-wrap
msgid ""
"@Inject\n"
"SearchSession searchSession;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:780
msgid "This will inject the `SearchSession` of the default persistence unit."
msgstr "これは、デフォルトの永続化ユニットの `SearchSession` を注入します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:783
msgid "To inject the `SearchSession` of a named persistence unit (`users` in our example), just add a qualifier:"
msgstr "名前付き永続化ユニット(この例では `users` )の `SearchSession` を注入するには、修飾子を追加するだけです。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:789
#, no-wrap
msgid ""
"@Inject\n"
"@PersistenceUnit(\"users\") <1>\n"
"SearchSession searchSession;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:791
msgid "This is the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation."
msgstr "これは `@io.quarkus.hibernate.orm.PersistenceUnit` のアノテーションです。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:793
msgid "You can inject the `SearchMapping` of a named persistence unit using the exact same mechanism:"
msgstr "全く同じメカニズムを使って、名前付き永続化ユニットの `SearchMapping` を注入することができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:799
#, no-wrap
msgid ""
"@Inject\n"
"@PersistenceUnit(\"users\")\n"
"SearchMapping searchMapping;\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:801
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:804
msgid "You can build a native executable with the usual command:"
msgstr "通常のコマンドでネイティブ実行可能ファイルをビルドすることができます:"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:810
msgid "As usual with native executable compilation, this operation consumes a lot of memory."
msgstr "ネイティブ実行可能ファイルのコンパイルと同様に、この操作は大量のメモリーを消費します。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:812
msgid "It might be safer to stop the two containers while you are building the native executable and start them again once you are done."
msgstr "ネイティブ実行可能ファイルをビルドしている間は2つのコンテナーを停止して、ビルドが終わったら再度起動した方が安全かもしれません。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:815
msgid "Running it is as simple as executing `./target/hibernate-search-orm-elasticsearch-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "実行は `./target/hibernate-search-orm-elasticsearch-quickstart-1.0-SNAPSHOT-runner` を実行するだけであり簡単です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:817
msgid "You can then point your browser to `http://localhost:8080/` and use your application."
msgstr "その後、ブラウザで `http://localhost:8080/` を開きアプリケーションを使用します。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:822
msgid "The startup is a bit slower than usual: it is mostly due to us dropping and recreating the database schema and the Elasticsearch mapping every time at startup.  We also inject some data and execute the mass indexer."
msgstr "起動がいつもより少し遅いのは、起動時に毎回データベーススキーマとElasticsearchマッピングを落として再作成しているのが原因です。また、いくつかのデータを注入し、マスインデクサーを実行しています。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:824
msgid "In a real life application, it is obviously something you won't do at startup."
msgstr "実際のアプリケーションでは、明らかに起動時に実行しないことです。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:827
#, no-wrap
msgid "Offline startup"
msgstr "オフライン起動"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:832
msgid "By default, Hibernate Search sends a few requests to the Elasticsearch cluster on startup.  If the Elasticsearch cluster is not necessarily up and running when Hibernate Search starts, this could cause a startup failure."
msgstr "デフォルトではHibernate Search は起動時に Elasticsearch クラスタにいくつかのリクエストを送信します。Hibernate Searchの起動時にElasticsearchクラスタが稼働していない場合は起動失敗の原因となります。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:834
msgid "To address this, you can configure Hibernate Search to not send any request on startup:"
msgstr "これに対処するためには起動時にリクエストを送信しないようにHibernate Searchを設定します:"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:838
msgid "Disable Elasticsearch version checks on startup by setting the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.elasticsearch.version-check.enabled[`quarkus.hibernate-search-orm.elasticsearch.version-check.enabled`] to `false`."
msgstr "起動時にElasticsearchのバージョンチェックを行わないようにするには、設定プロパティ  link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.elasticsearch.version-check.enabled[`quarkus.hibernate-search-orm.elasticsearch.version-check.enabled`] を `false` に設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:841
msgid "Disable schema management on startup by setting the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`] to `none`."
msgstr "設定プロパティ link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`]を `none` に設定すると起動時のスキーマ管理を無効にすることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:844
msgid "Of course, even with this configuration, Hibernate Search still won't be able to index anything or run search queries until the Elasticsearch cluster becomes accessible."
msgstr "もちろん、この構成でも、Elasticsearchクラスタにアクセスできるようになるまでは、Hibernate Searchはインデックスを作成したり、検索クエリを実行したりすることはできません。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:850
msgid "If you disable automatic schema creation by setting `quarkus.hibernate-search-orm.schema-management.strategy` to `none`, you will have to create the schema manually at some point before your application starts persisting/updating entities and executing search requests."
msgstr "`quarkus.hibernate-search-orm.schema-management.strategy` を `none` に設定してスキーマの自動作成を無効にした場合、アプリケーションがエンティティの永続化/更新や検索リクエストの実行を開始する前に、手動でスキーマを作成する必要があります。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:853
msgid "See link:{hibernate-search-docs-url}#schema-management-manager[this section of the reference documentation] for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:856
#, no-wrap
msgid "Coordination through outbox polling"
msgstr "アウトボックスポーリングによる調整"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:861
msgid "Coordination through outbox polling is considered preview."
msgstr "アウトボックスポーリングによる調整は、プレビューとみなされます。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:867
msgid "In _preview_, backward compatibility and presence in the ecosystem is not guaranteed.  Specific improvements might require changing configuration or APIs, or even storage formats, and plans to become _stable_ are under way.  Feedback is welcome on our https://groups.google.com/d/forum/quarkus-dev[mailing list] or as issues in our https://github.com/quarkusio/quarkus/issues[GitHub issue tracker]."
msgstr "_プレビュー版_ では、後方互換性やエコシステムでの存在は保証されていません。具体的な改善のためには、設定やAPI、あるいはストレージのフォーマットを変更する必要があるかもしれませんが、 _安定化_ に向けた計画は進行中です。ご意見・ご感想は、 link:https://groups.google.com/d/forum/quarkus-dev[メーリングリスト]や link:https://github.com/quarkusio/quarkus/issues[GitHubのイシュートラッカー]でお寄せください。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:872
msgid "While it’s technically possible to use Hibernate Search and Elasticsearch in distributed applications, by default they suffer from link:{hibernate-search-docs-url}#architecture-examples-no-coordination-elasticsearch-pros-and-cons[a few limitations]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:874
msgid "These limitations are the result of Hibernate Search not coordinating between threads or application nodes by default."
msgstr "これらはHibernate Searchがデフォルトではスレッドやアプリケーションノード間の調整を行わないことによる制限です。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:879
msgid "In order to get rid of these limitations, you can link:{hibernate-search-docs-url}#architecture-examples-outbox-polling-elasticsearch[use the `outbox-polling` coordination strategy].  This strategy creates an outbox table in the database to push entity change events to, and relies on a background processor to consume these events and perform indexing."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:881
msgid "To enable the `outbox-polling` coordination strategy, an additional extension is required:"
msgstr "`outbox-polling` 調整ストラテジーを有効にするには、追加のエクステンションが必要です:"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:888
msgid "Once the extension is there, you will need to explicitly select the `outbox-polling` strategy by setting link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.coordination.strategy[`quarkus.hibernate-search-orm.coordination.strategy`] to `outbox-polling`."
msgstr "エクステンションをインストールしたら、  link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.coordination.strategy[`quarkus.hibernate-search-orm.coordination.strategy`]を `outbox-polling` に設定し、明示的に `outbox-polling` ストラテジーを選択する必要があります。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:891
msgid "Finally, you will need to make sure that the Hibernate ORM entities added by Hibernate Search (to represent the outbox and agents) have corresponding tables/sequences in your database:"
msgstr "最後に、Hibernate Searchによって追加されたHibernate ORMエンティティ（アウトボックスとエージェントを表す）が、データベース内に対応するテーブル/シーケンスを持っていることを確認する必要があります:"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:895
msgid "If you are just starting with your application and intend to xref:hibernate-orm.adoc#dev-mode[let Hibernate ORM generate your database schema], then no worries: the entities required by Hibernate Search will be included in the generated schema."
msgstr "アプリケーションを始めたばかりで、 xref:hibernate-orm.adoc#dev-mode[Hibernate ORMにデータベーススキーマを生成させる]つもりであれば、心配ありません。Hibernate Searchが必要とするエンティティは、生成されたスキーマに含まれます。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:897
msgid "Otherwise, you must link:{hibernate-search-docs-url}#coordination-outbox-polling-schema[manually alter your schema to add the necessary tables/sequences]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:902
msgid "The database schema Hibernate Search will expect for outbox-polling coordination may be customized through the following configuration properties:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:904
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.agent.catalog[`quarkus.hibernate-search-orm.coordination.entity.mapping.agent.catalog`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:905
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.agent.schema[`quarkus.hibernate-search-orm.coordination.entity.mapping.agent.schema`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:906
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.agent.table[`quarkus.hibernate-search-orm.coordination.entity.mapping.agent.table`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:907
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.agent.uuid-gen-strategy[`quarkus.hibernate-search-orm.coordination.entity.mapping.agent.uuid-gen-strategy`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:908
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.agent.uuid-type[`quarkus.hibernate-search-orm.coordination.entity.mapping.agent.uuid-type`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:909
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.catalog[`quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.catalog`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:910
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.schema[`quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.schema`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:911
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.table[`quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.table`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:912
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.uuid-gen-strategy[`quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.uuid-gen-strategy`]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:913
msgid "link:#quarkus-hibernate-search-orm-coordination-outboxpolling_quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.uuid-type[`quarkus.hibernate-search-orm.coordination.entity.mapping.outbox-event.uuid-type`]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:920
msgid "Once you are done with the above, you're ready to use Hibernate Search with an outbox.  Don't change any code, and just start your application: it will automatically detect when multiple applications are connected to the same database, and coordinate the index updates accordingly."
msgstr "上記の作業が完了したら、アウトボックスを使ったHibernate Searchを使用する準備が整いました。コードを変更せず、アプリケーションを起動するだけで大丈夫です。複数のアプリケーションが同じデータベースに接続されていることを自動的に検出し、それに応じてインデックスの更新が調整されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:925
msgid "Hibernate Search mostly behaves the same when using the `outbox-polling` coordination strategy as when not using it: application code (persisting entities, searching, etc.) should not require any change."
msgstr "Hibernate Searchは、 `outbox-polling` 調整ストラテジーを使用してもしなくても、ほとんど同じ動作をします。アプリケーションコード（エンティティの永続化、検索など）を変更する必要はありません。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:928
msgid "However, there is one key difference: index updates are necessarily asynchronous; they are guaranteed to happen _eventually_, but not immediately."
msgstr "しかし重要な違いが1つあります。インデックスの更新は必然的に非同期で行われ、 _いつかは_ 行われることが保証されますが、すぐには行われません。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:933
msgid "This means in particular that the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.indexing.plan.synchronization.strategy[`quarkus.hibernate-search-orm.indexing.plan.synchronization.strategy`] cannot be set when using the `outbox-polling` coordination strategy: Hibernate Search will always behave as if this property was set to `write-sync` (the default)."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:937
msgid "This behavior is consistent with Elasticsearch's https://www.elastic.co/guide/en/elasticsearch/reference/current/near-real-time.html[near-real-time search] and the recommended way of using Hibernate Search even when coordination is disabled."
msgstr "この動作は、Elasticsearchの link:https://www.elastic.co/guide/en/elasticsearch/reference/current/near-real-time.html[Near real-time search]と一致しており、連携が無効な場合でもHibernate Searchを使用する場合は推奨されています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:941
msgid "For more information about coordination in Hibernate Search, see link:{hibernate-search-docs-url}#coordination[this section of the reference documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:944
#, fuzzy
msgid "For more information about configuration options related to coordination, see xref:configuration-reference-coordination-outbox-polling[Configuration of coordination with outbox polling]."
msgstr "連携に関連する設定オプションの詳細については、「 xref:configuration-reference-coordination-outbox-polling[受信トレイポーリングによる連携の設定] 」を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:946
#, no-wrap
msgid "[[configuration-reference-aws]] AWS request signing"
msgstr "[[configuration-reference-aws]] AWSのリクエストの署名"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:950
msgid "If you need to use https://docs.aws.amazon.com/elasticsearch-service/[Amazon’s managed Elasticsearch service], you will find it requires a proprietary authentication method involving request signing."
msgstr "link:https://docs.aws.amazon.com/elasticsearch-service/[Amazonが管理するElasticsearchサービス]を使用する必要がある場合、リクエストの署名を含む独自の認証方法を必要になります。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:952
msgid "You can enable AWS request signing in Hibernate Search by adding a dedicated extension to your project and configuring it."
msgstr "Hibernate SearchでAWSリクエストの署名を有効にするには、専用のエクステンションをプロジェクトに追加して設定します。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:955
msgid "See link:{hibernate-search-orm-elasticsearch-aws-guide}#aws-configuration-reference[the documentation for the Hibernate Search ORM + Elasticsearch AWS extension] for more information."
msgstr "詳細は link:{hibernate-search-orm-elasticsearch-aws-guide}#aws-configuration-reference[Hibernate Search ORM + Elasticsearch AWS エクステンションのドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:956
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:960
msgid "If you are interested in learning more about Hibernate Search 6, the Hibernate team publishes link:{hibernate-search-docs-url}[an extensive reference documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:961
#, no-wrap
msgid "FAQ"
msgstr "FAQ"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:963
#, no-wrap
msgid "Why Elasticsearch only?"
msgstr "なぜElasticsearchだけなのか?"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:966
msgid "Hibernate Search supports both a Lucene backend and an Elasticsearch backend."
msgstr "Hibernate SearchはLuceneバックエンドとElasticsearchバックエンドの両方をサポートしています。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:969
msgid "In the context of Quarkus and to build microservices, we thought the latter would make more sense.  Thus, we focused our efforts on it."
msgstr "Quarkusとマイクロサービスを構築するという文脈では、後者の方がより理にかなっていると考えました。そこで、私たちは後者に力を入れました。"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:971
msgid "We don't have plans to support the Lucene backend in Quarkus for now."
msgstr "今のところ、QuarkusでLuceneバックエンドをサポートする予定はありません。"

#. type: Title ==
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:973
#, no-wrap
msgid "Hibernate Search Configuration Reference"
msgstr "Hibernate Search 設定リファレンス"

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:976
#, no-wrap
msgid "Main Configuration"
msgstr "主な構成"

#. type: Block title
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:982
#, no-wrap
msgid "About bean references"
msgstr "Bean参照について"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:985
msgid "When referencing beans using a string value in configuration properties, that string is parsed."
msgstr "設定プロパティーで文字列の値を使用してBeanを参照する場合、その文字列は解析されます。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:987
msgid "Here are the most common formats:"
msgstr "最も一般的なフォーマットは以下の通りです。"

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:990
msgid "`bean:` followed by the name of a `@Named` CDI bean.  For example `bean:myBean`."
msgstr "`bean:` の後に `@Named` CDI Beanの名前が続きます。例えば `bean:myBean` ."

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:993
msgid "`class:` followed by the fully-qualified name of a class, to be instantiated through CDI if it's a CDI bean, or through its public, no-argument constructor otherwise.  For example `class:com.mycompany.MyClass`."
msgstr "`class:` の後にクラスの完全修飾名を付けて、CDI Beanの場合は CDI を通して、そうでない場合はパブリックで引数なしのコンストラクタを通してインスタンス化されます。例えば `class:com.mycompany.MyClass` ."

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:997
msgid "An arbitrary string referencing a built-in implementation.  Available values are detailed in the documentation of each configuration property, such as `async`/`read-sync`/`write-sync`/`sync` for xref:quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.indexing.plan.synchronization.strategy[`quarkus.hibernate-search-orm.indexing.plan.synchronization.strategy`]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:1001
msgid "Other formats are also accepted, but are only useful for advanced use cases.  See link:{hibernate-search-docs-url}#configuration-bean-reference-parsing[this section of Hibernate Search's reference documentation] for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:1005
#, no-wrap
msgid "Configuration of coordination with outbox polling"
msgstr "アウトボックスポーリングとの連携の設定"

#. type: Plain text
#: upstream/_versions/main/guides/hibernate-search-orm-elasticsearch.adoc:1008
#, fuzzy
msgid "These configuration properties require an additional extension. See xref:coordination[Coordination through outbox polling]."
msgstr "これらの設定プロパティは、追加のエクステンションを必要とします。 xref:coordination[アウトボックスポーリングによる調整] 」を参照してください。"

#~ msgid "When that's not enough, you can always fall back to link:{hibernate-search-doc-prefix}#search-dsl-predicate-extensions-elasticsearch-from-json[defining a predicate using JSON directly]."
#~ msgstr "それだけでは不十分な場合は、 link:{hibernate-search-doc-prefix}#search-dsl-predicate-extensions-elasticsearch-from-json[JSONを直接使う述語を定義] することもできます。"

#~ msgid "To have Hibernate Search work with an OpenSearch cluster instead, link:{hibernate-search-doc-prefix}#backend-elasticsearch-configuration-version[prefix the configured version with `opensearch:`], as shown below."
#~ msgstr "Hibernate Search を OpenSearch クラスタで動作させるには次のように link:{hibernate-search-doc-prefix}#backend-elasticsearch-configuration-version[指定したバージョン番号の前に `opensearch:`] を付けます。"

#~ msgid "You can find more information about compatible distributions and versions of Elasticsearch in link:{hibernate-search-doc-prefix}#getting-started-compatibility[this section of Hibernate Search's reference documentation]."
#~ msgstr "互換性のあるディストリビューションやElasticsearchのバージョンについては、 link:{hibernate-search-doc-prefix}#getting-started-compatibility[Hibernate Searchのリファレンスドキュメントのこのセクション] に詳細情報が記載されています。"

#~ msgid "See link:{hibernate-search-doc-prefix}#mapper-orm-schema-management-manager[this section of the reference documentation] for more information."
#~ msgstr "詳細については、 link:{hibernate-search-doc-prefix}#mapper-orm-schema-management-manager[Hibernate Searchのリファレンスドキュメントのこのセクション] を参照してください。"

#~ msgid "While it’s technically possible to use Hibernate Search and Elasticsearch in distributed applications, by default they suffer from link:{hibernate-search-doc-prefix}#architecture-examples-no-coordination-elasticsearch-pros-and-cons[a few limitations]."
#~ msgstr "Hibernate SearchやElasticsearchを分散型アプリケーションで使用することは技術的には可能ですが、デフォルトでは link:{hibernate-search-doc-prefix}#architecture-examples-no-coordination-elasticsearch-pros-and-cons[いくつかの制限]があります。"

#~ msgid "In order to get rid of these limitations, you can link:{hibernate-search-doc-prefix}#architecture-examples-outbox-polling-elasticsearch[use the `outbox-polling` coordination strategy].  This strategy creates an outbox table in the database to push entity change events to, and relies on a background processor to consume these events and perform automatic indexing."
#~ msgstr "このような制限をなくすために、 link:{hibernate-search-doc-prefix}#architecture-examples-outbox-polling-elasticsearch[`outbox-polling`] 調整ストラテジーを使用することができます。このストラテジーではデータベースに outbox テーブルを作成してエンティティ変更イベントをプッシュし、バックグラウンドでイベントを処理し、自動インデックス作成を行います。"

#~ msgid "Otherwise, you must link:{hibernate-search-doc-prefix}#coordination-outbox-polling-schema[manually alter your schema to add the necessary tables/sequences]."
#~ msgstr "そうでない場合は、 link:{hibernate-search-doc-prefix}#coordination-outbox-polling-schema[手動でスキーマを変更して、必要なテーブル/シーケンスを追加する]必要があります。"

#~ msgid "This means in particular that the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy[`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`] cannot be set when using the `outbox-polling` coordination strategy: Hibernate Search will always behave as if this property was set to `write-sync` (the default)."
#~ msgstr "これは特に `outbox-polling` 調整ストラテジーを使用している場合に設定プロパティ link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy[`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`] を設定できないことを意味しています。Hibernate Searchは、このプロパティが常に `write-sync` (デフォルトの値)に設定されているかのように動作します。"

#~ msgid "For more information about coordination in Hibernate Search, see link:{hibernate-search-doc-prefix}#coordination[this section of the reference documentation]."
#~ msgstr "Hibernate Search の調整について詳しく知りたい方は、 link:{hibernate-search-doc-prefix}[リファレンスドキュメント] を参照してください。"

#~ msgid "If you are interested in learning more about Hibernate Search 6, the Hibernate team publishes link:{hibernate-search-doc-prefix}[an extensive reference documentation]."
#~ msgstr "Hibernate Search 6について詳しく知りたい方は、Hibernateチームが link:{hibernate-search-doc-prefix}[広範なリファレンスドキュメント] を公開しています。"

#, fuzzy
#~ msgid "An arbitrary string referencing a built-in implementation.  Available values are detailed in the documentation of each configuration property, such as `async`/`read-sync`/`write-sync`/`sync` for xref:quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy[`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`]."
#~ msgstr "組み込みの実装を参照するための任意の文字列です。利用可能な値は、各設定プロパティのドキュメントに詳しく記載されています。例えば、 `async` / `read-sync` / `write-sync` / `sync` の場合は xref:quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy[`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`] ."

#~ msgid "Other formats are also accepted, but are only useful for advanced use cases.  See link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[this section of Hibernate Search's reference documentation] for more information."
#~ msgstr "他の形式も認められていますが、高度なユースケースでのみ有用です。詳細については、 link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[Hibernate Searchのリファレンスドキュメントのこのセクション] を参照してください。"

#~ msgid "You can build a native executable with the usual command `./mvnw package -Pnative`."
#~ msgstr "ネイティブ実行可能ファイルは、いつものコマンド `./mvnw package -Pnative` でビルドできます。"

#~ msgid "Preparing the infrastructure"
#~ msgstr "インフラの準備"

#~ msgid "We need a PostgreSQL instance and an Elasticsearch cluster."
#~ msgstr "PostgreSQLインスタンスとElasticsearchクラスターが必要です。"

#~ msgid "Let's use Docker to start one of each:"
#~ msgstr "Dockerを使ってそれぞれ1つずつ起動してみましょう。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#~ msgid "Docker"
#~ msgstr "Docker"

#~ msgid "For now, let's delete the two generated tests `LibraryResourceTest` and `NativeLibraryResourceIT` present in `src/test/java`.  If you are interested in how you can test this application, just refer to the solution in the quickstarts Git repository: it contains a lot of tests and the required testing infrastructure."
#~ msgstr "まずは、 `src/test/java` にある `LibraryResourceTest` と `NativeLibraryResourceIT` の 2 つの生成されたテストを削除してみましょう。このアプリケーションのテスト方法に興味があれば、 quickstarts の Git リポジトリにあるソリューションを参照してください。"

#~ msgid "start Quarkus with `./mvnw compile quarkus:dev`"
#~ msgstr "`./mvnw compile quarkus:dev` でQuarkusを起動する"

#~ msgid "For example:"
#~ msgstr "例えば、以下のようになります。"
