# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-06-11 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/azure-functions.adoc:6
#, no-wrap
msgid "Azure Functions"
msgstr "Azure Functions"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:15
#, fuzzy
msgid "The `quarkus-azure-functions` extension is a simple integration point between Azure Functions and Quarkus.  It interacts with Azure Functions runtime to bootstrap quarkus and turns any Azure Functions class you write into a CDI/Arc bean."
msgstr "`quarkus-azure-functions` エクステンションは、Azure FunctionsとQuarkusの間のシンプルな統合ポイントです。Azure Functionsのランタイムと連動してQuarkusを起動し、書いたAzure FunctionsクラスをCDI/Arc Beanに変換します。"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:19
#, fuzzy
msgid "This allows you to inject any service or component initialized by quarkus directly into your function classes.  You can also change the lifecycle of your function class from request scoped (the default)  to application scope too if you want your function class to be a singleton."
msgstr "これにより、Quarkusで初期化されたサービスやコンポーネントを、関数クラスに直接注入することができます。また、関数クラスをシングルトンにしたい場合は、関数クラスのライフサイクルをリクエストスコープ（デフォルト）からアプリケーションスコープに変更することも可能です。"

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:30
#, no-wrap
msgid ""
"import com.microsoft.azure.functions.ExecutionContext;\n"
"import com.microsoft.azure.functions.HttpMethod;\n"
"import com.microsoft.azure.functions.HttpRequestMessage;\n"
"import com.microsoft.azure.functions.HttpResponseMessage;\n"
"import com.microsoft.azure.functions.HttpStatus;\n"
"import com.microsoft.azure.functions.annotation.AuthorizationLevel;\n"
"import com.microsoft.azure.functions.annotation.FunctionName;\n"
"import com.microsoft.azure.functions.annotation.HttpTrigger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:33
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:37
#, no-wrap
msgid ""
"public class Function {\n"
"    @Inject\n"
"    GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:46
#, no-wrap
msgid ""
"    @FunctionName(\"HttpExample\")\n"
"    public HttpResponseMessage run(\n"
"            @HttpTrigger(\n"
"                name = \"req\",\n"
"                methods = {HttpMethod.GET, HttpMethod.POST},\n"
"                authLevel = AuthorizationLevel.ANONYMOUS)\n"
"                HttpRequestMessage<Optional<String>> request,\n"
"            final ExecutionContext context) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:50
#, no-wrap
msgid ""
"        // Parse query parameter\n"
"        final String query = request.getQueryParameters().get(\"name\");\n"
"        final String name = request.getBody().orElse(query);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:58
#, no-wrap
msgid ""
"        if (name == null) {\n"
"            return request.createResponseBuilder(HttpStatus.BAD_REQUEST).body(\"Please pass a name on the query string or in the request body\").build();\n"
"        } else {\n"
"            return request.createResponseBuilder(HttpStatus.OK).body(service.greeting(name)).build();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:62
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:66
msgid "https://azure.microsoft.com[An Azure Account].  Free accounts work."
msgstr "link:https://azure.microsoft.com[Azureのアカウント] 無料アカウントでも大丈夫です。"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:67
#, fuzzy
msgid "https://learn.microsoft.com/en-us/azure/azure-functions/functions-run-local#v2[Azure Functions Core Tools] version 4.x"
msgstr "Azure Fun link:https://learn.microsoft.com/en-us/azure/azure-functions/functions-run-local#v2[ctionsコアツール] バージョン4.x"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:68
msgid "https://docs.microsoft.com/en-us/cli/azure/install-azure-cli[Azure CLI Installed]"
msgstr "link:https://docs.microsoft.com/en-us/cli/azure/install-azure-cli[Azure CLIがインストールされていること]"

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:69
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:74
#, fuzzy
msgid "This guide walks you through running a maven project that can deploy an Http Trigger Azure Function class.  This function class injects a CDI bean service that generates a greeting message that is passed back to the client."
msgstr "このガイドでは、Http Trigger Azure Function クラスをデプロイできる maven プロジェクトの実行について説明します。この関数クラスは、クライアントに引き渡される挨拶メッセージを生成するCDI Beanサービスをインジェクトします。"

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:75
#, no-wrap
msgid "Creating the Maven/Gradle Project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:78
msgid "You can generate the example code from Quarkus's online application generator at https://code.quarkus.io/d?e=azure-functions&cn=code.quarkus.io[this link]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:80
#, fuzzy
msgid "You can also generate this example with the Quarkus CLI:"
msgstr "この例は、Quarkus CLIで生成することもできます："

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:84
#, no-wrap
msgid "quarkus create app --extension=quarkus-azure-functions\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:87
msgid "Add the `--gradle` switch if you want to generate a gradle project."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:88
#, no-wrap
msgid "Examining the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:95
msgid "If you open the `pom.xml` or `build.gradle` build file of the generated project you'll see that the project is similar to any other Quarkus project.  The `quarkus-azure-functions` extension is the integration point between Quarkus and Azure Functions.  It registers callback with the Azure Functions runtime to bootstrap Quarkus and to set up Quarkus/Arc as the function factory for your function classes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:99
msgid "The current implementation of the `quarkus-azure-functions` extension no longer requires the `azure-functions-maven-plugin` or gradle equivalent.  Local development and Azure Functions packaging and deployment is now all done by Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:102
msgid "Build configuration is now all within `application.properties`.  The only required configuration switch is `quarkus.azure-functions.app-name`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:103
#, no-wrap
msgid "Azure Deployment Descriptors"
msgstr "Azureデプロイメントディスクリプタ"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:108
msgid "The Azure Functions `host.json` deployment descriptor is automatically generated, but if you need to override it, declare it in the root directory of the project and rerun the build when you are ready."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:109
#, fuzzy, no-wrap
msgid "Quarkus dev mode"
msgstr "Quarkusの開発モード。"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:112
#, fuzzy
msgid "Quarkus dev mode does not work currently with Azure Functions."
msgstr "Quarkusの開発モードは、現在Azure Functionsでは動作しません。"

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:113
#, no-wrap
msgid "Run locally in Azure Functions local environment"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:117
msgid "If you want to try your app with a local Azure Functions environment, you can use this command"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:121
#, no-wrap
msgid "./mvnw quarkus:run\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:124
#: upstream/_versions/main/guides/azure-functions.adoc:190
msgid "or"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:128
#, no-wrap
msgid "./gradlew --info --no-daemon quarkusRun\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:132
msgid "Gradle is a bit quirky with process management, so you need the `--no-daemon` switch or control-c will not destroy the process cleanly and you'll have open ports."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:135
#, fuzzy
msgid "Note that you must have the https://learn.microsoft.com/en-us/azure/azure-functions/functions-run-local#v2[Azure Functions Core Tools] installed for this to work!"
msgstr "なお、これを実行するためには、Azure Fun link:https://learn.microsoft.com/en-us/azure/azure-functions/functions-run-local#v2[ctions Core Toolsが] インストールされている必要があります！"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:137
msgid "The URL to access the example would be:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:139
msgid "https://localhost:8081/HttpExample?name=Bill"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:141
#, no-wrap
msgid "Quarkus Integration Testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:145
msgid "You can implement integration tests using `@QuarkusIntegrationTest` functionality.  When these integration tests run, the local Azure Functions environment will be spun up for the duration of integration testing."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:148
msgid "For maven:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:151
#, no-wrap
msgid "./mvnw -DskipITs=false verify\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:155
msgid "Make sure any integration tests you execute with maven use the `*IT.java` file pattern so that regular builds do not execute the test."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:157
msgid "For Gradle:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:160
#, no-wrap
msgid "./gradlew --info quarkusIntTest\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:164
msgid "Make sure any integration tests you execute with Gradle are located within `src/integrationTest/java`.  Integration tests that exist in `src/test` will run with normal build and fail."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:165
#, no-wrap
msgid "Login to Azure"
msgstr "Azureへのログイン"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:168
msgid "If you don't log in to Azure you won't be able to deploy."
msgstr "Azureにログインしないとデプロイできません。"

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:172
#, no-wrap
msgid "az login\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/azure-functions.adoc:174
#, fuzzy, no-wrap
msgid "Deploy to Azure"
msgstr "Azureにデプロイする"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:181
msgid "The `quarkus-azure-functions` extension handles all the work to deploy to Azure.  By default, Quarkus will use the Azure CLI in the background to authenticate and deploy to Azure.  If you have multiple subscriptions associated with your account, you must set the `quarkus.azure-functions.subscription-id` property in your `application.properties` file to the subscription you want to use.  For other authentication mechanisms and deployment options see our config properties https://quarkus.io/guides/all-config[here]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:183
msgid "To run the deploy, after you build your project execute:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:187
#, no-wrap
msgid "./mvnw quarkus:deploy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:194
#, no-wrap
msgid "./gradlew --info deploy\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:198
msgid "If deployment is a success, Quarkus will output the endpoint URL of the example function to the console For Gradle, you must use the `--info` switch to see this output!"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:200
msgid "i.e."
msgstr "例えば"

#. type: delimited block -
#: upstream/_versions/main/guides/azure-functions.adoc:204
#, no-wrap
msgid ""
"[INFO] HTTP Trigger Urls:\n"
"[INFO] \t HttpExample : https://{appName}.azurewebsites.net/api/httpexample\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:207
msgid "The URL to access the service would be"
msgstr "サービスにアクセスするためのURLは次のようになります。"

#. type: Plain text
#: upstream/_versions/main/guides/azure-functions.adoc:209
#, fuzzy
msgid "https://{appName}.azurewebsites.net/api/HttpExample"
msgstr "https://{appName}.azurewebsites.net/api/HttpExample"

#, fuzzy
#~ msgid "Templates for Azure Functions deployment descriptors (`host.json`, `function.json`) are within base directory of the project.  Edit them as you need to.  Rerun the build when you are ready."
#~ msgstr "Azure Functionsのデプロイメントディスクリプタのテンプレート（ `host.json` , `function.json` ）は、プロジェクトのベースディレクトリ内にあります。必要であれば編集してください。準備ができたら、ビルドを再実行します。"

#~ msgid "Creating the Maven Deployment Project"
#~ msgstr "デプロイ用のMavenプロジェクトを作成する"

#, fuzzy
#~ msgid "You can download the example code from Quarkus's application generator at https://code.quarkus.io/d?e=azure-functions&cn=code.quarkus.io[this link]."
#~ msgstr "Quarkusのアプリケーションジェネレーターのサンプルコードは、 link:https://code.quarkus.io/d?e=azure-functions&cn=code.quarkus.io[このリンクから] ダウンロードできます。"

#, fuzzy
#~ msgid "Run locally in Azure Functions simulated environment"
#~ msgstr "Azure Functionsのシミュレート環境で、ローカルに実行する。"

#, fuzzy
#~ msgid "If you want to try your app with a simulated local Azure Functions environment, you can use this command"
#~ msgstr "ローカルの Azure Functions 環境をシミュレートしてアプリを試したい場合は、次のコマンドを使用できます。"

#, fuzzy
#~ msgid "The `pom.xml` you generated in the previous step pulls in the `azure-functions-maven-plugin`.  Running maven package generates config files and a staging directory required by the `azure-functions-maven-plugin`.  Here's how to execute it."
#~ msgstr "前のステップで生成した `pom.xml` から `azure-functions-maven-plugin` を引き込みます。 Maven パッケージを実行すると、 `azure-functions-maven-plugin` で必要な設定ファイルとステージングディレクトリが生成されます。 以下、その実行方法です。"

#, fuzzy
#~ msgid "If deployment is a success, the azure maven plugin will tell you the base URL to access your function."
#~ msgstr "デプロイが成功すると、azure maven プラグインが関数にアクセスするためのベース URL を教えてくれます。"

#~ msgid "Extension maven dependencies"
#~ msgstr "エクステンションのmaven依存関係"

#, fuzzy
#~ msgid "You must include the `quarkus-azure-functions` extension as this is the integration point between Quarkus and Azure Functions.  It registers callback with the Azure Functions runtime to bootstrap Quarkus and to set up Quarkus/Arc as the function factory for your function classes."
#~ msgstr "QuarkusとAzure Functionsの統合ポイントになるため、 `quarkus-azure-functions` エクステンションを含める必要があります。コールバックをAzure Functionsランタイムに登録し、Quarkusをブートストラップし、Quarkus/Arcを関数クラスの関数ファクトリーとしてセットアップすることができます。"
