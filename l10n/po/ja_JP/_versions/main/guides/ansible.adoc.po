# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-30 08:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/ansible.adoc:1
#, fuzzy, no-wrap
msgid "Automate Quarkus deployment with Ansible"
msgstr "AnsibleでQuarkusのデプロイを自動化する"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:8
#, fuzzy
msgid "Let’s see how to build and deploy a Quarkus app using https://docs.ansible.com/ansible/latest/index.html[Ansible]. We’ll see how we can automate the entire process, from the code checkout to the application compilation using Maven and then its deployment and start of the service, as a https://systemd.io/[systemd service], on the target system using Ansible and its collection for Quarkus."
msgstr "link:https://docs.ansible.com/ansible/latest/index.html[Ansibleを使って] Quarkusアプリをビルドしてデプロイする方法を見てみましょう。コードのチェックアウトから、Mavenを使用してアプリケーションをコンパイルし、AnsibleとQuarkus用のコレクションを使用して、ターゲットシステム上に link:https://systemd.io/[systemd] サービスとしてデプロイしてサービスを開始するまでのプロセス全体を自動化する方法を見ていきます。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:10
#, fuzzy
msgid "The first part, the application code checkout, compilation and packaging on the Ansible (where Ansible runs). We’ll use the getting-started sample application provided in its link:{quickstarts-tree-url}/getting-started[Quarkus QuickStarts directory] as a base for this tutorial. We’ll also leverage the https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansible, an extension for Ansible that alleviates the boilerplate required and to quickly build and deploy a Quarkus using Ansible."
msgstr "最初のパートは、Ansible（Ansibleが実行される場所）でのアプリケーションコードのチェックアウト、コンパイル、パッケージングです。このチュートリアルのベースとして、 link:{quickstarts-tree-url}/getting-started[Quarkus QuickStartsディレクトリで] 提供されているget-startedサンプルアプリケーションを使用します。また、Ansibleの拡張機能であるAnsible用 link:https://galaxy.ansible.com/middleware_automation/quarkus[Quarkusコレクションを] 活用して、Ansibleを使用してQuarkusを迅速にビルドおよびデプロイします。"

#. type: Title ==
#: upstream/_versions/main/guides/ansible.adoc:11
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:19
#, fuzzy
msgid "You'll need to https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[install Ansible] on your workstation. Once this is done, you can install this extension for Ansible dedicated to Quarkus with the following command:"
msgstr "ワークステーションに link:https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[Ansibleをインストール] する必要があります。これが完了したら、次のコマンドでQuarkus専用のAnsible用エクステンションをインストールできます："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:23
#, no-wrap
msgid "$ ansible-galaxy collection install middleware_automation.quarkus\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:26
#, fuzzy
msgid "The Ansible collection we just installed only supports RHEL, Fedora, and other Linux distribution using RPMs. Ansible defines these as \"RedHat family\". Using the content on other platforms (Windows, Debian, Ubuntu, ...), while not impossible, will require a few adjustments."
msgstr "今インストールしたAnsibleコレクションは、RHEL、Fedora、その他のRPMを使ったLinuxディストリビューションのみをサポートしている。Ansibleはこれらを「RedHatファミリー」と定義している。他のプラットフォーム（Windows、Debian、Ubuntu、...）でコンテンツを使用することは、不可能ではありませんが、いくつかの調整が必要です。"

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:27
#, fuzzy, no-wrap
msgid "Inventory file"
msgstr "インベントリファイル"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:30
#, fuzzy
msgid "If you are not familiar with Ansible, please note that the inventory must be provided for the command above to run properly. This is a simple text file providing the information Ansible requires on the target system it manages. Please refer to the Ansible documentation for more information about https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible inventory]."
msgstr "Ansibleに慣れていない場合は、上記のコマンドを正しく実行するためにインベントリを提供する必要があることに注意してください。これは、Ansibleが管理するターゲット・システムに必要な情報を提供する単純なテキスト・ファイルです。 link:https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible] インベントリの詳細については、Ansibleドキュメントを参照してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:34
#, no-wrap
msgid "[all]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:37
#, no-wrap
msgid ""
"10.0.0.1\n"
"10.0.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:40
#, fuzzy
msgid "To follow the tutorial, you may want to use only one machine (localhost) and skip the ssh authentication setup. This can be easily achieved by using the following inventory file:"
msgstr "チュートリアルに従うには、1台のマシン（localhost）だけを使用し、ssh認証のセットアップをスキップしたいかもしれません。これは、以下のインベントリファイルを使用することで簡単に実現できます："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:45
#, no-wrap
msgid ""
"[all]\n"
"localhost ansible_connection=local\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:47
#, fuzzy, no-wrap
msgid "Root access on target system"
msgstr "ターゲットシステムのルートアクセス"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:50
#, fuzzy
msgid "A few tasks performed by the Ansible collection for Quarkus will require administrative privileges on the target (create a group and user account, install packages). If Ansible does run as root, you'll need to add the following options to the `ansible-playbook` command line:"
msgstr "Quarkus用のAnsibleコレクションで実行されるいくつかのタスクは、ターゲットの管理者権限を必要とします（グループとユーザーアカウントの作成、パッケージのインストール）。Ansibleをroot権限で実行する場合は、 `ansible-playbook` のコマンドラインに以下のオプションを追加する必要があります："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:54
#, no-wrap
msgid "$ ansible-playbook -i inventory  --ask-become-pass  ...\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/ansible.adoc:56
#, no-wrap
msgid "Tutorial"
msgstr "チュートリアル"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:59
#, fuzzy
msgid "With the Ansible collection installed on the controller, you can already directly use a playbook provided with it to build and deploy your Quarkus application:"
msgstr "コントローラにAnsibleコレクションがインストールされていれば、Quarkusアプリケーションをビルドしてデプロイするために、Ansibleに付属のplaybookを直接使用することができます："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:68
#, no-wrap
msgid ""
"ansible-playbook -i inventory \\\n"
"  middleware_automation.quarkus.playbook \\\n"
"  -e app_name=getting-started \\\n"
"  -e quarkus_app_repo_url='https://github.com/quarkusio/quarkus-quickstarts.git' \\\n"
"  -e quarkus_app_source_folder='getting-started' \\\n"
"  -e quarkus_path_to_folder_to_deploy=/opt/quarkus_deploy\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:71
#, fuzzy
msgid "The four parameters provided to the playbook are pretty self-explanatory. The first one, `app_name`, is the name of the application, in our case, it's just `getting-started`. The second one, `quarkus_app_repo_url`, is the URL to the Git repository to checkout. The third one is optional, `quarkus_app_source_folder` specifies, if needed, which subfolder from the repo the source code is located. Finally, the fourth one indicates where to install the application on the target."
msgstr "playbookに提供される4つのパラメータは、かなり自明である。最初のもの、 `app_name` はアプリケーションの名前で、私たちの場合は `getting-started` とします。2つ目の `quarkus_app_repo_url` は、チェックアウトするGitリポジトリのURLです。3番目はオプションで、 `quarkus_app_source_folder` は、必要であれば、ソースコードがリポジトリのどのサブフォルダーにあるかを指定します。最後に4つ目は、ターゲットにアプリケーションをインストールする場所を指定します。"

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:72
#, fuzzy, no-wrap
msgid "Playbook run"
msgstr "プレーブックラン"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:75
#, fuzzy
msgid "Once the command above has successfully run, you should have an output similar to the one below:"
msgstr "上記のコマンドが正常に実行されると、以下のような出力が得られるはずだ："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:79
#, no-wrap
msgid "…\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:81
#, no-wrap
msgid "PLAY [Build and deploy a Quarkus app using Ansible] ****************************\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:83
#, no-wrap
msgid "TASK [Build the Quarkus from https://github.com/quarkusio/quarkus-quickstarts.git.] ***\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:86
#: upstream/_versions/main/guides/ansible.adoc:112
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure required parameters are provided.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:89
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Define path to mvnw script.] *****\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:92
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure that builder host localhost has appropriate JDK installed: java-17-openjdk] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:95
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Delete previous workdir (if requested).] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:98
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure app workdir exists: /tmp/workdir] ***\n"
"changed: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:101
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Checkout the application source code.] ***\n"
"changed: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:104
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Build the App using Maven] *******\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:107
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Display build application log] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:109
#, no-wrap
msgid "TASK [Deploy webapp on target.] ************************************************\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:115
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure required OpenJDK is installed on target.] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:118
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus system group exists on target system] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:121
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus user exists on target system.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:124
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure deployement directory exits: /opt/quarkus_deploy.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:127
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Set Quarkus app source dir (if not defined).] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:130
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Deploy application from  to target system] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:133
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Deploy Systemd configuration for Quarkus app] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:136
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Perform daemon-reload to ensure the changes are picked up] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:139
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure Quarkus app service is running.] ***\n"
"ok: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:142
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Ensure firewalld is available.] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:145
#, no-wrap
msgid ""
"TASK [middleware_automation.quarkus.quarkus : Configure firewall for 8080 ports] ***\n"
"skipping: [localhost]\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:149
#, no-wrap
msgid ""
"PLAY RECAP *********************************************************************\n"
"localhost              \t: ok=15   changed=2\tunreachable=0\tfailed=0\tskipped=5\trescued=0\tignored=0\n"
"…\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:152
#, fuzzy
msgid "The Ansible collection for Quarkus does all the `heavy lifting` here. First, it checks out the code from Github and builds the application from its sources. It also ensures the system used for this step does have the required OpenJDK installed. By default, the application is built on the localhost (the Ansible controller), but it can be performed on a remote system if needed. Once the application is built, the collection will take care of the deployment."
msgstr "Quarkus用のAnsibleコレクションは、 `heavy lifting` 。まず、Githubからコードをチェックアウトし、そのソースからアプリケーションをビルドします。また、このステップで使用するシステムに必要なOpenJDKがインストールされていることを確認します。デフォルトでは、アプリケーションはlocalhost（Ansibleコントローラー）上でビルドされますが、必要に応じてリモートシステム上で実行することもできます。アプリケーションがビルドされると、コレクションがデプロイを行います。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:154
#, fuzzy
msgid "Here again, it checks that the appropriate OpenJDK is available on the target system. Then we ensure that the required user and group exist on the target. This is recommended mostly to be able to run the Quarkus app with a regular user, rather than with the root account."
msgstr "ここでも、適切なOpenJDKがターゲット・システム上で利用可能かどうかをチェックする。次に、必要なユーザーとグループがターゲットに存在することを確認します。これは主に、Quarkusアプリをrootアカウントではなく、一般ユーザーで実行できるようにするために推奨されます。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:156
#, fuzzy
msgid "With those requirements in place, the jar can be deployed on the target, along with the required configuration for the app integration into systemd as a service. Any change to the systemd configuration requires reloading its daemon, which the collection ensures will happen whenever it is needed. With all of that in place, the only thing that remains is to start the service itself, which Ansible will also take care of."
msgstr "これらの要件が整えば、アプリをサービスとしてsystemdに統合するために必要な設定とともに、jarをターゲットにデプロイすることができる。systemdのコンフィギュレーションを変更するには、デーモンをリロードする必要があります。このコレクションは、必要なときにいつでも実行されることを保証します。すべての設定が整ったので、あとはサービス自体を起動するだけです。"

#. type: delimited block =
#: upstream/_versions/main/guides/ansible.adoc:160
#, fuzzy
msgid "By default, the Ansible collection for Quarkus will install and use the OpenJDK 17 available in the Yum repositories of the target host (or the controller). If you want to use a different version of OpenJDK, define the following variable:"
msgstr "デフォルトでは、Quarkus用のAnsibleコレクションは、ターゲットホスト（またはコントローラ）のYumリポジトリで利用可能なOpenJDK 17をインストールして使用します。異なるバージョンのOpenJDKを使用したい場合は、以下の変数を定義します："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:165
#, no-wrap
msgid ""
"$ ansible-playbook -i inventory ...\n"
"    -e quarkus_java_package_version: java-11-openjdk\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:168
#, fuzzy, no-wrap
msgid "Validate that deployment was successful"
msgstr "デプロイが成功したことを検証する"

#. type: delimited block =
#: upstream/_versions/main/guides/ansible.adoc:171
#, fuzzy
msgid "For the purpose of this tutorial, you may want to check manually, that the playbook did indeed deployed the app properly. Here is the few ways to do so."
msgstr "このチュートリアルの目的のために、プレイブックが本当にアプリを正しくデプロイしたかどうか、手動でチェックしたいと思うかもしれない。そのためのいくつかの方法を紹介しよう。"

#. type: delimited block =
#: upstream/_versions/main/guides/ansible.adoc:173
#, fuzzy
msgid "First, because the collection integrated, we can check the status of the service on one of the targets:"
msgstr "まず、コレクションが統合されたので、ターゲットの1つでサービスのステータスをチェックできる："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:185
#, no-wrap
msgid ""
"# systemctl status getting-started.service\n"
"● getting-started.service - A Quarkus service named getting-started\n"
"   Loaded: loaded (/usr/lib/systemd/system/getting-started.service; enabled; vendor preset: disabled)\n"
"   Active: active (running) since Thu 2023-04-13 12:48:18 UTC; 2min 40s ago\n"
" Main PID: 853 (java)\n"
"\tTasks: 43 (limit: 1638)\n"
"   Memory: 73.3M\n"
"   CGroup: /system.slice/getting-started.service\n"
"       \t└─853 /usr/bin/java -jar /opt/quarkus_deploy/quarkus-run.jar\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:194
#, no-wrap
msgid ""
"Apr 13 12:48:18 bd71f39642c8 systemd[1]: Started A Quarkus service named getting-started.\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: __  ____  __  _____   ___  __ ____  ______\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]:  --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]:  -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: --\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,284 INFO  [io.quarkus] (main) getting-started 1.0.0-SNAPSHOT on JVM (powered by Quarkus 2.16.6.Final) started in 0.607s. Listening on: http://0.0.0.0:8080\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,309 INFO  [io.quarkus] (main) Profile prod activated.\n"
"Apr 13 12:48:19 bd71f39642c8 java[853]: 2023-04-13 12:48:19,310 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, smallrye-context-propagation, vertx]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:197
#, fuzzy
msgid "Manually, you can also test if the app is reachable:"
msgstr "手動で、アプリが到達可能かどうかをテストすることもできる："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:207
#, no-wrap
msgid ""
"# curl -I http://localhost:8080/\n"
"HTTP/1.1 200 OK\n"
"accept-ranges: bytes\n"
"content-length: 3918\n"
"cache-control: public, immutable, max-age=86400\n"
"last-modified: Thu, 2 Mar 2023 11:03:18 GMT\n"
"date: Thu, 2 Mar 2023 11:03:18 GMT\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:210
#, fuzzy
msgid "We'll see how to automate those validation in the next and last part of this tutorial."
msgstr "このチュートリアルの最後となる次のパートでは、これらの検証を自動化する方法を見ていこう。"

#. type: Title ===
#: upstream/_versions/main/guides/ansible.adoc:211
#, fuzzy, no-wrap
msgid "Writing a playbook"
msgstr "プレイブックを書く"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:214
#, fuzzy
msgid "Of course, you’ll most likely need to build on this, so you may want to write up your own playbook, rather than just using the one provided by the collection. Below is an example of such playbook:"
msgstr "もちろん、これをベースにする必要がある場合がほとんどだろうから、コレクションが提供するプレイブックをそのまま使うのではなく、独自のプレイブックを作成した方がいいかもしれない。以下はそのようなプレイブックの例である："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:225
#, no-wrap
msgid ""
"- name: \"Build and deploy a Quarkus app using Ansible\"\n"
"  hosts: all\n"
"  gather_facts: true\n"
"  vars:\n"
"    quarkus_app_repo_url: 'https://github.com/quarkusio/quarkus-quickstarts.git'\n"
"    app_name: getting-started\n"
"    quarkus_app_source_folder: getting-started\n"
"    quarkus_path_to_folder_to_deploy: /opt/quarkus_deploy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:236
#, no-wrap
msgid ""
"  pre_tasks:\n"
"    - name: \"Build the Quarkus from {{ quarkus_app_repo_url }}.\"\n"
"      ansible.builtin.include_role:\n"
"        name: quarkus\n"
"        tasks_from: build.yml\n"
"  tasks:\n"
"    - name: \"Deploy Quarkus app on target.\"\n"
"      ansible.builtin.include_role:\n"
"        name: quarkus\n"
"        tasks_from: deploy.yml\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:239
#, fuzzy
msgid "To run this playbook, you use again the ansible-playbook command, but providing now the path to the playbook:"
msgstr "このプレイブックを実行するには、再びansible-playbookコマンドを使用するが、今度はプレイブックへのパスを指定する："

#. type: delimited block -
#: upstream/_versions/main/guides/ansible.adoc:243
#, no-wrap
msgid "$ ansible-playbook -i inventory playbook.yml\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:246
#, fuzzy
msgid "You also can automate the validation part we mentioned in the previous section. You can use the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] module and populate the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[service facts] to ensure the systemd service of the Quarkus app is running, along with https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uri] to check that the Quarkus app is accessible."
msgstr "また、前のセクションで説明した検証部分を自動化することもできます。 link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] モジュールを使用し、Quarkusアプリのsystemdサービスが実行されていることを確認するために link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[サービスファクトを] 入力し、Quarkusアプリがアクセス可能であることを確認するために link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uriを] 入力します。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:249
#, fuzzy, no-wrap
msgid ""
"```\n"
" post_tasks:\n"
msgstr "`post_tasks:`"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:251
#, fuzzy, no-wrap
msgid ""
"name: Populate service facts\n"
"ansible.builtin.service_facts:\n"
msgstr "name: サービスファクトを入力する ansible.builtin.service_facts："

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:254
#, fuzzy
msgid "name: \"Check that systemd service {{ app_name }} is running.\" ansible.builtin.assert:"
msgstr "name: \"systemd サービス {{ app_name }} が実行されていることを確認する。\" ansible.builtin.assert："

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:255
#, fuzzy, no-wrap
msgid "that:\n"
msgstr "あれだ："

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:256
#, fuzzy, no-wrap
msgid "ansible_facts.services is defined\n"
msgstr "ansible_facts.services が定義されている。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:257
#, fuzzy, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"] is defined\n"
msgstr "ansible_facts.services[\"{{ app_name }}.service\"] が定義されています。"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:258
#, fuzzy, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"]['state'] == 'running'\n"
msgstr "ansible_facts.services[\"{{ app_name }}.service\"]['state'] == 'running'"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:259
#, fuzzy, no-wrap
msgid "ansible_facts.services[\"{{ app_name }}.service\"]['status'] == 'enabled'\n"
msgstr "ansible_facts.services[\"{{ app_name }}.service\"]['status'] == 'enabled'"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:260
#, fuzzy, no-wrap
msgid "quiet: true\n"
msgstr "quiet: true"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:263
#, fuzzy
msgid "name: \"Check that Quarkus app is accessible\" ansible.builtin.uri:"
msgstr "name: \"Quarkus アプリがアクセス可能かチェックする\" ansible.builtin.uri："

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:265
#, fuzzy, no-wrap
msgid ""
"url: 'http://localhost:8080/'\n"
"```\n"
msgstr "url：'http://localhost:8080/'"

#. type: Plain text
#: upstream/_versions/main/guides/ansible.adoc:266
#, fuzzy
msgid "And that’s all, folks!"
msgstr "以上だ！"

#, fuzzy
#~ msgid "The first part, the application code checkout, compilation and packaging on the Ansible (where Ansible runs). We’ll use the getting-started sample application provided in its {quickstarts-tree-url}/getting-started[Quarkus QuickStarts directory] as a base for this tutorial. We’ll also leverage the https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansible, an extension for Ansible that alleviates the boilerplate required and to quickly build and deploy a Quarkus using Ansible."
#~ msgstr "最初のパートは、Ansible（Ansibleが実行される場所）でのアプリケーションコードのチェックアウト、コンパイル、パッケージングです。このチュートリアルのベースとして、{quickstarts-tree-url}/getting-started[Quarkus QuickStartsディレクトリ]で提供されているgetting-startedサンプルアプリケーションを使用します。また、Ansibleのエクステンションである link:https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansibleを活用し、Ansibleを使用してQuarkusを迅速にビルドおよびデプロイします。"
