# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-10-15 08:09+0000\n"
"PO-Revision-Date: 2023-04-26 22:33+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/spring-boot-properties.adoc:6
#, no-wrap
msgid "Accessing application properties with Spring Boot properties API"
msgstr "Spring BootプロパティAPIでアプリケーションのプロパティにアクセスする"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:15
msgid "If you prefer to use Spring Boot `@ConfigurationProperties` annotated class to access application properties instead of xref:config-mappings.adoc#config-mappings[`@ConfigMapping`] or a MicroProfile `@ConfigProperty` approach, you can do that with this extension."
msgstr "<<config-mappings.adoc#config-mappings,`@ConfigMapping`>> や MicroProfile `@ConfigProperty` のアプローチではなく、Spring Boot `@ConfigurationProperties` アノテーションクラスを使用してアプリケーションのプロパティーにアクセスしたい場合は、このエクステンションを使用することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:18
msgid "Spring Boot `@ConfigurationProperties` has a few limitations. For instance, `Map` injection is not supported. Consider using xref:config-mappings.adoc[Mapping configuration to objects]."
msgstr "Spring Boot `@ConfigurationProperties` にはいくつかの制限があります。例えば、 `Map` インジェクションはサポートされていません。 link:config-mappings.html[オブジェクトへのマッピング設定] の使用を検討してください。"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:23
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:27
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:29
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:31
#, fuzzy
msgid "The solution is located in the `spring-boot-properties-quickstart` link:{quickstarts-tree-url}/spring-boot-properties-quickstart[directory]."
msgstr "ソリューションは `spring-boot-properties-quickstart` link:{quickstarts-tree-url}/spring-boot-properties-quickstart[ディレクトリに] あります。"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:32
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:35
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:41
msgid "This command generates a project and imports the `spring-boot-properties` extension."
msgstr "このコマンドは、プロジェクトを生成し、 `spring-boot-properties` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:44
msgid "If you already have your Quarkus project configured, you can add the `spring-boot-properties` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリで以下のコマンドを実行することで、 `spring-boot-properties` エクステンションをプロジェクトに追加することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:49
msgid "This will add the following to your build file:"
msgstr "これにより、`pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_versions/main/guides/spring-boot-properties.adoc:51
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:57
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-boot-properties</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/spring-boot-properties.adoc:60
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:63
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-spring-boot-properties\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:65
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:69
msgid "First, create a `GreetingResource` Jakarta REST resource in the `src/main/java/org/acme/spring/boot/properties/GreetingResource.java` file that looks like:"
msgstr "まず、`src/main/java/org/acme/spring/boot/properties/GreetingResource.java` ファイルに以下のような `GreetingResource` Jakarta RESTリソースを作成します。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:73
#: upstream/_versions/main/guides/spring-boot-properties.adoc:97
#: upstream/_versions/main/guides/spring-boot-properties.adoc:122
#: upstream/_versions/main/guides/spring-boot-properties.adoc:178
#: upstream/_versions/main/guides/spring-boot-properties.adoc:195
#: upstream/_versions/main/guides/spring-boot-properties.adoc:219
#: upstream/_versions/main/guides/spring-boot-properties.adoc:253
#: upstream/_versions/main/guides/spring-boot-properties.adoc:274
#: upstream/_versions/main/guides/spring-boot-properties.adoc:298
#: upstream/_versions/main/guides/spring-boot-properties.adoc:330
#: upstream/_versions/main/guides/spring-boot-properties.adoc:368
#, no-wrap
msgid "package org.acme.spring.boot.properties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:78
#, no-wrap
msgid ""
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:81
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:88
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:90
#, no-wrap
msgid "Injecting properties"
msgstr "プロパティーの注入"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:93
msgid "Create a new class `src/main/java/org/acme/spring/boot/properties/GreetingProperties.java` with a message field:"
msgstr "次のようにメッセージフィールドを持つ新しいクラス `src/main/java/org/acme/spring/boot/properties/GreetingProperties.java` を作成します:"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:99
#: upstream/_versions/main/guides/spring-boot-properties.adoc:180
#: upstream/_versions/main/guides/spring-boot-properties.adoc:257
#: upstream/_versions/main/guides/spring-boot-properties.adoc:334
#, no-wrap
msgid "import org.springframework.boot.context.properties.ConfigurationProperties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:102
#: upstream/_versions/main/guides/spring-boot-properties.adoc:183
#: upstream/_versions/main/guides/spring-boot-properties.adoc:260
#: upstream/_versions/main/guides/spring-boot-properties.adoc:337
#, no-wrap
msgid ""
"@ConfigurationProperties(\"greeting\")\n"
"public class GreetingProperties {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:105
#, no-wrap
msgid ""
"    public String text;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:110
msgid "Here `text` field is public, but it could also be a private field with getter and setter or just a public getter in an interface.  Because `text` does not have a default value it is considered required and unless it is defined in a configuration file (`application.properties` by default)  your application will fail to start.  Define this property in your `src/main/resources/application.properties` file:"
msgstr "ここでは `text` フィールドはパブリックですが、ゲッターとセッターを持つプライベートフィールドや、インターフェイス内の単なるパブリックゲッターにすることもできます。 `text` にはデフォルト値がないため、必須とみなされ、設定ファイル（デフォルトでは `application.properties` ）に定義されていないと、アプリケーションの起動に失敗します。 `src/main/resources/application.properties` ファイルでこのプロパティを定義してください:"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:115
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.text = hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:118
msgid "Now modify `GreetingResource` to start using the `GreetingProperties`:"
msgstr "そして、 `GreetingProperties` を使い始めるよう `GreetingResource` を修正します。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:128
#: upstream/_versions/main/guides/spring-boot-properties.adoc:201
#: upstream/_versions/main/guides/spring-boot-properties.adoc:280
#: upstream/_versions/main/guides/spring-boot-properties.adoc:374
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
"import jakarta.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:131
#: upstream/_versions/main/guides/spring-boot-properties.adoc:204
#: upstream/_versions/main/guides/spring-boot-properties.adoc:283
#: upstream/_versions/main/guides/spring-boot-properties.adoc:377
#, no-wrap
msgid ""
"@Path(\"/greeting\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:134
#: upstream/_versions/main/guides/spring-boot-properties.adoc:207
#: upstream/_versions/main/guides/spring-boot-properties.adoc:286
#: upstream/_versions/main/guides/spring-boot-properties.adoc:380
#, no-wrap
msgid ""
"    @Inject\n"
"    GreetingProperties properties;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:141
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:144
msgid "Run the tests to verify that application still functions correctly."
msgstr "テストを実行して、アプリケーションがまだ正常に機能していることを確認します。"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:145
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:148
msgid "Run the application in dev mode with:"
msgstr "次のようにdevモードでアプリケーションを実行します:"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:152
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "ブラウザで http://localhost:8080/greeting を開きます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:154
msgid "Changing the configuration file is immediately reflected."
msgstr "設定ファイルの変更はすぐに反映されます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:156
msgid "As usual, the application can be packaged using:"
msgstr "いつものように、アプリケーションは以下の方法でパッケージ化されます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:160
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "そして、 `java -jar target/quarkus-app/quarkus-run.jar` を使って実行します。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:162
msgid "You can also generate the native executable with:"
msgstr "次のようにネイティブ実行可能ファイルを生成することもできます。"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:165
#, no-wrap
msgid "Default values"
msgstr "デフォルト値"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:168
msgid "Now let's add a suffix for a greeting for which we'll set a default value."
msgstr "では、デフォルト値を設定する挨拶にサフィックスを追加してみましょう。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:172
msgid "Properties with default values can be configured in a configuration file just like any other property.  However, the default value will be used if the property was not defined in a configuration file."
msgstr "デフォルト値を持つプロパティは、他のプロパティと同様に設定ファイルで設定できます。ただし、そのプロパティが設定ファイルで定義されていない場合は、デフォルト値が使用されます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:174
msgid "Go ahead and add the new field to the `GreetingProperties` class:"
msgstr "`GreetingProperties` クラスに新しいフィールドを追加してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:185
#: upstream/_versions/main/guides/spring-boot-properties.adoc:262
#, no-wrap
msgid "    public String text;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:188
#, no-wrap
msgid ""
"    public String suffix = \"!\";\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:191
#: upstream/_versions/main/guides/spring-boot-properties.adoc:270
msgid "And update the `GreetingResource` and its test `GreetingResourceTest`:"
msgstr "そして、 `GreetingResource` とそのテスト `GreetingResourceTest` を更新します。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:214
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text + properties.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:222
#: upstream/_versions/main/guides/spring-boot-properties.adoc:301
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:225
#: upstream/_versions/main/guides/spring-boot-properties.adoc:304
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:228
#: upstream/_versions/main/guides/spring-boot-properties.adoc:307
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:238
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello!\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:241
#: upstream/_versions/main/guides/spring-boot-properties.adoc:320
msgid "Run the tests to verify the change."
msgstr "テストを実行して変更を確認します。"

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:242
#, no-wrap
msgid "Optional values"
msgstr "オプション値"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:247
msgid "Properties with optional values are the middle-ground between standard and properties with default values.  While a missing property in a configuration file will not cause your application to fail, it will nevertheless not have a value set.  We use `java.util.Optional` type to define such properties."
msgstr "オプション値を持つプロパティは、標準的なプロパティとデフォルト値を持つプロパティの中間的な存在です。設定ファイルにプロパティがないからといって、アプリケーションが失敗することはありませんが、それにもかかわらず、値が設定されていないことがあります。このようなプロパティの定義には `java.util.Optional` タイプを使用します。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:249
msgid "Add an optional `name` property to the `GreetingProperties`:"
msgstr "`GreetingProperties` クラスに新しいオプションの `name` プロパティを追加してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:255
#: upstream/_versions/main/guides/spring-boot-properties.adoc:332
#, no-wrap
msgid "import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:264
#, no-wrap
msgid "    public String suffix = \"!\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:267
#, no-wrap
msgid ""
"    public Optional<String> name;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:293
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.text + \", \" + properties.name.orElse(\"You\") + properties.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:317
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello, You!\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:321
#, no-wrap
msgid "Grouping properties"
msgstr "プロパティーのグループ化"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:326
msgid "Now we have three properties in our `GreetingProperties` class.  While `name` could be considered more of a runtime property (and maybe could be passed as an HTTP query parameter in the future), `text` and `suffix` are used to define a message template.  Let's group these two properties in a separate inner class:"
msgstr "これで、 `GreetingProperties` クラスに3つのプロパティができました。 `name` はどちらかというと実行時のプロパティと考えられますが（将来的には HTTP クエリパラメータとして渡すことができるかもしれません）、 `text` と `suffix` はメッセージテンプレートの定義に使用されます。この2つのプロパティを別のインナークラスにまとめてみましょう:"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:339
#, no-wrap
msgid "    public Message message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:341
#, no-wrap
msgid "    public Optional<String> name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:343
#, no-wrap
msgid "    public static class Message {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:345
#, no-wrap
msgid "        public String text;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:349
#, no-wrap
msgid ""
"        public String suffix = \"!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:352
msgid "Here `Message` properties class is defined as an inner class, but it could also be a top level class."
msgstr "ここでは `Message` プロパティクラスはインナークラスとして定義されていますが、トップレベルのクラスとすることも出来ます。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:355
msgid "Having such property groups brings more structure to your configuration.  This is especially useful when then number of properties grows."
msgstr "このようなプロパティグループによって、設定にさらなる構造をもたらします。これは、プロパティの数が増えてきたときに特に有効です。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:358
msgid "Because of the additional class, our property names have changed.  Let's update the properties file and the `GreetingResource` class."
msgstr "クラスが追加されたため、プロパティ名が変更されています。プロパティファイルと `GreetingResource` クラスを更新してみましょう。"

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:363
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.message.text = hello\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/spring-boot-properties.adoc:387
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return properties.message.text + \", \" + properties.name.orElse(\"You\") + properties.message.suffix;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/spring-boot-properties.adoc:389
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:392
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:394
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:395
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:396
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:397
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:398
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr "xref:spring-security.adoc[Quarkus - Spring Security のエクステンション]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:399
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:400
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"

#. type: Plain text
#: upstream/_versions/main/guides/spring-boot-properties.adoc:400
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"

#~ msgid "The solution is located in the `spring-boot-properties-quickstart` {quickstarts-tree-url}/spring-boot-properties-quickstart[directory]."
#~ msgstr "このソリューションは `spring-boot-properties-quickstart` {quickstarts-tree-url}/spring-boot-properties-quickstart[directory]にあります。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "an IDE"
#~ msgstr "IDE"

#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 11+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#~ msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `target/quarkus-app/quarkus-run.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
#~ msgstr "いつものように、 `./mvnw clean package` を使ってアプリケーションをパッケージ化し、 `target/quarkus-app/quarkus-run.jar` ファイルを使って実行することができます。また、 `./mvnw clean package -Pnative` でネイティブ実行可能ファイルを生成することも出来ます。"
