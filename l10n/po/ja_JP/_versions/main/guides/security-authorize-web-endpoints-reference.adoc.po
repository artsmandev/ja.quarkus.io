# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-22 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:6
#, no-wrap
msgid "Authorization of web endpoints"
msgstr "ウェブエンドポイントの認可"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:16
#, fuzzy
msgid "Quarkus has an integrated pluggable web security layer.  If security is enabled, all HTTP requests have a permission check performed to verify that they are allowed to continue.  Therefore, you cannot use `@PermitAll` to open a path if the path is blocked by the `quarkus.http.auth.` configuration."
msgstr "Quarkusには、プラグイン可能なウェブセキュリティレイヤーが統合されています。セキュリティが有効になっている場合、すべてのHTTPリクエストでパーミッションチェックが実行され、リクエストの続行が許可されていることが確認されます。そのため、 `quarkus.http.auth.` の設定によってパスがブロックされている場合、 `@PermitAll` を使用してパスを開くことはできません。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:20
#, fuzzy
msgid "If you use Jakarta RESTful Web Services, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr "Jakarta RESTful Web Services を使用する場合、アノテーションは個々のエンドポイントでこれらのプロパティをオーバーライドできるため、HTTP パスレベルのマッチングではなく、 `quarkus.security.jaxrs.deny-unannotated-endpoints` または `quarkus.security.jaxrs.default-roles-allowed` を使用してデフォルトのセキュリティ要件を設定することを検討してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:25
msgid "Authorization is based on user roles that the security provider provides.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr "認可は、セキュリティ・プロバイダーが提供するユーザー・ロールに基づきます。これらのロールをカスタマイズするには、 `SecurityIdentityAugmentor` を作成することができます。 link:security-customization.html#security-identity-customization[セキュリティ・アイデンティティのカスタマイズ] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:27
#, no-wrap
msgid "Authorization using configuration"
msgstr "設定を利用した認可"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:30
#, fuzzy
msgid "Permissions are defined in the Quarkus configuration using permission sets, each specifying a policy for access control."
msgstr "Quarkusのコンフィギュレーションでは、アクセス制御のポリシーを指定するパーミッションセットを使用して、パーミッションが定義されます。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:31
#, no-wrap
msgid "{project-name} policies summary"
msgstr "{project-name} ポリシーサマリー"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:34
#, no-wrap
msgid "Built-in policy"
msgstr "組込ポリシー"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:35
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:247
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:35
#, no-wrap
msgid "`deny`"
msgstr "`deny`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:36
#, no-wrap
msgid "This policy denies all users."
msgstr "このポリシーは、すべてのユーザーを拒否します。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:36
#, no-wrap
msgid "`permit`"
msgstr "`permit`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:37
#, no-wrap
msgid "This policy permits all users."
msgstr "このポリシーは、すべてのユーザーを許可します。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:37
#, no-wrap
msgid "`authenticated`"
msgstr "`authenticated`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:38
#, no-wrap
msgid "This policy permits only authenticated users."
msgstr "このポリシーは、認証されたユーザーのみを許可します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:41
#, fuzzy
msgid "You can define role-based policies that allow users with specific roles to access the resources."
msgstr "特定のロールを持つユーザーにリソースへのアクセスを許可するロールベースのポリシーを定義できます。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:42
#, no-wrap
msgid "Example of a role-based policy"
msgstr "ロールベースポリシーの例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:46
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                  <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:48
#, fuzzy
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles."
msgstr "これは、 `user` および `admin` ロールを持つユーザーを許可するロールベースのポリシーを定義します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:50
#, fuzzy
msgid "You can reference a custom policy by configuring the built-in permission sets that are defined in the `application.properties` file, as outlined in the following configuration example:"
msgstr "`application.properties` ファイルで定義されているビルトイン権限セットを設定することで、以下の設定例で説明するように、カスタムポリシーを参照できます："

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:51
#, no-wrap
msgid "Example of policy configuration"
msgstr "ポリシーの設定例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:57
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                            <1>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:60
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                             <2>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:63
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*      <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:66
#, fuzzy
msgid "This permission references the default built-in `permit` policy to allow `GET` methods to `/public`.  In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr "このパーミッションは、デフォルトの組み込みの `permit` ポリシーを参照し、 `/public` に対する `GET` メソッドを許可する。 この場合、このリクエストはいずれにせよ許可されているので、デモンストレーションされた設定はこの例に影響しない。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:68
#, fuzzy
msgid "This permission references the built-in `deny` policy for `/forbidden`.  It is an exact path match because it does not end with `*`."
msgstr "このパーミッションは、 `/forbidden` に対する組み込みの `deny` ポリシーを参照する。これは、 `*` で終わっていないので、完全なパス一致です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:70
#, fuzzy
msgid "This permission set references the previously defined policy.  `roles1` is an example name; you can call the permission sets whatever you want."
msgstr "このパーミッション・セットは、以前に定義されたポリシーを参照する。 `roles1` は名前の例である。パーミッション・セットを好きなように呼ぶことができる。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:72
#, no-wrap
msgid "Matching on paths and methods"
msgstr "パスとメソッドのマッチング"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:77
#, fuzzy
msgid "Permission sets can also specify paths and methods as a comma-separated list.  If a path ends with the `*` wildcard, the query it generates matches all sub-paths.  Otherwise, it queries for an exact match and only matches that specific path:"
msgstr "パーミッションセットは、パスとメソッドをカンマ区切りのリストとして指定することもできます。パスが `*` ワイルドカードで終わっている場合、生成されるクエリはすべてのサブパスにマッチします。そうでない場合は、完全一致を問い合わせ、特定のパスのみにマッチします："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:83
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:85
#, no-wrap
msgid "Matching a path but not a method"
msgstr "パスはマッチするがメソッドはマッチしない場合"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:88
#, fuzzy
msgid "The request is rejected if it matches one or more permission sets based on the path but none of the required methods."
msgstr "リクエストは、パスに基づく1つ以上のパーミッションセットにマッチする が、必要なメソッドのどれにもマッチしない場合、拒否される。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:92
#, fuzzy
msgid "Given the preceding permission set, `GET /public/foo` would match both the path and method and therefore be allowed.  In contrast, `POST /public/foo` would match the path but not the method.  It would therefore be rejected."
msgstr "前述のパーミッション・セットを考えると、 `GET /public/foo` はパスとメソッドの両方にマッチするので許可される。対照的に、 `POST /public/foo` はパスにはマッチするが、メソッドにはマッチしない。したがって、拒否される。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:94
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:98
msgid "Matching is always done on the \"longest path wins\" basis.  Less specific permission sets are not considered if a more specific one has been matched:"
msgstr "マッチングは常にロンゲストパス に基づいて行われ、より具体的なパーミッションセットがマッチした場合、それより具体的でないパーミッションセットは考慮されません。:"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:104
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:138
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:107
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:111
#, fuzzy
msgid "Given the preceding permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths.  However, because the longer path matches the path of the `deny1` permission set, `deny1` is chosen, and the request is rejected."
msgstr "先行するパーミッションセットを考えると、 `GET /public/forbidden-folder/foo` は両方のパーミッションセットのパスにマッチするだろう。しかしながら、より長いパスは `deny1` パーミッション セットのパスにマッチするので、 `deny1` が選択され、リクエストは拒否される。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:116
#, fuzzy
msgid "Subpath permissions always win against the root path permissions, as explained in the preceding `deny1` versus `permit1` permission example.  Here is another example showing subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr "サブパス・パーミッションは常にルートパス・パーミッションに勝ちます。前述の `deny1` 対 `permit1` パーミッションの例で説明したとおりです。認可を必要とするルートパス・パーミッションで、パブリック・リソースへのアクセスを許可するサブパス・パーミッションの例を示します："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:122
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:125
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:128
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "複数のパスのマッチング:一番具体的なパスが勝ちます"

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:132
#, fuzzy
msgid "When a path is registered with multiple permission sets, the permission sets explicitly specifying an HTTP method that matches the request take precedence.  In this instance, the permission sets without methods only come into effect if the request method does not match permission sets with the method specification."
msgstr "パスが複数のパーミッション・セットで登録されている場合、リクエストにマッチするHTTPメソッドを明示的に指定しているパーミッション・セットが優先される。この例では、リクエストメソッドがメソッド指定のある許可セットにマッチしない場合にのみ、メソッドなしの許可セットが有効になります。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:141
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:146
#, fuzzy
msgid "Given the preceding permission set, `GET /public/foo` would match the paths of both permission sets, but because it fits the explicit method of the `permit1` permission set, `permit1` is chosen, and the request is accepted."
msgstr "直前のパーミッションセットを考えると、 `GET /public/foo` は両方のパーミッションセットのパスにマッチするだろうが、 `permit1` のパーミッションセットの明示的なメソッドに合うので、 `permit1` が選ばれ、リクエストは受け入れられる。"

#. type: delimited block =
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:148
#, fuzzy
msgid "Conversely, `PUT /public/foo` would not match the method permissions of `permit1`, so `deny1` would be activated and reject the request."
msgstr "逆に、 `PUT /public/foo` は、 `permit1` のメソッドパーミッションにマッチしないので、 `deny1` はアクティベートされ、リクエストを拒否する。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:150
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:156
#, fuzzy
msgid "Sometimes, the previously described rules allow multiple permission sets to win simultaneously.  In that case, for the request to proceed, all the permissions must allow access.  For this to happen, both must either have specified the method or have no method.  Method-specific matches take precedence."
msgstr "先に述べた規則が、複数の許可セットを同時に勝ち取ることを許可する 場合がある。その場合、リクエストを進めるためには、すべてのパーミッションがアクセ スを許可しなければならない。そのためには、両方がメソッドを指定しているか、メソッドを持たないか のいずれかでなければならない。メソッド固有のマッチが優先される。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:161
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:164
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:167
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:170
#, fuzzy
msgid "Given the preceding permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr "先のパーミッション・セットを考えると、 `GET /api/foo` は両方のパーミッション・セットのパスにマッチし、 `user` と `admin` の両方のロールが必要になる。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:171
#, no-wrap
msgid "Configuration properties to deny access"
msgstr "アクセスを拒否するための設定プロパティ"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:174
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr "以下の設定により、ロールベースアクセスコントロール（RBAC）の拒否動作が変更されます:"

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:175
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:180
#, fuzzy
msgid "If set to true, access is denied for all Jakarta REST endpoints by default.  If a Jakarta REST endpoint has no security annotations, it defaults to the `@DenyAll` behavior.  This helps you to avoid accidentally exposing an endpoint that is supposed to be secured.  Defaults to `false`."
msgstr "true に設定すると、デフォルトですべての Jakarta REST エンドポイントのアクセスが拒否されます。Jakarta REST エンドポイントにセキュリティのアノテーションがない場合、デフォルトで `@DenyAll` の動作になります。これにより、セキュリティで保護されているはずのエンドポイントを誤って公開してしまうことを防ぐことができます。デフォルトは `false` です。"

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:181
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:185
#, fuzzy
msgid "Defines the default role requirements for unannotated endpoints.  The `**` role is a special role that means any authenticated user.  This cannot be combined with `deny-unannotated-endpoints` because `deny` takes effect instead."
msgstr "注釈のないエンドポイントに対するデフォルトのロール要件を定義します。 `**` ロールは認証されたユーザを意味する特別なロールです。代わりに `deny` が有効になるため、 `deny-unannotated-endpoints` と組み合わせることはできません。"

#. type: Labeled list
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:186
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr "`quarkus.security.deny-unannotated-members=true|false`"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:189
#, fuzzy
msgid "If set to true, the access is denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.  Defaults to `false`."
msgstr "true に設定すると、セキュリティ・アノテーションを持たないが、セキュリティ・アノテーションを持つメソッドを含むクラスで定義されているすべての CDI メソッドおよび Jakarta REST エンドポイントへのアクセスが拒否されます。デフォルトは `false` です。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:190
#, no-wrap
msgid "Disabling permissions"
msgstr "パーミッションの無効化"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:193
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr "パーミッションは、宣言された各パーミッションの `enabled` プロパティを使って、ビルド時に次のように無効にすることができます："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:200
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:204
msgid "Permissions can be reenabled at runtime with a system property or environment variable, such as: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "パーミッションは、システムプロパティや環境変数を使って実行時に再有効化することができます（例えば、以下のように）: `-Dquarkus.http.auth.permission.permit1.enabled=true` ."

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:205
#, no-wrap
msgid "Permission paths and HTTP root path"
msgstr "パーミッションパスとHTTPルートパス"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:208
#, fuzzy
msgid "The `quarkus.http.root-path` configuration property changes the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr "`quarkus.http.root-path` 設定プロパティは、 xref:http-reference.adoc#context-path[httpエンドポイントコンテキストパスを] 変更します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:210
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "デフォルトでは、設定されたパーミッションのパスの前に自動的に `quarkus.http.root-path` 、フォワードスラッシュを使用しない場合などです。 :"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:214
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:217
msgid "This configuration is equivalent to the following:"
msgstr "この構成は以下に相当します。 :"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:221
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:226
#, fuzzy
msgid "A leading slash changes how the configured permission path is interpreted.  The configured URL is used as-is, and paths are not adjusted if the value of `quarkus.http.root-path` changes.  For example:"
msgstr "先頭のスラッシュは、設定されたパーミッション・パスの解釈方法を変更する。設定されたURLはそのまま使われ、 `quarkus.http.root-path` の値が変わってもパスは調整されません。例えば"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:230
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:233
#, fuzzy
msgid "This configuration only impacts resources served from the fixed or static URL, `/public`, which might not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "この設定は、固定または静的URLである `/public` から提供されるリソースにのみ影響します。 `quarkus.http.root-path` が `/` 以外に設定されている場合、アプリケーションのリソースと一致しない可能性があります。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:235
#, fuzzy
msgid "For more information, see link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus]."
msgstr "詳細については、Quarkusの link:https://quarkus.io/blog/path-resolution-in-quarkus/[パス] 解決を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:238
#, no-wrap
msgid "Authorization using annotations"
msgstr "アノテーションを使った認可"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:242
#, fuzzy
msgid "{project-name} includes built-in security to allow for link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control (RBAC)] based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr "{project-name}は、 link:https://en.wikipedia.org/wiki/Role-based_access_control[REST] エンドポイントとCDI Beanの共通のセキュリティアノテーション `@RolesAllowed` , `@DenyAll` , `@PermitAll` に基づく link:https://en.wikipedia.org/wiki/Role-based_access_control[役割ベースのアクセス制御 (RBAC)] を可能にする組み込みのセキュリティを含みます。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:243
#, no-wrap
msgid "{project-name} annotation types summary"
msgstr "{project-name} アノテーション型の概要"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:246
#, no-wrap
msgid "Annotation type"
msgstr "アノテーション型"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:247
#, no-wrap
msgid "@DenyAll"
msgstr "@DenyAll"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:248
#, no-wrap
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr "どのセキュリティロールも指定されたメソッドを呼び出すことを許可されていないことを指定します。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:248
#, no-wrap
msgid "@PermitAll"
msgstr "@PermitAll"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:251
#, fuzzy, no-wrap
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in, even without authentication."
msgstr "すべてのセキュリティ・ロールが指定されたメソッドを呼び出すことを許可することを指定します。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:251
#, no-wrap
msgid "@RolesAllowed"
msgstr "@RolesAllowed"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:254
#, no-wrap
msgid ""
"Specifies the list of security roles permitted to access methods in an application.\n"
"\n"
"As an equivalent to `@RolesAllowed(\"**\")`, {project-name} also provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource."
msgstr ""
"アプリケーション内のメソッドへのアクセスが許可されているセキュリティロールのリストを指定します。\n"
"\n"
"`@RolesAllowed(\"**\")` に相当するものとして、{project-name} は、認証されたユーザーがリソースにアクセスできるようにする `io.quarkus.security.Authenticated` アノテーションも提供します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:257
#, fuzzy
msgid "The following xref:subject-example[SubjectExposingResource example] demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
msgstr "以下の xref:subject-example[SubjectExposingResource の例では] 、jakarta REST と Common Security の両方のアノテーションを使用してエンドポイントを記述し、そのエンドポイントを保護しています。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:259
#, fuzzy, no-wrap
msgid "SubjectExposingResource example"
msgstr "SubjectExposingResourceの例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:263
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:343
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:271
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:351
#, no-wrap
msgid ""
"import jakarta.annotation.security.DenyAll;\n"
"import jakarta.annotation.security.PermitAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.core.Context;\n"
"import jakarta.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:274
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:354
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:283
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:292
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:302
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:304
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "`/subject/secured` エンドポイントは、 `@RolesAllowed(\"Tester\")` アノテーションを使用して\"Tester\"というロールを付与された認証済みユーザーが必要です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:306
#, fuzzy
msgid "The endpoint obtains the user principal from the Jakarta REST `SecurityContext`.  This returns `non-null` for a secured endpoint."
msgstr "このエンドポイントは、Jakarta REST `SecurityContext` からユーザ・プリンシパルを取得する。これは、セキュリティで保護されたエンドポイントに対しては `non-null` を返す。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:307
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` エンドポイントでは、 `@PermitAll` アノテーションを指定することで、認証されていないアクセスが可能になります。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:308
#, fuzzy
msgid "The call to obtain the user principal returns `null` if the caller is unauthenticated and `non-null` if the caller is authenticated."
msgstr "ユーザー・プリンシパルを取得するための呼び出しは、呼び出し元が未認証の場合は `null` を返し、呼び出し元が認証済みの場合は `non-null` を返す。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:310
#, fuzzy
msgid "The `/subject/denied` endpoint declares the `@DenyAll` annotation, disallowing all direct access to it as a REST method, regardless of the user calling it.  The method is still invokable internally by other methods in this class."
msgstr "`/subject/denied` エンドポイントは、 `@DenyAll` アノテーションを宣言し、呼び出すユーザーに関係なく、REST メソッドとしての直接アクセスをすべて禁止します。このメソッドは、このクラスの他のメソッドから内部的に呼び出すことは可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:312
#, fuzzy
msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr "IO スレッドで標準的なセキュリティアノテーションを使用する予定の場合は、プロアクテ ィブ xref:security-proactive-authentication.adoc[認証の] 情報を確認してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:315
#, fuzzy
msgid "The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[property expressions] including default values and nested property expressions.  Configuration properties used with the annotation are resolved at runtime."
msgstr "`@RolesAllowed` アノテーション値は、デフォルト値やネストされたプロパティ式などの xref:config-reference.adoc#property-expressions[プロパティ式に] 対応しています。アノテーションとともに使用される設定プロパティは、実行時に解決されます。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:316
#, no-wrap
msgid "Annotation value examples"
msgstr "アノテーション値の例"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:319
#, no-wrap
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:320
#, no-wrap
msgid "Value explanation"
msgstr "値の説明"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:320
#, no-wrap
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr "`@RolesAllowed(\"${admin-role}\")`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:321
#, fuzzy, no-wrap
msgid "The endpoint allows users with the role denoted by the value of the `admin-role` property."
msgstr "エンドポイントは、 `admin-role` プロパティの値で示されるロールを持つユーザーを許可します。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:321
#, no-wrap
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:323
#, no-wrap
msgid "An example showing that the value can contain multiple variables."
msgstr "値が複数の変数を含むことができることを示す例。"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:323
#, no-wrap
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr "`@RolesAllowed(\"${customer:User}\")`"

#. type: Table
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:326
#, fuzzy, no-wrap
msgid ""
"A default value demonstration.\n"
"The required role is denoted by the value of the `customer` property.\n"
"However, if that property is not specified, a role named `User` is required as a default."
msgstr "デフォルト値のデモ。必須ロールは `customer` プロパティの値で示されます。しかし、このプロパティが指定されていない場合、 `User` という名前のロールがデフォルトとして要求されます。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:328
#, no-wrap
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr "`@RolesAllowed` アノテーションにおけるプロパティ式の使用例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:338
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
"all-roles=Administrator,Software,Tester,User\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:361
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:368
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:375
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:382
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:389
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"list\")\n"
"    @RolesAllowed(\"${all-roles}\") <5>\n"
"    public String getSubjectList(@Context SecurityContext sec) {\n"
"        return getUsername(sec);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:396
#, no-wrap
msgid ""
"    private String getUsername(SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:398
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr "`@RolesAllowed` アノテーション値は、 `Administrator` の値に設定されています。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:400
#, fuzzy
msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role of \"Software-Tester\".  It is possible to use multiple expressions in the role definition."
msgstr "この `/subject/software-tester` エンドポイントには、\"Software-Tester\" というロールが付与された認証ユーザーが必要です。役割の定義で複数の式を使用することが可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:401
#, fuzzy
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation because we did not set the configuration property `customer`."
msgstr "この `/subject/user` エンドポイントは、設定プロパティ `customer` を設定していないため、 `@RolesAllowed(\"${customer:User}\")` アノテーションを使用して「User」ロールを付与された認証済みユーザーを必要とします。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:403
#, fuzzy
msgid "In production, this `/subject/secured` endpoint requires an authenticated user with the `User` role.  In development mode, it allows any authenticated user."
msgstr "本番環境では、この `/subject/secured` エンドポイントには `User` ロールを持つ認証済みユーザが必要です。開発モードでは、任意の認証済みユーザを許可します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:404
#, fuzzy
msgid "Property expression `all-roles` will be treated as a collection type `List`, therefore the endpoint will be accessible for roles `Administrator`, `Software`, `Tester` and `User`."
msgstr "プロパティ式 `all-roles` はコレクション型 `List` として扱われるため、エンドポイントはロール `Administrator` 、 `Software` 、 `Tester` 、 `User` に対してアクセス可能となる。"

#. type: Title ===
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:406
#, fuzzy, no-wrap
msgid "Permission annotation"
msgstr "パーミッションアノテーション"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:410
#, fuzzy
msgid "Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation, which authorizes any authenticated user with the given permission to access the resource.  This annotation is an extension of the common security annotations and checks the permissions granted to a `SecurityIdentity` instance."
msgstr "Quarkusはまた、 `io.quarkus.security.PermissionsAllowed` のアノテーションも提供しています。このアノテーションは、認証されたユーザーがリソースにアクセスすることを、指定されたパーミッションで認可します。このアノテーションは一般的なセキュリティアノテーションのエクステンションであり、 `SecurityIdentity` インスタンスに付与されたパーミッションをチェックします。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:411
#, fuzzy, no-wrap
msgid "Example of endpoints secured with the `@PermissionsAllowed` annotation"
msgstr "`@PermissionsAllowed` アノテーションで保護されたエンドポイントの例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:416
#, no-wrap
msgid "package org.acme.crud;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:423
#, no-wrap
msgid ""
"import io.quarkus.arc.Arc;\n"
"import io.vertx.ext.web.RoutingContext;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.POST;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:425
#, no-wrap
msgid "import io.quarkus.security.PermissionsAllowed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:430
#, no-wrap
msgid ""
"import java.security.BasicPermission;\n"
"import java.security.Permission;\n"
"import java.util.Collection;\n"
"import java.util.Collections;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:433
#, no-wrap
msgid ""
"@Path(\"/crud\")\n"
"public class CRUDResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:441
#, no-wrap
msgid ""
"    @PermissionsAllowed(\"create\") <1>\n"
"    @PermissionsAllowed(\"update\")\n"
"    @POST\n"
"    @Path(\"/modify/repeated\")\n"
"    public String createOrUpdate() {\n"
"        return \"modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:448
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = {\"create\", \"update\"}, inclusive=true) <2>\n"
"    @POST\n"
"    @Path(\"/modify/inclusive\")\n"
"    public String createOrUpdate(Long id) {\n"
"        return id + \" modified\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:455
#, no-wrap
msgid ""
"    @PermissionsAllowed({\"see:detail\", \"see:all\", \"read\"}) <3>\n"
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public String getItem(String id) {\n"
"        return \"item-detail-\" + id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:463
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"list\", permission = CustomPermission.class) <4>\n"
"    @Path(\"/list\")\n"
"    @GET\n"
"    public Collection<String> list(@QueryParam(\"query-options\") String queryOptions) {\n"
"        // your business logic comes here\n"
"        return Collections.emptySet();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:465
#, no-wrap
msgid "    public static class CustomPermission extends BasicPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:469
#, no-wrap
msgid ""
"        public CustomPermission(String name) {\n"
"            super(name);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:479
#, no-wrap
msgid ""
"        @Override\n"
"        public boolean implies(Permission permission) {\n"
"            var event = Arc.container().instance(RoutingContext.class).get(); <5>\n"
"            var publicContent = \"public-content\".equals(event.request().params().get(\"query-options\"));\n"
"            var hasPermission = getName().equals(permission.getName());\n"
"            return hasPermission && publicContent;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:481
#, fuzzy
msgid "The resource method `createOrUpdate` is only accessible for a user with both `create` and `update` permissions."
msgstr "リソースメソッド `createOrUpdate` は、 `create` と `update` の両方のパーミッションを持つユーザーのみがアクセス可能です。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:484
#, fuzzy
msgid "By default, at least one of the permissions specified through one annotation instance is required.  You can require all permissions by setting `inclusive=true`.  Both resource methods `createOrUpdate` have equal authorization requirements."
msgstr "デフ ォル ト では、 1 つのア ノ テーシ ョ ン イ ン ス タ ン ス を通 じ て指定 さ れ る 権限の少な く と も 1 つが必要です。 `inclusive=true` を設定す る こ と で、 すべての権限を要求で き ます。どちらのリソース・メソッド `createOrUpdate` も、認可要件は同じです。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:485
#, fuzzy
msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of the `all` or `detail` actions."
msgstr "`SecurityIdentity` が `read` パーミッションまたは `see` パーミッションのいずれかと、 `all` アクションまたは `detail` アクションのいずれかを持っている場合、 `getItem` へのアクセスが許可される。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:487
#, fuzzy
msgid "You can use your preferred `java.security.Permission` implementation.  By default, string-based permission is performed by `io.quarkus.security.StringPermission`."
msgstr "お好みの `java.security.Permission` の実装を使用することができる。デフォルトでは、文字列ベースのパーミッションは `io.quarkus.security.StringPermission` によって実行される。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:488
#, fuzzy
msgid "Permissions are not beans, therefore the only way to obtain bean instances is programmatically by using `Arc.container()`."
msgstr "パーミッションは Bean ではないので，Bean インスタンスを取得する唯一の方法は， `Arc.container()` を使ってプログラム的に取得することである。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:490
#, fuzzy
msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication.adoc[Proactive Authentication]."
msgstr "IOスレッドで `@PermissionsAllowed` 、『プロアクティブ xref:security-proactive-authentication.adoc[認証] 』の情報を確認してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:493
#, fuzzy
msgid "`@PermissionsAllowed` is not repeatable on the class level due to a limitation with Quarkus interceptors.  For more information, see the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the Quarkus \"CDI reference\" guide."
msgstr "`@PermissionsAllowed` は、Quarkus インターセプタの制限により、クラスレベルでは繰り返し使用できません。詳細については、Quarkus \"CDI reference\" ガイドの xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] セクションを参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:496
#, fuzzy
msgid "The easiest way to add permissions to a role-enabled `SecurityIdentity` instance is to map roles to permissions.  Use xref:authorization-using-configuration[Authorization using configuration] to grant the required `SecurityIdentity` permissions for `CRUDResource` endpoints to authenticated requests, as outlined in the following example:"
msgstr "ロールが有効な `SecurityIdentity` インスタンスにパーミッションを追加する最も簡単な方法は、ロールをパーミッションに マップすることである。以下の例で説明されているように、 `CRUDResource` のエンドポイントに必要な `SecurityIdentity` パーミッションを認証されたリクエストに付与するには、 xref:authorization-using-configuration[設定を使用して] 認可を使用します："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:503
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy1.permissions.user=see:all                                      <1>\n"
"quarkus.http.auth.policy.role-policy1.permissions.admin=create,update,read                          <2>\n"
"quarkus.http.auth.permission.roles1.paths=/crud/modify/*,/crud/id/*                                 <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:508
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy2.permissions.user=list\n"
"quarkus.http.auth.policy.role-policy2.permission-class=org.acme.crud.CRUDResource.CustomPermission  <4>\n"
"quarkus.http.auth.permission.roles2.paths=/crud/list\n"
"quarkus.http.auth.permission.roles2.policy=role-policy2\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:511
#, fuzzy
msgid "Add the permission `see` and the action `all` to the `SecurityIdentity` instance of the `user` role.  Similarly, for the `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
msgstr "`user` ロールの `SecurityIdentity` インスタンスに、パーミッション `see` とアクション `all` を追加する。同様に、 `@PermissionsAllowed` アノテーションでは、 `io.quarkus.security.StringPermission` がデフォルトで使用されます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:512
#, fuzzy
msgid "Permissions `create`, `update`, and `read` are mapped to the role `admin`."
msgstr "パーミッション `create` 、 `update` 、 `read` は、ロール `admin` にマッピングされています。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:514
#, fuzzy
msgid "The role policy `role-policy1` allows only authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.  For more information about the path-matching algorithm, see xref:matching-multiple-paths[Matching multiple paths: longest path wins] later in this guide."
msgstr "ロールポリシー `role-policy1` は、認証されたリクエストのみが `/crud/modify` と `/crud/id` サブパスにアクセスすることを許可します。パスマッチングアルゴリズムの詳細については、このガイドの後の方の xref:matching-multiple-paths[複数のパスのマッチング: 最長パスが勝つ] を参照してください。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:517
#, fuzzy
msgid "You can also specify a custom implementation of the `java.security.Permission` class.  Your custom class must define exactly one constructor that accepts the permission name and optionally some actions, for example, `String` array.  In this scenario, the permission `list` is added to the `SecurityIdentity` instance as `new CustomPermission(\"list\")`."
msgstr "`java.security.Permission` クラスのカスタム実装を指定することもできます。カスタムクラスは、パーミッション名と、オプションでいくつかのアクション（例えば、 `String` 配列）を受け付けるコンストラクタを1つだけ定義しなければなりません。このシナリオでは、パーミッション `list` は `new CustomPermission(\"list\")` として `SecurityIdentity` インスタンスに追加されます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:521
#, fuzzy
msgid "You can also create a custom `java.security.Permission` class with additional constructor parameters.  These additional parameters get matched with arguments of the method annotated with the `@PermissionsAllowed` annotation.  Later, Quarkus instantiates your custom permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
msgstr "また、追加のコンストラクタ・パラメータを持つカスタム `java.security.Permission` クラスを作成することもできます。これらの追加パラメータは、 `@PermissionsAllowed` アノテーションが付けられたメソッドの引数と一致します。その後、Quarkusは、 `@PermissionsAllowed` でアノテーションされたメソッドが呼び出された実際の引数で、カスタムパーミッションをインスタンス化します。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:522
#, fuzzy, no-wrap
msgid "Example of a custom `java.security.Permission` class that accepts additional arguments"
msgstr "追加の引数を受け付けるカスタム `java.security.Permission` クラスの例"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:529
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:649
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.Arrays;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:531
#, no-wrap
msgid "public class LibraryPermission extends Permission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:534
#, no-wrap
msgid ""
"    private final Set<String> actions;\n"
"    private final Library library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:540
#, no-wrap
msgid ""
"    public LibraryPermission(String libraryName, String[] actions, Library library) { <1>\n"
"        super(libraryName);\n"
"        this.actions = Set.copyOf(Arrays.asList(actions));\n"
"        this.library = library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:552
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean implies(Permission requiredPermission) {\n"
"        if (requiredPermission instanceof LibraryPermission) {\n"
"            LibraryPermission that = (LibraryPermission) requiredPermission;\n"
"            boolean librariesMatch = getName().equals(that.getName());\n"
"            boolean requiredLibraryIsSublibrary = library.isParentLibraryOf(that.library);\n"
"            boolean hasOneOfRequiredActions = that.actions.stream().anyMatch(actions::contains);\n"
"            return (librariesMatch || requiredLibraryIsSublibrary) && hasOneOfRequiredActions;\n"
"        }\n"
"        return false;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:554
#, no-wrap
msgid "    ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:556
#, no-wrap
msgid "    public static abstract class Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:558
#, no-wrap
msgid "        protected String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:560
#, no-wrap
msgid "        abstract boolean isParentLibraryOf(Library library);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:562
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:564
#, no-wrap
msgid "    public static class MediaLibrary extends Library {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:570
#, no-wrap
msgid ""
"        @Override\n"
"        boolean isParentLibraryOf(Library library) {\n"
"            return library instanceof MediaLibrary;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:575
#, no-wrap
msgid ""
"    public static class TvLibrary extends MediaLibrary {\n"
"        ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:580
#, fuzzy
msgid "There must be exactly one constructor of a custom `Permission` class.  The first parameter is always considered to be a permission name and must be of type `String`.  Quarkus can optionally pass permission actions to the constructor.  For this to happen, declare the second parameter as `String[]`."
msgstr "カスタム `Permission` クラスのコンストラクタは正確に1つでなければならない。最初のパラメータは常にパーミッション名とみなされ、 `String` 型でなければなりません。Quarkusはオプションで、コンストラクタにパーミッションアクションを渡すことができます。そのためには、2番目のパラメータを `String[]` と宣言します。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:582
#, fuzzy
msgid "The `LibraryPermission` class permits access to the current or parent library if `SecurityIdentity` is allowed to perform one of the required actions, for example, `read`, `write`, or `list`."
msgstr "`LibraryPermission` クラスは、 `SecurityIdentity` が必要なアクション、例えば `read` 、 `write` 、 `list` のいずれかの実行を許可されている場合、現在のライブラリまたは親ライブラリへのアクセスを許可する。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:584
#, fuzzy
msgid "The following example shows how the `LibraryPermission` class can be used:"
msgstr "次の例は、 `LibraryPermission` クラスの使い方を示しています："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:589
#, no-wrap
msgid ""
"import io.quarkus.security.PermissionsAllowed;\n"
"import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:592
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class LibraryService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:598
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class) <1>\n"
"    public Library updateLibrary(String newDesc, Library update) {\n"
"        update.description = newDesc;\n"
"        return update;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:605
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class, params = \"library\") <2>\n"
"    @PermissionsAllowed(value = {\"tv:read\", \"tv:list\"}, permission = LibraryPermission.class)\n"
"    public Library migrateLibrary(Library migrate, Library library) {\n"
"        // migrate libraries\n"
"        return library;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:607
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:638
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:657
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:720
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:610
#, fuzzy
msgid "The formal parameter `update` is identified as the first `Library` parameter and gets passed to the `LibraryPermission` class.  However, the `LibraryPermission` must be instantiated each time the `updateLibrary` method is invoked."
msgstr "正式なパラメータ `update` は最初の `Library` パラメータとして識別され、 `LibraryPermission` クラスに渡される。しかし、 `LibraryPermission` は、 `updateLibrary` メソッドが呼び出されるたびにインスタンス化されなければならない。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:612
#, fuzzy
msgid "Here, the first `Library` parameter is `migrate`, therefore the `library` parameter gets marked explicitly through `PermissionsAllowed#params`.  The permission constructor and the annotated method must have the parameter `library` set, otherwise, validation fails."
msgstr "ここでは、最初の `Library` パラメータは `migrate` であるため、 `library` パラメータは `PermissionsAllowed#params` を通して明示的にマークされる。パーミッションコンストラクタとアノテーションメソッドには、パラメータ `library` が設定されていなければなりません。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:613
#, fuzzy, no-wrap
msgid "Example of a resource secured with the `LibraryPermission`"
msgstr "で保護されたリソースの例。 `LibraryPermission`"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:619
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:622
#, no-wrap
msgid ""
"    @Inject\n"
"    LibraryService libraryService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:629
#, no-wrap
msgid ""
"    @PermissionsAllowed(value = \"tv:write\", permission = LibraryPermission.class)\n"
"    @PUT\n"
"    @Path(\"/id/{id}\")\n"
"    public Library updateLibrary(@PathParam(\"id\") Integer id, Library library) {\n"
"        ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:636
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/service-way/id/{id}\")\n"
"    public Library updateLibrarySvc(@PathParam(\"id\") Integer id, Library library) {\n"
"        String newDescription = \"new description \" + id;\n"
"        return libraryService.updateLibrary(newDescription, library);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:641
#, fuzzy
msgid "Similarly to the `CRUDResource` example, the following example shows how you can grant a user with the `admin` role permissions to update `MediaLibrary`:"
msgstr "`CRUDResource` の例と同様に、次の例では、 `admin` ロールを持つユーザーに、 `MediaLibrary` を更新する権限を与える方法を示します："

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:645
#, no-wrap
msgid "package org.acme.library;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:651
#, no-wrap
msgid "public class MediaLibraryPermission extends LibraryPermission {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:655
#, no-wrap
msgid ""
"    public MediaLibraryPermission(String libraryName, String[] actions) {\n"
"        super(libraryName, actions, new MediaLibrary());    <1>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:659
#, fuzzy
msgid "We want to pass the `MediaLibrary` instance to the `LibraryPermission` constructor."
msgstr "`LibraryPermission` コンストラクタに `MediaLibrary` インスタンスを渡したい。"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:666
#, no-wrap
msgid ""
"quarkus.http.auth.policy.role-policy3.permissions.admin=media-library:list,media-library:read,media-library:write   <1>\n"
"quarkus.http.auth.policy.role-policy3.permission-class=org.acme.library.MediaLibraryPermission\n"
"quarkus.http.auth.permission.roles3.paths=/library/*\n"
"quarkus.http.auth.permission.roles3.policy=role-policy3\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:670
#, fuzzy
msgid "Grants the permission `media-library`, which permits `read`, `write`, and `list` actions.  Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr "`read` 、 `write` 、 `list` のアクションを許可するパーミッション `media-library` を付与します。 `MediaLibrary` は `TvLibrary` クラスの親であるため、 `admin` ロールを持つユーザは `TvLibrary` を変更することも許可されます。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:674
#, fuzzy
msgid "The examples provided so far use role-to-permission mapping.  You can also add permissions to the `SecurityIdentity` instance programmatically.  In the following example, xref:security-customization.adoc#security-identity-customization[`SecurityIdentity` is customized] to add the same permission that was previously granted with the HTTP role-based policy."
msgstr "これまでの例では、ロールからパーミッションへのマッピングを使用しています。また、 `SecurityIdentity` インスタンスにプログラムで権限を追加することもできます。次の例では、 xref:security-customization.adoc#security-identity-customization[SecurityIdentity] 、HTTPロールベースポリシーで以前に付与されたのと同じパーミッションを追加するように xref:security-customization.adoc#security-identity-customization[カスタマイズ] されています。"

#. type: Block title
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:675
#, fuzzy, no-wrap
msgid "Example of adding the `LibraryPermission` programmatically to `SecurityIdentity`"
msgstr "`LibraryPermission` をプログラムで追加する例 `SecurityIdentity`"

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:681
#, no-wrap
msgid ""
"import java.security.Permission;\n"
"import java.util.function.Function;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:683
#, no-wrap
msgid "import jakarta.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:689
#, no-wrap
msgid ""
"import io.quarkus.security.identity.AuthenticationRequestContext;\n"
"import io.quarkus.security.identity.SecurityIdentity;\n"
"import io.quarkus.security.identity.SecurityIdentityAugmentor;\n"
"import io.quarkus.security.runtime.QuarkusSecurityIdentity;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:692
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PermissionsIdentityAugmentor implements SecurityIdentityAugmentor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:700
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<SecurityIdentity> augment(SecurityIdentity identity, AuthenticationRequestContext context) {\n"
"        if (isNotAdmin(identity)) {\n"
"            return Uni.createFrom().item(identity);\n"
"        }\n"
"        return Uni.createFrom().item(build(identity));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:704
#, no-wrap
msgid ""
"    private boolean isNotAdmin(SecurityIdentity identity) {\n"
"        return identity.isAnonymous() || !\"admin\".equals(identity.getPrincipal().getName());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:718
#, no-wrap
msgid ""
"    SecurityIdentity build(SecurityIdentity identity) {\n"
"        Permission possessedPermission = new MediaLibraryPermission(\"media-library\",\n"
"                new String[] { \"read\", \"write\", \"list\"}); <1>\n"
"        return QuarkusSecurityIdentity.builder(identity)\n"
"                .addPermissionChecker(new Function<Permission, Uni<Boolean>>() { <2>\n"
"                    @Override\n"
"                    public Uni<Boolean> apply(Permission requiredPermission) {\n"
"                        boolean accessGranted = possessedPermission.implies(requiredPermission);\n"
"                        return Uni.createFrom().item(accessGranted);\n"
"                    }\n"
"                })\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:723
#, fuzzy
msgid "The permission `media-library` that was created can perform `read`, `write`, and `list` actions.  Because `MediaLibrary` is the `TvLibrary` class parent, a user with the `admin` role is also permitted to modify `TvLibrary`."
msgstr "作成されたパーミッション `media-library` は、 `read` 、 `write` 、 `list` のアクションを実行できます。 `MediaLibrary` は `TvLibrary` クラスの親であるため、 `admin` ロールを持つユーザは `TvLibrary` を変更することも許可されています。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:724
#, fuzzy
msgid "You can add a permission checker through `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker`."
msgstr "パーミッションチェッカーは `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker` から追加できる。"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:726
#, fuzzy
msgid "Annotation permissions do not work with the custom xref:security-customization.adoc#jaxrs-security-context[Custom Jakarta REST SecurityContext] because there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
msgstr "`jakarta.ws.rs.core.SecurityContext` にはパーミッションがないため、カスタム xref:security-customization.adoc#jaxrs-security-context[カスタム] Jakarta xref:security-customization.adoc#jaxrs-security-context[REST SecurityContext] ではアノテーションパーミッションは機能しません。"

#. type: Title ==
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:727
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:730
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkusセキュリティの概要]"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:731
#, fuzzy
msgid "xref:security-architecture.adoc[Quarkus Security architecture]"
msgstr "xref:security-architecture.adoc[Quarkus セキュリティアーキテクチャ]"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:732
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr "xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Quarkusの認証メカニズム]"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:733
#, fuzzy
msgid "xref:security-basic-authentication.adoc[Basic authentication]"
msgstr "xref:security-basic-authentication.adoc[Basic認証]"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:734
#, fuzzy
msgid "xref:security-getting-started-tutorial.adoc[Getting Started with Security using Basic authentication and Jakarta Persistence]"
msgstr "xref:security-getting-started-tutorial.adoc[Basic認証とJakarta Persistenceを使ったセキュリティ入門]"

#. type: Plain text
#: upstream/_versions/main/guides/security-authorize-web-endpoints-reference.adoc:734
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID Connect Bearer Token Scopes And SecurityIdentity Permissions]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc#token-scopes-and-security-identity-permissions[OpenID ConnectのベアラートークンのスコープとSecurityIdentityのパーミッション]"

#, fuzzy
#~ msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
#~ msgstr "xref:security-basic-authentication-tutorial.adoc[Basic認証とJakarta PersistenceによるQuarkusアプリケーションの安全性確保]"

#, fuzzy
#~ msgid "If you plan to use standard security annotations on the IO thread, review the information in the Quarkus xref:security-proactive-authentication-concept.adoc[Proactive Authentication] guide."
#~ msgstr "IOスレッドで標準的なセキュリティアノテーションを使用する予定の場合は、Quarkusのプロアクティブ xref:security-proactive-authentication-concept.adoc[認証] ガイドの情報を確認してください。"

#, fuzzy
#~ msgid "If you plan to use `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication-concept.adoc[Proactive Authentication]."
#~ msgstr "IOスレッドで `@PermissionsAllowed` 、プロアクティブ xref:security-proactive-authentication-concept.adoc[認証の] 情報を確認してください。"

#~ msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
#~ msgstr "xref:security-overview-concept.adoc[Quarkus Security 概要]"

#, fuzzy
#~ msgid "xref:security-architecture-concept.adoc[Quarkus Security architecture]"
#~ msgstr "xref:security-architecture-concept.adoc[Quarkus セキュリティ・アーキテクチャ]"

#, fuzzy
#~ msgid "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Other supported authentication mechanisms]"
#~ msgstr "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[その他の認証メカニズム]"

#, fuzzy
#~ msgid "xref:security-basic-authentication-concept.adoc[Basic authentication]"
#~ msgstr "xref:security-basic-authentication-concept.adoc[Basic認証]"

#~ msgid "Quarkus has an integrated pluggable web security layer. If security is enabled, all HTTP requests will have a permission check performed to make sure they are allowed to continue.  This means you cannot use `@PermitAll` to open a path if the path is blocked by the `quarkus.http.auth.` configuration."
#~ msgstr "Quarkusには、プラガブルなウェブセキュリティレイヤーが統合されています。セキュリティが有効になっている場合、すべてのHTTPリクエストで認可チェックが実行され、処理の継続が許可されていることが確認されます。つまり、 `quarkus.http.auth.` の設定によってパスがブロックされている場合は、 `@PermitAll` を使用してパスを開くことはできません。"

#, fuzzy
#~ msgid "If you are using Jakarta REST, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
#~ msgstr "Jakarta REST を使用している場合、アノテーションは個々のエンドポイントでこれらのプロパティを上書きできるため、HTTP パスレベルのマッチングではなく、デフォルトのセキュリティ要件を設定するために `quarkus.security.jaxrs.deny-unannotated-endpoints` または `quarkus.security.jaxrs.default-roles-allowed` を使用することを検討してください。"

#~ msgid "Permissions are defined in the Quarkus configuration using permission sets, with each permission set specifying a policy for access control."
#~ msgstr "Quarkusの設定では、パーミッション・セットを使用してパーミッションが定義され、各パーミッション・セットはアクセス制御のポリシーを指定します。"

#~ msgid "You can define role-based policies that allow users with specified roles to access the resources."
#~ msgstr "指定したロールを持つユーザーにリソースへのアクセスを許可するロールベースのポリシーを定義することができます。"

#~ msgid "This defines a role-based policy that allows users with the `user` and `admin` roles.  Such a custom policy can be referenced by permission sets just like the built-in ones, as shown in the example below."
#~ msgstr "これは、 `user` および `admin` のロールを持つユーザーを許可するロールベースのポリシーを定義します。このようなカスタムポリシーは、以下の例に示すように、組み込みのものと同様に、権限セットによって参照することができます。"

#~ msgid "Permission sets are defined in `application.properties` as follows:"
#~ msgstr "パーミッションセットは、 `application.properties` に以下のように定義されています:"

#~ msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`.  In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
#~ msgstr "このパーミッションは、 `GET` のメソッドを `/public` に許可するデフォルトの `permit` 組み込みポリシーを参照します。この場合、このリクエストはいずれにしても許可されるため、デモの設定はこの例に影響しません。"

#~ msgid "This permission references the built-in `deny` policy for `/forbidden`.  This is an exact path match as it does not end with `*`."
#~ msgstr "このパーミッションは `/forbidden` に対する組み込みの `deny` ポリシーを参照します。これは `*` で終わらないので、完全なパスマッチとなります。"

#~ msgid "This is a permission set that references the previously defined policy.  `roles1` is an example name; you can call the permission sets whatever you want."
#~ msgstr "これは以前に定義されたポリシーを参照するパーミッションセットです。 `roles1` は任意の名前ですので、好きなようにパーミッションセットを呼び出すことができます。"

#~ msgid "Permission sets can also specify paths and methods as a comma-separated list.  If a path ends with the `*` wildcard, the query it generates matches all sub-paths.  Otherwise, it queries for an exact match and will only match that specific path:"
#~ msgstr "パーミッション・セットは、パスとメソッドをカンマ区切りのリストで指定することもできます。パスが `*` ワイルドカードで終わっている場合、生成されるクエリはすべてのサブパスにマッチします。そうでない場合は、完全一致の問い合わせを行い、その特定のパスのみに一致します："

#~ msgid "The request is rejected if a request matches one or more permission sets based on the path but does not match any due to method requirements."
#~ msgstr "リクエストがパスに基づいて1つ以上のパーミッションセットにマッチするが、 メソッドの要件によりマッチしない場合、そのリクエストは拒否されます。"

#~ msgid "Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed, whereas `POST /public/foo` would match the path but not the method and would therefore be rejected."
#~ msgstr "上記のパーミッションセットの場合、`GET /public/foo` はパスとメソッドの両方にマッチするので許可されますが、`POST /public/foo` はパスにマッチしますがメソッドにはマッチしないので拒否されます。"

#~ msgid "Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths, but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen, and the request will be rejected."
#~ msgstr "上記のパーミッションセットを考えると、`GET /public/forbidden-folder/foo` は両方のパーミッションセットのパスにマッチしますが、より長いマッチで `deny1` パーミッションセットのパスにマッチするので、 `deny1` が選択されてリクエストは拒否されます。"

#~ msgid "Subpath permissions always win against the root path permissions, as explained above in the `deny1` versus `permit1` permission example.  Here is another example showing subpath permission allowing a public resource access with the root path permission requiring the authorization:"
#~ msgstr "サブパス パーミッションは、上述の `deny1` 対 `permit1` パーミッションの例で説明したように、ルートパス パーミッションに対して常に勝利します。以下は、サブパス権限で公開リソースへのアクセスを許可し、ルートパス権限で認可を要求する例です。 :"

#~ msgid "When a path is registered with multiple permission sets, the permission sets that explicitly specify an HTTP method that matches the request will take precedence.  In this instance, the permission sets without methods will only come into effect if the request method does not match permission sets with the method specification."
#~ msgstr "パスが複数のパーミッション・セットに登録されている場合、リクエストにマッチするHTTPメソッドを明示的に指定したパーミッション・セットが優先されます。この場合、メソッドを持たない許可セットは、リクエストメソッドがメソッド指定のある許可セットと一致しない場合にのみ有効になります。"

#~ msgid "Given the above permission set, `GET /public/foo` would match the paths of both permission sets, but because it fits the explicit method of the `permit1` permission set, `permit1` is chosen, and the request is accepted."
#~ msgstr "上記のパーミッション・セットの場合、 `GET /public/foo` は両方のパーミッション・セットのパスに合致しますが、 `permit1` のパーミッション・セットの明示的な方法に合致するため、 `permit1` が選択され、リクエストは受理されます。"

#~ msgid "`PUT /public/foo`, on the other hand, will not match the method permissions of `permit1`, so `deny1` will be activated and reject the request."
#~ msgstr "一方、 `PUT /public/foo` `permit1` のメソッドパーミッションと一致しないため、 `deny1` が有効化され、リクエストが拒否されます。"

#~ msgid "Sometimes, the previously described rules allow multiple permission sets to win at the same time.  In that case, for the request to proceed, all the permissions must allow access.  Note that for this to happen, both have to either have specified the method or have no method. Method-specific matches take precedence."
#~ msgstr "先に説明したルールで、複数のパーミッション・セットが同時に勝つことができる場合もあります。その場合、リクエストを進めるためには、すべてのパーミッションがアクセスを許可していなければなりません。これが起こるためには、両方がメソッドを指定しているか、メソッドを持たないかのどちらかでなければならないことに注意してください。メソッドを指定したマッチが優先されます。"

#~ msgid "Given the above permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
#~ msgstr "上記のパーミッションセットの場合、 `GET /api/foo` は両方のパーミッションセットのパスにマッチするので、 `user` と `admin` の両方のロールが必要になります。"

#, fuzzy
#~ msgid "If set to true, access is denied for all Jakarta REST endpoints by default. If a Jakarta REST endpoint does not have any security annotations, it defaults to the `@DenyAll` behavior.  This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured.  Defaults to `false`."
#~ msgstr "trueに設定すると、デフォルトですべてのJakarta RESTエンドポイントに対してアクセスが拒否されます。Jakarta RESTエンドポイントにセキュリティアノテーションがない場合は、 `@DenyAll` の動作がデフォルトとなります。これは、セキュリティで保護されているはずのエンドポイントを誤って公開してしまわないようにするために便利です。デフォルトは `false` です。"

#~ msgid "Defines the default role requirements for unannotated endpoints.  The `**` role is a special role that means any authenticated user.  This cannot be combined with `deny-unannotated-endpoints`, as `deny` takes the effect instead."
#~ msgstr "アノテーションされていないエンドポイントのデフォルトのロール要件を定義します。ロール `**` は、認証された任意のユーザを意味する特別なロールです。これは、代わりにdenyが有効になるため、 `deny-unannotated-endpoints` と組み合わせることはできません。"

#, fuzzy
#~ msgid "if set to true, the access will be denied to all CDI methods and Jakarta REST endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.  Defaults to `false`."
#~ msgstr "trueに設定すると、セキュリティアノテーションを持たないが、セキュリティアノテーションを持つメソッドを含むクラスで定義されているすべてのCDIメソッドと Jakarta RESTエンドポイントへのアクセスが拒否されます。デフォルトは `false` です。"

#~ msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
#~ msgstr "`quarkus.http.root-path` 設定プロパティは、 link:http-reference.html#context-path[http エンドポイントコンテキストパスを] 変更するために使用されます。"

#~ msgid "A leading slash will change how the configured permission path is interpreted.  The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed.  For example:"
#~ msgstr "先頭のスラッシュは、設定されたパーミッションのパスの解釈方法を変更します。設定されたURLはそのまま使用され、 `quarkus.http.root-path` の値が変更されても、パスは調整されません。例えば下記の形です。 :"

#~ msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
#~ msgstr "この設定は、固定/静的URL `/public` から提供されるリソースにのみ影響します。 `quarkus.http.root-path` が `/` 以外に設定されている場合、アプリケーションリソースと一致しない可能性があります。"

#~ msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
#~ msgstr "詳細については、 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkusのパス解決] を参照してください。"

#~ msgid "{project-name} comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])  based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
#~ msgstr "{project-name} には、RESTエンドポイントやCDI Beanに共通のセキュリティアノテーション `@RolesAllowed `, `@DenyAll `, `@PermitAll` に基づくロールベースのアクセス制御（ link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC] ）を可能にする組込のセキュリティが同梱されています。"

#~ msgid ""
#~ "Specifies that all security roles are allowed to invoke the specified methods.\n"
#~ "\n"
#~ "`@PermitAll` lets everybody in even without authentication."
#~ msgstr ""
#~ "すべてのセキュリティロールが指定されたメソッドを呼び出すことを許可されているように指定します。\n"
#~ "\n"
#~ "`@PermitAll` は未認証含め誰でも許可します。"

#, fuzzy
#~ msgid "xref:subject-example[SubjectExposingResource example] featured in this chapter demonstrates an endpoint that uses both Jakarta REST and Common Security annotations to describe and secure its endpoints."
#~ msgstr "本章で紹介する xref:subject-example[SubjectExposingResource の例は] 、jakarta REST と Common Security の両方のアノテーションを使用してエンドポイントを記述し、そのエンドポイントを保護することを実証している。"

#, fuzzy
#~ msgid "The endpoint obtains the user principal from the Jakarta REST `SecurityContext`. This will be non-null for a secured endpoint."
#~ msgstr "エンドポイントは、Jakarta REST `SecurityContext` からユーザープリンシパルを取得します。これは、セキュリティで保護されたエンドポイントでは非NULLになります。"

#~ msgid "The call to obtain the user principal returns null if the caller is unauthenticated and non-null if the caller is authenticated."
#~ msgstr "ユーザープリンシパルを取得するためのこの呼び出しは、呼び出し元が認証されていない場合はnullを返し、呼び出し元が認証されている場合は非nullを返します。"

#~ msgid "The `/subject/denied` endpoint declares the `@DenyAll` annotation, thus disallowing all direct access to it as a REST method, regardless of the user calling it. The method is still invokable internally by other methods in this class."
#~ msgstr "`/subject/denied` エンドポイントは、 `@DenyAll` アノテーションを宣言しているため、呼び出すユーザーに関係なく、REST メソッドとして直接アクセスすることはすべて禁止されています。このメソッドは、このクラスの他のメソッドから内部的に呼び出すことは可能です。"

#, fuzzy
#~ msgid "If you plan to use standard security annotations on the IO thread, review the information in xref:security-proactive-authentication-concept.adoc[Proactive Authentication]."
#~ msgstr "IOスレッドで標準的なセキュリティアノテーションを使用する予定の場合は、「プロアクティブ xref:security-proactive-authentication-concept.adoc[認証] 」の情報を確認してください。"

#, fuzzy
#~ msgid "The `@RolesAllowed` annotation value supports xref:config-reference.adoc#property-expressions[Property Expressions] including default values and nested Property Expressions.  Configuration properties used with the annotation are resolved at runtime."
#~ msgstr "`@RolesAllowed` アノテーション値は、デフォルト値やネストされたProperty Expressionsを含む xref:config-reference.adoc#property-expressions[Property Expressionsに] 対応しています。アノテーションと共に使用される設定プロパティは、実行時に解決されます。"

#~ msgid "The endpoint will allow users with the role denoted by the value of the `admin-role` property."
#~ msgstr "エンドポイントは、 `admin-role` プロパティの値で示されるロールを持つユーザーを許可します。"

#~ msgid ""
#~ "A default value demonstration.\n"
#~ "The required role will be denoted by the value of the `customer` property, but if that property is not specified, a role named `User` will be required as a default."
#~ msgstr ""
#~ "デフォルト値の実証。\n"
#~ "必要な役割は `customer` プロパティの値で示されますが、そのプロパティが指定されていない場合、 `User` という名前のロールがデフォルトとして要求されます。"

#~ msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role \"Software-Tester\".  It is possible to use multiple expressions in the role definition."
#~ msgstr "この `/subject/software-tester` エンドポイントには、\"Software-Tester\"というロールを付与された認証ユーザーが必要です。ロールの定義で複数の式を使用することが可能です。"

#~ msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation, as we did not set the configuration property `customer`."
#~ msgstr "設定プロパティ `customer` を設定していないため、 `@RolesAllowed(\"${customer:User}\")` アノテーションの使用によって、この `/subject/user` エンドポイントには\"User\"というロールを付与された認証ユーザーが必要です。"

#~ msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role `User` in production but allows any authenticated user in development mode."
#~ msgstr "この `/subject/secured` エンドポイントは、本番環境では `User` のロールを与えられた認証ユーザーが必要ですが、開発モードではどのような認証ユーザーでも許可されます。"

#, fuzzy
#~ msgid "Quarkus also provides the `io.quarkus.security.PermissionsAllowed` annotation that will permit any authenticated user with given permission to access the resource.  The annotation is extension of the common security annotations and check permissions granted to `SecurityIdentity`."
#~ msgstr "Quarkusには、 `io.quarkus.security.PermissionsAllowed` アノテーションも用意されており、与えられた権限を持つ認証ユーザーがリソースにアクセスすることを許可します。このアノテーションは、一般的なセキュリティアノテーションと `SecurityIdentity` に付与されたチェックパーミッションを拡張したものです。"

#, fuzzy
#~ msgid "Resource method `createOrUpdate` is only accessible by user with both `create` and `update` permissions."
#~ msgstr "リソースメソッド `createOrUpdate` は、 `create` と `update` の両方の権限を持つユーザーのみアクセス可能です。"

#, fuzzy
#~ msgid "By default, at least one of the permissions specified through one annotation instance is required.  You can require all of them by setting `inclusive=true`. Both resource methods `createOrUpdate` have equal authorization requirements."
#~ msgstr "デフォルトでは、1つのアノテーションインスタンスを通じて指定されたパーミッションのうち、少なくとも1つが要求されます。 `inclusive=true` を設定することで、それらすべてを要求することができます。どちらのリソースメソッド `createOrUpdate` も、認可要件は同等です。"

#, fuzzy
#~ msgid "Access is granted to `getItem` if `SecurityIdentity` has either `read` permission or `see` permission and one of actions (`all`, `detail`)."
#~ msgstr "`SecurityIdentity` が `read` 権限または `see` 権限のいずれかとアクション ( `all` , `detail` ) のいずれかを持っている場合、 `getItem` にアクセスが許可されます。"

#, fuzzy
#~ msgid "You can use any `java.security.Permission` implementation of your choice.  By default, string-based permission is performed by the `io.quarkus.security.StringPermission`."
#~ msgstr "お好みの `java.security.Permission` の実装を使用することができます。デフォルトでは、文字列ベースのパーミッションは `io.quarkus.security.StringPermission` によって実行されます。"

#, fuzzy
#~ msgid "Permissions are not beans, therefore only way to obtain bean instances is programmatically via the `Arc.container()`."
#~ msgstr "パーミッションはBeanではないので、Beanインスタンスを取得する唯一の方法は、 `Arc.container()` を介してプログラム的に取得することです。"

#, fuzzy
#~ msgid "If you plan to use the `@PermissionsAllowed` on the IO thread, review the information in xref:security-proactive-authentication-concept.adoc[Proactive Authentication]."
#~ msgstr "IOスレッドで `@PermissionsAllowed` 、「プロアクティブ xref:security-proactive-authentication-concept.adoc[認証] 」の情報を確認してください。"

#, fuzzy
#~ msgid "The `@PermissionsAllowed` is not repeatable on class-level due to limitations of Quarkus interceptors.  Please find well-argued explanation in the xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindings] section of the CDI reference."
#~ msgstr "Quarkusのインターセプターの制限により、 `@PermissionsAllowed` 、クラスレベルで繰り返し使用することはできません。CDIリファレンスの xref:cdi-reference.adoc#repeatable-interceptor-bindings[Repeatable interceptor bindingsの] セクションで、よく説明されているのを見つけてください。"

#, fuzzy
#~ msgid "Provided `SecurityIdentity` contains roles, the easiest to add permissions to `SecurityIdentity` is to create a roles to permissions mapping.  xref:authorization-using-configuration[HTTP role-based policies] can be used to grant `SecurityIdentity` permissions required by `CRUDResource` endpoints to authenticated requests like this:"
#~ msgstr "`SecurityIdentity` にロールが含まれている場合、 `SecurityIdentity` にパーミッションを追加する最も簡単な方法は、ロールとパーミッションのマッピングを作成することです。 xref:authorization-using-configuration[HTTPロールベースのポリシーは] 、このように認証されたリクエストに対して `CRUDResource` エンドポイントが必要とする `SecurityIdentity` パーミッションを付与するために使用することができます："

#, fuzzy
#~ msgid "Add permission `see` with action `all` to `SecurityIdentity` that holds role `user`.  Similarly as for `@PermissionsAllowed` annotation, `io.quarkus.security.StringPermission` is used by default."
#~ msgstr "ロール `user` を保持する `SecurityIdentity` に、アクション `all` を持つ権限 `see` を追加します。 `@PermissionsAllowed` のアノテーションと同様に、 `io.quarkus.security.StringPermission` がデフォルトで使用されます。"

#, fuzzy
#~ msgid "Permissions `create`, `update` and `read` are mapped to the role `admin`."
#~ msgstr "パーミッション `create` 、 `update` 、 `read` は、ロール `admin` にマッピングされています。"

#, fuzzy
#~ msgid "The role policy `role-policy1` only allows authenticated requests to access `/crud/modify` and `/crud/id` sub-paths.  Please see xref:matching-multiple-paths[Matching multiple paths] section of this guide for more information on path matching algorithm."
#~ msgstr "役割ポリシー `role-policy1` は、認証されたリクエストに対して、 `/crud/modify` と `/crud/id` のサブパスへのアクセスのみを許可します。パスマッチングアルゴリズムの詳細については、本ガイドの「 xref:matching-multiple-paths[複数のパスのマッチング] 」セクションを参照してください。"

#, fuzzy
#~ msgid "You can also specify your own implementation of the `java.security.Permission` class.  The class you provide must define exactly one constructor that accepts permission name and optionally actions (as `String` array).  Here, permission `list` will be added to `SecurityIdentity` as `new CustomPermission(\"list\")`."
#~ msgstr "また、 `java.security.Permission` クラスの独自の実装を指定することができます。あなたが提供するクラスは、パーミッション名とオプションでアクション（ `String` 配列として）を受け入れるちょうど1つのコンストラクタを定義する必要があります。ここでは、パーミッション `list` は `SecurityIdentity` に `new CustomPermission(\"list\")` として追加されます。"

#, fuzzy
#~ msgid "You can also create a custom `java.security.Permission` with additional constructor parameters.  These additional parameters will be matched with arguments of the method annotated with the `@PermissionsAllowed` annotation.  Later, Quarkus will instantiate your custom Permission with actual arguments, with which the method annotated with the `@PermissionsAllowed` has been invoked."
#~ msgstr "また、コンストラクタのパラメータを追加して、カスタム `java.security.Permission` を作成することもできます。これらの追加パラメータは、 `@PermissionsAllowed` のアノテーションが付けられたメソッドの引数と一致します。その後、Quarkusは、 `@PermissionsAllowed` のアノテーションが付けられたメソッドが呼び出された実際の引数で、カスタムPermissionをインスタンス化します。"

#, fuzzy
#~ msgid "Example of a custom `java.security.Permission` that accepts additional arguments"
#~ msgstr "追加の引数を受け付けるカスタム `java.security.Permission` の例"

#, fuzzy
#~ msgid "There must be exactly one constructor of a custom `Permission` class, also first parameter is always considered a permission name (must be `String`).  Optionally, Quarkus may pass Permission actions to the constructor. Just declare the second parameter as `String[]`."
#~ msgstr "カスタム `Permission` クラスのコンストラクタは1つだけでなければなりません。また、最初のパラメータは常にパーミッション名とみなされます（ `String` である必要があります）。オプションとして、QuarkusはコンストラクタにPermissionアクションを渡すことができます。第2パラメータを `String[]` と宣言するだけです。"

#, fuzzy
#~ msgid "The `LibraryPermission` permit access to a library if `SecurityIdentity` is allowed to perform one of required actions (like `read`, `write`, `list`) on the very same library, or the parent one. Let's see how it is used:"
#~ msgstr "`LibraryPermission` は、 `SecurityIdentity` が、全く同じライブラリまたは親ライブラリに対して、必要なアクション（ `read` , `write` , `list` など）のいずれかを実行することを許可されている場合に、ライブラリへのアクセスを許可します。どのように使用されるのか見てみましょう："

#, fuzzy
#~ msgid "Formal parameter `update` is identified as the first `Library` parameter and passed to the `LibraryPermission`.  However this option comes with a price, as the `LibraryPermission` must be instantiated every single time `updateLibrary` method is invoked."
#~ msgstr "形式パラメータ `update` は、最初の `Library` パラメータとして識別され、 `LibraryPermission` に渡されます。しかし、このオプションには代償があります。 `LibraryPermission` は、 `updateLibrary` メソッドを呼び出すたびにインスタンス化する必要があるからです。"

#, fuzzy
#~ msgid "Here, the first `Library` parameter is `migrate`, therefore we marked `library` parameter explicitly via `PermissionsAllowed#params`.  Please note that both Permission constructor and annotated method must have parameter `library`, otherwise validation will fail."
#~ msgstr "ここでは，最初の `Library` パラメータは `migrate` であるため， `library` パラメータを `PermissionsAllowed#params` を介して明示的にマークしています．Permissionコンストラクタとアノテーションメソッドの両方がパラメータ `library` を持たなければならないことに注意してください．そうでなければバリデーションは失敗します．"

#, fuzzy
#~ msgid "Example of resource secured with the `LibraryPermission`"
#~ msgstr "で確保されたリソースの例 `LibraryPermission`"

#, fuzzy
#~ msgid "Similarly to the `CRUDResource` example, we can use permission to role mapping and grant user with role `admin` right to update `MediaLibrary`:"
#~ msgstr "`CRUDResource` の例と同様に、permission to role mapping を使用して、ロール `admin` を持つユーザーに `MediaLibrary` を更新する権利を付与することができます："

#, fuzzy
#~ msgid "We want to pass `MediaLibrary` instance to the `LibraryPermission` constructor."
#~ msgstr "`LibraryPermission` のコンストラクタに `MediaLibrary` のインスタンスを渡したい。"

#, fuzzy
#~ msgid "Grants permission `media-library` that is allowed to perform actions `read`, `write` and `list`.  Considering `MediaLibrary` is the `TvLibrary` class parent, we know that administrator is also going to be allowed to modify television library."
#~ msgstr "`read` 、 `write` 、 `list` のアクションを実行することを許可するパーミッション `media-library` を付与する。 `MediaLibrary` が `TvLibrary` クラスの親であることを考慮すると、管理者にもテレビライブラリの変更が許可されることがわかります。"

#, fuzzy
#~ msgid "All the examples above leveraged role to permission mapping, but you can also add permissions to the `SecurityIdentity` programmatically.  In the example below, we use xref:security-customization.adoc#security-identity-customization[Security Identity Customization] to add the same permission as we previously granted with the HTTP role-based policy."
#~ msgstr "上記のすべての例では、役割と権限のマッピングを利用していますが、プログラムによって `SecurityIdentity` に権限を追加することもできます。以下の例では、 xref:security-customization.adoc#security-identity-customization[Security Identity Customizationを] 使用して、以前にHTTPロールベースポリシーで付与したのと同じ権限を追加しています。"

#, fuzzy
#~ msgid "Example of adding the `LibraryPermission` programmatically to the `SecurityIdentity`"
#~ msgstr "プログラムにより `LibraryPermission` を追加する例。 `SecurityIdentity`"

#, fuzzy
#~ msgid "Created permission `media-library` is allowed to perform actions `read`, `write` and `list`.  Considering `MediaLibrary` is the `TvLibrary` class parent, we know that administrator is also going to be allowed to modify television library."
#~ msgstr "作成された権限 `media-library` は、アクション `read` 、 `write` 、 `list` の実行を許可されています。 `MediaLibrary` が `TvLibrary` クラスの親であることを考慮すると、管理者にもテレビライブラリの変更が許可されることがわかります。"

#, fuzzy
#~ msgid "You can add a permission checker via `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker`."
#~ msgstr "パーミッションチェッカーは、 `io.quarkus.security.runtime.QuarkusSecurityIdentity.Builder#addPermissionChecker` から追加することができます。"

#, fuzzy
#~ msgid "Annotation permissions do not work with the custom xref:security-customization.adoc#jaxrs-security-context[JAX-RS SecurityContext], for there are no permissions in `jakarta.ws.rs.core.SecurityContext`."
#~ msgstr "アノテーションのパーミッションは、カスタム xref:security-customization.adoc#jaxrs-security-context[JAX-RS SecurityContextでは] 動作しません。なぜなら、 `jakarta.ws.rs.core.SecurityContext` にパーミッションが存在しないからです。"

#~ msgid "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
#~ msgstr "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Quarkusの認証メカニズム]"
