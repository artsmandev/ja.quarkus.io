# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-12-01 02:27+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/rest-client-reactive.adoc:6
#, no-wrap
msgid "Using the REST Client Reactive"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:12
msgid "This guide explains how to use the REST Client Reactive in order to interact with REST APIs.  REST Client Reactive is a non-blocking counterpart of the RESTEasy REST Client."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:15
msgid "If your application uses a client and exposes REST endpoints, please use link:resteasy-reactive[RESTEasy Reactive] for the server part."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:19
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:21
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:22
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:23
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:24
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:25
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:29
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:33
msgid "The solution is located in the `rest-client-reactive-quickstart` {quickstarts-tree-url}/rest-client-reactive-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:34
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:37
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:47
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=rest-client-reactive-quickstart \\\n"
"    -DclassName=\"org.acme.rest.client.ExtensionsResource\" \\\n"
"    -Dpath=\"/extension\" \\\n"
"    -Dextensions=\"resteasy-reactive-jackson,rest-client-reactive-jackson\"\n"
"cd rest-client-reactive-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:50
msgid "This command generates the Maven project with a REST endpoint and imports:"
msgstr "このコマンドは、REST エンドポイントを持つ Maven プロジェクトを生成し、 `rest-client` と `resteasy-jackson` のエクステンションをインポートします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:52
msgid "the `resteasy-reactive-jackson` extension for the REST server support. Use `resteasy-reactive` instead if you do not wish to use Jackson;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:53
msgid "the `rest-client-reactive-jackson` extension for the REST client support. Use `rest-client-reactive` instead if you do not wish to use Jackson"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:56
msgid "If you already have your Quarkus project configured, you can add the `rest-client-reactive-jackson` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:60
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"rest-client-reactive-jackson\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:63
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:70
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-rest-client-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:72
#, no-wrap
msgid "Setting up the model"
msgstr "モデルの設定"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:76
#, fuzzy
#| msgid "In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://restcountries.eu[restcountries.eu] service.  Our first order of business is to setup the model we will be using, in the form of a `Country` POJO."
msgid "In this guide we will be demonstrating how to consume part of the REST API supplied by the link:https://stage.code.quarkus.io[stage.code.quarkus.io] service.  Our first order of business is to set up the model we will be using, in the form of a `Extension` POJO."
msgstr "このガイドでは、 link:https://restcountries.eu[restcountries.eu] サービスが提供するREST APIの一部を利用する方法をデモします。まず最初に、 `Country` POJO の形式で使用するモデルをセットアップします。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:78
#, fuzzy
#| msgid "Create a `src/main/java/org/acme/rest/client/Country.java` file and set the following content:"
msgid "Create a `src/main/java/org/acme/rest/client/Extension.java` file and set the following content:"
msgstr "`src/main/java/org/acme/rest/client/Country.java` ファイルを作成し、以下の内容を設定します。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:82
#: upstream/_versions/main/guides/rest-client-reactive.adoc:104
#: upstream/_versions/main/guides/rest-client-reactive.adoc:152
#: upstream/_versions/main/guides/rest-client-reactive.adoc:214
#: upstream/_versions/main/guides/rest-client-reactive.adoc:254
#: upstream/_versions/main/guides/rest-client-reactive.adoc:272
#: upstream/_versions/main/guides/rest-client-reactive.adoc:310
#: upstream/_versions/main/guides/rest-client-reactive.adoc:351
#: upstream/_versions/main/guides/rest-client-reactive.adoc:377
#: upstream/_versions/main/guides/rest-client-reactive.adoc:435
#: upstream/_versions/main/guides/rest-client-reactive.adoc:462
#: upstream/_versions/main/guides/rest-client-reactive.adoc:527
#: upstream/_versions/main/guides/rest-client-reactive.adoc:564
#: upstream/_versions/main/guides/rest-client-reactive.adoc:599
#, no-wrap
msgid "package org.acme.rest.client;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:84
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:86
#, no-wrap
msgid "public class Extension {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:91
#, no-wrap
msgid ""
"    public String id;\n"
"    public String name;\n"
"    public String shortName;\n"
"    public List<String> keywords;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:93
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:96
#, fuzzy
#| msgid "The model above is only a subset of the fields provided by the service (thus the `@JsonIgnoreProperties` annotation), but it suffices for the purposes of this guide."
msgid "The model above is only a subset of the fields provided by the service, but it suffices for the purposes of this guide."
msgstr "上記のモデルは、サービスによって提供されるフィールドのサブセットに過ぎません(`@JsonIgnoreProperties` アノテーションによる)が、このガイドの目的には十分です。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:97
#, no-wrap
msgid "Create the interface"
msgstr "インターフェースの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:100
msgid "Using the REST Client Reactive is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/ExtensionsService.java` and have the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:106
#: upstream/_versions/main/guides/rest-client-reactive.adoc:154
#: upstream/_versions/main/guides/rest-client-reactive.adoc:353
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:111
#: upstream/_versions/main/guides/rest-client-reactive.adoc:259
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:115
#: upstream/_versions/main/guides/rest-client-reactive.adoc:164
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/v2\")\n"
#| "@RegisterRestClient\n"
#| "public interface CountriesService {\n"
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"public interface ExtensionsService {\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:119
#: upstream/_versions/main/guides/rest-client-reactive.adoc:266
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:122
#, fuzzy
msgid "The `getById` method gives our code the ability to get an extension by id from the Code Quarkus API. The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "`getByName` メソッドは、私たちのコードに、REST Countries API から名前を指定して国を問い合わせる機能を与えます。クライアントがすべてのネットワーキングとマーシャリングを処理してくれるので、このような技術的な詳細は一切ありません。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:124
msgid "The purpose of the annotations in the code above is the following:"
msgstr "上のコードのアノテーションの目的は以下の通りです。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:127
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr "`@RegisterRestClient` により、Quarkusは、このインターフェイスがRESTクライアントとしてCDIインジェクションに利用可能であることを知ることができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:128
msgid "`@Path`, `@GET` and `@PathParam` are the standard JAX-RS annotations used to define how to access the service"
msgstr "`@Path` 、 `@GET` 、 `@PathParam` は、サービスへのアクセス方法を定義するために使用される標準的な JAX-RS アノテーションです。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client-reactive.adoc:133
msgid "When the `quarkus-rest-client-reactive-jackson` extension is installed, Quarkus will use the `application/json` media type by default for most return values, unless the media type is explicitly set via `@Produces` or `@Consumes` annotations."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client-reactive.adoc:136
msgid "If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.  It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr "JSON のデフォルトに頼らない場合は、エンドポイントに `@Produces` や `@Consumes` のアノテーションを付けて、期待されるコンテンツタイプを正確に定義することを強くお勧めします。これにより、ネイティブ実行ファイルに含まれる JAX-RS プロバイダ (コンバータとみなすことができます) の数を絞り込むことができます。"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client-reactive.adoc:142
msgid "The `getById` method above is a blocking call. It should not be invoked on the event loop.  The <<async-support>> section describes how to make non-blocking calls."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/rest-client-reactive.adoc:144
#, fuzzy, no-wrap
#| msgid "Query Parameters"
msgid "Path Parameters"
msgstr "クエリのパラメータ"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:148
msgid "If the GET request requires path parameters you can leverage the `@PathParam(\"parameter-name\")` annotation instead of (or in addition to) the `@QueryParam`. Path and query parameters can be combined, as required, as illustrated in the example below."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:160
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:169
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/stream/{stream}\")\n"
"    Set<Extension> getByStream(@PathParam(\"stream\") String stream, @QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:172
#, no-wrap
msgid "Create the configuration"
msgstr "コンフィグレーションの作成"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:176
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr "REST 呼び出しが行われるベース URL を決定するために、REST クライアントは `application.properties` からの設定を使用します。プロパティーの名前は、以下のコードで表示される特定の規則に従う必要があります。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:181
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=https://stage.code.quarkus.io/api # // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:185
#, fuzzy
#| msgid "Having this configuration means that all requests performed using `org.acme.rest.client.CountriesService` will use `https://restcountries.eu/rest` as the base URL.  Using the configuration above, calling the `getByName` method of `CountriesService` with a value of `France` would result in an HTTP GET request being made to `https://restcountries.eu/rest/v2/name/France`."
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.ExtensionsService` will use `https://stage.code.quarkus.io/api` as the base URL.  Using the configuration above, calling the `getById` method of `ExtensionsService` with a value of `io.quarkus:quarkus-rest-client-reactive` would result in an HTTP GET request being made to `https://stage.code.quarkus.io/api/extensions?id=io.quarkus:quarkus-rest-client-reactive`."
msgstr "この設定をすると、 `org.acme.rest.client.CountriesService` を使用して実行されるすべてのリクエストが `https://restcountries.eu/rest` をベースURLとして使用します。上記の設定を使用して、 `CountriesService` の `getByName` メソッドを `France` の値で呼び出すと、HTTP GET リクエストが `https://restcountries.eu/rest/v2/name/France` に対して実行されます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:187
#, fuzzy
#| msgid "Note that `org.acme.rest.client.CountriesService` _must_ match the fully qualified name of the `CountriesService` interface we created in the previous section."
msgid "Note that `org.acme.rest.client.ExtensionsService` _must_ match the fully qualified name of the `ExtensionsService` interface we created in the previous section."
msgstr "`org.acme.rest.client.CountriesService` は、前のセクションで作成した `CountriesService` インターフェイスの完全修飾名と _一致しなければならない_ ことに注意してください。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:189
msgid "To facilitate the configuration, you can use the `@RegisterRestClient` `configKey` property that allows to use different configuration root than the fully qualified name of your interface."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:197
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/v2\")\n"
#| "@RegisterRestClient\n"
#| "public interface CountriesService {\n"
msgid ""
"@RegisterRestClient(configKey=\"extensions-api\")\n"
"public interface ExtensionsService {\n"
"    [...]\n"
"}\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:204
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.extensions-api.url=https://stage.code.quarkus.io/api\n"
"quarkus.rest-client.extensions-api.scope=javax.inject.Singleton\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:206
#, no-wrap
msgid "Update the JAX-RS resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:209
#: upstream/_versions/main/guides/rest-client-reactive.adoc:373
#, fuzzy
#| msgid "Open the `src/main/java/org/acme/rest/client/CountriesResource.java` file and update it with the following content:"
msgid "Open the `src/main/java/org/acme/rest/client/ExtensionsResource.java` file and update it with the following content:"
msgstr "`src/main/java/org/acme/rest/client/CountriesResource.java` ファイルを開き、以下の内容で更新してください。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:217
#: upstream/_versions/main/guides/rest-client-reactive.adoc:380
#, no-wrap
msgid ""
"import io.smallrye.common.annotation.Blocking;\n"
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:221
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:224
#: upstream/_versions/main/guides/rest-client-reactive.adoc:284
#: upstream/_versions/main/guides/rest-client-reactive.adoc:388
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/country\")\n"
#| "public class CountriesResource {\n"
msgid ""
"@Path(\"/extension\")\n"
"public class ExtensionsResource {\n"
msgstr ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:227
#, no-wrap
msgid ""
"    @RestClient // <1>\n"
"    ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:236
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    @Blocking // <2>\n"
"    public Set<Extension> id(String id) {\n"
"        return extensionsService.getById(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:239
msgid "There are two interesting parts in this listing:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:241
msgid "the client stub is injected with the `@RestClient` annotation instead of the usual CDI `@Inject`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:242
msgid "the call we are making with the client is blocking, hence we need the `@Blocking` annotation on the REST endpoint"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:243
#, no-wrap
msgid "Programmatic client creation with RestClientBuilder"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:248
msgid "Instead of annotating the client with `@RegisterRestClient`, and injecting a client with `@RestClient`, you can also create REST Client programmatically.  You do that with `RestClientBuilder`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:250
msgid "With this approach the client interface could look as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:262
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/v2\")\n"
#| "@RegisterRestClient\n"
#| "public interface CountriesService {\n"
msgid ""
"@Path(\"/extensions\")\n"
"public interface ExtensionsService {\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:269
msgid "And the service as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:276
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import org.eclipse.microprofile.rest.client.RestClientBuilder;\n"
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:281
#: upstream/_versions/main/guides/rest-client-reactive.adoc:385
#: upstream/_versions/main/guides/rest-client-reactive.adoc:471
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:286
#, no-wrap
msgid "    private final ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:292
#, no-wrap
msgid ""
"    public ExtensionsResource() {\n"
"        extensionsService = RestClientBuilder.newBuilder()\n"
"            .baseUri(\"https://stage.code.quarkus.io/api\")\n"
"            .build(ExtensionsService.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:299
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    public Set<Extension> id(String id) {\n"
"        return extensionsService.getById(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:301
#, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:305
#, fuzzy
#| msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/CountriesResourceTest.java` file and change the content of the `testCountryNameEndpoint` method to:"
msgid "Next, we need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` file and change the content of the test to:"
msgstr "また、エンドポイントに加えられた変更を反映させるために、機能テストを更新する必要があります。 `src/test/java/org/acme/rest/client/CountriesResourceTest.java` ファイルを編集し、 `testCountryNameEndpoint` メソッドの内容を変更します。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:312
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:314
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:319
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.hasItem;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
"import static org.hamcrest.Matchers.greaterThan;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:322
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/country\")\n"
#| "public class CountriesResource {\n"
msgid ""
"@QuarkusTest\n"
"public class ExtensionsResourceTest {\n"
msgstr ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:336
#, no-wrap
msgid ""
"    @Test\n"
"    public void testExtensionsIdEndpoint() {\n"
"        given()\n"
"            .when().get(\"/extension/id/io.quarkus:quarkus-rest-client-reactive\")\n"
"            .then()\n"
"            .statusCode(200)\n"
"            .body(\"$.size()\", is(1),\n"
"                \"[0].id\", is(\"io.quarkus:quarkus-rest-client-reactive\"),\n"
"                \"[0].name\", is(\"REST Client Reactive\"),\n"
"                \"[0].keywords.size()\", greaterThan(1),\n"
"                \"[0].keywords\", hasItem(\"rest-client\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:339
msgid "The code above uses link:http://rest-assured.io/[REST Assured]'s link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] capabilities."
msgstr "上のコードでは、 link:http://rest-assured.io/[REST Assured] の link:https://github.com/rest-assured/rest-assured/wiki/GettingStarted#jsonpath[json-path] 機能を使用しています。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:342
#, no-wrap
msgid "Async Support"
msgstr "非同期サポート"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:347
msgid "To get the full power of the reactive nature of the client, you can use the non-blocking flavor of REST Client Reactive extension, which comes with support for `CompletionStage` and `Uni`.  Let's see it in action by adding a `getByIdAsync` method in our `ExtensionsService` REST interface. The code should look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:359
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:363
#: upstream/_versions/main/guides/rest-client-reactive.adoc:449
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/v2\")\n"
#| "@RegisterRestClient\n"
#| "public interface CountriesService {\n"
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient(configKey = \"extensions-api\")\n"
"public interface ExtensionsService {\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:366
#: upstream/_versions/main/guides/rest-client-reactive.adoc:638
#, no-wrap
msgid ""
"    @GET\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:370
#: upstream/_versions/main/guides/rest-client-reactive.adoc:642
#, no-wrap
msgid ""
"    @GET\n"
"    CompletionStage<Set<Extension>> getByIdAsync(@QueryParam(\"id\") String id);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:391
#: upstream/_versions/main/guides/rest-client-reactive.adoc:477
#, no-wrap
msgid ""
"    @RestClient\n"
"    ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:399
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id/{id}\")\n"
"    @Blocking\n"
"    public Set<Extension> id(String id) {\n"
"        return extensionsService.getById(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:406
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id-async/{id}\")\n"
"    public CompletionStage<Set<Extension>> idAsync(String id) {\n"
"        return extensionsService.getByIdAsync(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:411
msgid "Please note that since the invocation is now non-blocking, we don't need the `@Blocking` annotation anymore on the endpoint.  This means that the `idAsync` method will be invoked on the event loop, i.e. will not get offloaded to a worker pool thread and thus reducing hardware resource utilization."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:414
#, fuzzy
#| msgid "To test asynchronous methods, add the test method below in `CountriesResourceTest`:"
msgid "To test asynchronous methods, add the test method below in `ExtensionsResourceTest`:"
msgstr "非同期メソッドをテストするには、`CountriesResourceTest` に以下のテストメソッドを追加します。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:428
#, no-wrap
msgid ""
"@Test\n"
"public void testExtensionIdAsyncEndpoint() {\n"
"    given()\n"
"        .when().get(\"/extension/id-async/io.quarkus:quarkus-rest-client-reactive\")\n"
"        .then()\n"
"        .statusCode(200)\n"
"        .body(\"$.size()\", is(1),\n"
"            \"[0].id\", is(\"io.quarkus:quarkus-rest-client-reactive\"),\n"
"            \"[0].name\", is(\"REST Client Reactive\"),\n"
"            \"[0].keywords.size()\", greaterThan(1),\n"
"            \"[0].keywords\", hasItem(\"rest-client\"));\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:431
msgid "The `Uni` version is very similar:"
msgstr "`Uni` 版は非常に似ています。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:438
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:445
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:451
#: upstream/_versions/main/guides/rest-client-reactive.adoc:480
#, no-wrap
msgid "    // ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:455
#, no-wrap
msgid ""
"    @GET\n"
"    Uni<Set<Extension>> getByIdAsUni(@QueryParam(\"id\") String id)\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:458
#, fuzzy
#| msgid "The `CountriesResource` becomes:"
msgid "The `ExtensionsResource` becomes:"
msgstr "`CountriesResource` は次のようになります。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:466
#, no-wrap
msgid ""
"import io.smallrye.common.annotation.Blocking;\n"
"import io.smallrye.mutiny.Uni;\n"
"import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:474
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/country\")\n"
#| "public class CountriesResource {\n"
msgid ""
"@Path(\"/extension\")\n"
"public class ExtensionsResource\n"
msgstr ""
"@Path(\"/country\")\n"
"public class CountriesResource {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:487
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/id-uni/{id}\")\n"
"    public Uni<Set<Extension>> idUni(String id) {\n"
"        return extensionsService.getByIdAsUni(id);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/rest-client-reactive.adoc:490
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#. type: delimited block =
#: upstream/_versions/main/guides/rest-client-reactive.adoc:494
#, fuzzy
#| msgid "The previous snippet uses Mutiny reactive types, if you're not familiar with them, read the link:getting-started-reactive#mutiny[Getting Started with Reactive guide] first."
msgid "The previous snippet uses Mutiny reactive types.  If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "前のスニペットでは、Mutinyのリアクティブタイプを使用していますが、もし慣れていない場合は、まず link:getting-started-reactive#mutiny[Getting Started with Reactiveガイド] を読んでください。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:498
#, fuzzy
msgid "When returning a `Uni`, every _subscription_ invokes the remote service.  It means you can re-send the request by re-subscribing on the `Uni`, or use a `retry` as follows:"
msgstr "`Uni` を返すとき、すべての _サブスクリプション_ は 、リモートサービスを呼び出します。つまり、 `Uni` で再購読してリクエストを再送信するか、以下のように `retry` を使用することができます。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:503
#, no-wrap
msgid "@RestClient ExtensionsService extensionsService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:505
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:508
#, no-wrap
msgid ""
"extensionsService.getByIdAsUni(id)\n"
"    .onFailure().retry().atMost(10);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:513
msgid "If you use a `CompletionStage`, you would need to call the service's method to retry.  This difference comes from the laziness aspect of Mutiny and its subscription protocol.  More details about this can be found in https://smallrye.io/smallrye-mutiny/#_uni_and_multi[the Mutiny documentation]."
msgstr "`CompletionStage` を使用する場合は、サービスのメソッドを呼び出して再試行する必要があります。この違いは、Mutinyとそのサブスクリプションプロトコルの lazy 性の側面から来ています。これについての詳細は Mutiny の link:https://smallrye.io/smallrye-mutiny/#_uni_and_multi[ドキュメント] を参照してください。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:514
#, no-wrap
msgid "Custom headers support"
msgstr "カスタムヘッダーのサポート"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:517
msgid "There are a few ways in which you can specify custom headers for your REST calls:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:519
#, fuzzy
#| msgid "The MicroProfile REST client allows amending request headers by registering a `ClientHeadersFactory` with the `@RegisterClientHeaders` annotation."
msgid "by registering a `ClientHeadersFactory` or a `ReactiveClientHeadersFactory` with the `@RegisterClientHeaders` annotation"
msgstr "MicroProfile REST クライアントでは、 `ClientHeadersFactory` を `@RegisterClientHeaders` アノテーションで登録することで、リクエストヘッダを修正することができます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:520
msgid "by specifying the value of the header with `@ClientHeaderParam`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:521
msgid "by specifying the value of the header by `@HeaderParam`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:523
msgid "The code below demonstrates how to use each of these techniques:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:532
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import org.eclipse.microprofile.rest.client.annotation.ClientHeaderParam;\n"
"import org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders;\n"
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:539
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.HeaderParam;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import java.util.Set;\n"
"import java.util.concurrent.CompletionStage;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:546
#, no-wrap
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders(RequestUUIDHeaderFactory.class) // <1>\n"
"@ClientHeaderParam(name = \"my-header\", value = \"constant-header-value\") // <2>\n"
"@ClientHeaderParam(name = \"computed-header\", value = \"{org.acme.rest.client.Util.computeHeader}\") // <3>\n"
"public interface ExtensionsService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:551
#, no-wrap
msgid ""
"    @GET\n"
"    @ClientHeaderParam(name = \"header-from-properties\", value = \"${header.value}\") // <4>\n"
"    Set<Extension> getById(@QueryParam(\"id\") String id, @HeaderParam(\"jaxrs-style-header\") String headerValue); // <5>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:554
msgid "There can be only one `ClientHeadersFactory` per class. With it, you can not only add custom headers, but you can also transform existing ones. See the `RequestUUIDHeaderFactory` class below for an example of the factory."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:555
msgid "`@ClientHeaderParam` can be used on the client interface and on methods. It can specify a constant header value..."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:556
msgid "... and a name of a method that should compute the value of the header. It can either be a static method or a default method in this interface"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:557
msgid "... as well as a value from your application's configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:558
msgid "... or as a normal JAX-RS `@HeaderParam` annotated argument"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:560
msgid "A `ClientHeadersFactory` can look as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:566
#: upstream/_versions/main/guides/rest-client-reactive.adoc:601
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:571
#: upstream/_versions/main/guides/rest-client-reactive.adoc:606
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.ws.rs.core.MultivaluedHashMap;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:574
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class RequestUUIDHeaderFactory implements ClientHeadersFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:582
#, no-wrap
msgid ""
"    @Override\n"
"    public MultivaluedMap<String, String> update(MultivaluedMap<String, String> incomingHeaders, MultivaluedMap<String, String> clientOutgoingHeaders) {\n"
"        MultivaluedMap<String, String> result = new MultivaluedHashMap<>();\n"
"        result.add(\"X-request-uuid\", UUID.randomUUID().toString());\n"
"        return result;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:586
msgid "As you see in the example above, you can make your `ClientHeadersFactory` implementation a CDI bean by annotating it with a scope-defining annotation, such as `@Singleton`, `@ApplicationScoped`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:588
msgid "To specify a value for `${header.value}`, simply put the following in your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:592
#, no-wrap
msgid "header.value=value of the header\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:595
msgid "Also, there is a reactive flavor of `ClientHeadersFactory` that allows doing blocking operations. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:609
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class GetTokenReactiveClientHeadersFactory extends ReactiveClientHeadersFactory {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:612
#, no-wrap
msgid ""
"    @Inject\n"
"    Service service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:623
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<MultivaluedMap<String, String>> getHeaders(MultivaluedMap<String, String> incomingHeaders) {\n"
"        return Uni.createFrom().item(() -> {\n"
"            MultivaluedHashMap<String, String> newHeaders = new MultivaluedHashMap<>();\n"
"            // perform blocking call\n"
"            newHeaders.add(HEADER_NAME, service.getToken());\n"
"            return newHeaders;\n"
"        });\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/rest-client-reactive.adoc:625
#, no-wrap
msgid "Default header factory"
msgstr "デフォルトのヘッダーファクトリー"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:629
#, fuzzy
#| msgid "You can also use `@RegisterClientHeaders` annotation without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used and all headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property will be amended. Individual header names are comma-separated."
msgid "The `@RegisterClientHeaders` annotation can also be used without any custom factory specified. In that case the `DefaultClientHeadersFactoryImpl` factory will be used.  If you make a REST client call from a REST resource, this factory will propagate all the headers listed in `org.eclipse.microprofile.rest.client.propagateHeaders` configuration property from the resource request to the client request. Individual header names are comma-separated."
msgstr "また、カスタムファクトリーを指定せずに `@RegisterClientHeaders` アノテーションを使用することもできます。その場合は、 `DefaultClientHeadersFactoryImpl` ファクトリーが使用され、 `org.eclipse.microprofile.rest.client.propagateHeaders` 設定プロパティに記載されているすべてのヘッダーが修正されます。個々のヘッダー名はコンマで区切られています。"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:635
#, fuzzy, no-wrap
#| msgid ""
#| "@Path(\"/v2\")\n"
#| "@RegisterRestClient\n"
#| "public interface CountriesService {\n"
msgid ""
"@Path(\"/extensions\")\n"
"@RegisterRestClient\n"
"@RegisterClientHeaders\n"
"public interface ExtensionsService {\n"
msgstr ""
"@Path(\"/v2\")\n"
"@RegisterRestClient\n"
"public interface CountriesService {\n"

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:647
#, no-wrap
msgid "org.eclipse.microprofile.rest.client.propagateHeaders=Authorization,Proxy-Authorization\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:649
#, no-wrap
msgid "Multipart Form support"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:653
msgid "Rest Client Reactive allows sending data as multipart forms. This way you can for example send files efficiently."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:656
msgid "To send data as a multipart form, you need to create a class that would encapsulate all the fields to be sent, e.g."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:663
#, no-wrap
msgid ""
"class FormDto {\n"
"    @FormParam(\"file\")\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    public File file;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:668
#, no-wrap
msgid ""
"    @FormParam(\"otherField\")\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String textProperty;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:671
msgid "The method that sends a form needs to specify multipart form data as the consumed media type, e.g."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/rest-client-reactive.adoc:678
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    @Path(\"/binary\")\n"
"    String sendMultipart(@MultipartForm FormDto data);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:683
msgid "Fields specified as `File`, `Path`, `byte[]` or `Buffer` are sent as files; as binary files for `@PartType(MediaType.APPLICATION_OCTET_STREAM)`, as text files for other content types.  Other fields are sent as form attributes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:693
msgid "There are a few modes in which the form data can be encoded. By default, Rest Client Reactive uses RFC1738.  You can override it by specifying the mode either on the client level, by setting `io.quarkus.rest.client.multipart-post-encoder-mode` RestBuilder property to the selected value of `HttpPostRequestEncoder.EncoderMode` or by specifying `quarkus.rest-client.multipart-post-encoder-mode` in your `application.properties`. Please note that the latter works only for clients created with the `@RegisterRestClient` annotation.  All the available modes are described in the link:https://netty.io/4.1/api/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.EncoderMode.html[Netty documentation]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:695
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:699
#, fuzzy
#| msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/country/name/greece."
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/extension/id/io.quarkus:quarkus-rest-client-reactive."
msgstr "`./mvnw compile quarkus:dev` でアプリケーションを実行します。ブラウザで http://localhost:8080/country/name/greece を開きます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:701
#, fuzzy
#| msgid "You should see a JSON object containing some basic information about Greece."
msgid "You should see a JSON object containing some basic information about this extension."
msgstr "ギリシャに関する基本情報を含む JSON オブジェクトが表示されます。"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:704
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `target/quarkus-app/quarkus-run.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr "いつものように、 `./mvnw clean package` を使ってアプリケーションをパッケージ化し、 `target/quarkus-app/quarkus-run.jar` ファイルを使って実行することができます。また、 `./mvnw clean package -Pnative` でネイティブ実行ファイルを生成することも出来ます。"

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:705
#, no-wrap
msgid "Using a Mock HTTP Server for tests"
msgstr "テストにモックHTTPサーバーを使用する"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:710
msgid "For tests, you can easily mock the HTTP server with Wiremock.  The link:rest-client#using-a-mock-http-server-for-tests[Wiremock section of the Quarkus - Using the REST Client] describes how to set it up in detail."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:711
#, no-wrap
msgid "Known limitations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:714
msgid "While the REST Client Reactive extension aims to be a drop-in replacement for the REST Client extension, there are some differences and limitations:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:717
msgid "the default scope of the client for the new extension is `@ApplicationScoped` while the `quarkus-rest-client` defaults to `@Dependent` To change this behavior, set the `quarkus.rest-client-reactive.scope` property to the fully qualified scope name."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:718
msgid "it is not possible to set `HostnameVerifier` or `SSLContext`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:719
msgid "a few things that don't make sense for a non-blocking implementations, such as setting the `ExecutorService`, don't work"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/rest-client-reactive.adoc:722
#, no-wrap
msgid "Further reading"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_versions/main/guides/rest-client-reactive.adoc:724
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-2.0/microprofile-rest-client-spec-2.0.html[MicroProfile Rest Client specification]"
msgstr ""

#~ msgid "`@Produces` defines the expected content-type"
#~ msgstr "`@Produces` は、期待されるコンテンツタイプを定義しています。"

#~ msgid "Let's see it in action by adding a `@RegisterClientHeaders` annotation pointing to a `RequestUUIDHeaderFactory` class in our `CountriesService` REST interface:"
#~ msgstr "`CountriesService` REST インタフェースに `@RegisterClientHeaders` アノテーションを追加して、 `RequestUUIDHeaderFactory` クラスを指すようにしてみましょう。"

#~ msgid "And the `RequestUUIDHeaderFactory` would look like:"
#~ msgstr "そして、 `RequestUUIDHeaderFactory` は次のようになります。"
