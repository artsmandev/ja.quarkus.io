# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-12-22 15:04+0000\n"
"PO-Revision-Date: 2021-03-26 23:17+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/spring-security.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus Extension for Spring Security API"
msgstr "Quarkus - Spring Security API用のQuarkusエクステンション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:11
#, fuzzy
msgid "While users are encouraged to use xref:security.adoc#standard-security-annotations[Java standard annotations for security authorizations], Quarkus provides a compatibility layer for Spring Security in the form of the `spring-security` extension."
msgstr "ユーザーは link:security#standard-security-annotations[セキュリティー認証のためにJava標準の] アノテーションを使用することが推奨されていますが、Quarkusは、 `spring-security` エクステンションの形でSpring Securityとの互換性レイヤーを提供しています。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:13
#, fuzzy
msgid "This guide explains how a Quarkus application can leverage the well known Spring Security annotations to define authorizations on RESTful services using roles."
msgstr "このガイドでは、Quarkusアプリケーションがよく知られているSpring Securityアノテーションを利用して、ロールを使用してRESTfulサービスに権限を定義する方法について説明します。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:17
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:19
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:20
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:21
#, fuzzy
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:22
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:23
#, fuzzy
msgid "Some familiarity with the Spring Web extension"
msgstr "Spring Web エクステンションに慣れている"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:25
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:29
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:33
#, fuzzy
msgid "The solution is located in the `spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[directory]."
msgstr "ソリューションは `spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:34
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:37
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:47
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-security-quickstart \\\n"
"    -DclassName=\"org.acme.spring.security.GreetingController\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"spring-web,spring-security,quarkus-elytron-security-properties-file,resteasy-jackson\"\n"
"cd spring-security-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:50
#, fuzzy
msgid "This command generates a Maven project with a REST endpoint and imports the `spring-web`, `spring-security` and `security-properties-file` extensions."
msgstr "このコマンドは、REST エンドポイントを持つ Maven プロジェクトを生成し、 `spring-web` 、 `spring-security` 、および `security-properties-file` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:53
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `spring-web`, `spring-security` and `security-properties-file` extensions to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで次のコマンドを実行することで、 `spring-web` 、 `spring-security` 、および `security-properties-file` のエクステンションをプロジェクトに追加できます。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:57
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-web,spring-security,quarkus-elytron-security-properties-file,resteasy-jackson\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:60
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:79
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-security</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:82
#, fuzzy
msgid "For more information about `security-properties-file`, you can check out the guide of the xref:security-properties.adoc[quarkus-elytron-security-properties-file] extension."
msgstr "`security-properties-file` の詳細については、 link:security-properties[quarkus-elytron-security-properties-file] エクステンションのガイドをチェックすることができます。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:83
#, fuzzy, no-wrap
msgid "GreetingController"
msgstr "グリーティングコントローラ"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:87
#, fuzzy
msgid "The Quarkus Maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default).  The `src/main/java/org/acme/spring/web/GreetingController.java` file looks as follows:"
msgstr "Quarkus Mavenプラグインは、RESTエンドポイントを定義するためのSpring Webアノテーションを持つコントローラを自動的に生成しました(デフォルトで使用されるJAX-RSのものではなく)。 `src/main/java/org/acme/spring/web/GreetingController.java` ファイルは以下のようになっています。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:91
#: upstream/_guides/spring-security.adoc:114
#: upstream/_guides/spring-security.adoc:151
#: upstream/_guides/spring-security.adoc:190
#, no-wrap
msgid "package org.acme.spring.security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:95
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:99
#: upstream/_guides/spring-security.adoc:160
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:105
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:107
#: upstream/_guides/spring-security.adoc:185
#, fuzzy, no-wrap
msgid "GreetingControllerTest"
msgstr "グリーティングコントローラテスト"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:110
#, fuzzy
msgid "Note that a test for the controller has been created as well:"
msgstr "コントローラのテストも作成されていることに注意してください。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:117
#: upstream/_guides/spring-security.adoc:193
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:120
#: upstream/_guides/spring-security.adoc:196
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:123
#: upstream/_guides/spring-security.adoc:199
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:132
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:134
#: upstream/_guides/spring-security.adoc:218
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:136
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:140
#, fuzzy
msgid "Run the application with: `./mvnw quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr "アプリケーションを実行するには、次の手順を実行します: `./mvnw quarkus:dev` .ブラウザを http://localhost:8080/greeting に開きます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:142
#, fuzzy
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は `{\"message\": \"hello\"}` ."

#. type: Title ==
#: upstream/_guides/spring-security.adoc:143
#, fuzzy, no-wrap
msgid "Modify the controller to secure the `hello` method"
msgstr "`hello` メソッドをセキュアにするためにコントローラを変更します。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:147
#, fuzzy
msgid "In order to restrict access to the `hello` method to users with certain roles, the `@Secured` annotation will be utilized.  The updated controller will be:"
msgstr "特定の役割を持つユーザーに対して、 `hello` メソッドへのアクセスを制限するため、 `@Secured` 注釈を利用します。更新されたコントローラは"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:156
#, no-wrap
msgid ""
"import org.springframework.security.access.annotation.Secured;\n"
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:167
#, no-wrap
msgid ""
"    @Secured(\"admin\")\n"
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:172
#, fuzzy
msgid "The easiest way to setup users and roles for our example is to use the `security-properties-file` extension. This extension essentially allows users and roles to be defined in the main Quarkus configuration file - `application.properties`.  For more information about this extension check xref:security-properties.adoc[the associated guide].  An example configuration would be the following:"
msgstr "この例でユーザーとロールを設定する最も簡単な方法は、 `security-properties-file` のエクステンションを使用することです。このエクステンションを使用すると、基本的には、ユーザーとロールをメインのQuarkus設定ファイル( `application.properties` )で定義することができます。このエクステンションの詳細については、 link:security-properties[関連するガイド] を参照してください。設定例は次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:181
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.roles.scott=admin,user\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.roles.stuart=user\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:184
#, fuzzy
msgid "Note that the test also needs to be updated. It could look like:"
msgstr "テストも更新する必要があることに注意してください。次のように見えるかもしれません。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:207
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpointForbidden() {\n"
"        given().auth().preemptive().basic(\"stuart\", \"test\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(403);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:216
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given().auth().preemptive().basic(\"scott\", \"jb0ss\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:220
#, fuzzy, no-wrap
msgid "Test the changes"
msgstr "変更点のテスト"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:222
#, fuzzy, no-wrap
msgid "Access allowed"
msgstr "アクセス許可"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:225
#, fuzzy
msgid "Open your browser again to http://localhost:8080/greeting and introduce `scott` and `jb0ss` in the dialog displayed."
msgstr "`jb0ss` 再度ブラウザを開き、表示されたダイアログで http://localhost:8080/greeting と `scott` を紹介します。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:227
#, fuzzy
msgid "The word `hello` should be displayed."
msgstr "`hello` と表示されているはずです。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:228
#, fuzzy, no-wrap
msgid "Access forbidden"
msgstr "アクセス禁止"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:231
#, fuzzy
msgid "Open your browser again to http://localhost:8080/greeting and let empty the dialog displayed."
msgstr "もう一度 http://localhost:8080/greeting にブラウザを開き、表示されたダイアログを空にします。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:233
#, fuzzy
msgid "The result should be:"
msgstr "結果が出るはずです。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:239
#, no-wrap
msgid ""
"Access to localhost was denied\n"
"You don't have authorization to view this page.\n"
"HTTP ERROR 403\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-security.adoc:241
#, fuzzy, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:244
#, fuzzy
msgid "You can of course create a native image using the instructions of the xref:building-native-image.adoc[Building a native executable guide]."
msgstr "もちろん、 link:building-native-image[ネイティブ実行ファイルの構築ガイド] の指示を使ってネイティブイメージを作成することもできます。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:246
#, fuzzy, no-wrap
msgid "Supported Spring Security functionalities"
msgstr "サポートされているSpring Securityの機能"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:250
#, fuzzy
msgid "Quarkus currently only supports a subset of the functionalities that Spring Security provides with more features being planned. More specifically, Quarkus supports the security related features of role-based authorization semantics (think of `@Secured` instead of `@RolesAllowed`)."
msgstr "Quarkusは現在、Spring Securityが提供する機能のサブセットのみをサポートしています。具体的には、Quarkusはロールベースの認証セマンティクスのセキュリティー関連機能をサポートしています( `@RolesAllowed` の代わりに `@Secured` と考えてください)。"

#. type: Title ===
#: upstream/_guides/spring-security.adoc:251
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:254
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_guides/spring-security.adoc:255
#, no-wrap
msgid "Supported Spring Security annotations"
msgstr "サポートされているSpring Securityアノテーション"

#. type: Table
#: upstream/_guides/spring-security.adoc:257
#, no-wrap
msgid "Nam"
msgstr "Nam"

#. type: Table
#: upstream/_guides/spring-security.adoc:259
#: upstream/_guides/spring-security.adoc:425
#, no-wrap
msgid "Comments"
msgstr "Comments"

#. type: Table
#: upstream/_guides/spring-security.adoc:260
#, no-wrap
msgid "@Secured"
msgstr "@Secured"

#. type: Title ====
#: upstream/_guides/spring-security.adoc:263
#: upstream/_guides/spring-security.adoc:267
#, no-wrap
msgid "@PreAuthorize"
msgstr "@PreAuthorize"

#. type: Table
#: upstream/_guides/spring-security.adoc:265
#, fuzzy, no-wrap
msgid "See next section for more details"
msgstr "詳細は次項をご覧ください。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:271
#, fuzzy
msgid "Quarkus provides support for some of the most used features of Spring Security's `@PreAuthorize` annotation.  The expressions that are supported are the following:"
msgstr "Quarkusは、Spring Securityの `@PreAuthorize` アノテーションの中で最も使用されている機能の一部をサポートしています。サポートされている式は以下の通りです。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:272
#, fuzzy, no-wrap
msgid "hasRole"
msgstr "持つ役割を持つ"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:275
#, fuzzy
msgid "To test if the current user has a specific role, the `hasRole` expression can be used inside `@PreAuthorize`."
msgstr "現在のユーザーが特定のロールを持っているかどうかをテストするには、 `hasRole` 式を `@PreAuthorize` ."

#. type: Plain text
#: upstream/_guides/spring-security.adoc:277
#, fuzzy
msgid "Some examples are: `@PreAuthorize(\"hasRole('admin')\")`, `@PreAuthorize(\"hasRole(@roles.USER)\")` where the `roles` is a bean that could be defined like so:"
msgstr "いくつかの例があります。 `@PreAuthorize(\"hasRole('admin')\")` , `@PreAuthorize(\"hasRole(@roles.USER)\")` のように、 `roles` はBeanとして定義することができます。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:281
#, no-wrap
msgid "import org.springframework.stereotype.Component;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:284
#, no-wrap
msgid ""
"@Component\n"
"public class Roles {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:288
#, no-wrap
msgid ""
"    public final String ADMIN = \"admin\";\n"
"    public final String USER = \"user\";\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:290
#, fuzzy, no-wrap
msgid "hasAnyRole"
msgstr "ハズエニロール"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:293
#, fuzzy
msgid "In the same fashion as `hasRole`, users can use `hasAnyRole` to check if the logged in user has any of the specified roles."
msgstr "`hasRole` と同様に、ユーザーは `hasAnyRole` を使用して、ログインしているユーザーが指定されたロールのいずれかを持っているかどうかを確認することができます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:295
#, fuzzy
msgid "Some examples are: `@PreAuthorize(\"hasAnyRole('admin')\")`, `@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"
msgstr "いくつかの例があります。 `@PreAuthorize(\"hasAnyRole('admin')\")` 。 `@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:296
#, fuzzy, no-wrap
msgid "permitAll"
msgstr "許す"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:298
#, fuzzy
msgid "Adding `@PreAuthorize(\"permitAll()\")` to a method will ensure that that method is accessible by any user (including anonymous users). Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will be accessible."
msgstr "メソッドに `@PreAuthorize(\"permitAll()\")` を追加することで、そのメソッドはどのユーザー(匿名ユーザーを含む)からもアクセスできるようになります。クラスに追加することで、他のSpring Securityアノテーションでアノテーションされていないクラスのすべてのパブリックメソッドにアクセスできるようになります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:299
#, fuzzy, no-wrap
msgid "denyAll"
msgstr "否認"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:301
#, fuzzy
msgid "Adding `@PreAuthorize(\"denyAll()\")` to a method will ensure that that method is not accessible by any user. Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will not be accessible to any user."
msgstr "メソッドに `@PreAuthorize(\"denyAll()\")` を追加すると、そのメソッドはどのユーザーからもアクセスできなくなります。クラスに追加することで、他のSpring Securityアノテーションでアノテーションされていないクラスのすべてのパブリックメソッドは、どのユーザーからもアクセスできないことを保証します。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:302
#, fuzzy, no-wrap
msgid "isAnonymous"
msgstr "イズアノニマス"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:303
#, fuzzy
msgid "When annotating a bean method with `@PreAuthorize(\"isAnonymous()\")` the method will only be accessible if the current user is anonymous - i.e. a non logged in user."
msgstr "Beanメソッドに `@PreAuthorize(\"isAnonymous()\")` をアノテーションする場合、そのメソッドは、現在のユーザーが匿名の場合、つまりログインしていないユーザーの場合にのみアクセス可能です。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:304
#, fuzzy, no-wrap
msgid "isAuthenticated"
msgstr "イズオーセンティファイド"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:306
#, fuzzy
msgid "When annotating a bean method with `@PreAuthorize(\"isAuthenticated()\")` the method will only be accessible if the current user is a logged in user. Essentially the method is only unavailable for anonymous users."
msgstr "Beanメソッドに `@PreAuthorize(\"isAuthenticated()\")` をアノテーションすると、現在のユーザーがログインしている場合にのみアクセス可能になります。基本的に、このメソッドは匿名ユーザーに対してのみ利用できます。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:307
#, fuzzy, no-wrap
msgid "#paramName == authentication.principal.username"
msgstr "#paramName == authentication.principal.username"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:308
#, fuzzy
msgid "This syntax allows users to check if a parameter (or a field of the parameter) of the secured method is equal to the logged in username."
msgstr "この構文を使用すると、セキュリティーで保護されたメソッドのパラメーター (またはパラメーターのフィールド) がログインしたユーザー名と等しいかどうかを確認できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:310
#, fuzzy
msgid "Examples of this use case are:"
msgstr "このユースケースの例としては、以下のようなものがあります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:314
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:316
#, no-wrap
msgid "    private final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:320
#, no-wrap
msgid ""
"    public Person(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:325
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:328
#: upstream/_guides/spring-security.adoc:356
#, no-wrap
msgid ""
"@Component\n"
"public class MyComponent {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:331
#, no-wrap
msgid ""
"    @PreAuthorize(\"#username == authentication.principal.username\") <1>\n"
"    public void doSomething(String username, String other){\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:333
#: upstream/_guides/spring-security.adoc:397
#: upstream/_guides/spring-security.adoc:402
#: upstream/_guides/spring-security.adoc:407
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:336
#, no-wrap
msgid ""
"    @PreAuthorize(\"#person.name == authentication.principal.username\") <2>\n"
"    public void doSomethingElse(Person person){\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:339
#: upstream/_guides/spring-security.adoc:362
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:341
#, fuzzy
msgid "`doSomething` can be executed if the current logged in user is the same as the `username` method parameter"
msgstr "`doSomething` は、現在ログインしているユーザーが `username` メソッドのパラメーターと同じ場合に実行できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:342
#, fuzzy
msgid "`doSomethingElse` can be executed if the current logged in user is the same as the `name` field of `person` method parameter"
msgstr "`doSomethingElse` は、現在ログインしているユーザーが `person` メソッドパラメーターの `name` フィールドと同じ場合に実行できます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:344
#, fuzzy
msgid "the use of `authentication.` is optional, so using `principal.username` has the same result."
msgstr "`authentication.` の使用は任意ですので、 `principal.username` を使用しても同じ結果になります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:345
#, fuzzy, no-wrap
msgid "#paramName != authentication.principal.username"
msgstr "#paramName != authentication.principal.username"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:346
#, fuzzy
msgid "This is similar to the previous expression with the difference being that the method parameter must be different than the logged in username."
msgstr "これは前の式と似ていますが、メソッドのパラメーターがログインしているユーザー名とは異なるものでなければならないという違いがあります。"

#. type: Labeled list
#: upstream/_guides/spring-security.adoc:347
#, fuzzy, no-wrap
msgid "@beanName.method()"
msgstr "@beanName.method()"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:348
#, fuzzy
msgid "This syntax allows developers to specify that the execution of method of a specific bean will determine if the current user can access the secured method."
msgstr "この構文により、開発者は、特定のBeanのメソッドの実行により、現在のユーザーが安全なメソッドにアクセスできるかどうかを判断するように指定することができます。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:351
#, fuzzy
msgid "The syntax is best explained with an example.  Let's assume that a `MyComponent` bean has been created like so:"
msgstr "構文は例を挙げて説明するのが一番です。 `MyComponent` Beanがこのように作成されたとしましょう。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:359
#, no-wrap
msgid ""
"    @PreAuthorize(\"@personChecker.check(#person, authentication.principal.username)\")\n"
"    public void doSomething(Person person){\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:366
#, fuzzy
msgid "The `doSomething` method has been annotated with `@PreAuthorize` using an expression that indicates that method `check` of a bean named `personChecker` needs to be invoked to determine whether the current user is authorized to invoke the `doSomething` method."
msgstr "`doSomething` メソッドは、 `personChecker` という名前のBeanのメソッド `check` を現在のユーザーが `doSomething` メソッドの呼び出しを許可されているかどうかを判断するために呼び出す必要があることを示す式を使用して `@PreAuthorize` とアノテーションされています。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:368
#, fuzzy
msgid "An example of the `PersonChecker` could be:"
msgstr "`PersonChecker` の例を挙げることができます。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:373
#, no-wrap
msgid ""
"@Component\n"
"public class PersonChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:379
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean check(Person person, String username) {\n"
"        return person.getName().equals(username);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:382
#, fuzzy
msgid "Note that for the `check` method the parameter types must match what is specified in `@PreAuthorize` and that the return type must be a `boolean`."
msgstr "`check` メソッドの場合、パラメーターの型は `@PreAuthorize` で指定されているものと一致していなければならず、戻り値の型は `boolean` ."

#. type: Title =====
#: upstream/_guides/spring-security.adoc:383
#, fuzzy, no-wrap
msgid "Combining expressions"
msgstr "式の組み合わせ"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:387
#, fuzzy
msgid "The `@PreAuthorize` annotations allows for the combination of expressions using logical `AND` / `OR`. Currently there is a limitation where only a single logical operation can be used (meaning mixing `AND` and `OR` isn't allowed)."
msgstr "`@PreAuthorize` アノテーションでは、論理的な `AND` / `OR` を使った表現の組み合わせが可能です。現在のところ、単一の論理演算しか使用できない制限があります( `AND` と `OR` の混合は許可されていません)。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:389
#, fuzzy
msgid "Some examples of allowed expressions are:"
msgstr "許可された表現の例としては、以下のようなものがあります。"

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:395
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('user', 'admin') AND #user == principal.username\")\n"
"    public void allowedForUser(String user) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:400
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasRole('user') OR hasRole('admin')\")\n"
"    public void allowedForUserOrAdmin() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-security.adoc:405
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('view1', 'view2') OR isAnonymous() OR hasRole('test')\")\n"
"    public void allowedForAdminOrAnonymous() {\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-security.adoc:410
#, fuzzy
msgid "Also to be noted that currently parentheses are not supported and expressions are evaluated from left to right when needed."
msgstr "また、現在は括弧はサポートされておらず、必要に応じて左から右へと式が評価される点にも注意が必要です。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:411
#, fuzzy, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的注意事項"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:417
#, fuzzy
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr "QuarkusのSpringサポートは、Springアプリケーションコンテキストを起動したり、Springインフラストラクチャクラスを実行したりしないことに注意してください。Springクラスやアノテーションは、メタデータの読み込みや、ユーザーコードのメソッドの戻り値の型やパラメーターの型として使用されるだけです。これはエンドユーザーにとって何を意味するかというと、任意のSpringライブラリを追加しても何の効果もないということです。さらに、Springのインフラストラクチャクラス(例えば `org.springframework.beans.factory.config.BeanPostProcessor` のような)は実行されません。"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:418
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:421
msgid "The following table shows how Spring Security annotations can be converted to JAX-RS annotations."
msgstr "次の表は、Spring SecurityアノテーションをJAX-RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_guides/spring-security.adoc:423
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_guides/spring-security.adoc:423
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_guides/spring-security.adoc:426
#, no-wrap
msgid "@Secured(\"admin\")"
msgstr "@Secured(\"admin\")"

#. type: Table
#: upstream/_guides/spring-security.adoc:427
#, no-wrap
msgid "@RolesAllowed(\"admin\")"
msgstr "@RolesAllowed(\"admin\")"

#. type: Title ==
#: upstream/_guides/spring-security.adoc:431
#, no-wrap
msgid "More Spring guides"
msgstr "その他のSpringガイド"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:434
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:436
#, fuzzy
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "link:spring-di[Quarkus - Spring DI用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:437
#, fuzzy
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "link:spring-web[Quarkus - Spring Web用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:438
#, fuzzy
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "link:spring-data-jpa[Quarkus - Spring Data JPA用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:439
#, fuzzy
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "link:spring-data-rest[Quarkus - Spring Data REST用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:440
#, fuzzy
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "link:spring-cloud-config-client[Quarkus - Spring Cloud Config Serverからプロパティを読み込む]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:441
#, fuzzy
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "link:spring-boot-properties[Quarkus - Spring Bootプロパティ用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:442
#, fuzzy
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "link:spring-cache[Quarkus - Spring Cache用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-security.adoc:442
#, fuzzy
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "link:spring-scheduled[Quarkus - Spring Scheduled用のエクステンション]"
