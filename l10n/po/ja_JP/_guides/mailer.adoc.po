# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-04-07 19:11+0000\n"
"PO-Revision-Date: 2021-03-26 23:18+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/mailer.adoc:6
#, no-wrap
msgid "Quarkus - Sending emails"
msgstr "Quarkus - メールの送信"

#. type: Plain text
#: upstream/_guides/mailer.adoc:11
msgid "This guide demonstrates how your Quarkus application can send emails using an SMTP server."
msgstr "このガイドでは、QuarkusアプリケーションがSMTPサーバーを使用して電子メールを送信する方法を説明します。"

#. type: Title ==
#: upstream/_guides/mailer.adoc:12
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/mailer.adoc:15
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/mailer.adoc:17
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/mailer.adoc:18
msgid "The SMTP hostname, port and credentials, and an email address"
msgstr "SMTPホスト名、ポート、資格情報、および電子メール アドレス"

#. type: Plain text
#: upstream/_guides/mailer.adoc:19
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/mailer.adoc:20
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/mailer.adoc:21
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/mailer.adoc:22
msgid "GraalVM installed if you want to run in native mode."
msgstr "ネイティブモードで動作させたい場合は、GraalVMがインストールされていること"

#. type: Title ==
#: upstream/_guides/mailer.adoc:23
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/mailer.adoc:27
msgid "In this guide, we are going to see how you can send emails from a Quarkus application.  It covers simple emails, attachments, inlined attachments, the reactive and imperative APIs..."
msgstr "このガイドでは、Quarkusアプリケーションからメールを送信する方法を見ていきます。シンプルな電子メール、添付ファイル、インラインの添付ファイル、リアクティブ型と命令型のAPIをカバーしています。"

#. type: Title ==
#: upstream/_guides/mailer.adoc:28
#, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/mailer.adoc:31
msgid "Create a new project with the following command:"
msgstr "以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:41
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=sending-email-quickstart \\\n"
"    -DclassName=\"org.acme.mailer.SimpleMailerResource\" \\\n"
"    -Dpath=\"/simple\" \\\n"
"    -Dextensions=\"resteasy,mailer\"\n"
"cd sending-email-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:44
msgid "If you already have an existing project, add the `mailer` extension:"
msgstr "既存のプロジェクトがある場合は、 `mailer` のエクステンションを追加してください。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:48
#, no-wrap
msgid "./mvnw quarkus:add-extensions -Dextensions=\"mailer\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:51
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:58
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-mailer</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:60
#, no-wrap
msgid "Configuring the mailer"
msgstr "メーラーの設定"

#. type: Plain text
#: upstream/_guides/mailer.adoc:64
#, fuzzy
msgid "The Quarkus mailer is using SMTP. In the `src/main/resources/application.properties` file, you need to configure the host, port, username, password as well as the other configuration aspect.  Note that the password can also be configured using system properties and environment variables."
msgstr "QuarkusのメーラーはSMTPを使用しています。 `src/main/resources/application.properties` ファイルでは、ホスト、ポート、ユーザー名、パスワードだけでなく、他の設定面も設定する必要があります。パスワードは、システムのプロパティーや環境変数を使って設定することもできるので注意してください。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:66
#, fuzzy
msgid "Here is an example using _sendgrid_:"
msgstr "ここでは _sendgridを_ 使用した例を示します。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:76
#, no-wrap
msgid ""
"quarkus.mailer.from=test@quarkus.io\n"
"quarkus.mailer.host=smtp.sendgrid.net\n"
"quarkus.mailer.port=465\n"
"quarkus.mailer.ssl=true\n"
"quarkus.mailer.username=....\n"
"quarkus.mailer.password=....\n"
"quarkus.mailer.mock=false\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/mailer.adoc:84
#, fuzzy
msgid "It is recommended to encrypt any sensitive data, such as the `quarkus.mailer.password`.  One approach is to save the value into a secure store like HashiCorp Vault, and refer to it from the configuration.  Assuming for instance that Vault contains key `mail-password` at path `myapps/myapp/myconfig`, then the mailer extension can be simply configured as:"
msgstr "`quarkus.mailer.password` のようなセンシティブなデータは暗号化しておくことをお勧めします。一つの方法としては、HashiCorp Vault のような安全なストアに値を保存し、設定から参照するという方法があります。例えば、Vault がパス `myapps/myapp/myconfig` にキー `mail-password` を含んでいると仮定すると、メーラー エクステンションは単純に次のように設定することができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:90
#, no-wrap
msgid ""
"...\n"
"# path within the kv secret engine where is located the application sensitive configuration\n"
"quarkus.vault.secret-config-kv-path=myapps/myapp/myconfig\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:93
#, no-wrap
msgid ""
"...\n"
"quarkus.mailer.password=${mail-password}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:96
#, fuzzy
msgid "Please note that the password value is evaluated only once, at startup time. If `mail-password` was changed in Vault, the only way to get the new value would be to restart the application."
msgstr "パスワードの値は、起動時に一度だけ評価されますのでご注意ください。Vault で `mail-password` が変更された場合、新しい値を取得するにはアプリケーションを再起動するしかありません。"

#. type: delimited block =
#: upstream/_guides/mailer.adoc:100
#, fuzzy
msgid "For more information about the Mailer extension configuration please refer to the <<configuration-reference, Configuration Reference>>."
msgstr "メーラー拡張設定の詳細については、 link:#configuration-reference[設定リファレンスを] 参照してください。"

#. type: Title ==
#: upstream/_guides/mailer.adoc:101
#, fuzzy, no-wrap
msgid "Sending simple emails"
msgstr "簡単なメールの送信"

#. type: delimited block =
#: upstream/_guides/mailer.adoc:104
#, fuzzy
msgid "In a JAX-RS resource, or in a bean, you can inject the mailer as follows:"
msgstr "JAX-RSリソース内、またはBean内では、以下のようにメーラーを注入することができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:109
#, no-wrap
msgid ""
"@Inject\n"
"Mailer mailer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:112
#, no-wrap
msgid ""
"@Inject\n"
"ReactiveMailer reactiveMailer;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:115
#, fuzzy
msgid "There are 2 APIs:"
msgstr "APIは2つあります。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:117
#, fuzzy
msgid "`io.quarkus.mailer.Mailer` provides the imperative (blocking and synchronous) API;"
msgstr "`io.quarkus.mailer.Mailer` は、必須(ブロッキングと同期)APIを提供しています。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:118
#, fuzzy
msgid "`io.quarkus.mailer.reactive.ReactiveMailer` provides the reactive (non-blocking and asynchronous) API"
msgstr "`io.quarkus.mailer.reactive.ReactiveMailer` は反応的な (ノンブロッキングで非同期の) API を提供しています。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:120
#, fuzzy
msgid "The two APIs are equivalent feature-wise. Actually the `Mailer` implementation is built on top of the `ReactiveMailer` implementation."
msgstr "2つのAPIは機能的には同等です。実際には `Mailer` の実装は `ReactiveMailer` の実装の上に構築されています。"

#. type: Block title
#: upstream/_guides/mailer.adoc:122
#, fuzzy, no-wrap
msgid "Deprecation"
msgstr "非推奨"

#. type: delimited block =
#: upstream/_guides/mailer.adoc:125
#, fuzzy
msgid "`io.quarkus.mailer.ReactiveMailer` is deprecated in favor of `io.quarkus.mailer.reactive.ReactiveMailer`."
msgstr "`io.quarkus.mailer.ReactiveMailer` は `io.quarkus.mailer.reactive.ReactiveMailer` に代わって非推奨となりました。"

#. type: Block title
#: upstream/_guides/mailer.adoc:128
#, no-wrap
msgid "Mutiny"
msgstr "Mutiny"

#. type: delimited block =
#: upstream/_guides/mailer.adoc:131
#, fuzzy
msgid "The reactive mailer uses Mutiny reactive types, if you're not familiar with them, read the link:getting-started-reactive#mutiny[Getting Started with Reactive guide] first."
msgstr "リアクティブメーラーはMutiny link:getting-started-reactive#mutiny[リアクティブタイプ] を使用しています。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:134
#, fuzzy
msgid "To send a simple email, proceed as follows:"
msgstr "簡単なメールを送信するには、以下のように進めます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:141
#, no-wrap
msgid ""
"// Imperative API:\n"
"mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body.\"));\n"
"// Reactive API:\n"
"Uni<Void> stage = reactiveMailer.send(Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body.\"));\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:144
#, fuzzy
msgid "For example, you can use the `Mailer` in a JAX-RS endpoint as follows:"
msgstr "例えば、JAX-RS のエンドポイントで `Mailer` を使用すると、以下のようになります。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:153
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/simple\")\n"
"public Response sendASimpleEmail() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"A simple email from quarkus\", \"This is my body\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:162
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/async\")\n"
"public CompletionStage<Response> sendASimpleEmailAsync() {\n"
"    return reactiveMailer.send(\n"
"            Mail.withText(\"to@acme.org\", \"A reactive email from quarkus\", \"This is my body\"))\n"
"            .subscribeAsCompletionStage()\n"
"            .thenApply(x -> Response.accepted().build());\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/mailer.adoc:167
#, fuzzy
msgid "With the `quarkus-resteasy-mutiny` extension, you can return an instance of `Uni` directly."
msgstr "`quarkus-resteasy-mutiny` エクステンションを使用すると、 `Uni` のインスタンスを直接返すことができます。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:170
#, fuzzy
msgid "With such a JAX-RS resource, you can check that everything is working with:"
msgstr "このようなJAX-RSリソースがあれば、すべてが動作していることを確認することができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:175
#, no-wrap
msgid ""
"curl http://localhost:8080/simple\n"
"curl http://localhost:8080/async\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:180
#, fuzzy
msgid "You can create new `io.quarkus.mailer.Mail` instances from the constructor or from the `Mail.withText` and `Mail.withHtml` helper methods. The `Mail` instance lets you add recipients (to, cc, or bcc), set the subject, headers, sender (from) address..."
msgstr "コンストラクタ、または `Mail.withText` と `Mail.withHtml` ヘルパーメソッドから、新しい `io.quarkus.mailer.Mail` インスタンスを作成できます。 `Mail` インスタンスでは、受信者 (to, cc, bcc) の追加、件名、ヘッダ、送信者 (from) アドレスの設定などを行うことができます。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:182
#, fuzzy
msgid "You can also send several `Mail` objects in one call:"
msgstr "一度の呼び出しで複数の `Mail` オブジェクトを送信することもできます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:186
#, no-wrap
msgid "mailer.send(mail1, mail2, mail3);\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:188
#, fuzzy, no-wrap
msgid "Sending attachments"
msgstr "添付ファイルの送信"

#. type: Plain text
#: upstream/_guides/mailer.adoc:191
#, fuzzy
msgid "To send attachment, just use the `addAttachment` methods on the `io.quarkus.mailer.Mail` instance:"
msgstr "添付ファイルを送信するには、 `io.quarkus.mailer.Mail` インスタンスの `addAttachment` メソッドを使用するだけです。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:203
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/attachment\")\n"
"public Response sendEmailWithAttachment() {\n"
"    mailer.send(Mail.withText(\"to@acme.org\", \"An email from quarkus with attachment\",\n"
"            \"This is my body\")\n"
"            .addAttachment(\"my-file.txt\",\n"
"                \"content of my file\".getBytes(), \"text/plain\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:206
#, fuzzy
msgid "Attachments can be created from raw bytes (as shown in the snippet) or files."
msgstr "添付ファイルは、(スニペットに示すように)生のバイトから作成することも、ファイルから作成することもできます。"

#. type: Title ==
#: upstream/_guides/mailer.adoc:207
#, fuzzy, no-wrap
msgid "Sending HTML emails with inlined attachments"
msgstr "インライン付きの添付ファイルでHTMLメールを送信する"

#. type: Plain text
#: upstream/_guides/mailer.adoc:211
#, fuzzy
msgid "When sending HTML email, you can add inlined attachments.  For example, you can send an image with your email, and this image will be displayed in the mail content. If you put the image file into resources folder, you should specify the full path to the file. \"e.g.\" \"META-INF/resources/quarkus-logo.png\" otherwise quarkus will lookup in the root folder of the project"
msgstr "HTMLメールを送信する際に、インラインの添付ファイルを追加することができます。例えば、メールに画像を添付して送信すると、この画像がメールの内容に表示されます。画像ファイルをリソースフォルダーに入れる場合は、ファイルのフルパスを指定する必要があります。\"例\"\"META-INF/resources/quarkus-logo.png\" でない場合、quarkusはプロジェクトのルートフォルダーを検索します。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:226
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/html\")\n"
"public Response sendingHTML() {\n"
"    String body = \"<strong>Hello!</strong>\" + \"\\n\" +\n"
"        \"<p>Here is an image for you: <img src=\\\"cid:my-image@quarkus.io\\\"/></p>\" +\n"
"        \"<p>Regards</p>\";\n"
"    mailer.send(Mail.withHtml(\"to@acme.org\", \"An email in HTML\", body)\n"
"        .addInlineAttachment(\"quarkus-logo.png\",\n"
"            new File(\"quarkus-logo.png\"),\n"
"            \"image/png\", \"<my-image@quarkus.io>\"));\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:232
#, fuzzy
msgid "Note the _content-id_ format and reference.  By spec, when you create the inline attachment, the content-id must be structured as follows: `<id@domain>`.  If you don't wrap your content-id between `<>`, it is automatically wrapped for you.  When you want to reference your attachment, for instance in the `src` attribute, use `cid:id@domain` (without the `<` and `>`)."
msgstr "content _-id の_ 形式と参照に注意してください。仕様上、インライン添付ファイルを作成する際には、content-idは以下のように構成する必要があります。 `<id@domain>` . `<>` の間に content-id を挟まない場合は、自動的にラップされます。添付ファイルを参照したい場合、例えば `src` 属性で参照したい場合は `cid:id@domain` を使用してください( `<` と `>` は使用しないでください)。"

#. type: Title ==
#: upstream/_guides/mailer.adoc:233
#, fuzzy, no-wrap
msgid "Message Body Based on Qute Templates"
msgstr "Quteテンプレートをベースにしたメッセージボディ"

#. type: Plain text
#: upstream/_guides/mailer.adoc:236
#, fuzzy
msgid "It's also possible to inject a mail template, where the message body is created automatically using link:qute[Qute templates]."
msgstr "また、 link:qute[Quteのテンプレートを] 使ってメッセージ本文が自動的に作成されるメールテンプレートを注入することも可能です。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:241
#, no-wrap
msgid ""
"@Path(\"\")\n"
"public class MailingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:246
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    static class Templates {\n"
"        public static native MailTemplateInstance hello(String name); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:259
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/mail\")\n"
"    public CompletionStage<Response> send() {\n"
"        // the template looks like: Hello {name}! <2>\n"
"        return Templates.hello(\"John\")\n"
"           .to(\"to@acme.org\") <3>\n"
"           .subject(\"Hello from Qute template\")\n"
"           .send() <4>\n"
"           .subscribeAsCompletionStage()\n"
"           .thenApply(x -> Response.accepted().build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:262
#, fuzzy
msgid "By convention, the enclosing class name and method names are used to locate the template. In this particular case, we will use the `MailingResource/hello.html` and `MailingResource/hello.txt` templates to create the message body."
msgstr "慣例では、テンプレートの場所を特定するには、クラス名とメソッド名を囲んだ部分が使用されます。この例では、 `MailingResource/hello.html` および `MailingResource/hello.txt` テンプレートを使用してメッセージ本文を作成します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:263 upstream/_guides/mailer.adoc:290
#, fuzzy
msgid "Set the data used in the template."
msgstr "テンプレートで使用するデータを設定します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:264 upstream/_guides/mailer.adoc:289
#, fuzzy
msgid "Create a mail template instance and set the recipient."
msgstr "メールテンプレートのインスタンスを作成し、受信者を設定します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:265 upstream/_guides/mailer.adoc:291
#, fuzzy
msgid "`MailTemplate.send()` triggers the rendering and, once finished, sends the e-mail via a `Mailer` instance."
msgstr "`MailTemplate.send()` はレンダリングをトリガーし、レンダリングが完了すると `Mailer` インスタンスを経由して電子メールを送信します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:267 upstream/_guides/mailer.adoc:293
#, fuzzy
msgid "Injected mail templates are validated during build. If there is no matching template in `src/main/resources/templates` the build fails."
msgstr "インジェクションされたメールテンプレートはビルド中に検証されます。 `src/main/resources/templates` に一致するテンプレートがない場合、ビルドは失敗します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:269
#, fuzzy
msgid "You can also do this without type-safe templates:"
msgstr "タイプセーフのテンプレートがなくてもできます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:274
#, no-wrap
msgid ""
"@Inject\n"
"MailTemplate hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:286
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/mail\")\n"
"public CompletionStage<Response> send() {\n"
"    return hello.to(\"to@acme.org\") <2>\n"
"       .subject(\"Hello from Qute template\")\n"
"       // the template looks like: Hello {name}!\n"
"       .data(\"name\", \"John\") <3>\n"
"       .send() <4>\n"
"       .subscribeAsCompletionStage()\n"
"       .thenApply(x -> Response.accepted().build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:288
#, fuzzy
msgid "If there is no `@ResourcePath` qualifier provided, the field name is used to locate the template. In this particular case, we will use the `hello.html` and `hello.txt` templates to create the message body."
msgstr "`@ResourcePath` の修飾子が指定されていない場合は、フィールド名がテンプレートの場所を特定するために使用されます。この場合、 `hello.html` および `hello.txt` テンプレートを使用してメッセージ本文を作成します。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:295
#, fuzzy
msgid "Adding `quarkus-resteasy-reactive` extension allows you to directly return a `Uni`, such as:"
msgstr "`quarkus-resteasy-mutiny` エクステンションを使用すると、 `Uni` のインスタンスを直接返すことができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:300
#, no-wrap
msgid ""
"@Inject\n"
"MailTemplate hello;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:311
#, no-wrap
msgid ""
"@GET\n"
"@Path(\"/mail\")\n"
"public Uni<Response> send() { <1>\n"
"    return hello.to(\"to@acme.org\")\n"
"        .subject(\"Hello from Qute template\")\n"
"        // the template looks like: Hello {name}!\n"
"        .data(\"name\", \"John\")\n"
"        .send()\n"
"        .onItem().transform(x -> Response.accepted().build()); <2>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:313
#, fuzzy
msgid "The method returns a `Uni`"
msgstr "このメソッドは `Uni`"

#. type: Plain text
#: upstream/_guides/mailer.adoc:314
#, fuzzy
msgid "Transform the `Uni<Void>` returned by `MailTemplate` into `Unit<Response>`"
msgstr "`MailTemplate` が返す `Uni&amp;lt;Void&amp;gt;` を `Unit&amp;lt;Response&amp;gt;`"

#. type: Title ==
#: upstream/_guides/mailer.adoc:316
#, fuzzy, no-wrap
msgid "Testing email sending"
msgstr "メール送信のテスト"

#. type: Plain text
#: upstream/_guides/mailer.adoc:321
#, fuzzy
msgid "Because it is very inconvenient to send emails during development and testing, you can set the `quarkus.mailer.mock` boolean configuration to `true` to not actually send emails but print them on stdout and collect them in a `MockMailbox` bean instead.  This is the default if you are running Quarkus in `DEV` or `TEST` mode."
msgstr "開発中やテスト中にメールを送信するのは非常に不便なので、 `quarkus.mailer.mock` のブール設定を `true` に設定して、実際にはメールを送信せずに標準出力に印刷して、代わりに `MockMailbox` Beanに収集することができます。これは、 `DEV` または `TEST` モードでQuarkusを実行している場合のデフォルトです。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:323
#, fuzzy
msgid "You can then write tests to verify that your emails were sent, for example, by a REST endpoint:"
msgstr "そして、テストを書いて、例えばRESTエンドポイントでメールが送信されたかどうかを確認することができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:328
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class MailTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:330
#, no-wrap
msgid "    private static final String TO = \"foo@quarkus.io\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:333
#, no-wrap
msgid ""
"    @Inject\n"
"    MockMailbox mailbox;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:338
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    void init() {\n"
"        mailbox.clear();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:348
#, no-wrap
msgid ""
"    @Test\n"
"    void testTextMail() throws MessagingException, IOException {\n"
"        // call a REST endpoint that sends email\n"
"        given()\n"
"        .when()\n"
"        .get(\"/send-email\")\n"
"        .then()\n"
"           .statusCode(202)\n"
"           .body(is(\"OK\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:355
#, no-wrap
msgid ""
"        // verify that it was sent\n"
"        List<Mail> sent = mailbox.getMessagesSentTo(TO);\n"
"        assertThat(sent).hasSize(1);\n"
"        Mail actual = sent.get(0);\n"
"        assertThat(actual.getText()).contains(\"Wake up!\");\n"
"        assertThat(actual.getSubject()).isEqualTo(\"Alarm!\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:359
#, no-wrap
msgid ""
"        assertThat(mailbox.getTotalMessagesSent()).isEqualTo(6);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:361
#, fuzzy, no-wrap
msgid "Gmail specific configuration"
msgstr "Gmail特有の設定"

#. type: Plain text
#: upstream/_guides/mailer.adoc:364
#, fuzzy
msgid "If you want to use the Gmail SMTP server, first create a dedicated password in `Google Account > Security > App passwords` or go to https://myaccount.google.com/apppasswords."
msgstr "GmailのSMTPサーバーを利用する場合は、まず、 `Google Account > Security > App passwords` で専用のパスワードを作成するか、 https://myaccount.google.com/apppasswords 。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:366
#, fuzzy
msgid "When done, you can configure your Quarkus application by adding the following properties to your `application.properties`:"
msgstr "完了したら、 `application.properties` .Quarkusアプリケーションに以下のプロパティーを追加して、Quarkusアプリケーションを設定することができます。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:368
#, fuzzy
msgid "With TLS:"
msgstr "TLSで。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:378
#, no-wrap
msgid ""
"quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN\n"
"quarkus.mailer.from=YOUREMAIL@gmail.com\n"
"quarkus.mailer.host=smtp.gmail.com\n"
"quarkus.mailer.port=587\n"
"quarkus.mailer.start-tls=REQUIRED\n"
"quarkus.mailer.username=YOUREMAIL@gmail.com\n"
"quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:381
#, fuzzy
msgid "Or with SSL:"
msgstr "もしくはSSLで。"

#. type: Plain text
#: upstream/_guides/mailer.adoc:391
#, fuzzy
msgid "  quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN quarkus.mailer.from=YOUREMAIL@gmail.com quarkus.mailer.host=smtp.gmail.com quarkus.mailer.port=465 quarkus.mailer.ssl=true quarkus.mailer.username=YOUREMAIL@gmail.com quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD"
msgstr "quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN quarkus.mailer.from=YOUREMAIL@gmail.com quarkus.mailer.host=smtp.gmail.com quarkus.mailer.port=465 quarkus.mailer.ssl=true quarkus.mailer.username=YOUREMAIL@gmail.com quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD quarkus.mailer.username=YOUREMAIL@gmail.com quarkus.mailer.password=YOURGENERATEDAPPLICATIONPASSWORD"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:398
#, no-wrap
msgid ""
"[NOTE]\n"
"====\n"
"The `quarkus.mailer.auth-methods` configuration option is needed for the Quarkus mailer to support password authentication with Gmail.\n"
"By default both the mailer and Gmail default to `XOAUTH2` which requires registering an application, getting tokens, etc.\n"
"====\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:399
#, fuzzy, no-wrap
msgid "Using SSL with native executables"
msgstr "ネイティブ実行ファイルでSSLを使用する"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:403
msgid "Note that if you enable SSL for the mailer and you want to build a native executable, you will need to enable the SSL support.  Please refer to the link:native-and-ssl[Using SSL With Native Executables] guide for more information."
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:404
#, fuzzy, no-wrap
msgid "Using the underlying Vert.x Mail Client"
msgstr "基礎となる Vert.x メールクライアントの使用"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:408
msgid "The Quarkus Mailer is implemented on top of the https://vertx.io/docs/vertx-mail-client/java/[Vert.x Mail Client], providing an asynchronous and non-blocking way to send emails.  If you need fine control on how the mail is sent, for instance if you need to retrieve the message ids, you can inject the underlying client, and use it directly:"
msgstr "Quarkus Mailerは、 link:https://vertx.io/docs/vertx-mail-client/java/[Vert.xメールクライアント] の上に実装されており、非同期でノンブロッキングな方法でメールを送信することができます。メールの送信方法を細かく制御する必要がある場合、例えばメッセージのIDを取得する必要がある場合などの場合は、基礎となるクライアントを注入して直接使用することができます。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:410
msgid "[source, java]"
msgstr ""

#. type: Plain text
#: upstream/_guides/mailer.adoc:412
#, fuzzy
msgid "@Inject MailClient client;"
msgstr "メールクライアントのクライアントをインジェクトします。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:415
#, no-wrap
msgid "Three API flavors are exposed:\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:418
#, no-wrap
msgid ""
"* the Mutiny client (`io.vertx.mutiny.ext.mail.MailClient`)\n"
"* the bare client (`io.vertx.ext.mail.MailClient`)\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:420
#, no-wrap
msgid "Check the link:vertx[Using Vert.x guide] for further details about these different APIs and how to select the most suitable for you.\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/mailer.adoc:423
#, no-wrap
msgid ""
"The retrieved `MailClient` is configured using the configuration key presented above.\n"
"You can also create your own instance, and pass your own configuration.\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:424
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:428
msgid "This guide has shown how you can send emails from a Quarkus application.  The _mailer_ extension works in JVM and native mode."
msgstr "このガイドでは、Quarkusアプリケーションからメールを送信する方法を紹介しました。 _mailer_ エクステンションは、JVMとネイティブモードで動作します。"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:431
msgid "[[configuration-reference]]"
msgstr ""

#. type: Title ==
#: upstream/_guides/mailer.adoc:431
#, fuzzy, no-wrap
msgid "Mailer Configuration Reference"
msgstr "メーラー設定リファレンス"

#. type: delimited block -
#: upstream/_guides/mailer.adoc:433
msgid "include::{generated-dir}/config/quarkus-mailer.adoc[opts=optional, leveloffset=+1]"
msgstr ""
