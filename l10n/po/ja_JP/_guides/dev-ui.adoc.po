msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/dev-ui.adoc
#, no-wrap
msgid "Dev UI"
msgstr "Dev UI"

#: _guides/dev-ui.adoc
msgid "Dev UI v2"
msgstr "Dev UI v2"

#: _guides/dev-ui.adoc
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards."
msgstr ""

#. type: Plain text
#: _guides/dev-ui.adoc
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr "このガイドでは、 link:building-my-first-extension.html[エクステンションの作成者]向けにQuarkus Dev UIについて説明します。"

#: _guides/dev-ui.adoc
msgid ""
"Quarkus ships with a Developer UI, which is available in dev mode (when you start\n"
"quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like\n"
"this:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "It allows you to:"
msgstr "これにより、次のことが可能になります:"

#: _guides/dev-ui.adoc
msgid "quickly visualize all the extensions currently loaded"
msgstr "現在ロードされているすべてのエクステンションを素早く視覚化"

#: _guides/dev-ui.adoc
msgid "view extension statuses and go directly to extension documentation"
msgstr ""

#: _guides/dev-ui.adoc
msgid "view and change `Configuration`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "manage and visualize `Continuous Testing`"
msgstr "管理と可視化 `Continuous Testing`"

#: _guides/dev-ui.adoc
msgid "view `Dev Services` information"
msgstr "`Dev Services` の情報の表示"

#: _guides/dev-ui.adoc
msgid "view the Build information"
msgstr "ビルド情報の表示"

#: _guides/dev-ui.adoc
msgid "view and stream various logs"
msgstr "各種ログの表示とストリーミング"

#: _guides/dev-ui.adoc
msgid "Each extension used in the application will be listed and you can navigate to the guide for each extension, see some more information on the extension, and view configuration applicable for that extension:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Make my extension extend the Dev UI"
msgstr ""

#. type: Plain text
#: _guides/dev-ui.adoc
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr "エクステンションをDev UIに表示させるためには、何もする必要はありません!"

#. type: Plain text
#: _guides/dev-ui.adoc
msgid "So you can always start with that :)"
msgstr "だから、いつでも始めることができます :)"

#: _guides/dev-ui.adoc
msgid "Extensions can:"
msgstr "エクステンションは可能である："

#: _guides/dev-ui.adoc
msgid "xref:add-links-to-an-extension-card[Add links to an extension card]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xref:add-full-pages[Add full custom pages]"
msgstr "xref:add-full-pages[フルカスタムページの追加]"

#: _guides/dev-ui.adoc
msgid "xref:add-a-log-file[Add a log stream]"
msgstr "xref:add-a-log-file[ログストリームの追加]"

#: _guides/dev-ui.adoc
msgid "xref:add-a-section-menu[Add a section menu]"
msgstr "xref:add-a-section-menu[セクションメニューの追加]"

#: _guides/dev-ui.adoc
msgid "xref:custom-cards[Create a custom card]"
msgstr "xref:custom-cards[カスタムカードの作成]"

#: _guides/dev-ui.adoc
msgid "Add links to an extension card"
msgstr "エクステンションカードにリンクを追加"

#: _guides/dev-ui.adoc
msgid "External Links"
msgstr "外部リンク"

#: _guides/dev-ui.adoc
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text or other data."
msgstr ""

#: _guides/dev-ui.adoc
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated openapi schema in both json and yaml format, and a link to Swagger UI:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The links to these external references is known at build time, so to get links like this on your card, all you need to do is add the following Build Step in your extension:"
msgstr "このような外部参照へのリンクはビルド時にわかるので、このようなリンクをカードに表示するには、エクステンションに以下のビルド・ステップを追加するだけでよい："

#: _guides/dev-ui.adoc
msgid "Always make sure that this build step is only run when in dev mode"
msgstr "このビルド・ステップは、常にdevモードのときだけ実行されるようにしてください。"

#: _guides/dev-ui.adoc
msgid "To add anything on the card, you need to return/produce a `CardPageBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`"
msgstr "リンクを追加するには、 `addPage` 。すべてのリンクは \"ページ \"に移動します。 `Page` 、ページ構築を支援するビルダーがいくつかあります。 `external` 。 `externalPageBuilder`"

#: _guides/dev-ui.adoc
msgid "Adding the url of the external link (in this case we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add an icon. All free font-awesome icons are available."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Note about icons"
msgstr ""

#: _guides/dev-ui.adoc
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`;"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Embedding external content"
msgstr ""

#: _guides/dev-ui.adoc
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example the open api schema document in `yaml` format:"
msgstr "デフォルトでは、外部リンクもDev UIの内部（埋め込み）でレンダリングされます。HTMLの場合、ページがレンダリングされ、その他のコンテンツはメディアタイプをマークアップするために link:https://codemirror.net/[code-mirrorを] 使用して表示されます。例えば、 `yaml` 形式のオープン API スキーマ・ドキュメント："

#: _guides/dev-ui.adoc
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr "コンテンツを埋め込みたくない場合は、ページビルダーの `.doNotEmbed()` 、リンクを新しいタブで開くことができます。"

#: _guides/dev-ui.adoc
msgid "Runtime external links"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case you can use a xref:JsonRPC[JsonRPC] Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr "上記の例では、ビルド時に使用するリンクを知っていることを前提としている。実行時にしかわからない場合もあるでしょう。その場合、追加するリンクを返す xref:JsonRPC[JsonRPC] メソッドを使い、リンクを作成するときにそれを使うことができます。ページ・ビルダーで `.url` メソッドを使うのではなく、 `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")` ."

#: _guides/dev-ui.adoc
msgid "Adding labels"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr ""

#: _guides/dev-ui.adoc
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "For dynamic and streaming labels, see the xref:JsonRPC[JsonRPC] Section."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Add full pages"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Build time data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To make build time data available in your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr ""

#: _guides/dev-ui.adoc
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr ""

#: _guides/dev-ui.adoc
msgid "If you have some data that is known at build time that you want to display you can use one of the following builders in `Page`:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xref:raw-data[Raw data]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xref:table-data[Table data]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xref:qute-data[Qute data]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "xref:web-component-page[Web Component page]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Raw data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This will display your data in it's raw (serialised) json value:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Use the `rawDataPageBuilder`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr ""

#: _guides/dev-ui.adoc
msgid "That will create a link to a page that renders the raw data in json:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Table data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Use the `tableDataPageBuilder`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Optionally only show certain fields."
msgstr ""

#: _guides/dev-ui.adoc
msgid "That will create a link to a page that renders the data in a table:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Qute data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr "quteテンプレートを使用して、ビルドタイムデータを表示することもできます。すべてのビルドタイム・データ・キーは、テンプレートで使用できます："

#: _guides/dev-ui.adoc
msgid "Use the `quteDataPageBuilder`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Using any Qute template to display the data, for example `qute-jokes-template.html`:"
msgstr "データを表示するために任意のQuteテンプレートを使用する。例えば、 `qute-jokes-template.html` ："

#: _guides/dev-ui.adoc
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Web Component page"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To build an interactive page with actions and runtime (or build time) data, you need to use the web component page:"
msgstr "アクションとランタイム（またはビルドタイム）データでインタラクティブなページを作るには、ウェブコンポーネントページを使う必要があります："

#: _guides/dev-ui.adoc
msgid "Use the `webComponentPageBuilder`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr "ウェブコンポーネントへのリンクは `/deployment/src/main/resources/dev-ui/` で指定します。タイトルを定義することもできます（ビルダーで `.title(\"My title\")` を使用）が、そうでない場合、タイトルは、常に `qwc` （Quarkus Web Component の略）ダッシュ `extensionName` （この場合は `arc` の例）ダッシュ `page title` （この場合は \"Beans\" ）の形式を持つ componentLink から想定されます。"

#: _guides/dev-ui.adoc
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Basic structure of a Web component page"
msgstr ""

#: _guides/dev-ui.adoc
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"You can import Classes and/or functions from other libraries.\n"
"In this case we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr "ビルド・ステップで定義されたビルド・タイム・データは、キーを使用して `build-time-data` から常にインポートすることができます。ビルド・ステップで追加されたすべてのキーが使用可能になります。"

#: _guides/dev-ui.adoc
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component) then Extension Name then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr "プロパティを追加することができます。プロパティがプライベートである場合は、プロパティの前に `_` を使用します。プロパティは通常HTMLテンプレートに注入され、そのプロパティが変更された場合、コンポーネントを再レンダリングすることを意味する状態を持つように定義できます。この場合、ビーンズはビルド時間データであり、ホットリロード時にのみ変更されます。"

#: _guides/dev-ui.adoc
msgid "Constructors (optional) should always call `super` first, and then set the default values for the properties."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The render method (from `LitElement`) will be called to render the page. In this method you return the markup of the page you want. You can use the `html` function from `Lit`, that gives you a template language to output the HTML you want. Once the template is created, you only need to set/change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr "ページをレンダリングするために、renderメソッド（ `LitElement` ）が呼び出される。このメソッドでは、希望するページのマークアップを返します。 `Lit` の `html` 関数を使用すると、必要なHTMLを出力するためのテンプレート言語が得られます。テンプレートが作成されたら、ページの内容を再レンダリングするためにプロパティを設定/変更するだけです。 link:https://lit.dev/docs/components/rendering/[Lit htmlについて] もっと読む"

#: _guides/dev-ui.adoc
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You always need to register your Web component as a custom element, with a unique tag. Here the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Using Vaadin UI components for rendering"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr ""

#: _guides/dev-ui.adoc
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Import the Vaadin component you want to use"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can also import other functions if needed"
msgstr ""

#: _guides/dev-ui.adoc
msgid "There are some internal UI components that you can use, described below"
msgstr "使用できる内部UIコンポーネントがいくつかあります。"

#: _guides/dev-ui.adoc
msgid "Using internal UI components"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[internal UI components] (under the `qui` namespace) are available to make certain things easier:"
msgstr "いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[内部UIコンポーネント] （ `qui` ネームスペース）は、特定のことを簡単にするために利用可能です："

#: _guides/dev-ui.adoc
msgid "Card"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Badge"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Alert"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Code block"
msgstr ""

#: _guides/dev-ui.adoc
msgid "IDE Link"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Card component to display contents in a card"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast` or set your own colors."
msgstr "`default` , `success` , `warning` , `error` , `contrast` のどのレベルでも、スモール、プライマリー、ピル、アイコン付き、クリッカブルのどの組み合わせでも、また独自の色を設定することもできます。"

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr "アラートはBootstrapアラートをモデルにしています。詳しくは link:https://getbootstrap.com/docs/4.0/components/alerts[こちらを] クリックしてください。"

#: _guides/dev-ui.adoc
msgid "Also see Notification controller below as an alternative."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "or fetching the contents from a URL:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "IDE link"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Using internal controllers"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr "特定のことを簡単にするために、いくつかの link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[内部コントローラーが] 用意されている："

#: _guides/dev-ui.adoc
msgid "Notifier"
msgstr "Notifier"

#: _guides/dev-ui.adoc
msgid "Storage"
msgstr "Storage"

#: _guides/dev-ui.adoc
msgid "Log"
msgstr "Log"

#: _guides/dev-ui.adoc
msgid "Router"
msgstr "Router"

#: _guides/dev-ui.adoc
msgid "JsonRPC"
msgstr "JsonRPC"

#: _guides/dev-ui.adoc
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, that will create a more prominent toast message."
msgstr ""

#: _guides/dev-ui.adoc
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Example usage:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, scoped to your extension. This way you do not have to worry that you might clash with another extension."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr "ローカルストレージは、ユーザーの好みや状態を記憶するのに便利です。例えば、フッターは一番下の引き出しの状態（開閉）と開いたときのサイズを記憶しています。"

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"The log controller is used to add control buttons to a (footer) log.\n"
"See <<Add a log file>>."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr "ルーターは主に内部で使用されます。これは、SPA内の正しいページ/セクションにURLをルーティングするために、隠れて link:https://github.com/vaadin/router[Vaadin Routerを] 使用しています。これはナビゲーションを更新し、履歴(戻るボタン)を許可します。これはまた、複数のページを持つエクステンションで利用可能なサブメニューを作成します。"

#: _guides/dev-ui.adoc
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr ""

#: _guides/dev-ui.adoc
msgid "This controller allows you to fetch or stream runtime data. (vs. <<Build time data>> discussed earlier). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Java part*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This code is responsible for making data available to display on the UI."
msgstr ""

#: _guides/dev-ui.adoc
msgid "You need to register the JsonPRCService in your processor in the deployment module:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Always only do this in Dev Mode"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Produce / return a `JsonRPCProvidersBuildItem`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr "ランタイム・モジュールの中に、UIでデータを利用可能にするメソッドを含むクラスを定義する。"

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Now, in your Runtime module create the JsonRPC Service. This class will default to an application scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The return object in these methods can be:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "primitives or `String`,"
msgstr ""

#: _guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#: _guides/dev-ui.adoc
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#: _guides/dev-ui.adoc
msgid "any other POJO that can be serializable to Json"
msgstr ""

#: _guides/dev-ui.adoc
msgid "All of the above can be blocking (POJO) or non-blocking (`@NonBlocking` or `Uni`). Or alternatively data can be streamed using `Multi`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "This example runs non blocking. We could also return `Uni<JsonArray>`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "The method name `getAll` will be available in the Javascript"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "*Webcomponent (Javascript) part*"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in you JsonRPC Service)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr ""

#: _guides/dev-ui.adoc
msgid "In this case the result is an array, so we can loop over it."
msgstr "この場合、結果は配列なので、それをループすることができる。"

#: _guides/dev-ui.adoc
msgid "JsonArray (or any Java collection) in either blocking or non-blocking will return an array, else a JsonObject will be returned."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid ""
"You can also pass in parameters in the method being called, for example:\n"
"(In the Runtime Java code)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "the clear method takes one parameter called `name`"
msgstr ""

#: _guides/dev-ui.adoc
msgid "In the Webcomponent (Javascript):"
msgstr ""

#: _guides/dev-ui.adoc
msgid "the `name` parameter is passed in."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Streaming data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Java side of streaming data:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Return the Multi that will stream jokes"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Javascript side of streaming data:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Dev UI Log"
msgstr ""

#: _guides/dev-ui.adoc
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful to debug all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Hot reload"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can update a screen automatically when a Hot reload has happened. To do this replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "`QwcHotReloadElement` extends `LitElement` so your component is still a Lit Element."
msgstr ""

#: _guides/dev-ui.adoc
msgid "When extending a `QwcHotReloadElement` you have to provide the `hotReload` method. (You also still need to provide the `render` method from Lit)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Custom cards"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr "デフォルトの内蔵カードを使用したくない場合は、拡張ページに表示されるカードをカスタマイズすることができます。"

#: _guides/dev-ui.adoc
msgid "To do this, you need to provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "And the following properties will be passed in:"
msgstr "そして、以下のプロパティが渡される："

#: _guides/dev-ui.adoc
msgid "extensionName"
msgstr ""

#: _guides/dev-ui.adoc
msgid "description"
msgstr ""

#: _guides/dev-ui.adoc
msgid "guide"
msgstr ""

#: _guides/dev-ui.adoc
msgid "namespace"
msgstr ""

#: _guides/dev-ui.adoc
msgid "State (Advance)"
msgstr ""

#: _guides/dev-ui.adoc
msgid "State allows properties to contain state and can be reused globally. An example of state properties are the theme, the connection state (if we are connected to the backend), etc."
msgstr ""

#: _guides/dev-ui.adoc
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr ""

#: _guides/dev-ui.adoc
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState] and you can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Add a log file"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful to log things happening continuously. A page will lose connection to the backend when navigating away from that page, a log in the footer is permanently connected."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "In your Webcomponent you can then stream the log to the UI:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Add a section menu"
msgstr "セクションメニューの追加"

#: _guides/dev-ui.adoc
msgid "This allows an extension to link a page directly in the section Menu."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Your page can be any Page similar to Cards."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Testing"
msgstr "テスト"

#: _guides/dev-ui.adoc
msgid "You can add tests to your extension that test:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "Runtime data via JsonRPC"
msgstr ""

#: _guides/dev-ui.adoc
msgid "You need to add this to your pom:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "This will give you access to two base classes for creating these tests."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Testing Build time data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "If you added Build time data, for example:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To test that your build time data is generated correctly you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr ""

#: _guides/dev-ui.adoc
msgid "Testing Runtime data"
msgstr ""

#: _guides/dev-ui.adoc
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr ""

#: _guides/dev-ui.adoc
msgid "To test that `updateProperties` execute correctly via JsonRPC you can add a test that extends `DevUIJsonRPCTest`."
msgstr ""
