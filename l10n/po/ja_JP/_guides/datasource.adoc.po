# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-08-13 08:15+0000\n"
"PO-Revision-Date: 2023-05-06 11:01+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#. type: Title =
#: upstream/_guides/datasource.adoc:7
#, fuzzy, no-wrap
msgid "Configure data sources in Quarkus"
msgstr "Quarkusでデータソースを設定する"

#. type: Plain text
#: upstream/_guides/datasource.adoc:13
#, fuzzy
msgid "Use a unified configuration model to define datasources for Java Database Connectivity (JDBC) and Reactive drivers."
msgstr "統一された構成モデルを使用して、Java Database Connectivity (JDBC) および Reactive ドライバのデータソースを定義します。"

#. Note for contributors and writers:
#. In text, use `data source` in code, `datasource` or `DataSource` is more common.
#. See, https://docs.oracle.com/javase/tutorial/jdbc/basics/connecting.html
#. type: Plain text
#: upstream/_guides/datasource.adoc:22
#, fuzzy
msgid "Applications use datasources to access relational databases.  Quarkus provides a unified configuration model to define datasources for Java Database Connectivity (JDBC) and Reactive database drivers."
msgstr "アプリケーションは、データソースを使用してリレーショナルデータベースにアクセスします。Quarkusは、Java Database Connectivity（jdbc）およびReactiveデータベースドライバのデータソースを定義するための統一された構成モデルを提供します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:25
#, fuzzy
msgid "Quarkus uses link:https://agroal.github.io/[Agroal] and link:https://vertx.io/[Vert.x] to provide high-performance, scaleable data source connection pooling for JDBC and reactive drivers.  The `jdbc-\\*` and `reactive-*` extensions provide build time optimizations and integrate configured data sources with Quarkus features like security, health checks, and metrics."
msgstr "Quarkusは、 link:https://agroal.github.io/[Agroalと] Vert. link:https://vertx.io/[xを] 使用して、jdbcとリアクティブドライバ用の高性能でスケーラブルなデータソース接続プーリングを提供します。 `jdbc-*` 、 `reactive-*` のエクステンションは、ビルド時間の最適化を提供し、設定されたデータソースとQuarkusのセキュリティ、ヘルスチェック、メトリクスなどの機能を統合します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:27
#, fuzzy
msgid "For more information on consuming and using a reactive datasource, consult the Quarkus xref:reactive-sql-clients.adoc[Reactive SQL clients] guide."
msgstr "リアクティブデータソースの消費と使用の詳細については、Quarkus xref:reactive-sql-clients.adoc[Reactive SQLクライアントガイドを] 参照してください。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:29
#, fuzzy
msgid "Additionally, refer to the Quarkus xref:hibernate-orm.adoc[Hibernate ORM] guide for information on consuming and using a JDBC datasource."
msgstr "さらに、jdbcデータソースの消費と使用については、Quarkus xref:hibernate-orm.adoc[Hibernate ORM] ガイドを参照してください。"

#. Future references to all other parts of this doc.
#. type: Title ==
#: upstream/_guides/datasource.adoc:35
#, fuzzy, no-wrap
msgid "Get started with configuring `datasources` in Quarkus"
msgstr "Quarkusで `datasources` 。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:38
#, fuzzy
msgid "For rapid configuration of datasources, this section offers a brief overview and code samples for testing and utilization, suitable for users familiar with the fundamentals."
msgstr "データソースの迅速な設定のために、このセクションでは簡単な概要と、テストと活用のためのコードサンプルを提供します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:40
#, fuzzy
msgid "For more advanced configuration with examples, see xref:datasource-reference[Datasource references]."
msgstr "より高度な設定例については、 xref:datasource-reference[データソースのリファレンスを] 参照してください。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:42
#, fuzzy, no-wrap
msgid "Zero-config setup in development mode"
msgstr "開発モードでのゼロコンフィグ設定"

#. type: Plain text
#: upstream/_guides/datasource.adoc:46
#, fuzzy
msgid "Quarkus simplifies database configuration by offering the Dev Services feature, enabling zero-config database setup for testing or running in dev mode.  In dev mode, the suggested approach is to use DevServices and let Quarkus handle the database for you, whereas for production mode, you provide explicit database configuration details pointing to a database managed outside of Quarkus."
msgstr "Quarkusでは、Dev Services機能によってデータベース設定が簡素化され、テストや開発モードでの実行のためのデータベース設定をゼロコンフィグで行うことができます。開発モードでは、DevServicesを使用してQuarkusにデータベースを処理させる方法が推奨されます。一方、本番モードでは、Quarkusの外部で管理されているデータベースを指す明示的なデータベース設定の詳細を提供します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:51
#, fuzzy
msgid "To use Dev Services, add the appropriate driver extension, such as `jdbc-postgresql`, for your desired database type to the `pom.xml` file.  In Dev mode, if you do not provide any explicit database connection details, Quarkus automatically handles the database setup and provides the wiring between the application and the database.  If you provide user credentials, the underlying database will be configured to use them.  This is useful if you want to connect to the database with an external tool."
msgstr "Dev Servicesを使用するには、 `pom.xml` ファイルに、希望するデータベースタイプに適したドライバエクステンション（ `jdbc-postgresql` など）を追加します。Devモードでは、明示的なデータベース接続の詳細がない場合、Quarkusが自動的にデータベースのセットアップを行い、アプリケーションとデータベース間の配線を行います。ユーザークレデンシャルを指定すると、基礎となるデータベースがそのクレデンシャルを使用するように設定されます。これは、外部ツールでデータベースに接続する場合に便利です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:53
#, fuzzy
msgid "To utilize this feature, ensure a Docker or Podman container runtime is installed, depending on the database type. Certain databases, such as H2, operate in in-memory mode and do not require a container runtime."
msgstr "この機能を利用するには、データベースの種類に応じて、DockerまたはPodmanコンテナ・ランタイムがインストールされていることを確認してください。H2などの一部のデータベースはインメモリモードで動作するため、コンテナランタイムは必要ありません。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:55
#, fuzzy
msgid "Prefix the actual connection details for Prod mode with `%prod.` to ensure they are not applied in Dev mode. For more information, see the xref:config-reference.adoc#profiles[Profiles] section of the xref:config-reference.adoc[Configuration reference] guide."
msgstr "Prodモードの実際の接続詳細の前に `%prod.` を付け、Devモードで適用されないようにする。詳細については、 xref:config-reference.adoc[Configuration reference] guideの xref:config-reference.adoc#profiles[Profiles] セクションを参照してください。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:57
#, fuzzy
msgid "For more information about Dev Services, see xref:dev-services.adoc[Dev Services overview]."
msgstr "Dev Servicesの詳細については、 xref:dev-services.adoc[Dev Servicesの] 概要を参照してください。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:59
#, fuzzy
msgid "For more details and optional configurations, see xref:databases-dev-services.adoc[Dev Services for databases]."
msgstr "詳細およびオプションの設定については、Dev Services xref:databases-dev-services.adoc[for databasesを] 参照してください。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:61
#, fuzzy, no-wrap
msgid "Configure a JDBC datasource"
msgstr "JDBC データソースの構成"

#. type: Plain text
#: upstream/_guides/datasource.adoc:64
#, fuzzy
msgid "Add the correct JDBC extension for the database of your choice."
msgstr "選択したデータベースの正しい JDBC エクステンションを追加します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:66
#, fuzzy
msgid "`jdbc-db2`"
msgstr "`jdbc-db2`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:67
#, fuzzy
msgid "`jdbc-derby`"
msgstr "`jdbc-derby`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:68
#, fuzzy
msgid "`jdbc-h2`"
msgstr "`jdbc-h2`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:69
#, fuzzy
msgid "`jdbc-mariadb`"
msgstr "`jdbc-mariadb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:70
#, fuzzy
msgid "`jdbc-mssql`"
msgstr "`jdbc-mssql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:71
#, fuzzy
msgid "`jdbc-mysql`"
msgstr "`jdbc-mysql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:72
#, fuzzy
msgid "`jdbc-oracle`"
msgstr "`jdbc-oracle`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:73
#, fuzzy
msgid "`jdbc-postgresql`"
msgstr "`jdbc-postgresql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:75
#, fuzzy
msgid "Configure your JDBC datasource:"
msgstr "JDBC データソースを構成します："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:81 upstream/_guides/datasource.adoc:107
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <1>\n"
"quarkus.datasource.username=<your username>\n"
"quarkus.datasource.password=<your password>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:84
#, no-wrap
msgid ""
"quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/hibernate_orm_test\n"
"quarkus.datasource.jdbc.max-size=16\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:86
#, fuzzy
msgid "This configuration value is only required if there is more than one database extension on the classpath."
msgstr "この設定値は、クラスパスに複数のデータベース・エクステンションがある場合にのみ必要です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:89
#, fuzzy
msgid "If only one viable extension is available, Quarkus assumes this is the correct one.  If a driver has been added to the test scope, Quarkus automatically includes the driver in testing."
msgstr "使用可能なエクステンションが1つしかない場合、Quarkusはこれが正しいエクステンションであると判断します。ドライバがテストスコープに追加されている場合、Quarkusは自動的にそのドライバをテストに含めます。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:90
#, fuzzy, no-wrap
msgid "Configure a reactive datasource"
msgstr "リアクティブ・データソースを設定する"

#. type: Plain text
#: upstream/_guides/datasource.adoc:93
#, fuzzy
msgid "Add the correct reactive extension for the database of your choice."
msgstr "選択したデータベースの正しいリアクティブエクステンションを追加します。"

#. type: Table
#: upstream/_guides/datasource.adoc:95 upstream/_guides/datasource.adoc:696
#, no-wrap
msgid "`reactive-db2-client`"
msgstr "`reactive-db2-client`"

#. type: Table
#: upstream/_guides/datasource.adoc:96 upstream/_guides/datasource.adoc:688
#, no-wrap
msgid "`reactive-mssql-client`"
msgstr "`reactive-mssql-client`"

#. type: Table
#: upstream/_guides/datasource.adoc:97 upstream/_guides/datasource.adoc:684
#, no-wrap
msgid "`reactive-mysql-client`"
msgstr "`reactive-mysql-client`"

#. type: Table
#: upstream/_guides/datasource.adoc:98 upstream/_guides/datasource.adoc:680
#, no-wrap
msgid "`reactive-oracle-client`"
msgstr "`reactive-oracle-client`"

#. type: Table
#: upstream/_guides/datasource.adoc:99 upstream/_guides/datasource.adoc:692
#, no-wrap
msgid "`reactive-pg-client`"
msgstr "`reactive-pg-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:101
#, fuzzy
msgid "Configure your reactive datasource:"
msgstr "リアクティブデータソースを設定します："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:110 upstream/_guides/datasource.adoc:303
#, no-wrap
msgid ""
"quarkus.datasource.reactive.url=postgresql:///your_database\n"
"quarkus.datasource.reactive.max-size=20\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:112
#, fuzzy
msgid "This configuration value is only required if there is more than one Reactive driver extension on the classpath."
msgstr "この設定値は、クラスパスに複数のReactiveドライバ・エクステンションがある場合にのみ必要です。"

#. type: Title ==
#: upstream/_guides/datasource.adoc:114
#, fuzzy, no-wrap
msgid "Configure datasources"
msgstr "データソースの設定"

#. type: Plain text
#: upstream/_guides/datasource.adoc:118
#, fuzzy
msgid "The following section describes the configuration for single or multiple datasources.  For simplicity, we will reference a single datasource as the default (unnamed) datasource."
msgstr "以下のセクションでは、単一または複数のデータソースの設定について説明する。ここでは簡単のため、単一のデータソースをデフォルト（無名）のデータソースとして参照する。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:119
#, fuzzy, no-wrap
msgid "Configure a single datasource"
msgstr "単一のデータソースを設定する"

#. type: Plain text
#: upstream/_guides/datasource.adoc:123
#, fuzzy
msgid "A datasource can be either a JDBC datasource, reactive, or both.  This depends on the configuration and the selection of project extensions."
msgstr "データソースは、JDBC データソース、リアクティブ、またはその両方にすることができます。これは、設定とプロジェクトエクステンションの選択に依存します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:125
#, fuzzy
msgid "Define a datasource with the following configuration property, where `db-kind` defines which database platform to connect to, for example, `h2`:"
msgstr "次の設定プロパティでデータソースを定義します。 `db-kind` は、どのデータベースプラットフォームに接続するかを定義します。例えば、 `h2` ："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:129
#, no-wrap
msgid "quarkus.datasource.db-kind=h2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:132
#, fuzzy
msgid "Quarkus deduces the JDBC driver class it needs to use from the specified value of the `db-kind` database platform attribute."
msgstr "Quarkusは、 `db-kind` データベースプラットフォーム属性の指定値から、使用するJDBCドライバクラスを推測します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:135
#, fuzzy
msgid "This step is required only if your application depends on multiple database drivers.  If the application operates with a single driver, this driver is detected automatically."
msgstr "この手順は、アプリケーションが複数のデータベース・ドライバに依存している場合にのみ必要です。アプリケーションが単一のドライバで動作する場合、このドライバは自動的に検出されます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:137
#, fuzzy
msgid "Quarkus currently includes the following built-in database kinds:"
msgstr "Quarkusには現在、以下の種類のデータベースが組み込まれています："

#. type: Plain text
#: upstream/_guides/datasource.adoc:139
msgid "DB2: `db2`"
msgstr "DB2: `db2`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:140
msgid "Derby: `derby`"
msgstr "Derby: `derby`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:141
msgid "H2: `h2`"
msgstr "H2: `h2`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:142
msgid "MariaDB: `mariadb`"
msgstr "MariaDB: `mariadb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:143
msgid "Microsoft SQL Server: `mssql`"
msgstr "Microsoft SQL Server: `mssql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:144
msgid "MySQL: `mysql`"
msgstr "MySQL: `mysql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:145
msgid "Oracle: `oracle`"
msgstr "Oracle: `oracle`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:146
msgid "PostgreSQL: `postgresql`, `pgsql` or `pg`"
msgstr "PostgreSQL: `postgresql`、`pgsql`、または `pg`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:147
#, fuzzy
msgid "To use a database kind that is not built-in, use `other` and define the JDBC driver explicitly"
msgstr "ビルトインされていない種類のデータベースを使用するには、 `other` を使用し、JDBC ドライバを明示的に定義します。"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:152
#, fuzzy
msgid "You can use any JDBC driver in a Quarkus app in JVM mode as described in xref:other-databases[Using other databases].  However, using a non-built-in database kind is unlikely to work when compiling your application to a native executable."
msgstr "xref:other-databases[他のデータベースの使用で] 説明したように、QuarkusアプリでJVMモードで任意のjdbcドライバを使用できます。ただし、アプリケーションをネイティブの実行可能ファイルにコンパイルするときに、内蔵されていない種類のデータベースを使用すると、うまくいかない可能性があります。"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:154
#, fuzzy
msgid "For native executable builds, it is recommended to either utilize the available JDBC Quarkus extensions or contribute a custom extension for your specific driver."
msgstr "ネイティブの実行可能ファイルをビルドする場合は、利用可能なJDBC Quarkusエクステンションを利用するか、特定のドライバ用にカスタムエクステンションを作成することをお勧めします。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:157
#, fuzzy
msgid "Configure the following properties to define credentials:"
msgstr "以下のプロパティを設定し、クレデンシャルを定義する："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:162
#, no-wrap
msgid ""
"quarkus.datasource.username=<your username>\n"
"quarkus.datasource.password=<your password>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:165
msgid "You can also retrieve the password from Vault by link:{vault-datasource-guide}[using a credential provider] for your datasource."
msgstr "また、データソースに link:{vault-datasource-guide}[クレデンシャルプロバイダ]を使用することで、Vault からパスワードを取得することもできます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:169
#, fuzzy
msgid "Until now, the configuration has been the same regardless of whether you are using a JDBC or a reactive driver.  When you have defined the database kind and the credentials, the rest depends on what type of driver you are using.  It is possible to use JDBC and a reactive driver simultaneously."
msgstr "これまでは、JDBCドライバとリアクティブ・ドライバのどちらを使用していても、設定は同じでした。データベースの種類とクレデンシャルを定義したら、あとはどのタイプのドライバを使うかによります。JDBC とリアクティブ・ドライバを同時に使用することも可能です。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:170
#, no-wrap
msgid "JDBC datasource"
msgstr "JDBC データソース"

#. type: Plain text
#: upstream/_guides/datasource.adoc:173
#, fuzzy
msgid "JDBC is the most common database connection pattern, typically needed when used in combination with non-reactive Hibernate ORM."
msgstr "JDBC は最も一般的なデータベース接続パターンで、通常は非反応型の Hibernate ORM と組み合わせて使用する場合に必要となります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:175
#, fuzzy
msgid "To use a JDBC datasource, start with adding the necessary dependencies:"
msgstr "JDBC データソースを使用するには、必要な依存関係を追加することから始めます："

#. type: Plain text
#: upstream/_guides/datasource.adoc:177
#, fuzzy
msgid "For use with a built-in JDBC driver, choose and add the Quarkus extension for your relational database driver from the list below:"
msgstr "組み込みのjdbcドライバで使用する場合は、以下のリストからリレーショナルデータベースドライバ用のQuarkusエクステンションを選択して追加します："

#. type: Plain text
#: upstream/_guides/datasource.adoc:180
msgid "Derby - `jdbc-derby`"
msgstr "Derby - `jdbc-derby`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:181
msgid "H2 - `jdbc-h2`"
msgstr "H2 - `jdbc-h2`"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:185
#, fuzzy
msgid "H2 and Derby databases can be configured to run in \"embedded mode\"; however, the Derby extension does not support compiling the embedded database engine into native executables."
msgstr "H2およびDerbyデータベースは、\"組み込みモード \"で実行するように設定することができます。しかし、Derbyエクステンションは、組み込みデータベースエンジンをネイティブ実行ファイルにコンパイルすることをサポートしていません。"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:187
#, fuzzy
msgid "Read xref:in-memory-databases[Testing with in-memory databases] for suggestions regarding integration testing."
msgstr "統合テストに関する提案については、 xref:in-memory-databases[インメモリデータベースを使用したテストを] お読みください。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:189
msgid "DB2 - `jdbc-db2`"
msgstr "DB2 - `jdbc-db2`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:190
msgid "MariaDB - `jdbc-mariadb`"
msgstr "MariaDB - `jdbc-mariadb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:191
msgid "Microsoft SQL Server - `jdbc-mssql`"
msgstr "Microsoft SQL Server - `jdbc-mssql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:192
msgid "MySQL - `jdbc-mysql`"
msgstr "MySQL - `jdbc-mysql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:193
msgid "Oracle - `jdbc-oracle`"
msgstr "Oracle - `jdbc-oracle`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:194
msgid "PostgreSQL - `jdbc-postgresql`"
msgstr "PostgreSQL - `jdbc-postgresql`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:195
#, fuzzy
msgid "Other JDBC extensions, such as link:https://github.com/quarkiverse/quarkus-jdbc-sqlite[SQLite] and its link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-jdbc-sqlite/dev/index.html[documentation], can be found in the https://github.com/quarkiverse[Quarkiverse]."
msgstr "link:https://github.com/quarkiverse/quarkus-jdbc-sqlite[SQLiteや] その link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-jdbc-sqlite/dev/index.html[ドキュメントの] ような他のJDBCエクステンションは、 link:https://github.com/quarkiverse[Quarkiverseで] 見つけることができます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:197
#, fuzzy
msgid "For example, to add the PostgreSQL driver dependency:"
msgstr "例えば、PostgreSQLドライバの依存関係を追加する場合です："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:201
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"jdbc-postgresql\"\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/datasource.adoc:207
#, fuzzy
msgid "Using a built-in JDBC driver extension automatically includes the Agroal extension, which is the JDBC connection pool implementation applicable for custom and built-in JDBC drivers.  However, for custom drivers, Agroal needs to be added explicitly."
msgstr "ビルトイン JDBC ドライバのエクステンションを使用すると、カスタムとビルトイン JDBC ドライバに適用可能な JDBC コネクションプールの実装である Agroal エクステンションが自動的に含まれます。しかし、カスタムドライバの場合は、Agroal を明示的に追加する必要があります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:210
#, fuzzy
msgid "For use with a custom JDBC driver, add the `quarkus-agroal` dependency to your project alongside the extension for your relational database driver:"
msgstr "カスタム JDBC ドライバで使用する場合は、リレーショナル・データベース・ドライバ用のエクステンションと一緒に、 `quarkus-agroal` 依存関係をプロジェクトに追加します："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:214
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"agroal\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:217
#, fuzzy
msgid "To use a JDBC driver for another database, xref:other-databases[use a database with no built-in extension or with a different driver]."
msgstr "別のデータベース用の JDBC ドライバを使用するには、 xref:other-databases[組み込み] エクステンションのない xref:other-databases[データベースまたは別のドライバを使用] します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:220
#, fuzzy
msgid "Configure the JDBC connection by defining the JDBC URL property:"
msgstr "JDBC URL プロパティを定義して、jdbc 接続を構成します："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:224
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/hibernate_orm_test\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/datasource.adoc:231
#, fuzzy
msgid "Note the `jdbc` prefix in the property name.  All the configuration properties specific to JDBC have the `jdbc` prefix.  For reactive datasources, the prefix is `reactive`."
msgstr "プロパティ名の接頭辞 `jdbc` に注意してください。JDBC 固有の設定プロパティはすべて、接頭辞が `jdbc` になっています。リアクティブ・データソースの場合、接頭辞は `reactive` です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:234
#, fuzzy
msgid "For more information about configuring JDBC, see xref:jdbc-url[JDBC URL format reference] and xref:extensions-and-database-drivers-reference[Quarkus extensions and database drivers reference]."
msgstr "jdbc設定の詳細については、jdbc xref:jdbc-url[URLフォーマットリファレンス] および xref:extensions-and-database-drivers-reference[Quarkusエクステンションとデータベースドライバリファレンスを] 参照してください。"

#. type: Title =====
#: upstream/_guides/datasource.adoc:237
#, fuzzy, no-wrap
msgid "Custom databases and drivers"
msgstr "カスタム・データベースとドライバー"

#. type: Plain text
#: upstream/_guides/datasource.adoc:240
#, fuzzy
msgid "If you need to connect to a database for which Quarkus does not provide an extension with the JDBC driver, you can use a custom driver instead. For example, if you are using the OpenTracing JDBC driver in your project."
msgstr "Quarkusがjdbcドライバでエクステンションを提供していないデータベースに接続する必要がある場合、代わりにカスタムドライバを使用できます。たとえば、プロジェクトでOpenTracing JDBCドライバを使用している場合です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:244
#, fuzzy
msgid "Without an extension, the driver will work correctly in any Quarkus app running in JVM mode.  However, the driver is unlikely to work when compiling your application to a native executable.  If you plan to make a native executable, use the existing JDBC Quarkus extensions, or contribute one for your driver."
msgstr "エクステンションがなければ、ドライバはJVMモードで実行されているQuarkusアプリで正しく動作します。しかし、アプリケーションをネイティブ実行ファイルにコンパイルする場合、ドライバが動作する可能性は低くなります。ネイティブの実行可能ファイルを作成する場合は、既存のJDBC Quarkusエクステンションを使用するか、ドライバ用にエクステンションを作成してください。"

#. type: Block title
#: upstream/_guides/datasource.adoc:245
#, fuzzy, no-wrap
msgid "An example with the OpenTracing driver:"
msgstr "OpenTracingドライバを使った例："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:250
#, no-wrap
msgid "quarkus.datasource.jdbc.driver=io.opentracing.contrib.jdbc.TracingDriver\n"
msgstr ""

#. type: Block title
#: upstream/_guides/datasource.adoc:252
#, fuzzy, no-wrap
msgid "An example for defining access to a database with no built-in support in JVM mode:"
msgstr "JVMモードで、組み込みサポートがないデータベースへのアクセスを定義する例："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:261
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=other\n"
"quarkus.datasource.jdbc.driver=oracle.jdbc.driver.OracleDriver\n"
"quarkus.datasource.jdbc.url=jdbc:oracle:thin:@192.168.1.12:1521/ORCL_SVC\n"
"quarkus.datasource.username=scott\n"
"quarkus.datasource.password=tiger\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:265
#, fuzzy
msgid "For all the details about the JDBC configuration options and configuring other aspects, such as the connection pool size, refer to the xref:jdbc-configuration[JDBC configuration reference] section."
msgstr "JDBC 構成オプションや、接続プール・サイズなどの他の側面の構成の詳細については、 xref:jdbc-configuration[JDBC リファレンス・] セクションを参照してください。"

#. type: Title =====
#: upstream/_guides/datasource.adoc:266
#, no-wrap
msgid "Consuming the datasource"
msgstr "データソースの消費"

#. type: Plain text
#: upstream/_guides/datasource.adoc:269
#, fuzzy
msgid "With Hibernate ORM, the Hibernate layer automatically picks up the datasource and uses it."
msgstr "Hibernate ORMを使用すると、Hibernateレイヤーは自動的にデータソースを選択し、それを使用します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:271
#, fuzzy
msgid "For the in-code access to the datasource, obtain it as any other bean as follows:"
msgstr "データソースへのコード内アクセスは、他のBeanと同様に以下のように取得する："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:276 upstream/_guides/datasource.adoc:380
#, no-wrap
msgid ""
"@Inject\n"
"AgroalDataSource defaultDataSource;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:280
#, fuzzy
msgid "In the above example, the type is `AgroalDataSource`, a `javax.sql.DataSource` subtype.  Because of this, you can also use `javax.sql.DataSource` as the injected type."
msgstr "上記の例では、型は `javax.sql.DataSource` のサブタイプである `AgroalDataSource` である。このため、 `javax.sql.DataSource` を注入型として使用することもできます。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:282
#, no-wrap
msgid "Reactive datasource"
msgstr "リアクティブデータソース"

#. type: Plain text
#: upstream/_guides/datasource.adoc:285
#, fuzzy
msgid "Quarkus offers several reactive clients for a use with reactive datasource."
msgstr "Quarkusは、リアクティブデータソースを使用するためのリアクティブクライアントをいくつか提供しています。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:288
#, fuzzy
msgid "Add the corresponding extension to your application:"
msgstr "対応するエクステンションをアプリケーションに追加します："

#. type: Plain text
#: upstream/_guides/datasource.adoc:290
msgid "DB2: `quarkus-reactive-db2-client`"
msgstr "DB2: `quarkus-reactive-db2-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:291
msgid "MariaDB/MySQL: `quarkus-reactive-mysql-client`"
msgstr "MariaDB/MySQL: `quarkus-reactive-mysql-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:292
msgid "Microsoft SQL Server: `quarkus-reactive-mssql-client`"
msgstr "Microsoft SQL Server: `quarkus-reactive-mssql-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:293
msgid "Oracle: `quarkus-reactive-oracle-client`"
msgstr "Oracle: `quarkus-reactive-oracle-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:294
msgid "PostgreSQL: `quarkus-reactive-pg-client`"
msgstr "PostgreSQL: `quarkus-reactive-pg-client`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:296
msgid "The installed extension must be consistent with the `quarkus.datasource.db-kind` you define in your datasource configuration."
msgstr "インストールされているエクステンションは、データソースの設定で定義する `quarkus.datasource.db-kind` と一致している必要があります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:298
#, fuzzy
msgid "After adding the driver, configure the connection URL and define a proper size for your connection pool."
msgstr "ドライバを追加したら、接続URLを設定し、接続プールの適切なサイズを定義する。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:305
#, no-wrap
msgid "JDBC and reactive datasources simultaneously"
msgstr "JDBC とリアクティブデータソースの同時利用"

#. type: Plain text
#: upstream/_guides/datasource.adoc:308
#, fuzzy
msgid "When a JDBC extension - along with Agroal - and a reactive datasource extension handling the given database kind are included, they will both be created by default."
msgstr "JDBC エクステンション - Agroal とともに - と、指定された種類のデータベースを扱うリアクティブデータソースエクステンションが含まれる場合、デフォルトで両方とも作成されます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:310
#, fuzzy
msgid "To disable the JDBC datasource explicitly:"
msgstr "JDBC データソースを明示的に無効にします："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:314
#, no-wrap
msgid "quarkus.datasource.jdbc=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:317
#, fuzzy
msgid "To disable the reactive datasource explicitly:"
msgstr "リアクティブ・データソースを明示的に無効にする："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:321
#, no-wrap
msgid "quarkus.datasource.reactive=false\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/datasource.adoc:326
#, fuzzy
msgid "In most cases, the configuration above will be optional as either a JDBC driver or a reactive datasource extension will be present, not both."
msgstr "ほとんどの場合、JDBCドライバまたはリアクティブ・データソース・エクステンションのどちらかが存在し、両方は存在しないため、上記の構成はオプションになります。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:328
#, fuzzy, no-wrap
msgid "Configure multiple datasources"
msgstr "複数のデータソースを設定する"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:334
#, fuzzy
msgid "The Hibernate ORM extension supports defining xref:hibernate-orm.adoc#multiple-persistence-units[persistence units] by using configuration properties.  For each persistence unit, point to the datasource of your choice."
msgstr "Hibernate ORM エクステンションは、設定プロパティを使用した xref:hibernate-orm.adoc#multiple-persistence-units[永続化ユニットの] 定義をサポートしています。各固有化ユニットに対して、任意のデータソースを指定します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:337
#, fuzzy
msgid "Defining multiple datasources works like defining a single datasource, with one important change - you have to specify a name (configuration key) for each datasource."
msgstr "複数のデータソースを定義する場合は、1つのデータソースを定義するのと同じように動作するが、1つだけ重要な変更がある。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:339
#, fuzzy
msgid "The following example provides three different datasources:"
msgstr "以下の例では、3つの異なるデータソースを提供している："

#. type: Plain text
#: upstream/_guides/datasource.adoc:341
#, fuzzy
msgid "the default one"
msgstr "デフォルトのもの"

#. type: Plain text
#: upstream/_guides/datasource.adoc:342
#, fuzzy
msgid "a datasource named `users`"
msgstr "という名前のデータソース `users`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:343
#, fuzzy
msgid "a datasource named `inventory`"
msgstr "という名前のデータソース `inventory`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:345
#, fuzzy
msgid "Each with its configuration:"
msgstr "それぞれに構成がある："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:352
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.username=username-default\n"
"quarkus.datasource.jdbc.url=jdbc:h2:mem:default\n"
"quarkus.datasource.jdbc.max-size=13\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:357
#, no-wrap
msgid ""
"quarkus.datasource.users.db-kind=h2\n"
"quarkus.datasource.users.username=username1\n"
"quarkus.datasource.users.jdbc.url=jdbc:h2:mem:users\n"
"quarkus.datasource.users.jdbc.max-size=11\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:362
#, no-wrap
msgid ""
"quarkus.datasource.inventory.db-kind=h2\n"
"quarkus.datasource.inventory.username=username2\n"
"quarkus.datasource.inventory.jdbc.url=jdbc:h2:mem:inventory\n"
"quarkus.datasource.inventory.jdbc.max-size=12\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:366
#, fuzzy
msgid "Notice there is an extra section in the configuration key.  The syntax is as follows: `quarkus.datasource.[optional name.][datasource property]`."
msgstr "コンフィギュレーション・キーの中に余分なセクションがあることに注意。構文は以下の通り： `quarkus.datasource.[optional name.][datasource property]` ."

#. type: Plain text
#: upstream/_guides/datasource.adoc:369
#, fuzzy
msgid "Even when only one database extension is installed, named databases need to specify at least one build-time property so that Quarkus can detect them.  Generally, this is the `db-kind` property, but you can also specify Dev Services properties to create named datasources according to the xref:databases-dev-services.adoc[Dev Services for Databases] guide."
msgstr "データベースエクステンションが1つしかインストールされていない場合でも、名前付きデータベースは、Quarkusが検出できるように、少なくとも1つのビルド時プロパティを指定する必要があります。一般的に、これは `db-kind` プロパティですが、Dev Services xref:databases-dev-services.adoc[for Databasesの] ガイドに従って、名前付きデータソースを作成するためにDev Servicesプロパティを指定することもできます。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:370
#, fuzzy, no-wrap
msgid "Named datasource injection"
msgstr "名前付きデータソース注入"

#. type: Plain text
#: upstream/_guides/datasource.adoc:373
#, fuzzy
msgid "When using multiple datasources, each `DataSource` also has the `io.quarkus.agroal.DataSource` qualifier with the name of the datasource as the value."
msgstr "複数のデータソースを使用する場合、 `DataSource` は、データソース名を値とする修飾子 `io.quarkus.agroal.DataSource` も持つ。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:375
#, fuzzy
msgid "By using the properties mentioned in the previous section to configure three different datasources, inject each one of them as follows:"
msgstr "前のセクションで述べたプロパティを使用して3つの異なるデータソースを設定し、それぞれのデータソースに以下のようにインジェクトする："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:384
#, no-wrap
msgid ""
"@Inject\n"
"@DataSource(\"users\")\n"
"AgroalDataSource usersDataSource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:388
#, no-wrap
msgid ""
"@Inject\n"
"@DataSource(\"inventory\")\n"
"AgroalDataSource inventoryDataSource;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/datasource.adoc:390
#, fuzzy, no-wrap
msgid "Datasource integrations"
msgstr "データソースの統合"

#. type: Title ===
#: upstream/_guides/datasource.adoc:392
#, fuzzy, no-wrap
msgid "Datasource health check"
msgstr "データソースの健全性チェック"

#. type: Plain text
#: upstream/_guides/datasource.adoc:395
#, fuzzy
msgid "If you use the link:https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-health[`quarkus-smallrye-health`] extension, the `quarkus-agroal` and reactive client extensions automatically add a readiness health check to validate the datasource."
msgstr "拡張を使用すると link:https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-health[quarkus-smallrye-health] エクステンションを使う場合、 `quarkus-agroal` と reactive クライアントエクステンションは、 データソースを検証するための準備状況チェックを自動的に追加します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:398
#, fuzzy
msgid "When you access your application’s health readiness endpoint, `/q/health/ready` by default, you receive information about the datasource validation status.  If you have multiple datasources, all datasources are checked, and if a single datasource validation failure occurs, the status changes to`DOWN`."
msgstr "アプリケーションの健全性確認エンドポイント (デフォルトは `/q/health/ready` ) にアクセスすると、 データソースの検証状況に関する情報を受け取ります。複数のデータソースがある場合はすべてのデータソースがチェックされ、 データソースの検証に失敗した場合はステータスが`DOWN`に変わります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:400
#, fuzzy
msgid "This behavior can be disabled by using the `quarkus.datasource.health.enabled` property."
msgstr "この動作は、 `quarkus.datasource.health.enabled` プロパティを使用して無効にすることができます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:402
#, fuzzy
msgid "To exclude only a particular datasource from the health check, use:"
msgstr "特定のデータソースだけをヘルスチェックから除外するには、次のようにする："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:406
#, no-wrap
msgid " `quarkus.datasource.\"datasource-name\".health-exclude=true`\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/datasource.adoc:408
#, fuzzy, no-wrap
msgid "Datasource metrics"
msgstr "データソースのメトリクス"

#. type: Plain text
#: upstream/_guides/datasource.adoc:412
#, fuzzy
msgid "If you are using the xref:micrometer.adoc[`quarkus-micrometer`] or xref:smallrye-metrics.adoc[`quarkus-smallrye-metrics`] extension, `quarkus-agroal` can contribute some datasource-related metrics to the metric registry.  This can be activated by setting the `quarkus.datasource.metrics.enabled` property to `true`."
msgstr "を使用している場合は xref:micrometer.adoc[quarkus-micrometer] または xref:smallrye-metrics.adoc[quarkus-smallrye-metrics] 拡張を使用している場合、 `quarkus-agroal` はデータソース関連のメトリクスをメトリック・レジストリに貢献することができます。これは、 `quarkus.datasource.metrics.enabled` プロパティを `true` に設定することで有効になります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:415
#, fuzzy
msgid "For the exposed metrics to contain any actual values, a metric collection must be enabled internally by the Agroal mechanisms.  By default, this metric collection mechanism is enabled for all datasources when a metrics extension is present, and metrics for the Agroal extension are enabled."
msgstr "公開されたメトリクスが実際の値を含むためには、Agroal のメカニズムによって内部的にメトリクス・コレクションが有効になっている必要があります。デフォルトでは、メトリクス・エクステンションが存在し、Agroalエクステンションのメトリクスが有効になっている場合、このメトリクス・コレクション・メカニズムはすべてのデータソースで有効になります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:419
#, fuzzy
msgid "To disable metrics for a particular data source, set `quarkus.datasource.jdbc.enable-metrics` to `false`, or apply `quarkus.datasource.<datasource name>.jdbc.enable-metrics` for a named datasource.  This disables collecting the metrics and exposing them in the `/q/metrics` endpoint if the mechanism to collect them is disabled."
msgstr "特定のデータ・ソースのメトリクスを無効にするには、 `quarkus.datasource.jdbc.enable-metrics` を `false` に設定するか、指定したデータ・ソースに対して `quarkus.datasource.<datasource name>.jdbc.enable-metrics` を適用します。これにより、メトリックを収集するメカニズムが無効になっている場合は、メトリックの収集と `/q/metrics` エンドポイントでの公開が無効になります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:423
#, fuzzy
msgid "Conversely, setting `quarkus.datasource.jdbc.enable-metrics` to `true`, or `quarkus.datasource.<datasource name>.jdbc.enable-metrics` for a named datasource explicitly enables metrics collection even if a metrics extension is not in use.  This can be useful if you need to access the collected metrics programmatically.  They are available after calling `dataSource.getMetrics()` on an injected `AgroalDataSource` instance."
msgstr "逆に、名前付きデータソースに対して `quarkus.datasource.jdbc.enable-metrics` を `true` 、または `quarkus.datasource.<datasource name>.jdbc.enable-metrics` に設定すると、メトリッ ク・エクステンションが使用されていなくても、明示的にメトリクスの収集が可能になります。これは、収集されたメトリクスにプログラムでアクセスする必要がある場合に便利です。これらは、注入された `AgroalDataSource` インスタンスで `dataSource.getMetrics()` を呼び出した後に利用できます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:425
#, fuzzy
msgid "If the metrics collection for this datasource is disabled, all values result to zero."
msgstr "このデータ・ソースのメトリクス・コレクションが無効になっている場合、すべての値はゼロになります。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:426
#, fuzzy, no-wrap
msgid "Narayana transaction manager integration"
msgstr "Narayanaトランザクションマネージャの統合"

#. type: Plain text
#: upstream/_guides/datasource.adoc:429
#, fuzzy
msgid "Integration is automatic if the Narayana JTA extension is also available."
msgstr "Narayana JTAエクステンションも利用可能であれば、統合は自動的に行われます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:431
#, fuzzy
msgid "You can override this by setting the `transactions` configuration property:"
msgstr "`transactions` 設定プロパティを設定することで、これをオーバーライドすることができます："

#. type: Plain text
#: upstream/_guides/datasource.adoc:433
#, fuzzy
msgid "`quarkus.datasource.jdbc.transactions` for default unnamend datasource"
msgstr "`quarkus.datasource.jdbc.transactions` デフォルトの名前なしデータソースの場合"

#. type: Plain text
#: upstream/_guides/datasource.adoc:434
#, fuzzy
msgid "`quarkus.datasource._<datasource-name>_.jdbc.transactions` for named datasource"
msgstr "`quarkus.datasource. _<datasource-name>_ .jdbc.transactions` 名前付きデータソース用"

#. type: Plain text
#: upstream/_guides/datasource.adoc:436
#, fuzzy
msgid "For more information, see the xref:configuration-reference[Configuration reference] section below."
msgstr "詳細については、以下の xref:configuration-reference[コンフィギュレーション・リファレンスの] セクションを参照してください。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:438
#, fuzzy
msgid "To facilitate the storage of transaction logs in a database by using JDBC, see xref:transaction.adoc#jdbcstore[Configuring transaction logs to be stored in a datasource] section of the xref:transaction.adoc[Using transactions in Quarkus] guide."
msgstr "JDBCを使用してトランザクションログをデータベースに保存しやすくするには、 xref:transaction.adoc[Quarkusのトランザクションの使用] ガイドの xref:transaction.adoc#jdbcstore[トランザクションログをデータソースに保存するように設定する] セクションを参照してください。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:439
#, fuzzy, no-wrap
msgid "Named datasources"
msgstr "名前付きデータソース"

#. type: Plain text
#: upstream/_guides/datasource.adoc:442
#, fuzzy
msgid "When using Dev Services, the default datasource will always be created, but to specify a named datasource, you need to have at least one build time property so Quarkus can detect how to create the datasource."
msgstr "Dev Servicesを使用すると、デフォルトのデータソースが常に作成されますが、名前付きデータソースを指定するには、Quarkusがデータソースの作成方法を検出できるように、少なくとも1つのビルド時プロパティが必要です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:444
#, fuzzy
msgid "You will usually specify the `db-kind` property or explicitly enable Dev Services by setting `quarkus.datasource.\"name\".devservices.enabled=true`."
msgstr "通常、 `db-kind` プロパティを指定するか、 `quarkus.datasource.\"name\".devservices.enabled=true` を設定して明示的に Dev Services を有効にします。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:446
#, no-wrap
msgid "Testing with in-memory databases"
msgstr "インメモリーデータベースを使用したテスト"

#. type: Plain text
#: upstream/_guides/datasource.adoc:449
#, fuzzy
msgid "Some databases like H2 and Derby are commonly used in the _embedded mode_ as a facility to run integration tests quickly."
msgstr "H2やDerbyのようないくつかのデータベースは、統合テストを迅速に実行するための機能として、 _組み込み_ モードで一般的に使用されている。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:452
#, fuzzy
msgid "The recommended approach is to use the real database you intend to use in production, especially when xref:databases-dev-services.adoc[Dev Services provide a zero-config database for testing], and running tests against a container is relatively quick and produces expected results on an actual environment.  However, it is also possible to use JVM-powered databases for scenarios when the ability to run simple integration tests is required."
msgstr "特に、dev Services が xref:databases-dev-services.adoc[テスト用のゼロコンフィグデータベースを提供して] おり、コンテナに対してテストを実行するのが比較的迅速で、実際の環境で期待通りの結果が得られる場合は、本番環境で使用する予定の実際のデータベースを使用することを推奨します。しかし、単純な統合テストを実行する機能が必要なシナリオでは、JVMで動作するデータベースを使用することも可能です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:454
#, fuzzy
msgid "While configuring Derby to use the embedded engine works as usual in JVM mode, such an application will not compile into a native executable. It is because Quarkus Derby extensions do not support embedding the entire database engine into a native executable, and it only covers making the JDBC client code compatible with the native compilation step."
msgstr "組み込みエンジンを使用するようにDerbyを設定すると、JVMモードでは通常どおり動作しますが、そのようなアプリケーションはネイティブ実行ファイルにコンパイルされません。これは、Quarkus Derbyエクステンションがデータベースエンジン全体のネイティブ実行可能ファイルへの組み込みをサポートしておらず、JDBCクライアントコードをネイティブコンパイルステップと互換性を持たせることのみを対象としているためです。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:455
#, fuzzy, no-wrap
msgid "Support and limitations"
msgstr "サポートと制限"

#. type: Plain text
#: upstream/_guides/datasource.adoc:459
#, fuzzy
msgid "Embedded databases (H2 and Derby) work in JVM mode.  For native mode, the following limitations apply:"
msgstr "組み込みデータベース(H2およびDerby)はJVMモードで動作します。ネイティブモードでは、以下の制限が適用されます："

#. type: Plain text
#: upstream/_guides/datasource.adoc:461
#, fuzzy
msgid "Derby cannot be embedded into the application in native mode, and only remote connection is supported."
msgstr "ダービーはネイティブ・モードではアプリケーションに組み込むことができず、リモート接続のみがサポートされる。"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:465
#, fuzzy
msgid "Embedding H2 within your native image is not recommended.  Consider using an alternative approach, for example, using a remote connection to a separate database instead."
msgstr "ネイティブ画像内にH2を埋め込むことは推奨されません。例えば、別のデータベースへのリモート接続を使用するなど、別の方法を検討してください。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:467
#, fuzzy, no-wrap
msgid "Run an integration test"
msgstr "統合テストの実行"

#. type: Plain text
#: upstream/_guides/datasource.adoc:470
#, fuzzy
msgid "Add a dependency on the artifacts providing the additional tools that are under the following Maven coordinates:"
msgstr "以下のMaven座標の下にある追加ツールを提供する成果物に依存関係を追加します："

#. type: Plain text
#: upstream/_guides/datasource.adoc:472
#, fuzzy
msgid "`io.quarkus:quarkus-test-h2` for H2"
msgstr "`io.quarkus:quarkus-test-h2` H2用"

#. type: Plain text
#: upstream/_guides/datasource.adoc:473
#, fuzzy
msgid "`io.quarkus:quarkus-test-derby` for Derby"
msgstr "`io.quarkus:quarkus-test-derby` ダービー用"

#. type: Plain text
#: upstream/_guides/datasource.adoc:475
#, fuzzy
msgid "This will allow you to test your application even when it is compiled into a native executable while the database will run as a JVM process."
msgstr "これにより、アプリケーションをネイティブの実行可能ファイルにコンパイルしても、データベースはJVMプロセスとして実行されるため、アプリケーションをテストすることができる。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:477
#, fuzzy
msgid "Add the following specific annotation on any class in your integration tests for running integration tests in both JVM or native executables:"
msgstr "JVM とネイティブ実行ファイルの両方で統合テストを実行するために、統合テストの任意のクラスに以下の特定のアノテーションを追加します："

#. type: Plain text
#: upstream/_guides/datasource.adoc:479
#, fuzzy
msgid "`@QuarkusTestResource(H2DatabaseTestResource.class)`"
msgstr "`@QuarkusTestResource(H2DatabaseTestResource.class)`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:480
#, fuzzy
msgid "`@QuarkusTestResource(DerbyDatabaseTestResource.class)`"
msgstr "`@QuarkusTestResource(DerbyDatabaseTestResource.class)`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:482
#, fuzzy
msgid "This ensures that the test suite starts and terminates the managed database in a separate process as required for test execution."
msgstr "これにより、テストスイートは、テスト実行に必要な別プロセスで管理データベースを起動し、終了することができます。"

#. type: Block title
#: upstream/_guides/datasource.adoc:483
#, fuzzy, no-wrap
msgid "H2 example"
msgstr "H2の例"

#. type: delimited block -
#: upstream/_guides/datasource.adoc:487
#, no-wrap
msgid "package my.app.integrationtests.db;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:490
#, no-wrap
msgid ""
"import io.quarkus.test.common.QuarkusTestResource;\n"
"import io.quarkus.test.h2.H2DatabaseTestResource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/datasource.adoc:494
#, no-wrap
msgid ""
"@QuarkusTestResource(H2DatabaseTestResource.class)\n"
"public class TestResources {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/datasource.adoc:497
#, fuzzy
msgid "Configure the connection to the managed database:"
msgstr "管理データベースへの接続を設定します："

#. type: delimited block -
#: upstream/_guides/datasource.adoc:502
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:test\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/datasource.adoc:505
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Title ===
#: upstream/_guides/datasource.adoc:508
#, fuzzy, no-wrap
msgid "Common datasource configuration reference"
msgstr "共通データソース設定リファレンス"

#. type: Title ===
#: upstream/_guides/datasource.adoc:513
#, fuzzy, no-wrap
msgid "JDBC configuration reference"
msgstr "JDBC 設定リファレンス"

#. type: Title ===
#: upstream/_guides/datasource.adoc:518
#, fuzzy, no-wrap
msgid "JDBC URL reference"
msgstr "JDBC URL リファレンス"

#. type: Plain text
#: upstream/_guides/datasource.adoc:522
#, fuzzy
msgid "Each of the supported databases contains different JDBC URL configuration options.  The following section gives an overview of each database URL and a link to the official documentation."
msgstr "サポートされているデータベースには、それぞれ異なる JDBC URL 構成オプションがあります。以下のセクションでは、各データベースURLの概要と公式ドキュメントへのリンクを示します。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:523 upstream/_guides/datasource.adoc:734
#, no-wrap
msgid "DB2"
msgstr "DB2"

#. type: Plain text
#: upstream/_guides/datasource.adoc:526
msgid "`jdbc:db2://<serverName>[:<portNumber>]/<databaseName>[:<key1>=<value>;[<key2>=<value2>;]]`"
msgstr "`jdbc:db2://<serverName>[:<portNumber>]/<databaseName>[:<key1>=<value>;[<key2>=<value2>;]]`"

#. type: Labeled list
#: upstream/_guides/datasource.adoc:527 upstream/_guides/datasource.adoc:535
#: upstream/_guides/datasource.adoc:546 upstream/_guides/datasource.adoc:558
#: upstream/_guides/datasource.adoc:566 upstream/_guides/datasource.adoc:577
#: upstream/_guides/datasource.adoc:592 upstream/_guides/datasource.adoc:600
#: upstream/_guides/datasource.adoc:738 upstream/_guides/datasource.adoc:754
#: upstream/_guides/datasource.adoc:770 upstream/_guides/datasource.adoc:790
#: upstream/_guides/datasource.adoc:796 upstream/_guides/datasource.adoc:802
#, no-wrap
msgid "Example"
msgstr "例"

#. type: Plain text
#: upstream/_guides/datasource.adoc:528
msgid "`jdbc:db2://localhost:50000/MYDB:user=dbadm;password=dbadm;`"
msgstr "`jdbc:db2://localhost:50000/MYDB:user=dbadm;password=dbadm;`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:530
#, fuzzy
msgid "For more information on URL syntax and additional supported options, see the link:https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052342.html[official documentation]."
msgstr "URL構文とその他のサポートオプションの詳細については、 link:https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052342.html[公式ドキュメントを] 参照してください。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:531
#, no-wrap
msgid "Derby"
msgstr "Derby"

#. type: Plain text
#: upstream/_guides/datasource.adoc:534
msgid "`jdbc:derby:[//serverName[:portNumber]/][memory:]databaseName[;property=value[;property=value]]`"
msgstr "`jdbc:derby:[//serverName[:portNumber]/][memory:]databaseName[;property=value[;property=value]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:536
msgid "`jdbc:derby://localhost:1527/myDB`, `jdbc:derby:memory:myDB;create=true`"
msgstr "`jdbc:derby://localhost:1527/myDB`, `jdbc:derby:memory:myDB;create=true`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:539
#, fuzzy
msgid "Derby is an embedded database that can run as a server, based on a file, or can run completely in memory.  All of these options are available as listed above."
msgstr "Derbyは組み込み型のデータベースで、サーバーとして実行することも、ファイルに基づいて実行することも、完全にメモリ内で実行することもできます。これらのオプションはすべて、上記のように利用可能です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:541
#, fuzzy
msgid "For more information, see the link:https://db.apache.org/derby/docs/10.8/devguide/cdevdvlp17453.html#cdevdvlp17453[official documentation]."
msgstr "詳しくは link:https://db.apache.org/derby/docs/10.8/devguide/cdevdvlp17453.html#cdevdvlp17453[公式文書を] 参照。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:542
#, no-wrap
msgid "H2"
msgstr "H2"

#. type: Plain text
#: upstream/_guides/datasource.adoc:545
msgid "`jdbc:h2:{ {.|mem:}[name] | [file:]fileName | {tcp|ssl}:[//]server[:port][,server2[:port]]/name }[;key=value...]`"
msgstr "`jdbc:h2:{ {.|mem:}[name] | [file:]fileName | {tcp|ssl}:[//]server[:port][,server2[:port]]/name }[;key=value...]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:547
msgid "`jdbc:h2:tcp://localhost/~/test`, `jdbc:h2:mem:myDB`"
msgstr "`jdbc:h2:tcp://localhost/~/test`, `jdbc:h2:mem:myDB`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:550
#, fuzzy
msgid "H2 is an embedded database that can run as a server, based on a file, or run completely in memory.  All of these options are available as listed above."
msgstr "H2は組み込みデータベースで、サーバーとして実行することも、ファイルに基づいて実行することも、完全にメモリ内で実行することもできます。これらのオプションはすべて、上記のように利用可能です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:552
#, fuzzy
msgid "For more information, see the link:https://h2database.com/html/features.html?highlight=url&search=url#database_url[official documentation]."
msgstr "詳しくは link:https://h2database.com/html/features.html?highlight=url&search=url#database_url[公式文書を] 参照。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:553
#, no-wrap
msgid "MariaDB"
msgstr "MariaDB"

#. type: Plain text
#: upstream/_guides/datasource.adoc:556
msgid "`jdbc:mariadb:[replication:|failover:|sequential:|aurora:]//<hostDescription>[,<hostDescription>...]/[database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`jdbc:mariadb:[replication:|failover:|sequential:|aurora:]//<hostDescription>[,<hostDescription>...]/[database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Labeled list
#: upstream/_guides/datasource.adoc:556 upstream/_guides/datasource.adoc:575
#, no-wrap
msgid "hostDescription"
msgstr "hostDescription"

#. type: Plain text
#: upstream/_guides/datasource.adoc:557 upstream/_guides/datasource.adoc:576
msgid "`<host>[:<portnumber>] or address=(host=<host>)[(port=<portnumber>)][(type=(master|slave))]`"
msgstr "`<host>[:<portnumber>] or address=(host=<host>)[(port=<portnumber>)][(type=(master|slave))]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:559
msgid "`jdbc:mariadb://localhost:3306/test`"
msgstr "`jdbc:mariadb://localhost:3306/test`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:561
#, fuzzy
msgid "For more information, see the link:https://mariadb.com/kb/en/library/about-mariadb-connector-j/[official documentation]."
msgstr "詳しくは link:https://mariadb.com/kb/en/library/about-mariadb-connector-j/[公式文書を] 参照。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:562 upstream/_guides/datasource.adoc:750
#, fuzzy, no-wrap
msgid "Microsoft SQL server"
msgstr "マイクロソフトSQLサーバー"

#. type: Plain text
#: upstream/_guides/datasource.adoc:565
msgid "`jdbc:sqlserver://[serverName[\\instanceName][:portNumber]][;property=value[;property=value]]`"
msgstr "`jdbc:sqlserver://[serverName[\\instanceName][:portNumber]][;property=value[;property=value]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:567
msgid "`jdbc:sqlserver://localhost:1433;databaseName=AdventureWorks`"
msgstr "`jdbc:sqlserver://localhost:1433;databaseName=AdventureWorks`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:569
#, fuzzy
msgid "The Microsoft SQL Server JDBC driver works essentially the same as the others."
msgstr "Microsoft SQL Server JDBCドライバは、基本的に他のドライバと同じように動作します。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:571
#, fuzzy
msgid "For more information, see the link:https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-2017[official documentation]."
msgstr "詳しくは link:https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-2017[公式文書を] 参照。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:572
#, no-wrap
msgid "MySQL"
msgstr "MySQL"

#. type: Plain text
#: upstream/_guides/datasource.adoc:575
msgid "`jdbc:mysql:[replication:|failover:|sequential:|aurora:]//<hostDescription>[,<hostDescription>...]/[database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`jdbc:mysql:[replication:|failover:|sequential:|aurora:]//<hostDescription>[,<hostDescription>...]/[database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:578
msgid "`jdbc:mysql://localhost:3306/test`"
msgstr "`jdbc:mysql://localhost:3306/test`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:580
#, fuzzy
msgid "For more information, see the link:https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference.html[official documentation]."
msgstr "詳しくは link:https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference.html[公式文書を] 参照。"

#. type: Title =====
#: upstream/_guides/datasource.adoc:581
#, fuzzy, no-wrap
msgid "MySQL limitations"
msgstr "MySQLの制限"

#. type: Plain text
#: upstream/_guides/datasource.adoc:584
#, fuzzy
msgid "When compiling a Quarkus application to a native image, the MySQL support for JMX and Oracle Cloud Infrastructure (OCI) integrations are disabled as they are incompatible with GraalVM native images."
msgstr "Quarkusアプリケーションをネイティブイメージにコンパイルする場合、MySQLのJMXサポートとOracle Cloud Infrastructure（OCI）統合は、GraalVMネイティブイメージと互換性がないため、無効になります。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:586
#, fuzzy
msgid "The lack of JMX support is a natural consequence of running in native mode and is unlikely to be resolved."
msgstr "JMXのサポートがないのは、ネイティブ・モードで実行することの当然の結果であり、解決される見込みはない。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:587
#, fuzzy
msgid "The integration with OCI is not supported."
msgstr "OCIとの統合はサポートされていない。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:588 upstream/_guides/datasource.adoc:784
#, no-wrap
msgid "Oracle"
msgstr "Oracle"

#. type: Plain text
#: upstream/_guides/datasource.adoc:591
msgid "`jdbc:oracle:driver_type:@database_specifier`"
msgstr "`jdbc:oracle:driver_type:@database_specifier`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:593
msgid "`jdbc:oracle:thin:@localhost:1521/ORCL_SVC`"
msgstr "`jdbc:oracle:thin:@localhost:1521/ORCL_SVC`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:595
#, fuzzy
msgid "For more information, see the link:https://docs.oracle.com/en/database/oracle/oracle-database/21/jjdbc/data-sources-and-URLs.html#GUID-AEA8E228-1B21-4111-AF4C-B1F33744CA08[official documentation]."
msgstr "詳しくは link:https://docs.oracle.com/en/database/oracle/oracle-database/21/jjdbc/data-sources-and-URLs.html#GUID-AEA8E228-1B21-4111-AF4C-B1F33744CA08[公式文書を] 参照。"

#. type: Title ====
#: upstream/_guides/datasource.adoc:596 upstream/_guides/datasource.adoc:798
#, no-wrap
msgid "PostgreSQL"
msgstr "PostgreSQL"

#. type: Plain text
#: upstream/_guides/datasource.adoc:599
msgid "`jdbc:postgresql:[//][host][:port][/database][?key=value...]`"
msgstr "`jdbc:postgresql:[//][host][:port][/database][?key=value...]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:601
msgid "`jdbc:postgresql://localhost/test`"
msgstr "`jdbc:postgresql://localhost/test`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:603
#, fuzzy
msgid "The defaults for the different parts are as follows:"
msgstr "各パートのデフォルトは以下の通り："

#. type: Plain text
#: upstream/_guides/datasource.adoc:604 upstream/_guides/datasource.adoc:743
#: upstream/_guides/datasource.adoc:759 upstream/_guides/datasource.adoc:775
#: upstream/_guides/datasource.adoc:808
#, no-wrap
msgid "`host`"
msgstr "`host`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:605
msgid "localhost"
msgstr "localhost"

#. type: Plain text
#: upstream/_guides/datasource.adoc:605 upstream/_guides/datasource.adoc:744
#: upstream/_guides/datasource.adoc:760 upstream/_guides/datasource.adoc:776
#: upstream/_guides/datasource.adoc:809
#, no-wrap
msgid "`port`"
msgstr "`port`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:606
msgid "5432"
msgstr "5432"

#. type: Plain text
#: upstream/_guides/datasource.adoc:606 upstream/_guides/datasource.adoc:747
#: upstream/_guides/datasource.adoc:763
#, no-wrap
msgid "`database`"
msgstr "`database`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:607
msgid "same name as the username"
msgstr "ユーザー名と同じ名前"

#. type: Plain text
#: upstream/_guides/datasource.adoc:609
#, fuzzy
msgid "For more information about additional parameters, see the link:https://jdbc.postgresql.org/documentation/head/connect.html[official documentation]."
msgstr "追加パラメータの詳細については、 link:https://jdbc.postgresql.org/documentation/head/connect.html[公式ドキュメントを] 参照のこと。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:612
#, fuzzy, no-wrap
msgid "Quarkus extensions and database drivers reference"
msgstr "Quarkusエクステンションとデータベースドライバのリファレンス"

#. type: Plain text
#: upstream/_guides/datasource.adoc:615
#, fuzzy
msgid "The following tables list the built-in `db-kind` values, the corresponding Quarkus extensions, and the JDBC drivers used by those extensions."
msgstr "以下の表は、組み込みの `db-kind` 値、対応する Quarkus エクステンション、およびそれらのエクステンションで使用される JDBC ドライバの一覧です。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:617
#, fuzzy
msgid "When using one of the built-in datasource kinds, the JDBC and Reactive drivers are resolved automatically to match the values from these tables."
msgstr "組み込みのデータソースの種類のいずれかを使用する場合、JDBC および Reactive ドライバは、これらのテーブルの値と一致するように自動的に解決されます。"

#. type: Block title
#: upstream/_guides/datasource.adoc:618
#, fuzzy, no-wrap
msgid "Database platform kind to JDBC driver mapping"
msgstr "データベースプラットフォームの種類と JDBC ドライバのマッピング"

#. type: Table
#: upstream/_guides/datasource.adoc:621 upstream/_guides/datasource.adoc:676
#, no-wrap
msgid "Database kind"
msgstr "データベースの種類"

#. type: Table
#: upstream/_guides/datasource.adoc:621 upstream/_guides/datasource.adoc:676
#, fuzzy, no-wrap
msgid "Quarkus extension"
msgstr "Quarkusエクステンション"

#. type: Table
#: upstream/_guides/datasource.adoc:623
#, fuzzy, no-wrap
msgid "Drivers"
msgstr "ドライバー"

#. type: Table
#: upstream/_guides/datasource.adoc:624 upstream/_guides/datasource.adoc:695
#, no-wrap
msgid "`db2`"
msgstr "`db2`"

#. type: Table
#: upstream/_guides/datasource.adoc:625
#, fuzzy, no-wrap
msgid "`quarkus-jdbc-db2`"
msgstr "`quarkus-jdbc-db2`"

#. type: Table
#: upstream/_guides/datasource.adoc:629
#, fuzzy, no-wrap
msgid ""
"* JDBC: `com.ibm.db2.jcc.DBDriver`\n"
"\n"
"* XA: `com.ibm.db2.jcc.DB2XADataSource`"
msgstr ""
"\n"
" JDBC： `com.ibm.db2.jcc.DBDriver`\n"
"\n"
" XA： `com.ibm.db2.jcc.DB2XADataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:630
#, no-wrap
msgid "`derby`"
msgstr "`derby`"

#. type: Table
#: upstream/_guides/datasource.adoc:631
#, fuzzy, no-wrap
msgid "`quarkus-jdbc-derby`"
msgstr "`quarkus-jdbc-derby`"

#. type: Table
#: upstream/_guides/datasource.adoc:635
#, fuzzy, no-wrap
msgid ""
"* JDBC: `org.apache.derby.jdbc.ClientDriver`\n"
"\n"
"* XA: `org.apache.derby.jdbc.ClientXADataSource`"
msgstr ""
"\n"
" JDBC： `org.apache.derby.jdbc.ClientDriver`\n"
"\n"
" XA： `org.apache.derby.jdbc.ClientXADataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:636
#, no-wrap
msgid "`h2`"
msgstr "`h2`"

#. type: Table
#: upstream/_guides/datasource.adoc:637
#, fuzzy, no-wrap
msgid "`quarkus-jdbc-h2`"
msgstr "`quarkus-jdbc-h2`"

#. type: Table
#: upstream/_guides/datasource.adoc:641
#, fuzzy, no-wrap
msgid ""
"* JDBC: `org.h2.Driver`\n"
"\n"
"* XA: `org.h2.jdbcx.JdbcDataSource`"
msgstr ""
"\n"
" JDBC： `org.h2.Driver`\n"
"\n"
" XA： `org.h2.jdbcx.JdbcDataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:642
#, no-wrap
msgid "`mariadb`"
msgstr "`mariadb`"

#. type: Table
#: upstream/_guides/datasource.adoc:643
#, no-wrap
msgid "`quarkus-jdbc-mariadb`"
msgstr "`quarkus-jdbc-mariadb`"

#. type: Table
#: upstream/_guides/datasource.adoc:647
#, fuzzy, no-wrap
msgid ""
"* JDBC: `org.mariadb.jdbc.Driver`\n"
"\n"
"* XA: `org.mariadb.jdbc.MySQLDataSource`"
msgstr ""
"\n"
" JDBC： `org.mariadb.jdbc.Driver`\n"
"\n"
" XA： `org.mariadb.jdbc.MySQLDataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:648 upstream/_guides/datasource.adoc:687
#, no-wrap
msgid "`mssql`"
msgstr "`mssql`"

#. type: Table
#: upstream/_guides/datasource.adoc:649
#, no-wrap
msgid "`quarkus-jdbc-mssql`"
msgstr "`quarkus-jdbc-mssql`"

#. type: Table
#: upstream/_guides/datasource.adoc:653
#, fuzzy, no-wrap
msgid ""
"* JDBC: `com.microsoft.sqlserver.jdbc.SQLServerDriver`\n"
"\n"
"* XA: `com.microsoft.sqlserver.jdbc.SQLServerXADataSource`"
msgstr ""
"\n"
" JDBC： `com.microsoft.sqlserver.jdbc.SQLServerDriver`\n"
"\n"
" XA： `com.microsoft.sqlserver.jdbc.SQLServerXADataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:654 upstream/_guides/datasource.adoc:683
#, no-wrap
msgid "`mysql`"
msgstr "`mysql`"

#. type: Table
#: upstream/_guides/datasource.adoc:655
#, no-wrap
msgid "`quarkus-jdbc-mysql`"
msgstr "`quarkus-jdbc-mysql`"

#. type: Table
#: upstream/_guides/datasource.adoc:659
#, fuzzy, no-wrap
msgid ""
"* JDBC: `com.mysql.cj.jdbc.Driver`\n"
"\n"
"* XA: `com.mysql.cj.jdbc.MysqlXADataSource`"
msgstr ""
"\n"
" JDBC： `com.mysql.cj.jdbc.Driver`\n"
"\n"
" XA： `com.mysql.cj.jdbc.MysqlXADataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:660 upstream/_guides/datasource.adoc:679
#, no-wrap
msgid "`oracle`"
msgstr "`oracle`"

#. type: Table
#: upstream/_guides/datasource.adoc:661
#, fuzzy, no-wrap
msgid "`quarkus-jdbc-oracle`"
msgstr "`quarkus-jdbc-oracle`"

#. type: Table
#: upstream/_guides/datasource.adoc:665
#, fuzzy, no-wrap
msgid ""
"* JDBC: `oracle.jdbc.driver.OracleDriver`\n"
"\n"
"* XA: `oracle.jdbc.xa.client.OracleXADataSource`"
msgstr ""
"\n"
" JDBC： `oracle.jdbc.driver.OracleDriver`\n"
"\n"
" XA： `oracle.jdbc.xa.client.OracleXADataSource`"

#. type: Table
#: upstream/_guides/datasource.adoc:666 upstream/_guides/datasource.adoc:691
#, no-wrap
msgid "`postgresql`"
msgstr "`postgresql`"

#. type: Table
#: upstream/_guides/datasource.adoc:667
#, no-wrap
msgid "`quarkus-jdbc-postgresql`"
msgstr "`quarkus-jdbc-postgresql`"

#. type: Table
#: upstream/_guides/datasource.adoc:670
#, fuzzy, no-wrap
msgid ""
"* JDBC: `org.postgresql.Driver`\n"
"\n"
"* XA: `org.postgresql.xa.PGXADataSource`"
msgstr ""
"\n"
" JDBC： `org.postgresql.Driver`\n"
"\n"
" XA： `org.postgresql.xa.PGXADataSource`"

#. type: Block title
#: upstream/_guides/datasource.adoc:673
#, fuzzy, no-wrap
msgid "Database kind to Reactive driver mapping"
msgstr "データベースの種類とリアクティブ・ドライバーのマッピング"

#. type: Table
#: upstream/_guides/datasource.adoc:678
#, fuzzy, no-wrap
msgid "Driver"
msgstr "ドライバー"

#. type: Table
#: upstream/_guides/datasource.adoc:682
#, fuzzy, no-wrap
msgid "`io.vertx.oracleclient.spi.OracleDriver`"
msgstr "`io.vertx.oracleclient.spi.OracleDriver`"

#. type: Table
#: upstream/_guides/datasource.adoc:686
#, fuzzy, no-wrap
msgid "`io.vertx.mysqlclient.spi.MySQLDriver`"
msgstr "`io.vertx.mysqlclient.spi.MySQLDriver`"

#. type: Table
#: upstream/_guides/datasource.adoc:690
#, fuzzy, no-wrap
msgid "`io.vertx.mssqlclient.spi.MSSQLDriver`"
msgstr "`io.vertx.mssqlclient.spi.MSSQLDriver`"

#. type: Table
#: upstream/_guides/datasource.adoc:694
#, fuzzy, no-wrap
msgid "`io.vertx.pgclient.spi.PgDriver`"
msgstr "`io.vertx.pgclient.spi.PgDriver`"

#. type: Table
#: upstream/_guides/datasource.adoc:697
#, fuzzy, no-wrap
msgid "`io.vertx.db2client.spi.DB2Driver`"
msgstr "`io.vertx.db2client.spi.DB2Driver`"

#. type: delimited block =
#: upstream/_guides/datasource.adoc:702
#, fuzzy
msgid "This automatic resolution is applicable in most cases so that driver configuration is not needed."
msgstr "この自動解決はほとんどの場合に適用されるため、ドライバーの設定は必要ない。"

#. type: Title ===
#: upstream/_guides/datasource.adoc:706
#, fuzzy, no-wrap
msgid "Reactive datasource configuration reference"
msgstr "リアクティブ・データソースの設定リファレンス"

#. type: Title ====
#: upstream/_guides/datasource.adoc:710
#, fuzzy, no-wrap
msgid "Reactive DB2 configuration"
msgstr "リアクティブDB2の設定"

#. type: Title ====
#: upstream/_guides/datasource.adoc:714
#, fuzzy, no-wrap
msgid "Reactive MariaDB/MySQL specific configuration"
msgstr "リアクティブなMariaDB/MySQL固有の設定"

#. type: Title ====
#: upstream/_guides/datasource.adoc:718
#, fuzzy, no-wrap
msgid "Reactive Microsoft SQL server-specific configuration"
msgstr "リアクティブなマイクロソフトSQLサーバー固有の設定"

#. type: Title ====
#: upstream/_guides/datasource.adoc:722
#, fuzzy, no-wrap
msgid "Reactive Oracle-specific configuration"
msgstr "リアクティブ・オラクル固有の構成"

#. type: Title ====
#: upstream/_guides/datasource.adoc:726
#, fuzzy, no-wrap
msgid "Reactive PostgreSQL-specific configuration"
msgstr "リアクティブPostgreSQL固有の設定"

#. type: Title ===
#: upstream/_guides/datasource.adoc:732
#, fuzzy, no-wrap
msgid "Reactive datasource URL reference"
msgstr "リアクティブ・データソースのURL参照"

#. type: Plain text
#: upstream/_guides/datasource.adoc:737
msgid "`db2://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`db2://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:739
msgid "`db2://dbuser:secretpassword@database.server.com:50000/mydb`"
msgstr "`db2://dbuser:secretpassword@database.server.com:50000/mydb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:741 upstream/_guides/datasource.adoc:757
msgid "Currently, the client supports the following parameter keys:"
msgstr "現在、クライアントは以下のパラメータキーをサポートしています。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:745 upstream/_guides/datasource.adoc:761
#: upstream/_guides/datasource.adoc:777 upstream/_guides/datasource.adoc:810
msgid "`user`"
msgstr "`user`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:746 upstream/_guides/datasource.adoc:762
#: upstream/_guides/datasource.adoc:778 upstream/_guides/datasource.adoc:811
msgid "`password`"
msgstr "`password`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:749 upstream/_guides/datasource.adoc:765
#: upstream/_guides/datasource.adoc:783 upstream/_guides/datasource.adoc:820
#, fuzzy
msgid "Configuring parameters in the connection URL overrides the default properties."
msgstr "接続URLにパラメータを設定すると、デフォルトのプロパティが上書きされます。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:753
msgid "`sqlserver://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`sqlserver://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:755
msgid "`sqlserver://dbuser:secretpassword@database.server.com:1433/mydb`"
msgstr "`sqlserver://dbuser:secretpassword@database.server.com:1433/mydb`"

#. type: Title ====
#: upstream/_guides/datasource.adoc:766
#, no-wrap
msgid "MySQL / MariaDB"
msgstr "MySQL / MariaDB"

#. type: Plain text
#: upstream/_guides/datasource.adoc:769
msgid "`mysql://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`mysql://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:771
msgid "`mysql://dbuser:secretpassword@database.server.com:3211/mydb`"
msgstr "`mysql://dbuser:secretpassword@database.server.com:3211/mydb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:773
msgid "Currently, the client supports the following parameter keys (case-insensitive):"
msgstr "現在、クライアントは以下のパラメータキーをサポートしています（大文字と小文字を区別します）。"

#. type: Plain text
#: upstream/_guides/datasource.adoc:779
msgid "`schema`"
msgstr "`schema`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:780
msgid "`socket`"
msgstr "`socket`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:781
msgid "`useAffectedRows`"
msgstr "`useAffectedRows`"

#. type: Title =====
#: upstream/_guides/datasource.adoc:786
#, fuzzy, no-wrap
msgid "EZConnect format"
msgstr "EZConnectフォーマット"

#. type: Plain text
#: upstream/_guides/datasource.adoc:789
msgid "`oracle:thin:@[[protocol:]//]host[:port][/service_name][:server_mode][/instance_name][?connection properties]`"
msgstr "`oracle:thin:@[[protocol:]//]host[:port][/service_name][:server_mode][/instance_name][?connection properties]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:791
msgid "`oracle:thin:@mydbhost1:5521/mydbservice?connect_timeout=10sec`"
msgstr "`oracle:thin:@mydbhost1:5521/mydbservice?connect_timeout=10sec`"

#. type: Title =====
#: upstream/_guides/datasource.adoc:792
#, fuzzy, no-wrap
msgid "TNS alias format"
msgstr "TNSエイリアス形式"

#. type: Plain text
#: upstream/_guides/datasource.adoc:795
msgid "`oracle:thin:@<alias_name>[?connection properties]`"
msgstr "`oracle:thin:@<alias_name>[?connection properties]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:797
msgid "`oracle:thin:@prod_db?TNS_ADMIN=/work/tns/`"
msgstr "`oracle:thin:@prod_db?TNS_ADMIN=/work/tns/`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:801
msgid "`postgresql://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"
msgstr "`postgresql://[user[:[password]]@]host[:port][/database][?<key1>=<value1>[&<key2>=<value2>]]`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:803
msgid "`postgresql://dbuser:secretpassword@database.server.com:5432/mydb`"
msgstr "`postgresql://dbuser:secretpassword@database.server.com:5432/mydb`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:805
#, fuzzy
msgid "Currently, the client supports:"
msgstr "現在、クライアントは以下をサポートしている："

#. type: Plain text
#: upstream/_guides/datasource.adoc:807
#, fuzzy
msgid "Following parameter keys:"
msgstr "以下のパラメータキー："

#. type: Plain text
#: upstream/_guides/datasource.adoc:812
msgid "`dbname`"
msgstr "`dbname`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:813
msgid "`sslmode`"
msgstr "`sslmode`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:815
#, fuzzy
msgid "Additional properties, such as:"
msgstr "などのプロパティを追加した："

#. type: Plain text
#: upstream/_guides/datasource.adoc:816
msgid "`application_name`"
msgstr "`application_name`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:817
msgid "`fallback_application_name`"
msgstr "`fallback_application_name`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:818
msgid "`search_path`"
msgstr "`search_path`"

#. type: Plain text
#: upstream/_guides/datasource.adoc:819
msgid "`options`"
msgstr "`options`"

#, fuzzy
#~ msgid "If you are using the link:https://quarkus.io/guides/micrometer[`quarkus-micrometer`] or link:https://quarkus.io/guides/smallrye-metrics[`quarkus-smallrye-metrics`] extension, `quarkus-agroal` can contribute some datasource-related metrics to the metric registry.  This can be activated by setting the `quarkus.datasource.metrics.enabled` property to `true`."
#~ msgstr "を使用している場合は link:https://quarkus.io/guides/micrometer[quarkus-micrometer] または link:https://quarkus.io/guides/smallrye-metrics[quarkus-smallrye-metrics] エクステンションを使用している場合、 `quarkus-agroal` メトリック・レジストリにデータ・ソース関連のメトリクスを追加することができます。これは、 `quarkus.datasource.metrics.enabled` プロパティを `true` に設定することで有効になります。"

#, fuzzy
#~ msgid "Multiple datasources are only supported for JDBC and the Agroal extension.  Creating multiple reactive datasources is not currently possible."
#~ msgstr "複数のデータソースは JDBC と Agroal エクステンションでのみサポートされています。複数のリアクティブデータソースを作成することは現在のところできません。"

#, fuzzy
#~ msgid "See the xref:configuration-reference[Configuration Reference] section below."
#~ msgstr "以下の「 xref:configuration-reference[コンフィギュレーション・リファレンス] 」セクションを参照。"

#~ msgid "Datasources"
#~ msgstr "データソース"

#~ msgid "Many projects that use data require connections to a relational database."
#~ msgstr "データを使用する多くのプロジェクトでは、リレーショナルデータベースへの接続が必要になります。"

#~ msgid "The usual way of obtaining connections to a database is to use a datasource and configure a JDBC driver.  But you might also prefer using a reactive driver to connect to your database in a reactive way."
#~ msgstr "データベースへの接続を取得する一般的な方法は、データソースを使用して JDBC ドライバーを設定することです。しかし、リアクティブな方法でデータベースに接続するために、リアクティブなドライバーを使用することが好まれる場合もあります。"

#~ msgid "Quarkus has you covered either way:"
#~ msgstr "Quarkus では、どちらにも対応できます。"

#~ msgid "For JDBC, the preferred datasource and connection pooling implementation is https://agroal.github.io/[Agroal]."
#~ msgstr "JDBC の場合、データソースと接続プーリングの実装は https://agroal.github.io/[Agroal] が好まれます。"

#~ msgid "For reactive, we use the https://vertx.io/[Vert.x] reactive drivers."
#~ msgstr "リアクティブには、 https://vertx.io/[Vert.x] リアクティブドライバーを使用します。"

#~ msgid "Both are configured via unified and flexible configuration."
#~ msgstr "どちらも統一された柔軟な構成で構成されています。"

# ファーストクラスは、liquibaseやflywayでも既に使用しているのでこのままとします。
#~ msgid "Agroal is a modern, lightweight connection pool implementation designed for very high performance and scalability, and features first class integration with the other components in Quarkus, such as security, transaction management components, health, and metrics."
#~ msgstr "Agroal は、非常に高いパフォーマンスとスケーラビリティ－を実現するように設計されたモダンで軽量な接続プールの実装です。また、セキュリティー、トランザクション管理コンポーネント、ヘルス、メトリクスなど、Quarkus における他のコンポーネントとのファーストクラスの統合を特徴としています。"

#~ msgid "This guide will explain how to:"
#~ msgstr "このガイドでは、以下の方法を説明します。"

#~ msgid "configure a datasource, or multiple datasources"
#~ msgstr "1 つまたは複数のデータソースを設定する"

#~ msgid "how to obtain a reference to those datasources in code"
#~ msgstr "コードでこれらのデータソースへの参照を取得する方法"

#~ msgid "which pool tuning configuration properties are available"
#~ msgstr "どのプールチューニング設定プロパティーを使用できるか"

#~ msgid "This guide is mainly about datasource configuration.  If you want more details about how to consume and make use of a reactive datasource, please refer to the xref:reactive-sql-clients.adoc[Reactive SQL clients guide]."
#~ msgstr "このガイドでは、主にデータソースの設定について説明します。リアクティブデータソースの利用方法の詳細を知りたい場合は、 link:reactive-sql-clients.html[リアクティブ SQL クライアントのガイド]を参照してください。"

#~ msgid "TL;DR"
#~ msgstr "詳細な説明"

#~ msgid "This is a quick introduction to datasource configuration.  If you want a better understanding of how all this works, this guide has a lot more information in the subsequent paragraphs."
#~ msgstr "これはデータソースの設定についての簡単な紹介です。すべての動作について理解を深める場合は、このガイドの後の段落でさらに多くの情報を得ることができます。"

#~ msgid "Zero Config Setup (Dev Services)"
#~ msgstr "ゼロコンフィグセットアップ（DevServices）"

#~ msgid "When testing or running in dev mode Quarkus can even provide you with a zero config database out of the box, a feature we refer to as Dev Services. Depending on your database type you may need Docker installed in order to use this feature."
#~ msgstr "Quarkusでは、テストや開発モードで実行する際に、ゼロコンフィグでデータベースをすぐに提供することができます。これは、私たちがDevServicesと呼ぶ機能です。データベースの種類によっては、この機能を使用するためにdockerをインストールする必要があります。DevServicesは以下のオープンソースデータベースでサポートされています。"

#~ msgid "If you want to use Dev Services then all you need to do is include the relevant extension for the type of database you want, e.g. `jdbc-postgresql`, `reactive-pg-client` or both. Don't configure a database URL, username and password - Quarkus will provide the database and you can just start coding without worrying about config."
#~ msgstr "DevServicesを使用する場合、必要なのは使用するデータベースの種類（リアクティブまたはJDBC、またはその両方）に応じた関連するエクステンションを含めることだけで、データベースのURLやユーザー名、パスワードを設定する必要はありません。Quarkusがデータベースを提供するので、ユーザーは設定に煩わされることなく、ただコーディングを開始することが出来ます。"

#~ msgid "See xref:databases-dev-services.adoc[Databases Dev Services] for more details and optional configurations."
#~ msgstr "詳細およびオプションの構成については、 link:databases-dev-services.html[Databases Dev Services] を参照してください。"

#~ msgid "Add the `agroal` extension plus one of `jdbc-db2`, `jdbc-derby`, `jdbc-h2`, `jdbc-mariadb`, `jdbc-mssql`, `jdbc-mysql`, `jdbc-oracle` or `jdbc-postgresql`."
#~ msgstr "`agroal` のエクステンションに加えて、`jdbc-db2`、`jdbc-derby`、`jdbc-h2`、`jdbc-mariadb`、`jdbc-mssql`、`jdbc-mysql`、`jdbc-postgresql` のいずれかを追加します。"

#~ msgid "Then configure your datasource:"
#~ msgstr "次に、データソースを設定します。"

#~ msgid "If you only have a single JDBC extension, or you are running tests and only have a single test scoped JDBC extension installed then this is optional. If there is only one possible extension we assume this is the correct one, and if a driver has been added with test scope then we assume that this should be used in testing."
#~ msgstr "JDBCエクステンションが1つしかない場合や、テストを実行していてテストスコープ付きのJDBCエクステンションが1つしかインストールされていない場合は、このオプションは必須ではありません。利用可能なエクステンションが1つしかない場合は、それが正しいものであると判断します。また、テストスコープでドライバが追加されている場合は、テストでテストスコープでドライバ追加されたドライバを使用するものとします。"

#~ msgid "Add the correct reactive extension for the database you are using: `reactive-db2-client`, `reactive-mssql-client`, `reactive-mysql-client`, `reactive-oracle-client`, or `reactive-pg-client`."
#~ msgstr "使用しているデータベースに適切なリアクティブエクステンションを追加します。`reactive-pg-client` , `reactive-mysql-client`、または `reactive-db2-client` です。"

#~ msgid "Then configure your reactive datasource:"
#~ msgstr "次に、リアクティブデータソースを構成します。"

#~ msgid "As specified above this is optional."
#~ msgstr "上述の通り、これはオプションです。"

#~ msgid "Default datasource"
#~ msgstr "デフォルトのデータソース"

#~ msgid "A datasource can be either a JDBC datasource, a reactive one or both.  It all depends on how you configure it and which extensions you added to your project."
#~ msgstr "データソースは、JDBC データソースまたはリアクティブデータソースのいずれか 1 つでも、その両方でも構いません。データソースの設定方法と、プロジェクトに追加したエクステンションによって異なります。"

#~ msgid "To define a datasource, start with the following (note that this is only required if you have more than one database type installed):"
#~ msgstr "データソースを定義するには、まず以下のようにします（複数のデータベースタイプがインストールされている場合にのみ必要となりますのでご注意ください）。"

#~ msgid "The database kind defines which type of database you will connect to."
#~ msgstr "データベースの種類は、接続するデータベースの種類を定義します。"

#~ msgid "We currently include these built-in database kinds:"
#~ msgstr "現在のところ、これらの組込データベースの種類が含まれています。"

#~ msgid "Giving Quarkus the database kind you are targeting will facilitate configuration.  By using a JDBC driver extension and setting the kind in the configuration, Quarkus resolves the JDBC driver automatically, so you don't need to configure it yourself.  If you want to use a database kind that is not part of the built-in ones, use `other` and define the JDBC driver explicitly."
#~ msgstr "対象とするデータベースの種類を Quarkus に指定することで、設定が容易になります。JDBC ドライバーのエクステンションを使用して、設定でタイプを指定することで、Quarkus は自動的に JDBC ドライバーを解決します。そのため、自分で設定する必要はありません。組み込みのものに含まれていないデータベースの種類を使用したい場合は、`other` を使用して、JDBCドライバーを明示的に定義してください。"

#~ msgid "You can use any JDBC driver in a Quarkus app in JVM mode (see xref:other-databases[Using other databases]).  It is unlikely that it will work when compiling your application to a native executable though."
#~ msgstr "Quarkusアプリでは、JVMモードで任意のJDBCドライバを使用することができます（ xref:other-databases[他のデータベースの使用] を参照）。ただし、アプリケーションをネイティブ実行可能ファイルにコンパイルする際に動作することはほとんどありません。"

#~ msgid "If you plan to make a native executable, we recommend you use the existing JDBC Quarkus extensions (or contribute one for your driver)."
#~ msgstr "ネイティブ実行可能ファイルを作成する場合は、既存の JDBC Quarkus エクステンションを使用するこが推奨されます (または、ドライバーに貢献することをお勧めします)。"

#~ msgid "There is a good chance you will need to define some credentials to access your database."
#~ msgstr "データベースにアクセスするために、いくつかの認証情報を定義する必要がある可能性があります。"

#~ msgid "This is done by configuring the following properties:"
#~ msgstr "これは、以下のプロパティーを設定することで行います。"

#~ msgid "Once you have defined the database kind and the credentials, you are ready to configure either a JDBC datasource, a reactive one, or both."
#~ msgstr "データベースの種類と認証情報を定義したら、JDBC データソースまたはリアクティブデータソースのいずれか 1 つ、あるいはその両方を設定することができます。"

#~ msgid "JDBC is the most common database connection pattern.  You typically need a JDBC datasource when using Hibernate ORM."
#~ msgstr "JDBC は最も一般的なデータベース接続パターンです。通常、Hibernate ORM を使用する場合は JDBC データソースが必要です。"

#~ msgid "Install the Maven dependencies"
#~ msgstr "Maven の依存関係をインストールします。"

#~ msgid "First, you will need to add the `quarkus-agroal` dependency to your project."
#~ msgstr "まず、`quarkus-agroal` 依存関係をプロジェクトに追加する必要があります。"

#~ msgid "You can add it using a simple Maven command:"
#~ msgstr "シンプルな Maven コマンドを使って追加することができます。"

#~ msgid "Agroal comes as a transitive dependency of the Hibernate ORM extension so if you are using Hibernate ORM, you don't need to add the Agroal extension dependency explicitly."
#~ msgstr "Agroal は Hibernate ORM エクステンションの遷移依存関係として提供されるので、Hibernate ORM を使用している場合は、Agroal エクステンションの依存関係を明示的に追加する必要はありません。"

#~ msgid "You will also need to choose, and add, the Quarkus extension for your relational database driver."
#~ msgstr "また、リレーショナルデータベースドライバー用の Quarkus エクステンションを選択して追加する必要があります。"

#~ msgid "Quarkus provides driver extensions for:"
#~ msgstr "Quarkus は、以下のためのドライバーエクステンションを提供しています。"

#~ msgid "Some other JDBC extensions can be found in the Quarkiverse such as:"
#~ msgstr "その他のJDBCエクステンションは、Quarkiverseにいくつか掲載されています。"

#~ msgid "SQLite: https://github.com/quarkiverse/quarkus-jdbc-sqlite[Project homepage] - https://quarkiverse.github.io/quarkiverse-docs/quarkus-jdbc-sqlite/dev/index.html[Documentation]"
#~ msgstr "SQLite: https://github.com/quarkiverse/quarkus-jdbc-sqlite[Project homepage] - https://quarkiverse.github.io/quarkiverse-docs/quarkus-jdbc-sqlite/dev/index.html[Documentation]"

#~ msgid "See xref:other-databases[Use a database with no built-in extension or with a different driver] if you want to use a JDBC driver for another database."
#~ msgstr "他のデータベースのJDBCドライバーを使用する場合は、 xref:other-databases[組込エクステンションのないデータベースの使用、あるいは別のドライバーの使用] を参照してください。"

#~ msgid "The H2 and Derby databases can normally be configured to run in \"embedded mode\"; however the Derby extension does not support compiling the embedded database engine into native executables."
#~ msgstr "H2 データベースと Derby データベースは通常、「組込モード」で実行するように設定することができます。しかしながら、このエクステンションは、組込データベースエンジンのネイティブ実行可能ファイルへのコンパイルに対応していません。"

#~ msgid "Read xref:in-memory-databases[Testing with in-memory databases] (below) for suggestions regarding integration testing."
#~ msgstr "結合テストに関する提案については、後述の xref:in-memory-databases[インメモリデータベースのテスト] をお読みください。"

#~ msgid "As usual, you can install the extension using `add-extension`."
#~ msgstr "通常通り、`add-extension` を使ってエクステンションをインストールします。"

#~ msgid "To install the PostgreSQL driver dependency for instance, run the following command:"
#~ msgstr "PostgreSQL ドライバーの依存関係をインスタンスにインストールするには、以下のコマンドを実行します。"

#~ msgid "Configure the JDBC connection"
#~ msgstr "JDBC 接続を設定する"

#~ msgid "Configuring your JDBC connection is easy, the only mandatory property is the JDBC URL."
#~ msgstr "JDBC 接続の設定は簡単で、必須のプロパティーは JDBC URL のみです。"

#~ msgid "Note the `jdbc` prefix in the property name.  All the configuration properties specific to JDBC have this prefix."
#~ msgstr "プロパティー名の接頭辞 `jdbc` に注意してください。JDBC に固有のすべての設定プロパティーには、この接頭辞があります。"

#~ msgid "For more information about the JDBC URL format, please refer to the xref:jdbc-url[JDBC url reference section]."
#~ msgstr "JDBC URL形式の詳細については、 xref:jdbc-url[JDBC url リファレンスのセクション] を参照してください。"

#~ msgid "When using one of the built-in datasource kinds, the JDBC driver is resolved automatically to the following values:"
#~ msgstr "ビルトインデータソースのいずれかの種類を使用している場合、JDBC ドライバーは以下の値に自動的に解決されます。"

#~ msgid "Database kind to JDBC driver mapping"
#~ msgstr "データベースの種類から JDBC ドライバーへのマッピング"

#~ msgid "JDBC driver"
#~ msgstr "JDBC ドライバー"

#~ msgid "XA driver"
#~ msgstr "XA ドライバー"

#~ msgid "`com.ibm.db2.jcc.DBDriver`"
#~ msgstr "`com.ibm.db2.jcc.DBDriver`"

#~ msgid "`com.ibm.db2.jcc.DB2XADataSource`"
#~ msgstr "`com.ibm.db2.jcc.DB2XADataSource`"

#~ msgid "`org.apache.derby.jdbc.ClientDriver`"
#~ msgstr "`org.apache.derby.jdbc.ClientDriver`"

#~ msgid "`org.apache.derby.jdbc.ClientXADataSource`"
#~ msgstr "`org.apache.derby.jdbc.ClientXADataSource`"

#~ msgid "`org.h2.Driver`"
#~ msgstr "`org.h2.Driver`"

#~ msgid "`org.h2.jdbcx.JdbcDataSource`"
#~ msgstr "`org.h2.jdbcx.JdbcDataSource`"

#~ msgid "`org.mariadb.jdbc.Driver`"
#~ msgstr "`org.mariadb.jdbc.Driver`"

#~ msgid "`org.mariadb.jdbc.MySQLDataSource`"
#~ msgstr "`org.mariadb.jdbc.MySQLDataSource`"

#~ msgid "`com.microsoft.sqlserver.jdbc.SQLServerDriver`"
#~ msgstr "`com.microsoft.sqlserver.jdbc.SQLServerDriver`"

#~ msgid "`com.microsoft.sqlserver.jdbc.SQLServerXADataSource`"
#~ msgstr "`com.microsoft.sqlserver.jdbc.SQLServerXADataSource`"

#~ msgid "`com.mysql.cj.jdbc.Driver`"
#~ msgstr "`com.mysql.cj.jdbc.Driver`"

#~ msgid "`com.mysql.cj.jdbc.MysqlXADataSource`"
#~ msgstr "`com.mysql.cj.jdbc.MysqlXADataSource`"

#~ msgid "`oracle.jdbc.driver.OracleDriver`"
#~ msgstr "`oracle.jdbc.driver.OracleDriver`"

#~ msgid "`oracle.jdbc.xa.client.OracleXADataSource`"
#~ msgstr "`oracle.jdbc.xa.client.OracleXADataSource`"

#~ msgid "`org.postgresql.Driver`"
#~ msgstr "`org.postgresql.Driver`"

#~ msgid "`org.postgresql.xa.PGXADataSource`"
#~ msgstr "`org.postgresql.xa.PGXADataSource`"

#~ msgid "As previously stated, most of the time, this automatic resolution will suit you and you won't need to configure the driver."
#~ msgstr "前述したように、多くの場合、この自動解決が適切で、ドライバーを設定する必要はありません。"

#~ msgid "Use a database with no built-in extension or with a different driver"
#~ msgstr "ビルトインエクステンションのないデータベース、もしくは別のドライバーのあるデータベースを使用"

#~ msgid "You can use a specific driver if you need to (for instance for using the OpenTracing driver)  or if you want to use a database for which Quarkus does not have a built-in JDBC driver extension."
#~ msgstr "必要に応じて (例えば OpenTracing ドライバーを使用する場合)、あるいはビルトイン JDBC ドライバーエクステンションのない Quarkus のデータベースを使用する必要がある場合は、特定のドライバーを使用できます。"

#~ msgid "Without an extension, the driver will work fine in any Quarkus app running in JVM mode.  It is unlikely that it will work when compiling your application to a native executable though.  If you plan to make a native executable, we recommend you use the existing JDBC Quarkus extensions (or contribute one for your driver)."
#~ msgstr "エクステンションがない場合でも、JVM モードで実行されている Quarkus アプリであれば、ドライバーは問題なく動作します。しかし、アプリケーションをネイティブ実行可能ファイルにコンパイルした場合には動作しません。ネイティブ実行可能ファイルを作成する予定がある場合は、既存の JDBC Quarkus エクステンションを使用することをお勧めします (または、ドライバー用のエクステンションを提供することをお勧めします)。"

#~ msgid "Here is how you would use the OpenTracing driver:"
#~ msgstr "ここでは、OpenTracing ドライバーをどのように使用するかを説明します。"

#~ msgid "Here is how you would define access to a database with no built-in support (in JVM mode):"
#~ msgstr "ここでは、組み込みサポートのないデータベースへのアクセスを定義する方法を説明します (JVMモードで)。"

#~ msgid "More configuration"
#~ msgstr "その他設定"

#~ msgid "You can configure a lot more things, for instance the size of the connection pool."
#~ msgstr "接続プールのサイズなど、より多くのことを設定することができます。"

#~ msgid "Please refer to the xref:jdbc-configuration[JDBC configuration reference] for all the details about the JDBC configuration knobs."
#~ msgstr "JDBC設定項目のすべての詳細については、 xref:jdbc-configuration[JDBC設定リファレンス] を参照してください。"

#~ msgid "If you are using Hibernate ORM, the datasource will be consumed automatically."
#~ msgstr "Hibernate ORM を使用している場合、データソースは自動的に消費されます。"

#~ msgid "If for whatever reason, access to the datasource is needed in code, it can be obtained as any other bean in the following manner:"
#~ msgstr "何らかの理由でコード内でデータソースへのアクセスが必要な場合は、以下の方法で他の Bean と同じようにデータソースを取得することができます。"

#~ msgid "In the above example, the type is `AgroalDataSource` which is a subtype of `javax.sql.DataSource`.  Because of this, you can also use `javax.sql.DataSource` as the injected type."
#~ msgstr "上記の例では、型は `AgroalDataSource` であり、 `javax.sql.DataSource` のサブタイプです。このため、`javax.sql.DataSource` を注入された型として使用することもできます。"

#~ msgid "If you prefer using a reactive datasource, Quarkus offers DB2, MariaDB/MySQL, Microsoft SQL Server, Oracle and PostgreSQL reactive clients."
#~ msgstr "リアクティブデータソースを使用したい場合は、Quarkus では、DB2、MySQL/MariaDB、PostgreSQL リアクティブクライアントを利用できます。"

#~ msgid "Depending on which database you want to use, add the corresponding extension:"
#~ msgstr "使用したいデータベースに応じて、対応するエクステンションを追加します。"

#~ msgid "Configure the reactive datasource"
#~ msgstr "リアクティブデータソースの構成"

#~ msgid "Once the driver is there, you just need to configure the connection URL."
#~ msgstr "ドライバーがあれば、あとは接続 URL を設定するだけです。"

#~ msgid "Optionally, but highly recommended, you should define a proper size for your connection pool."
#~ msgstr "オプションですが、接続プールの適切なサイズを定義することを強くお勧めします。"

#~ msgid "By default, if you include both a JDBC extension (+ Agroal) and a reactive datasource extension handling the given database kind, both will be created."
#~ msgstr "デフォルトでは、JDBC エクステンション (+ Agroal) と、指定したデータベースの種類を扱うリアクティブデータソースエクステンションの両方を含めると、これらのファイル両方が作成されます。"

#~ msgid "If you want to disable the JDBC datasource explicitly, use:"
#~ msgstr "JDBC データソースを明示的に無効にしたい場合は、以下を使用します。"

#~ msgid "If you want to disable the reactive datasource explicitly, use:"
#~ msgstr "リアクティブデータソースを明示的に無効にしたい場合は、以下のようにします。"

#~ msgid "Most of the time, the configuration above won't be necessary as either a JDBC driver or a reactive datasource extension will be present and not both."
#~ msgstr "多くの場合、存在するのはJDBC ドライバーまたはリアクティブデータソースエクステンションのどちらかで、両方存在するわけではありません。そのため、上記の設定は必要ありません。"

#~ msgid "Multiple Datasources"
#~ msgstr "複数のデータソース"

#~ msgid "Configuring Multiple Datasources"
#~ msgstr "複数のデータソースの構成"

#~ msgid "For now, multiple datasources are only supported for JDBC and the Agroal extension.  So it is not currently possible to create multiple reactive datasources."
#~ msgstr "現在のところ、複数のデータソースは JDBC と Agroal エクステンションでのみサポートされています。そのため、現在、複数のリアクティブデータソースを作成することはできません。"

#~ msgid "The Hibernate ORM extension xref:hibernate-orm.adoc#multiple-persistence-units[supports defining several persistence units using configuration properties].  For each persistence unit, you can point to the datasource of your choice."
#~ msgstr "Hibernate ORMエクステンションは、 link:hibernate-orm.html#multiple-persistence-units[設定プロパティを使用して複数の永続化ユニットを定義することをサポートしています]。各永続化ユニットでは、選択したデータソースを指定することができます。"

#~ msgid "Defining multiple datasources works exactly the same way as defining a single datasource, with one important change: you define a name."
#~ msgstr "複数のデータソースの定義は、単一のデータソースの定義と全く同じです。ただし、1 つだけ重要な変更点があります。それは、名前を定義することです。"

#~ msgid "In the following example, you have 3 different datasources:"
#~ msgstr "以下の例では、3 つの異なるデータソースがあります。"

#~ msgid "The default one,"
#~ msgstr "デフォルトのもの"

#~ msgid "A datasource named `users`,"
#~ msgstr "`users` という名前のデータソース"

#~ msgid "A datasource named `inventory`,"
#~ msgstr "`inventory` という名前のデータソース"

#~ msgid "each with its own configuration."
#~ msgstr "それぞれが独自の設定を持っています。"

#~ msgid "Notice there is an extra bit in the key.  The syntax is as follows: `quarkus.datasource.[optional name.][datasource property]`."
#~ msgstr "キーに余分なビットがあることに注意してください。構文は以下の通りです。`quarkus.datasource.[optional name.][datasource property]` ."

#~ msgid "Even when only one database extension is installed, named databases need to specify at least one build time property so that Quarkus knows they exist. Generally this will be the `db-kind` property, although you can also specify Dev Services properties to create named datasources (covered later in this guide)."
#~ msgstr "データベースエクステンションが1つしかインストールされていない場合でも、名前付きデータベースは、Quarkusがその存在を認識できるように、少なくとも1つのビルド時プロパティを指定する必要があります。通常、これは `db-kind` プロパティになりますが、名前付きデータソースを作成するためにDevServicesプロパティを指定することもできます（このガイドで後述します）。"

#~ msgid "Named Datasource Injection"
#~ msgstr "名前付きデータソースインジェクション"

#~ msgid "When using multiple datasources, each `DataSource` also has the `io.quarkus.agroal.DataSource` qualifier with the name of the datasource as the value.  Using the above properties to configure three different datasources, you can also inject each one as follows:"
#~ msgstr "複数のデータソースを使用する場合、それぞれの `DataSource` にも、値としてデータソース名のある `io.quarkus.agroal.DataSource` の修飾子が付けられています。上記のプロパティーを使って 3 つの異なるデータソースを設定すると、以下のようにそれぞれのデータソースを注入することもできます。"

#~ msgid "Datasource Health Check"
#~ msgstr "データソースヘルスチェック"

#~ msgid "If you are using the `quarkus-smallrye-health` extension, the `quarkus-agroal` and reactive client extensions will automatically add a readiness health check to validate the datasource."
#~ msgstr "`quarkus-smallrye-health` エクステンションを使用している場合、`quarkus-agroal` とリアクティブクライアントエクステンションは、データソースを検証するための準備の健全性チェックを自動的に追加します。"

#~ msgid "When you access the `/q/health/ready` endpoint of your application you will have information about the datasource validation status.  If you have multiple datasources, all datasources will be checked and the status will be `DOWN` as soon as there is one datasource validation failure."
#~ msgstr "アプリケーションの `/q/health/ready` エンドポイントにアクセスすると、データソースの検証ステータスに関する情報が表示されます。複数のデータソースがある場合は、すべてのデータソースがチェックされ、1 つのデータソースの検証に失敗するとすぐにステータスが `DOWN` になります。"

#~ msgid "This behavior can be disabled via the property `quarkus.datasource.health.enabled`."
#~ msgstr "この動作は、プロパティー `quarkus.datasource.health.enabled` で無効にすることができます。"

#~ msgid "Datasource Metrics"
#~ msgstr "データソースメトリクス"

#~ msgid "If you are using the `quarkus-micrometer` or `quarkus-smallrye-metrics` extension, `quarkus-agroal` can expose some data source metrics on the `/q/metrics` endpoint. This can be turned on by setting the property `quarkus.datasource.metrics.enabled` to true."
#~ msgstr "`quarkus-micrometer` または `quarkus-smallrye-metrics` エクステンションを使用している場合、`quarkus-agroal` は `/q/metrics` エンドポイントでいくつかのデータソースメトリクスを公開できます。これは、プロパティー `quarkus.datasource.metrics.enabled` を true に設定することで有効にすることができます。"

#~ msgid "For the exposed metrics to contain any actual values, it is necessary that metric collection is enabled internally by Agroal mechanisms. By default, this metric collection mechanism gets turned on for all data sources if a metrics extension is present and metrics for the Agroal extension are enabled. If you want to disable metrics for a particular data source, this can be done by setting `quarkus.datasource.jdbc.enable-metrics` to `false` (or `quarkus.datasource.<datasource name>.jdbc.enable-metrics` for a named datasource).  This disables collecting the metrics as well as exposing them in the `/q/metrics` endpoint, because it does not make sense to expose metrics if the mechanism to collect them is disabled."
#~ msgstr "公開されたメトリクスに実際の値が含まれるようにするには、メトリクス収集が Agroal メカニズムによって内部的に有効化されている必要があります。デフォルトでは、メトリクスエクステンションが存在し、Agroal エクステンションのメトリクスが有効になっている場合に、このメトリック収集メカニズムはすべてのデータソースに対してオンになります。特定のデータソースのメトリクスを無効にしたい場合は、`quarkus.datasource.jdbc.enable-metrics` を `false` (名前付きデータソースの場合は `quarkus.datasource.<datasource name>.jdbc.enable-metrics`) に設定することで行うことができます。これは、メトリクスを収集するメカニズムが無効化されている場合は、メトリクスの公開は意味がありません。そのため、`/q/metrics` エンドポイントでの公開と同様に、メトリクスの収集を無効化します。"

#~ msgid "Conversely, setting `quarkus.datasource.jdbc.enable-metrics` to `true` (or `quarkus.datasource.<datasource name>.jdbc.enable-metrics` for a named datasource) explicitly can be used to enable collection of metrics even if a metrics extension is not in use.  This can be useful if you need to access the collected metrics programmatically.  They are available after calling `dataSource.getMetrics()` on an injected `AgroalDataSource` instance. If collection of metrics is disabled for this data source, all values will be zero."
#~ msgstr "逆に、明示的に `quarkus.datasource.jdbc.enable-metrics` を `true` (名前付きデータソースの場合は `quarkus.datasource.<datasource name>.jdbc.enable-metrics`) に設定することで、メトリクスエクステンションが使用されていなくても、メトリクスの収集を有効にすることができます。これは、収集したメトリクスにプログラムでアクセスする必要がある場合に便利です。インジェクト下 `AgroalDataSource` インスタンスで `dataSource.getMetrics()` を呼び出した後に利用できます。このデータソースでメトリクスの収集が無効になっている場合、すべての値はゼロになります。"

#~ msgid "Narayana Transaction Manager integration"
#~ msgstr "Narayana トランザクションマネージャーの統合"

#~ msgid "If the Narayana JTA extension is also available, integration is automatic."
#~ msgstr "Narayana JTA エクステンションも利用できる場合、統合は自動的に行われます。"

#~ msgid "You can override this by setting the `transactions` configuration property - see the xref:configuration-reference[Configuration Reference] below."
#~ msgstr "`transactions` 設定プロパティを設定することで、これを上書きすることができます（下記の xref:configuration-reference[設定リファレンス] を参照）。"

#~ msgid "Named Datasources"
#~ msgstr "名前付きデータソース"

#~ msgid "When using Dev Services the default datasource will always be created, but to specify a named datasource you need to have at least one build time property so Quarkus knows to create the datasource. You will usually either specify the `db-kind` property, or explicitly enable Dev Services: `quarkus.datasource.\"name\".devservices.enabled=true`."
#~ msgstr "DevServicesを使用する場合、デフォルトのデータソースは常に作成されますが、名前付きのデータソースを指定するには、Quarkusがデータソースの作成を認識できるように、少なくとも1つのビルド時プロパティが必要です。通常は `db-kind` プロパティを指定するか、明示的に `quarkus.datasource.\"name\".devservices.enabled=true` を指定してDevServicesを有効にします。"

#~ msgid "Some databases like H2 and Derby are commonly used in \"embedded mode\" as a facility to run quick integration tests."
#~ msgstr "H2 や Derby のようなデータベースの中には、迅速な統合テストを実行するためのファシリティとして \"embedded mode\" で一般的に使用されているものもあります。"

#~ msgid "Our suggestion is to use the real database you intend to use in production; container technologies made this simple enough so you no longer have an excuse. Still, there are sometimes good reasons to also want the ability to run quick integration tests using the JVM powered databases, so this is possible as well."
#~ msgstr "本番で使用する予定の実際のデータベースを使用することをお勧めします。コンテナーテクノロジーによりこれが容易になりました。ただ依然として、JVM を搭載したデータベースを使用して迅速な統合テストを実行する機能が必要な場合もあります。そのような場合でも、これが可能です。"

#~ msgid "It is important to remember that when configuring Derby to use the embedded engine, this will work as usual in JVM mode but such an application will not compile into a native executable, as the Quarkus extensions only cover for making the JDBC client code compatible with the native compilation step: embedding the whole database engine into a native executable is currently not implemented."
#~ msgstr "組込エンジンを使用するように H2 (または Derby) を設定する場合、JVM モードでは通常通り動作しますが、そのようなアプリケーションはネイティブ実行可能ファイルにはコンパイルされません。これは、Quarkus エクステンションが、JDBC クライアントコードをネイティブコンパイルステップに対応させることのみを対象としているためです。データベースエンジン全体のネイティブ実行可能ファイルへの組込は現在実装されていません。"

#~ msgid "Compiling H2 into a native-image is now possible (it didn't use to be) but this is considered experimental; even if this is technically possible, we would still recommend to consider carefully why you would want to embed H2 within your native-image."
#~ msgstr "H2をネイティブイメージにコンパイルすることは可能です（以前はできませんでした）が、これは実験的なものと考えられています。技術的に可能であっても、なぜH2をネイティブイメージに埋め込みたいのか、慎重に検討することをお勧めします。"

#~ msgid "If you plan to run such integration tests in the JVM exclusively, it will of course work as usual."
#~ msgstr "このような統合テストを JVM で排他的に実行する予定であれば、もちろん通常通りに動作します。"

#~ msgid "If you want the ability to run such integration test in both JVM and/or native executables, we have some cool helpers for you: just add either `@QuarkusTestResource(H2DatabaseTestResource.class)` or `@QuarkusTestResource(DerbyDatabaseTestResource.class)` on any class in your integration tests, this will make sure the test suite starts (and stops) the embedded database into a separate process as necessary to run your tests."
#~ msgstr "このような統合テストを JVM やネイティブ実行可能ファイルの両方で実行できるようにしたい場合は、いくつかの便利なヘルパーを利用できます。統合テストの任意のクラスに `@QuarkusTestResource(H2DatabaseTestResource.class)` または `@QuarkusTestResource(DerbyDatabaseTestResource.class)` を追加するだけで、テストスイートがテストを実行するために必要なデータベースを別のプロセスに組み込んで起動 (および停止) するようになります。"

#~ msgid "These additional helpers are provided by the artifacts having Maven coordinates `io.quarkus:quarkus-test-h2` and `io.quarkus:quarkus-test-derby`, respectively for H2 and Derby."
#~ msgstr "これらの追加のヘルパーは、H2 と Derby 用にそれぞれ Maven 座標 `io.quarkus:quarkus-test-h2` と `io.quarkus:quarkus-test-derby` を持アーティファクトによって提供されています。"

#~ msgid "Follows an example for H2:"
#~ msgstr "以下は、H2 の例です。"

#~ msgid "This will allow you to test your application even when it's compiled into a native executable, while the database will run in the JVM as usual."
#~ msgstr "これにより、ネイティブ実行可能ファイルにコンパイルされている場合でもアプリケーションをテストすることができ、データベースは通常通り JVM で実行されます。"

#~ msgid "Connect to it using:"
#~ msgstr "以下を使用して接続します。"

#~ msgid "Common Datasource Configuration Reference"
#~ msgstr "共通データソース構成リファレンス"

#~ msgid "JDBC Configuration Reference"
#~ msgstr "JDBC 設定リファレンス"

#~ msgid "JDBC URL Reference"
#~ msgstr "JDBC URL リファレンス"

#~ msgid "Each of the supported databases contains different JDBC URL configuration options.  Going into each of those options is beyond the scope of this document, but the following section gives an overview of each database URL and a link to the official documentation."
#~ msgstr "サポートされているデータベースにはそれぞれ異なる JDBC URL 設定オプションがあります。それぞれのオプションについては、本ドキュメントの説明範囲を超えていますが、以下のセクションでは各データベースの URL の概要と公式ドキュメントへのリンクを示します。"

#~ msgid "See the https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052342.html[official documentation] for more detail on URL syntax and additional supported options."
#~ msgstr "URL の構文やサポートされているオプションの詳細は、 link:https://www.ibm.com/support/knowledgecenter/SSEPGG_11.5.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_r0052342.html[公式ドキュメント] を参照してください。"

#~ msgid "Derby is an embedded database.  It can run as a server, based on a file, or live completely in memory.  All of these options are available as listed above.  You can find more information at the https://db.apache.org/derby/docs/10.8/devguide/cdevdvlp17453.html#cdevdvlp17453[official documentation]."
#~ msgstr "Derby は組み込みデータベースです。サーバーとして、ファイルを元にして、あるいは完全にメモリー内でライブで実行するこもできます。これらすべてのオプションは上記のように利用可能です。詳細は link:https://db.apache.org/derby/docs/10.8/devguide/cdevdvlp17453.html#cdevdvlp17453[公式ドキュメント] で確認できます。"

#~ msgid "H2 is an embedded database.  It can run as a server, based on a file, or live completely in memory.  All of these options are available as listed above.  You can find more information at the https://h2database.com/html/features.html?highlight=url&search=url#database_url[official documentation]."
#~ msgstr "H2 は組み込みデータベースです。サーバーとして、ファイルに基づいて、あるいは、メモリー内で完全にライブで実行できます。これらすべてのオプションは上記のように利用可能です。詳細は、link:https://h2database.com/html/features.html?highlight=url&search=url#database_url[公式ドキュメント] にあります。"

#~ msgid "You can find more information about this feature and others detailed in the https://mariadb.com/kb/en/library/about-mariadb-connector-j/[official documentation]."
#~ msgstr "この機能の詳細は、link:https://mariadb.com/kb/en/library/about-mariadb-connector-j/[公式ドキュメント] に掲載されています。"

#~ msgid "Microsoft SQL Server"
#~ msgstr "Microsoft SQL Server"

#~ msgid "The Microsoft SQL Server JDBC driver works essentially the same as the others.  More details can be found in the https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-2017[official documentation]."
#~ msgstr "Microsoft SQL Server JDBC ドライバーは基本的に他のものと同じように動作します。詳細は link:https://docs.microsoft.com/en-us/sql/connect/jdbc/connecting-to-sql-server-with-the-jdbc-driver?view=sql-server-2017[公式ドキュメント] に記載されています。"

#~ msgid "You can find more information about this feature and others detailed in the https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference.html[official documentation]."
#~ msgstr "この機能は、link:https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference.html[公式ドキュメント] に詳しい情報が掲載されています。"

#~ msgid "MySQL Limitations"
#~ msgstr "MySQL の制限事項"

#~ msgid "When compiling a Quarkus application to native-image, the MySQL support for JMX and Oracle Cloud Infrastructure (OCI) integrations are disabled as they are not compatible with GraalVM native-images.  The lack of JMX support is a natural consequence of running in native and is unlikely to be resolved.  The integration with OCI could be resolved, if you need it we suggest opening a support request with the MySQL Connector/J maintainers."
#~ msgstr "Quarkusアプリケーションをネイティブイメージにコンパイルする際、MySQLによるJMXのサポートとOracle Cloud Infrastructure（OCI）の統合は、GraalVMのネイティブイメージと互換性がないため無効になります。JMXがサポートされないのは、ネイティブで動作することによる当然の帰結であり、解決する見込みはありません。OCIとの統合は解決される可能性がありますが、もし必要であれば、MySQL Connector/Jのメンテナにサポートリクエストを出すことをお勧めします。"

#~ msgid "More details can be found in the https://docs.oracle.com/en/database/oracle/oracle-database/21/jjdbc/data-sources-and-URLs.html#GUID-AEA8E228-1B21-4111-AF4C-B1F33744CA08[official documentation]."
#~ msgstr "詳しくは、 link:https://docs.oracle.com/en/database/oracle/oracle-database/21/jjdbc/data-sources-and-URLs.html#GUID-AEA8E228-1B21-4111-AF4C-B1F33744CA08[公式ドキュメントを]ご覧ください。"

#~ msgid "PostgreSQL only runs as a server, as do the rest of the databases below.  As such, you must specify connection details, or use the defaults."
#~ msgstr "PostgreSQL は、以下の他のデータベースと同様に、サーバーとしてのみ動作します。そのため、接続の詳細を指定するか、デフォルトを使用する必要があります。"

#~ msgid "Defaults for the different parts are as follows:"
#~ msgstr "各部のデフォルトは以下の通りです。"

#~ msgid "The https://jdbc.postgresql.org/documentation/head/connect.html[official documentation] go into more detail and list optional parameters as well."
#~ msgstr "link:https://jdbc.postgresql.org/documentation/head/connect.html[公式ドキュメント] では、より詳細な情報を紹介しており、同様にオプションのパラメーターをリストアップしています。"

#~ msgid "Reactive Datasource Configuration Reference"
#~ msgstr "リアクティブデータソース構成リファレンス"

#~ msgid "Reactive DB2 Configuration"
#~ msgstr "リアクティブな DB2 の設定"

#~ msgid "Reactive MariaDB/MySQL Specific Configuration"
#~ msgstr "リアクティブな MariaDB/MySQL 固有の設定"

#~ msgid "Reactive Microsoft SQL Server Specific Configuration"
#~ msgstr "リアクティブなMicrosoft SQL Server 固有の設定"

#~ msgid "Reactive Oracle Specific Configuration"
#~ msgstr "リアクティブな Oracle 固有の設定"

#~ msgid "Reactive PostgreSQL Specific Configuration"
#~ msgstr "リアクティブな PostgreSQL 固有の設定"

#~ msgid "Reactive Datasource URL Reference"
#~ msgstr "リアクティブデータソース構成リファレンス"

#~ msgid "Configuring parameters in connection URL will override the default properties."
#~ msgstr "接続URLでパラメータを設定すると、デフォルトのプロパティがオーバーライドされます。"

#~ msgid "EZConnect Format"
#~ msgstr "EZConnect 形式"

#~ msgid "TNS Alias Format"
#~ msgstr "TNS エイリアス形式"

#~ msgid "additional properties, including:"
#~ msgstr "以下を含むプロパティーを追加しました。"

#~ msgid "You can use any JDBC driver in a Quarkus app in JVM mode (see <<other-databases,Using other databases>>).  It is unlikely that it will work when compiling your application to a native executable though."
#~ msgstr "JVM モードの Quarkus アプリでは、任意のJDBCドライバーを使用することができます (<<other-databases,別のデータベースの使用>> を参照)。しかし、アプリケーションをネイティブ実行可能ファイルにコンパイルした場合には動作しない可能性があります。"

#~ msgid "See <<other-databases>> if you want to use a JDBC driver for another database."
#~ msgstr "別のデータベースに JDBC ドライバーを使用する場合は、<<other-databases>> を参照してください。"

#~ msgid "Read <<in-memory-databases,Testing with in-memory databases>> (below) for suggestions regarding integration testing."
#~ msgstr "統合テストに関する提案については、<<in-memory-databases,インメモリーデータベース>> (以下) をお読みください。"

#~ msgid "For more information about the JDBC URL format, please refer to the <<jdbc-url,JDBC url reference section>>."
#~ msgstr "JDBC の URL 形式の詳細については、<<jdbc-url,JDBC URL リファレンスのセクション>> を参照してください。"

#~ msgid "Please refer to the <<jdbc-configuration,JDBC configuration reference>> for all the details about the JDBC configuration knobs."
#~ msgstr "JDBC の設定ノブに関するすべての詳細は、<<jdbc-configuration,JDBC 設定リファレンス>> を参照してください。"

#~ msgid "You can override this by setting the `transactions` configuration property - see the <<configuration-reference, Configuration Reference>> below."
#~ msgstr "この設定は、 `transactions` 設定プロパティーで上書きすることができます。以下の <<configuration-reference, 構成リファレンス>> を参照してください。"

#~ msgid "DB2 (container) (requires license acceptance)"
#~ msgstr "DB2 (コンテナ)(要ライセンス承諾)"

#~ msgid "Derby (in-process)"
#~ msgstr "Apache Derby (インプロセス)"

#~ msgid "H2 (in-process)"
#~ msgstr "H2 (インプロセス)"

#~ msgid "MariaDB (container)"
#~ msgstr "MariaDB (コンテナ)"

#~ msgid "Microsoft SQL Server (container) (requires license acceptance)"
#~ msgstr "MSSQL (コンテナ)(要ライセンス承諾)"

#~ msgid "MySQL (container)"
#~ msgstr "MySQL (コンテナ)"

#~ msgid "Oracle Express Edition (container)"
#~ msgstr "オラクルエクスプレスエディション（コンテナ）"

#~ msgid "PostgreSQL (container)"
#~ msgstr "Postgresql (コンテナ)"

#~ msgid "If you are using a proprietary database such as DB2 or MSSQL you will need to accept the license agreement. To do this create a `src/main/resources/container-license-acceptance.txt` files in your project and add a line with the image name and tag of the database. By default Quarkus uses the default image for the current version of Testcontainers, if you attempt to start Quarkus the resulting failure will tell you the exact image name in use for you to add to the file."
#~ msgstr "DB2やMSSQLなどのプロプライエタリなデータベースを使用している場合は、使用許諾契約書に同意する必要があります。これを行うには、プロジェクト内に `src/main/resources/container-license-acceptance.txt` ファイルを作成し、データベースのイメージ名とタグを記載した行を追加します。デフォルトでは、Quarkusは現在のバージョンのTestcontainersのデフォルトイメージを使用しますが、Quarkusを起動しようとすると、失敗したときに使用されている正確なイメージ名が表示されるので、ファイルに追加してください。"

#~ msgid "An example file is shown below:"
#~ msgstr "ファイルの例を以下に示します。"

#~ msgid "src/main/resources/container-license-acceptance.txt"
#~ msgstr "src/main/resources/container-license-acceptance.txt"

#~ msgid "All services based on containers are run using Testcontainers but Quarkus is not using the Testcontainers JDBC driver."
#~ msgstr "コンテナに基づくサービスはすべてTestcontainersを使って実行されますが、QuarkusはTestcontainersのJDBCドライバを使用していません。"

#~ msgid "Thus, even though extra JDBC URL properties can be set in your `application.properties` file, specific properties supported by the Testcontainers JDBC driver such as `TC_INITSCRIPT`, `TC_INITFUNCTION`, `TC_DAEMON`, `TC_TMPFS` are not supported."
#~ msgstr "そのため、 `application.properties` ファイルで JDBC URL の追加プロパティを設定しても、Testcontainers の JDBC ドライバがサポートする `TC_INITSCRIPT` 、 `TC_INITFUNCTION` 、 `TC_DAEMON` 、 `TC_TMPFS` などの特定のプロパティには対応していません。"

#~ msgid "Quarkus can support specific properties sent to the container itself though and, typically, this is the case for `TC_MY_CNF` which allows to override the MariaDB/MySQL configuration file."
#~ msgstr "Quarkusは、コンテナ自体に送信される特定のプロパティをサポートすることができます。一般的には、MariaDB/MySQLの設定ファイルをオーバーライドできる `TC_MY_CNF` のケースです。"

#~ msgid "Overriding the MariaDB/MySQL configuration would be done as follows:"
#~ msgstr "MariaDB/MySQLの設定を上書きするには、次のようにします。"

#~ msgid "This support is database specific and needs to be implemented in each dev service specifically."
#~ msgstr "このサポートはデータベース固有のものであり、各開発サービスで個別に実装する必要があります。"

#~ msgid "Dev Services (Configuration Free Databases)"
#~ msgstr "DevServices (コンフィギュレーション・フリー・データベース)"

#~ msgid "As mentioned above Quarkus supports a feature called Dev Services that allows you to create datasources without any config. If you have a database extension that supports it and no config is provided, Quarkus will automatically start a database (either using Testcontainers, or by starting a Java DB in process), and automatically configure a connection to this database."
#~ msgstr "前述の通り、QuarkusはDevServicesと呼ばれる機能をサポートしており、設定なしでデータソースを作成することができます。サポートしているデータベースエクステンションがあり、設定が提供されていない場合、Quarkusは自動的にデータベースを起動し（Testcontainersを使用するか、インプロセスのJava DBを起動する）、このデータベースへの接続を自動的に設定します。"

#~ msgid "Production databases need to be configured as normal, so if you want to include a production database config in your application.properties and continue to use Dev Services we recommend that you use the `%prod.` profile to define your database settings."
#~ msgstr "本番環境のデータベースは通常通り構成する必要があります。そのため、本番環境のデータベースの構成をapplication.propertiesに含めてDevServicesを継続して使用したい場合は、 `%prod.` プロファイルを使用してデータベースの設定を定義することをお勧めします。"

#~ msgid "Configuring Dev Services"
#~ msgstr "DevServicesの設定"

#~ msgid "Dev Services supports the following config options:"
#~ msgstr "DevServicesは、以下の構成オプションをサポートしています。"

#~ msgid "Microsoft SQL Server takes a connection URL in the following form:"
#~ msgstr "Microsoft SQL Server は、以下の形式で接続 URL を処理します。"

#~ msgid "Quarkus - Datasources"
#~ msgstr "データソース"
