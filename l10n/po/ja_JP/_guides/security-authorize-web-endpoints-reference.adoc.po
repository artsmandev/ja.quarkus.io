# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-04-20 11:36+0900\n"
"PO-Revision-Date: 2023-04-21 15:39+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#. type: Title =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:7
#, no-wrap
msgid "Authorize web endpoints"
msgstr "ウェブエンドポイントの認可"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:13
msgid "Quarkus has an integrated pluggable web security layer. If security is enabled, all HTTP requests will have a permission check performed to make sure they are allowed to continue.  This means you cannot use `@PermitAll` to open a path if the path is blocked by the `quarkus.http.auth.` configuration."
msgstr "Quarkusには、プラグイン可能なウェブセキュリティレイヤーが統合されています。セキュリティが有効になっている場合、すべてのHTTPリクエストで認可チェックが実行され、処理の継続が許可されていることが確認されます。つまり、 `quarkus.http.auth.` の設定によってパスがブロックされている場合は、 `@PermitAll` を使用してパスを開くことはできません。"

#. type: delimited block =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:17
#, fuzzy
msgid "If you are using JAX-RS, consider using `quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security requirements instead of HTTP path-level matching because annotations can override these properties on an individual endpoint."
msgstr "JAX-RS を使用している場合、アノテーションは個々のエンドポイントでこれらのプロパティを上書きできるため、HTTP パスレベルのマッチングの代わりに、 `quarkus.security.jaxrs.deny-unannotated-endpoints` または `quarkus.security.jaxrs.default-roles-allowed` を使用してデフォルトのセキュリティ要件を設定することを検討してください。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:22
#, fuzzy
msgid "Authorization is based on user roles that the security provider provides.  To customize these roles, a `SecurityIdentityAugmentor` can be created, see xref:security-customization.adoc#security-identity-customization[Security Identity Customization]."
msgstr "認可は、セキュリティ・プロバイダが提供するユーザー・ロールに基づきます。これらの役割をカスタマイズするには、 `SecurityIdentityAugmentor` を作成することができます。「 link:security-customization.html#security-identity-customization[セキュリティ・アイデンティティのカスタマイズ] 」を参照してください。"

#. type: Title ==
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:23
#, no-wrap
msgid "Authorization using configuration"
msgstr "設定を利用した認可"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:26
#, fuzzy
msgid "Permissions are defined in the Quarkus configuration using permission sets, with each permission set specifying a policy for access control."
msgstr "Quarkusの設定では、パーミッション・セットを使用してパーミッションが定義され、各パーミッション・セットはアクセス制御のポリシーを指定します。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:27
#, no-wrap
msgid "{project-name} policies summary"
msgstr "{project-name} ポリシーサマリー"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:29
#, no-wrap
msgid "Built-in policy"
msgstr "組込ポリシー"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:30
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:242
#, no-wrap
msgid "Description"
msgstr "説明"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:30
#, no-wrap
msgid "`deny`"
msgstr "`deny`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:31
#, no-wrap
msgid "This policy denies all users."
msgstr "このポリシーは、すべてのユーザーを拒否します。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:31
#, no-wrap
msgid "`permit`"
msgstr "`permit`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:32
#, no-wrap
msgid "This policy permits all users."
msgstr "このポリシーは、すべてのユーザーを許可します。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:32
#, no-wrap
msgid "`authenticated`"
msgstr "`authenticated`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:33
#, no-wrap
msgid "This policy permits only authenticated users."
msgstr "このポリシーは、認証されたユーザーのみを許可します。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:36
#, fuzzy
msgid "You can define role-based policies that allow users with specified roles to access the resources."
msgstr "指定したロールを持つユーザーにリソースへのアクセスを許可するロールベースのポリシーを定義することができます。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:37
#, no-wrap
msgid "Example of a role-based policy"
msgstr "ロールベースポリシーの例"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:41
#, no-wrap
msgid "quarkus.http.auth.policy.role-policy1.roles-allowed=user,admin                  <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:44
msgid "This defines a role-based policy that allows users with the `user` and `admin` roles.  Such a custom policy can be referenced by permission sets just like the built-in ones, as shown in the example below."
msgstr "これは、 `user` および `admin` のロールを持つユーザーを許可するロールベースのポリシーを定義します。このようなカスタムポリシーは、以下の例に示すように、組み込みのものと同様に、権限セットによって参照することができます。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:46
#, fuzzy
msgid "Permission sets are defined in `application.properties` as follows:"
msgstr "パーミッションセットは、 `application.properties` 、以下のように定義されています："

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:47
#, no-wrap
msgid "Example of policy configuration"
msgstr "ポリシーの設定例"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:53
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*                            <1>\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:56
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/forbidden                             <2>\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:59
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/roles-secured/*,/other/*,/api/*      <3>\n"
"quarkus.http.auth.permission.roles1.policy=role-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:62
#, fuzzy
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`.  In this case, the demonstrated setting would not affect this example because this request is allowed anyway."
msgstr "このパーミッションは、 `GET` のメソッドを `/public` に許可するデフォルトの `permit` 組み込みポリシーを参照します。この場合、このリクエストはいずれにしても許可されるため、実証済みの設定はこの例に影響しません。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:64
#, fuzzy
msgid "This permission references the built-in `deny` policy for `/forbidden`.  This is an exact path match as it does not end with `*`."
msgstr "このパーミッションは、 `/forbidden` に対する組み込みの `deny` ポリシーを参照します。これは、 `*` で終わらないため、完全なパスマッチとなります。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:66
#, fuzzy
msgid "This is a permission set that references the previously defined policy.  `roles1` is an example name; you can call the permission sets whatever you want."
msgstr "これは、以前に定義されたポリシーを参照する権限セットです。 `roles1` は例の名前です。権限セットは好きなように呼ぶことができます。"

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:68
#, fuzzy, no-wrap
msgid "Matching on paths and methods"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:73
#, fuzzy
msgid "Permission sets can also specify paths and methods as a comma-separated list.  If a path ends with the `*` wildcard, the query it generates matches all sub-paths.  Otherwise, it queries for an exact match and will only match that specific path:"
msgstr "パーミッション・セットは、パスとメソッドをカンマ区切りのリストで指定することもできます。パスが `*` ワイルドカードで終わっている場合、生成されるクエリはすべてのサブパスにマッチします。そうでない場合は、完全一致の問い合わせを行い、その特定のパスのみに一致します："

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:79
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:81
#, no-wrap
msgid "Matching a path but not a method"
msgstr "パスはマッチするがメソッドはマッチしない場合"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:84
#, fuzzy
msgid "The request is rejected if a request matches one or more permission sets based on the path but does not match any due to method requirements."
msgstr "リクエストは、パスに基づく1つ以上の許可セットにマッチするが、メソッド要件によりどれにもマッチしない場合、拒否される。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:87
msgid "Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed, whereas `POST /public/foo` would match the path but not the method and would therefore be rejected."
msgstr "上記のパーミッションセットの場合、`GET /public/foo` はパスとメソッドの両方にマッチするので許可されますが、`POST /public/foo` はパスにマッチしますがメソッドにはマッチしないので拒否されます。"

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:88
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:92
#, fuzzy
msgid "Matching is always done on the \"longest path wins\" basis.  Less specific permission sets are not considered if a more specific one has been matched:"
msgstr "マッチングは常に「最長経路が勝つ」基準で行われます。より具体的な許可セットがマッチングされた場合、より具体的でない許可セットは考慮されません："

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:98
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:134
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.paths=/public/*\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:101
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/forbidden-folder/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:106
msgid "Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths, but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen, and the request will be rejected."
msgstr "上記のパーミッションセットを考えると、`GET /public/forbidden-folder/foo` は両方のパーミッションセットのパスにマッチしますが、より長いマッチで `deny1` パーミッションセットのパスにマッチするので、 `deny1` が選択されてリクエストは拒否されます。"

#. type: delimited block =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:111
#, fuzzy
msgid "Subpath permissions always win against the root path permissions, as explained above in the `deny1` versus `permit1` permission example.  Here is another example showing subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr "`deny1` 対 `permit1` の例で説明したように、サブパスのパーミッションは常にルートパスのパーミッションに対して勝利します。以下は、ルートパスのパーミッションが認可を必要とする状態で、サブパスのパーミッションがパブリックリソースへのアクセスを許可している例です："

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:117
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy.roles-allowed=user\n"
"quarkus.http.auth.permission.roles.paths=/api/*\n"
"quarkus.http.auth.permission.roles.policy=user-policy\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:120
#, no-wrap
msgid ""
"quarkus.http.auth.permission.public.paths=/api/noauth/*\n"
"quarkus.http.auth.permission.public.policy=permit\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:123
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "複数のパスのマッチング:一番具体的なパスが勝ちます"

#. type: delimited block =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:128
#, fuzzy
msgid "When a path is registered with multiple permission sets, the permission sets that explicitly specify an HTTP method that matches the request will take precedence.  In this instance, the permission sets without methods will only come into effect if the request method does not match permission sets with the method specification."
msgstr "パスが複数の許可セットに登録されている場合、リクエストにマッチするHTTPメソッドを明示的に指定した許可セットが優先されます。この場合、メソッドを持たない許可セットは、リクエストメソッドがメソッド指定のある許可セットと一致しない場合にのみ有効になります。"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:137
#, no-wrap
msgid ""
"quarkus.http.auth.permission.deny1.paths=/public/*\n"
"quarkus.http.auth.permission.deny1.policy=deny\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:142
#, fuzzy
msgid "Given the above permission set, `GET /public/foo` would match the paths of both permission sets, but because it fits the explicit method of the `permit1` permission set, `permit1` is chosen, and the request is accepted."
msgstr "上記のパーミッション・セットを考えると、 `GET /public/foo` は両方のパーミッション・セットのパスに合致するが、 `permit1` のパーミッション・セットの明示的な方法に合致するため、 `permit1` が選択され、リクエストは受理される。"

#. type: delimited block =
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:144
#, fuzzy
msgid "`PUT /public/foo`, on the other hand, will not match the method permissions of `permit1`, so `deny1` will be activated and reject the request."
msgstr "`PUT /public/foo `一方、 `permit1` のメソッドパーミッションと一致しないため、 `deny1` が有効化され、リクエストが拒否されます。"

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:146
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "複数のパスのマッチング:一番長いパスが勝ちます"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:151
#, fuzzy
msgid "Sometimes, the previously described rules allow multiple permission sets to win at the same time.  In that case, for the request to proceed, all the permissions must allow access.  Note that for this to happen, both have to either have specified the method or have no method. Method-specific matches take precedence."
msgstr "先に説明したルールで、複数のパーミッション・セットが同時に勝つことができる場合もあります。その場合、リクエストを進めるためには、すべてのパーミッションがアクセスを許可していなければならない。これが起こるためには、両方がメソッドを指定しているか、メソッドを持たないかのどちらかでなければならないことに注意してください。メソッドを指定したマッチが優先されます。"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:156
#, no-wrap
msgid ""
"quarkus.http.auth.policy.user-policy1.roles-allowed=user\n"
"quarkus.http.auth.policy.admin-policy1.roles-allowed=admin\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:159
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles1.paths=/api/*,/restricted/*\n"
"quarkus.http.auth.permission.roles1.policy=user-policy1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:162
#, no-wrap
msgid ""
"quarkus.http.auth.permission.roles2.paths=/api/*,/admin/*\n"
"quarkus.http.auth.permission.roles2.policy=admin-policy1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:165
#, fuzzy
msgid "Given the above permission set, `GET /api/foo` would match both permission sets' paths, requiring both the `user` and `admin` roles."
msgstr "上記の権限セットを考えると、 `GET /api/foo` は両方の権限セットのパスに一致し、 `user` と `admin` の両方の役割を必要とします。"

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:166
#, fuzzy, no-wrap
msgid "Configuration properties to deny access"
msgstr "アクセスを拒否するための設定プロパティ"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:169
#, fuzzy
msgid "The following configuration settings alter the role-based access control (RBAC) denying behavior:"
msgstr "以下の設定により、ロールベースアクセスコントロール（RBAC）拒否の動作が変更されます："

#. type: Labeled list
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:170
#, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:174
#, fuzzy
msgid "If set to true, access is denied for all JAX-RS endpoints by default. If a JAX-RS endpoint does not have any security annotations, it defaults to the `@DenyAll` behavior.  This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured.  Defaults to `false`."
msgstr "trueに設定すると、デフォルトですべてのJAX-RSエンドポイントに対してアクセスが拒否されます。JAX-RSエンドポイントにセキュリティアノテーションがない場合、デフォルトで `@DenyAll` の動作になります。これは、セキュリティで保護されているはずのエンドポイントを誤って公開しないようにするために便利です。デフォルトは `false` です。"

#. type: Labeled list
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:175
#, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:179
#, fuzzy
msgid "Defines the default role requirements for unannotated endpoints.  The `**` role is a special role that means any authenticated user.  This cannot be combined with `deny-unannotated-endpoints`, as `deny` takes the effect instead."
msgstr "注釈のないエンドポイントに対するデフォルトのロール要件を定義します。 `**` ロールは、認証された任意のユーザーを意味する特別なロールです。これは、 `deny` が代わりに効果を発揮するため、 `deny-unannotated-endpoints` と組み合わせることができません。"

#. type: Labeled list
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:180
#, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr "`quarkus.security.deny-unannotated-members=true|false`"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:185
#, fuzzy
msgid "if set to true, the access will be denied to all CDI methods and JAX-RS endpoints that do not have security annotations but are defined in classes that contain methods with security annotations.  Defaults to `false`."
msgstr "trueに設定すると、セキュリティアノテーションを持たないが、セキュリティアノテーションを持つメソッドを含むクラスで定義されているすべてのCDIメソッドとJAX-RSエンドポイントへのアクセスが拒否されます。デフォルトは `false` です。"

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:186
#, no-wrap
msgid "Disabling permissions"
msgstr "パーミッションの無効化"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:189
#, fuzzy
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, such as:"
msgstr "パーミッションは、次のように宣言された各パーミッションの `enabled` プロパティを使って、ビルド時に無効にすることができます："

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:196
#, no-wrap
msgid ""
"quarkus.http.auth.permission.permit1.enabled=false\n"
"quarkus.http.auth.permission.permit1.paths=/public/*,/css/*,/js/*,/robots.txt\n"
"quarkus.http.auth.permission.permit1.policy=permit\n"
"quarkus.http.auth.permission.permit1.methods=GET,HEAD\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:200
#, fuzzy
msgid "Permissions can be reenabled at runtime with a system property or environment variable, such as: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "パーミッションは、システムプロパティや環境変数を使って、実行時に再有効化することができます（例えば、以下のように）： `-Dquarkus.http.auth.permission.permit1.enabled=true `."

#. type: Title ===
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:201
#, no-wrap
msgid "Permission paths and HTTP root path"
msgstr "パーミッションパスとHTTPルートパス"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:204
msgid "The `quarkus.http.root-path` configuration property is used to change the xref:http-reference.adoc#context-path[http endpoint context path]."
msgstr "`quarkus.http.root-path` 設定プロパティは、 link:http-reference.html#context-path[http エンドポイントコンテキストパスを] 変更するために使用されます。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:206
msgid "By default, `quarkus.http.root-path` is prepended automatically to configured permission paths then do not use a forward slash, for example:"
msgstr "デフォルトでは、設定されたパーミッションのパスの前に自動的に `quarkus.http.root-path` 、フォワードスラッシュを使用しない場合などです。 :"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:210
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:213
msgid "This configuration is equivalent to the following:"
msgstr "この構成は以下に相当します。 :"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:217
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=${quarkus.http.root-path}/public/*,${quarkus.http.root-path}/css/*,${quarkus.http.root-path}/js/*,${quarkus.http.root-path}/robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:222
#, fuzzy
msgid "A leading slash will change how the configured permission path is interpreted.  The configured URL will be used as-is, and paths will not be adjusted if the value of `quarkus.http.root-path` is changed.  For example:"
msgstr "先頭のスラッシュは、設定されたパーミッションパスの解釈方法を変更します。設定されたURLはそのまま使用され、 `quarkus.http.root-path` の値が変更されても、パスは調整されません。例えば、以下のようになります："

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:226
#, no-wrap
msgid "quarkus.http.auth.permission.permit1.paths=/public/*,css/*,js/*,robots.txt\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:229
msgid "This configuration will only impact resources served from the fixed/static URL `/public`, which may not match your application resources if `quarkus.http.root-path` has been set to something other than `/`."
msgstr "この設定は、固定/静的URL `/public` から提供されるリソースにのみ影響します。 `quarkus.http.root-path` が `/` 以外に設定されている場合、アプリケーションリソースと一致しない可能性があります。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:231
msgid "See link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr "詳細については、 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkusのパス解決] を参照してください。"

#. type: Title ==
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:234
#, no-wrap
msgid "Authorization using annotations"
msgstr "アノテーションを使った認可"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:238
#, fuzzy
msgid "{project-name} comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])  based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans."
msgstr "{project-name}には、RESTエンドポイントやCDIビーンズに共通のセキュリティアノテーション `@RolesAllowed `, `@DenyAll `, `@PermitAll` に基づく役割ベースのアクセス制御 link:https://en.wikipedia.org/wiki/Role-based_access_control[（RBAC] ）を可能にするセキュリティが内蔵されています。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:239
#, no-wrap
msgid "{project-name} annotation types summary"
msgstr "{project-name} アノテーション型の概要"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:241
#, no-wrap
msgid "Annotation type"
msgstr "アノテーション型"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:242
#, no-wrap
msgid "@DenyAll"
msgstr "@DenyAll"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:243
#, fuzzy, no-wrap
msgid "Specifies that no security roles are allowed to invoke the specified methods."
msgstr "指定されたメソッドを呼び出すことを、どのセキュリティロールも許可しないことを指定します。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:243
#, no-wrap
msgid "@PermitAll"
msgstr "@PermitAll"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:246
#, fuzzy, no-wrap
msgid ""
"Specifies that all security roles are allowed to invoke the specified methods.\n"
"\n"
"`@PermitAll` lets everybody in even without authentication."
msgstr "すべてのセキュリティロールが指定されたメソッドを呼び出すことを許可するように指定します。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:246
#, no-wrap
msgid "@RolesAllowed"
msgstr "@RolesAllowed"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:249
#, fuzzy, no-wrap
msgid ""
"Specifies the list of security roles permitted to access methods in an application.\n"
"\n"
"As an equivalent to `@RolesAllowed(\"**\")`, {project-name} also provides the `io.quarkus.security.Authenticated` annotation that permits any authenticated user to access the resource."
msgstr "アプリケーションのメソッドへのアクセスが許可されているセキュリティロールのリストを指定します。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:252
#, fuzzy
msgid "<<subject-example>> featured in this chapter demonstrates an endpoint that uses both JAX-RS and Common Security annotations to describe and secure its endpoints."
msgstr "本章で取り上げた link:#subject-example[[subject-example]] は、JAX-RS と Common Security アノテーションの両方を使用してエンドポイントを記述し、そのエンドポイントを保護することを実証しています。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:254
#, no-wrap
msgid "SubjectExposingResource Example"
msgstr "SubjectExposingResourceの例"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:258
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:334
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:266
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:342
#, no-wrap
msgid ""
"import javax.annotation.security.DenyAll;\n"
"import javax.annotation.security.PermitAll;\n"
"import javax.annotation.security.RolesAllowed;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Context;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:269
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:345
#, no-wrap
msgid ""
"@Path(\"subject\")\n"
"public class SubjectExposingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:278
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"Tester\") <1>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <2>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:287
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"unsecured\")\n"
"    @PermitAll <3>\n"
"    public String getSubjectUnsecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal(); <4>\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:297
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"denied\")\n"
"    @DenyAll <5>\n"
"    public String getSubjectDenied(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:299
msgid "The `/subject/secured` endpoint requires an authenticated user with the granted \"Tester\" role through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "`/subject/secured` エンドポイントは、 `@RolesAllowed(\"Tester\")` アノテーションを使用して\"Tester\"というロールを付与された認証済みユーザーが必要です。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:300
msgid "The endpoint obtains the user principal from the JAX-RS `SecurityContext`. This will be non-null for a secured endpoint."
msgstr "エンドポイントは、JAX-RS `SecurityContext` からユーザー・プリンシパルを取得します。これは、保護されたエンドポイントの場合は非 null になります。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:301
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` エンドポイントでは、 `@PermitAll` アノテーションを指定することで、認証されていないアクセスが可能になります。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:302
msgid "The call to obtain the user principal returns null if the caller is unauthenticated and non-null if the caller is authenticated."
msgstr "ユーザープリンシパルを取得するためのこの呼び出しは、呼び出し元が認証されていない場合はnullを返し、呼び出し元が認証されている場合は非nullを返します。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:303
#, fuzzy
msgid "The `/subject/denied` endpoint declares the `@DenyAll` annotation, thus disallowing all direct access to it as a REST method, regardless of the user calling it. The method is still invokable internally by other methods in this class."
msgstr "`/subject/denied` エンドポイントは、 `@DenyAll` アノテーションを宣言しているため、呼び出すユーザーに関係なく、REST メソッドとして直接アクセスすることはすべて禁止されています。このメソッドは、このクラスの他のメソッドから内部的に呼び出すことは可能です。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:305
msgid "Please refer to the xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[Proactive Authentication] section of the Built-In Authentication Support guide if you plan to use standard security annotations on the IO thread."
msgstr "IOスレッドで標準的なセキュリティアノテーションを使用する予定がある場合は、組込認証サポートガイドの xref:security-built-in-authentication.adoc#proactive-authentication[プロアクティブ認証] セクションを参照してください。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:308
#, fuzzy
msgid "The `@RolesAllowed` annotation value supports <<config-reference#property-expressions,Property Expressions>> including default values and nested Property Expressions.  Configuration properties used with the annotation are resolved at runtime."
msgstr "`@RolesAllowed` アノテーション値は、デフォルト値やネストされたProperty Expressionを含む link:config-reference.html#property-expressions[Property Expressionに] 対応しています。アノテーションと共に使用される構成プロパティは、実行時に解決されます。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:309
#, no-wrap
msgid "Annotation value examples"
msgstr "アノテーション値の例"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:311
#, no-wrap
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:312
#, no-wrap
msgid "Value explanation"
msgstr "値の説明"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:312
#, no-wrap
msgid "`@RolesAllowed(\"${admin-role}\")`"
msgstr "`@RolesAllowed(\"${admin-role}\")`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:313
#, no-wrap
msgid "The endpoint will allow users with the role denoted by the value of the `admin-role` property."
msgstr "エンドポイントは、 `admin-role` プロパティの値で示されるロールを持つユーザーを許可します。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:313
#, no-wrap
msgid "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"
msgstr "`@RolesAllowed(\"${tester.group}-${tester.role}\")`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:315
#, no-wrap
msgid "An example showing that the value can contain multiple variables."
msgstr "値が複数の変数を含むことができることを示す例。"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:315
#, no-wrap
msgid "`@RolesAllowed(\"${customer:User}\")`"
msgstr "`@RolesAllowed(\"${customer:User}\")`"

#. type: Table
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:317
#, no-wrap
msgid ""
"A default value demonstration.\n"
"The required role will be denoted by the value of the `customer` property, but if that property is not specified, a role named `User` will be required as a default."
msgstr ""
"デフォルト値の実証。\n"
"必要な役割は `customer` プロパティの値で示されますが、そのプロパティが指定されていない場合、 `User` という名前のロールがデフォルトとして要求されます。"

#. type: Block title
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:320
#, fuzzy, no-wrap
msgid "Example of a property expressions usage in the `@RolesAllowed` annotation"
msgstr "`@RolesAllowed` アノテーションにおけるプロパティ表現の使用例"

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:329
#, no-wrap
msgid ""
"admin=Administrator\n"
"tester.group=Software\n"
"tester.role=Tester\n"
"%prod.secured=User\n"
"%dev.secured=**\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:354
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"admin\")\n"
"    @RolesAllowed(\"${admin}\") <1>\n"
"    public String getSubjectSecuredAdmin(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:363
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"software-tester\")\n"
"    @RolesAllowed(\"${tester.group}-${tester.role}\") <2>\n"
"    public String getSubjectSoftwareTester(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:372
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"user\")\n"
"    @RolesAllowed(\"${customer:User}\") <3>\n"
"    public String getSubjectUser(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:382
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"secured\")\n"
"    @RolesAllowed(\"${secured}\") <4>\n"
"    public String getSubjectSecured(@Context SecurityContext sec) {\n"
"        Principal user = sec.getUserPrincipal();\n"
"        String name = user != null ? user.getName() : \"anonymous\";\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:384
msgid "The `@RolesAllowed` annotation value is set to the value of `Administrator`."
msgstr "`@RolesAllowed` アノテーション値は、 `Administrator` の値に設定されています。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:386
#, fuzzy
msgid "This `/subject/software-tester` endpoint requires an authenticated user that has been granted the role \"Software-Tester\".  It is possible to use multiple expressions in the role definition."
msgstr "この `/subject/software-tester` エンドポイントには、「Software-Tester」というロールを付与された認証ユーザーが必要です。役割の定義で複数の表現を使用することが可能です。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:387
#, fuzzy
msgid "This `/subject/user` endpoint requires an authenticated user that has been granted the role \"User\" through the use of the `@RolesAllowed(\"${customer:User}\")` annotation, as we did not set the configuration property `customer`."
msgstr "この `/subject/user` エンドポイントには、 `@RolesAllowed(\"${customer:User}\")` アノテーションを使用して「User」というロールを付与された認証ユーザーが必要です。設定プロパティ `customer` を設定していないため、このエンドポイントは、「User」というロールを付与された認証ユーザーが必要です。"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:388
#, fuzzy
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role `User` in production but allows any authenticated user in development mode."
msgstr "この `/subject/secured` エンドポイントは、本番環境では `User` の役割を与えられた認証ユーザーが必要ですが、開発モードではどのような認証ユーザーでも許可されます。"

#. type: Title ==
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:389
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_guides/security-authorize-web-endpoints-reference.adoc:391
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr "xref:security-overview-concept.adoc[Quarkus Security 概要]"
