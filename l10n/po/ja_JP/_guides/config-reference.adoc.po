# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-06-18 08:08+0000\n"
"PO-Revision-Date: 2023-06-27 22:11+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/config-reference.adoc:6
#, no-wrap
msgid "Configuration Reference Guide"
msgstr "設定リファレンスガイド"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:15
msgid "The content of this guide has been revised and split into additional topics. Please check the xref:additional-information[Additional Information] section."
msgstr "このガイドの内容は改訂され、追加トピックに分割されています。 xref:additional-information[追加情報] の項目をご確認ください。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:20
msgid "In this reference guide we're going to describe various aspects of Quarkus configuration. A Quarkus application and Quarkus itself (core and extensions) are both configured via the same mechanism that leverages the https://github.com/smallrye/smallrye-config[SmallRye Config] API an implementation of the https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] specification."
msgstr "このリファレンスガイドでは、Quarkus の設定の様々な側面について説明します。Quarkus アプリケーションと Quarkus 自体 (コアとエクステンション) の両方は、 https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] 仕様の実装である https://github.com/smallrye/smallrye-config[SmallRye Config] APIを活用した同じメカニズムを介して設定されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:23
msgid "If you're looking for information how to make a Quarkus extension configurable then see the xref:writing-extensions.adoc#configuration[Writing Your Own Extension] guide."
msgstr "Quarkusエクステンションを設定可能にする方法をお探しの場合は、 xref:writing-extensions.adoc#configuration[独自のエクステンションの作成] ガイドをご覧ください。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:25
#, no-wrap
msgid "Config Sources"
msgstr "設定ソース"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:28
msgid "By default, Quarkus reads configuration properties from multiple sources (by descending ordinal):"
msgstr "デフォルトでは、Quarkus は複数のソースから設定プロパティーを読み取ります (降順)。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:30
msgid "(400) xref:system-properties[System properties]"
msgstr "(400) xref:system-properties[システムプロパティ]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:31
msgid "(300) xref:environment-variables[Environment variables]"
msgstr "(300) xref:environment-variables[環境変数]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:32
msgid "(295) xref:env-file[.env] file in the current working directory"
msgstr "(295) 現在の作業ディレクトリの xref:env-file[.env] ファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:33
msgid "(260) xref:application-properties-file[Quarkus Application configuration file] in `$PWD/config/application.properties`"
msgstr "(260) `$PWD/config/application.properties` の xref:application-properties-file[Quarkus Applicationの設定ファイル]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:34
msgid "(250) xref:application-properties-file[Quarkus Application configuration file] `application.properties` in classpath"
msgstr "(250) クラスパスの xref:application-properties-file[Quarkus Application の設定ファイル] `application.properties`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:36
msgid "(100) xref:microprofile-config-properties-file[MicroProfile Config configuration file] `META-INF/microprofile-config.properties` in classpath"
msgstr "(100) クラスパスの xref:microprofile-config-properties-file[MicroProfile Config 設定ファイル] `META-INF/microprofile-config.properties`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:42
msgid "The final configuration is the aggregation of the properties defined by all these sources. A configuration property lookup starts by the highest ordinal configuration source available and works it way down to other sources until a match is found. This means that any configuration property may override a value just by setting a different value in a higher ordinal config source. For example, a property configured using an environment property overrides the value provided using the `application.properties` file."
msgstr "最終的な設定は、これらすべてのソースによって定義されたプロパティーの集約です。設定プロパティーのルックアップは、使用可能な最も高い序数の設定ソースから始まり、一致するものが見つかるまで他のソースに下がっていきます。つまり、上位の序数設定ソースに別の値を設定するだけで、設定プロパティーが値をオーバーライドする可能性があります。たとえば、環境プロパティーを使用して設定されたプロパティーは、`application.properties` ファイルを使用して提供された値をオーバーライドします。"

#. type: Target for macro image
#: upstream/_guides/config-reference.adoc:43
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Title ===
#: upstream/_guides/config-reference.adoc:46
#, no-wrap
msgid "System properties"
msgstr "システムプロパティー"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:50
msgid "System properties can be handed to the application through the `-D` flag during startup. The following examples assign the value `youshallnotpass` to the attribute `quarkus.datasource.password`."
msgstr "システムプロパティーは、起動時に `-D` フラグを介してアプリケーションに渡すことができます。次の例では、値 `youshallnotpass` を属性 `quarkus.datasource.password` に割り当てます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:52
msgid "For Quarkus dev mode: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"
msgstr "Quarkus 開発モードの場合: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:53
msgid "For a runner jar: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"
msgstr "runner jar の場合: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:54
msgid "For a native executable: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"
msgstr "ネイティブ実行可能ファイルの場合: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:56
#, no-wrap
msgid "Environment variables"
msgstr "環境変数"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:59
msgid "For a runner jar: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"
msgstr "runner jar の場合: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:60
msgid "For a native executable: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"
msgstr "ネイティブ実行可能ファイルの場合: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:65
msgid "Environment variables names follow the conversion rules specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config]."
msgstr "環境変数名は、link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config] の変換ルールに従っています。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:67
msgid "Config searches three environment variables for a given property name (e.g. `foo.BAR.baz`):"
msgstr "Configは、与えられたプロパティ名（例： `foo.BAR.baz` ）に対して3つの環境変数を検索します:"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:69
msgid "`foo.BAR.baz` - Exact match"
msgstr "`foo.BAR.baz` - 完全一致"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:70
msgid "`foo_BAR_baz` - Replace each character that is neither alphanumeric nor `\\_` with `_`"
msgstr "`foo_BAR_baz` - 英数字でもなく、`_` でもない各文字を、`_` で置換"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:72
msgid "`FOO_BAR_BAZ` - Replace each character that is neither alphanumeric nor `\\_` with `_`; then convert the name to upper case"
msgstr "`FOO_BAR_BAZ` - 英数字でも `_` でもない各文字を `_` で置換。その後、名前を大文字に変換"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:77
msgid "SmallRye Config specifies link:https://smallrye.io/smallrye-config/Main/config/environment-variables/[additional conversion rules]."
msgstr "SmallRye Configでは、 link:https://smallrye.io/smallrye-config/Main/config/environment-variables/[追加の変換ルール] を指定しています。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:80
msgid "A property with double quotes `foo.\"bar\".baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO\\__BAR__BAZ`"
msgstr "二重引用符で囲まれたプロパティ `foo.\"bar\".baz` の場合、英数字でも `_` でもない各文字を `_` で置換します: `FOO__BAR__BAZ`"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:82
msgid "A property with dashes `foo.bar-baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO_BAR_BAZ`"
msgstr "ダッシュを含むプロパティ `foo.bar-baz` の場合、英数字でも `_` でもない各文字を `_` で置換します: `FOO_BAR_BAZ`"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:84
msgid "An indexed property `foo.bar[0]` or `foo.bar[0].baz`, replace each character that is neither alphanumeric nor `\\_` with `_`: `FOO_BAR_0_` or `FOO_BAR_0__BAZ`"
msgstr "インデックス付きプロパティ `foo.bar[0]` または `foo.bar[0].baz` の場合、英数字でも `_` でもない各文字を `_` で置換します : `FOO_BAR_0_` または `FOO_BAR_0__BAZ`"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:89
msgid "In some situations, looking up the exact property name is impossible. For instance, when looking up a configuration that is part of a `Map`, and the property name contains a dynamic segment (the `Map` key). In this case, Quarkus relies upon each source’s list of property names. These must be converted back to their most likely dotted format for Environment Variables."
msgstr "状況によっては、正確なプロパティ名を検索することが不可能な場合があります。例えば、 `Map` の一部である設定プロパティを検索する場合、プロパティ名に動的セグメント（ `Map` キー）が含まれていることがあります。この場合、Quarkusは各ソースのプロパティ名のリストに依存します。これらは、環境変数に最も適したドット付き形式に変換する必要があります。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:93
msgid "By default, the underscore `_` of an Environment Variable name always maps to a dot `.`. If the property name contains a dash or some other special character, that property name can be specified in another Config Source, with the expected dotted format. It will provide additional information to perform a two-way conversion and match the property names."
msgstr "デフォルトでは、環境変数名のアンダースコア `_` は、常にドット `.` にマッピングされます。プロパティ名にダッシュやその他の特殊文字が含まれている場合、そのプロパティ名は別の Config Source で指定することができ、期待通りのドット形式となります。これは、双方向の変換を実行し、プロパティ名を一致させるための追加情報を提供します。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:96
msgid "To correctly lookup `Map` properties where `FOO_BAR_BAZ` is the property name and `BAR_BAZ` is the key, add `foo.bar-baz` in a source with an ordinal lower than the EnvConfigSource (`300`)."
msgstr "`FOO_BAR_BAZ` がプロパティ名、 `BAR_BAZ` がキーである `Map` プロパティを正しく検索するには、EnvConfigSource（ `300` ）より若い序列を持つソースに `foo.bar-baz` を追加します。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:99
#, no-wrap
msgid "`.env` file in the current working directory"
msgstr "現在の作業ディレクトリーにある `.env` ファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:102
#: upstream/_guides/config-reference.adoc:290
msgid "..env"
msgstr "..env"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:105
#, no-wrap
msgid "QUARKUS_DATASOURCE_PASSWORD=youshallnotpass <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:107
msgid "The name `QUARKUS_DATASOURCE_PASSWORD` the same conversion rules used for xref:environment-variables[Environment variables]."
msgstr "`QUARKUS_DATASOURCE_PASSWORD` という名前。 xref:environment-variables[環境変数] に使われるのと同じ変換ルールです。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:110
msgid "For `dev` mode, this file can be placed in the root of the project, but it is advised to **not** check it in to version control."
msgstr "`dev` モードの場合、このファイルはプロジェクトのルートに置くことができますが、バージョン管理を選択 **しない** ことが推奨されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:112
msgid "Environment variables in the `.env` file are not available via the `System.getenv(String)` API."
msgstr "`.env` ファイルの環境変数は、`System.getenv(String)` API を介して利用できません。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:114
#, no-wrap
msgid "Quarkus Application configuration file"
msgstr "Quarkus アプリケーション設定ファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:122
msgid "The Quarkus Application configuration file is loaded from the classpath resources, for instance `src/main/resources/application.properties`, `src/test/resources/application.properties` or from a `jar` dependency that contains an `application.properties` entry. Each `application.properties` found is treated as a separate `ConfigSource` and follow the same rules as every other source (override per property). Additionally, the configuration file may also reside in `$PWD/config/application.properties`. The loading starts from the config folder and then classpath order (`application.properties` files in the application sources will have priority on the classloader loading order)."
msgstr "Quarkus アプリケーション設定ファイルは、クラスパスリソース (たとえば、`src/main/resources/application.properties`、`src/test/resources/application.properties`) から、または `application.properties` エントリーが含まれる `jar` 依存関係から読み込まれます。見つかった各 `application.properties` は個別の `ConfigSource` として扱われ、他のすべてのソースと同じルールに従います (プロパティーごとのオーバーライド)。さらに、設定ファイルは `$PWD/config/application.properties` に存在する場合もあります。読み込みは config フォルダーから始まり、次にクラスパスの順序になります (アプリケーションソース内の `application.properties` ファイルがクラスローダー読み込み順序で優先されます)。"

#. type: Block title
#: upstream/_guides/config-reference.adoc:123
#, no-wrap
msgid "`application.properties`"
msgstr "`application.properties`"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:128
#: upstream/_guides/config-reference.adoc:146
#, no-wrap
msgid ""
"greeting.message=hello <1>\n"
"quarkus.http.port=9090 <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:130
#: upstream/_guides/config-reference.adoc:148
msgid "This is a user-defined configuration property."
msgstr "これは、ユーザー定義の設定プロパティーです。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:131
#: upstream/_guides/config-reference.adoc:149
msgid "This is a configuration property consumed by the `quarkus-vertx-http` extension."
msgstr "これは `quarkus-vertx-http` エクステンションによって消費される設定プロパティーです。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:135
msgid "The `config/application.properties` is also available in `dev` mode. The file needs to be placed inside the build tool output directory (`target` for Maven and `build/classes/java/main` for Gradle). Keep in mind however that any cleaning operation from the build tool like `mvn clean` or `gradle clean` will remove the `config` directory as well."
msgstr "`config/application.properties` は `dev` モードでも利用可能です。ファイルは、ビルドツールの出力ディレクトリー (Maven の場合は `target` 、Gradle の場合は `build/classes/java/main`) の中に置く必要があります。ただし、`mvn clean` や `gradle clean` のようなビルドツールからのクリーンアップ操作は、`config` ディレクトリーも削除してしまうことに注意してください。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:137
#, no-wrap
msgid "MicroProfile Config configuration file"
msgstr "MicroProfile Config 設定ファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:140
msgid "The MicroProfile Config configuration file in `src/main/resources/META-INF/microprofile-config.properties`."
msgstr "`src/main/resources/META-INF/microprofile-config.properties` にある MicroProfile Config 設定ファイル。"

#. type: Block title
#: upstream/_guides/config-reference.adoc:141
#, no-wrap
msgid "`microprofile-config.properties`"
msgstr "`microprofile-config.properties`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:152
msgid "It works in the exact same way as Quarkus Application configuration file `application.properties`. Recommendation is to use Quarkus `application.properties`."
msgstr "これは、Quarkus アプリケーション設定ファイル `application.properties` とまったく同じように機能します。Quarkus の `application.properties` を使用することをお勧めします。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:153
#, no-wrap
msgid "Additional Config Sources"
msgstr "その他の設定ソース"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:156
msgid "Quarkus provides additional extensions which cover other configuration formats and stores:"
msgstr "Quarkus は、他の設定フォーマットとストアをカバーする追加のエクステンションを提供します。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:158
msgid "xref:config-yaml.adoc[YAML]"
msgstr "xref:config-yaml.adoc[YAML]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:159
msgid "xref:vault.adoc[HashiCorp Vault]"
msgstr "xref:vault.adoc[HashiCorp Vault]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:160
msgid "xref:consul-config.adoc[Consul]"
msgstr "xref:consul-config.adoc[Consul]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:161
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud]"
msgstr "xref:spring-cloud-config-client.adoc[Spring Cloud]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:163
msgid "It is also possible to create a xref:config-extending-support.adoc#custom-config-source[Custom Config Source]."
msgstr "xref:config-extending-support.adoc#custom-config-source[カスタム Config Source] を作成することもできます。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:164
#, no-wrap
msgid "Inject"
msgstr "Inject"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:168
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr "Quarkus では、 link:https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] アノテーションを使用して、アプリケーションに設定プロパティーを注入しています。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:173
#: upstream/_guides/config-reference.adoc:183
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:176
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`."
msgstr "`@Inject @ConfigProperty` を使用することも、 `@ConfigProperty` だけを使用することもできます。 `@Inject` アノテーションは、 `@ConfigProperty` でアノテーションされたメンバーには必要ありません。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:178
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr "アプリケーションが設定されていない設定プロパティーを注入しようとすると、エラーがスローされます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:186
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:189
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:191
msgid "If you do not provide a value for this property, the application startup fails with `jakarta.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr "このプロパティに値を指定しない場合、アプリケーションの起動は `jakarta.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message` で失敗します。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:192
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr "デフォルト値は、設定が `greeting.suffix` の値を提供していない場合に注入されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:193
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr "このプロパティーはオプションです - 設定が `greeting.name` の値を提供していない場合は、空の `Optional` が注入されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:195
msgid "Use xref:config-mappings.adoc#config-mappings[Config Mappings] to group similar configuration properties."
msgstr "xref:config-mappings.adoc#config-mappings[Config Mappings] を使用して、同様の設定プロパティーをグループ化します。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:196
#, no-wrap
msgid "Default Values"
msgstr "デフォルト値"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:203
msgid "If a property is associated with a default value (by way of the `defaultValue` attribute), and no configuration value is supplied for the property, then rather than throwing a `jakarta.enterprise.inject.spi.DeploymentException`, the default value will be used. The `defaultValue` value is expressed as a `String`, and uses the same conversion mechanism used to process configuration values. Several Built-in Converters already exist for primitives, boxed primitives, and other classes; for example:"
msgstr "プロパティが（ `defaultValue` 属性によって）デフォルト値と関連付けられ、そのプロパティに対して設定値が設定されない場合、 `jakarta.enterprise.inject.spi.DeploymentException` を投げるのではなく、デフォルト値が使用されます。 `defaultValue` 値は `String` として表現され、設定値の処理に使用されるのと同じ変換機構が使用されます。プリミティブ、ボックス化されたプリミティブ、その他のクラスには、すでにいくつかの組み込みコンバーターが存在します。例:"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:205
msgid "Primitives: `boolean`, `byte`, `short`, etc."
msgstr "プリミティブ: `boolean`、`byte`、`short` など"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:206
msgid "Boxed primitives: `java.lang.Boolean`, `java.lang.Byte`, `java.lang.Short`, etc."
msgstr "ボックス化されたプリミティブ: `java.lang.Boolean`、`java.lang.Byte`、`java.lang.Short` など"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:207
msgid "Optional containers: `java.util.Optional`, `java.util.OptionalInt`, `java.util.OptionalLong`, and `java.util.OptionalDouble`"
msgstr "オプションのコンテナー: `java.util.Optional`、`java.util.OptionalInt`、`java.util.OptionalLong`、および `java.util.OptionalDouble`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:208
msgid "Java `enum` types"
msgstr "Java `enum` タイプ"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:209
msgid "JSR 310 `java.time.Duration`"
msgstr "JSR 310 `java.time.Duration`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:210
msgid "JDK networking `java.net.SocketAddress`, `java.net.InetAddress`, etc."
msgstr "JDK ネットワーキング `java.net.SocketAddress`、`java.net.InetAddress` など"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:213
msgid "As you might expect, these converters are `org.eclipse.microprofile.config.spi.Converter` implementations. Therefore, these converters comply with the Microprofile or custom implementation providers expression rules like:"
msgstr "ご想像のとおり、これらのコンバーターは `org.eclipse.microprofile.config.spi.Converter` の実装です。したがって、これらのコンバーターは、次のような Microprofile またはカスタム実装プロバイダーの式ルールに準拠しています。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:215
msgid "Boolean values will be `true` in cases \"true\", \"1\", \"YES\", \"Y\" \"ON\". Otherwise, value will be interpreted as false"
msgstr "\"true\"、\"1\"、\"YES\"、\"Y\"、\"ON\" の場合、ブール値は `true` になる。それ以外の場合、値は false として解釈される"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:216
msgid "For float and double values the fractional digits must be separated by a dot `.`"
msgstr "float 型および double 型の値の場合、小数桁はドット `.` で区切る必要がある"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:221
msgid "Note that when a combination of `Optional*` types and the `defaultValue` attribute are used, the defined `defaultValue` will still be used and if no value is given for the property, the `Optional*` will be present and populated with the converted default value. However, when the property is explicitly empty, the default value is not used and the `Optional` will be empty. Consider this example:"
msgstr "`Optional*` タイプと `defaultValue` 属性の組み合わせが使用される場合、定義された `defaultValue` が引き続き使用され、プロパティーに値が指定されていない場合、`Optional*` が存在し、変換されたデフォルト値が入力されることに注意してください。ただし、プロパティーが明示的に空の場合、デフォルト値は使用されず、`Optional` は空になります。この例を考えてみましょう。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:226
#, no-wrap
msgid ""
"# missing value, optional property\n"
"greeting.name =\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:231
msgid "In this case, since `greeting.name` was configured to be `Optional*` up above, the corresponding property value will be an empty `Optional` and execution will continue normally. This would be the case even if there was a default value configured: the default value is *not* used if the property is explicitly cleared in the configuration."
msgstr "この場合、`greeting.name` は上記の `Optional*` になるように設定されているため、対応するプロパティー値は空の `Optional` になり、実行は通常どおり続行されます。これは、デフォルト値が設定されている場合でも当てはまります。プロパティーが設定で明示的にクリアされている場合、デフォルト値は *使用されません*。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:233
msgid "On the other hand, this example:"
msgstr "一方、以下の例では、"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:238
#, no-wrap
msgid ""
"# missing value, non-optional\n"
"greeting.suffix =\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:242
msgid "will result in a `java.util.NoSuchElementException: SRCFG02004: Required property greeting.message not found` on startup and the default value will not be assigned."
msgstr "起動時に `java.util.NoSuchElementException: SRCFG02004: Required property greeting.message not found` が発生し、デフォルト値は割り当てられません。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:244
msgid "Below is an example of a Quarkus-supplied converter:"
msgstr "以下は、Quarkus が提供するコンバーターの例です。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:249
#, no-wrap
msgid ""
"@ConfigProperty(name = \"server.address\", defaultValue = \"192.168.1.1\")\n"
"InetAddress serverAddress;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config-reference.adoc:251
#, no-wrap
msgid "Programmatically access"
msgstr "プログラムでアクセス"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:255
msgid "The `org.eclipse.microprofile.config.ConfigProvider.getConfig()` API allows to access the Config API programmatically.  This API is mostly useful in situations where CDI injection is not available."
msgstr "`org.eclipse.microprofile.config.ConfigProvider.getConfig()` APIを使用すると、Config APIにプログラムでアクセスすることができます。このAPIは、CDIインジェクションが利用できない状況で主に役立ちます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:260
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:264
msgid "Do not use `System.getProperty(String)` or `System.getEnv(String)` to retrieve configuration values. These APIs are not configuration aware and do not support the features described in this guide."
msgstr "設定値を取得するために `System.getProperty(String)` または `System.getEnv(String)` を使用しないでください。これらの API は設定に対応しておらず、このガイドで説明されている機能をサポートしていません。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:266
#, no-wrap
msgid "Profiles"
msgstr "プロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:270
msgid "We often need to configure our application differently depending on the target _environment_. For example, the local development environment may be different from the production environment."
msgstr "私たちはしばしば、ターゲット _環境_ に応じてアプリケーションを異なるように設定する必要があります。たとえば、ローカルの開発環境と本番環境は異なるかもしれません。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:273
msgid "Configuration Profiles allow for multiple configurations in the same file or separate files and select between them via a profile name."
msgstr "設定プロファイルでは、同じファイルまたは個別のファイルで複数の設定を行い、プロファイル名を使用してそれらから選択できます。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:274
#, no-wrap
msgid "Profile in the property name"
msgstr "プロパティー名のプロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:277
msgid "To be able to set properties with the same name, each property needs to be prefixed with a percentage sign `%` followed by the profile name and a dot `.` in the syntax `%{profile-name}.config.name`:"
msgstr "同じ名前のプロパティーを設定できるようにするには、各プロパティーは、`%{profile-name}.config.name` の構文で、プロファイル名とドット `.` の前にパーセント記号 `%` を付ける必要があります。"

#. type: Block title
#: upstream/_guides/config-reference.adoc:278
#: upstream/_guides/config-reference.adoc:298
#: upstream/_guides/config-reference.adoc:323
#: upstream/_guides/config-reference.adoc:342
#: upstream/_guides/config-reference.adoc:409
#: upstream/_guides/config-reference.adoc:433
#: upstream/_guides/config-reference.adoc:472
#: upstream/_guides/config-reference.adoc:483
#: upstream/_guides/config-reference.adoc:492
#: upstream/_guides/config-reference.adoc:516
#: upstream/_guides/config-reference.adoc:531
#: upstream/_guides/config-reference.adoc:564
#: upstream/_guides/config-reference.adoc:582
#, no-wrap
msgid "application.properties"
msgstr "application.properties"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:283
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:286
msgid "The Quarkus HTTP port will be 9090. If the `dev` profile is active it will be 8181."
msgstr "Quarkus HTTP ポートは 9090 になります。`dev` プロファイルがアクティブな場合、8181 になります。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:288
msgid "Profiles in the `.env` file follow the syntax `_{PROFILE}_CONFIG_KEY=value`:"
msgstr "`.env` ファイルのプロファイルは構文 `_{PROFILE}_CONFIG_KEY=value` に従います。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:294
#, no-wrap
msgid ""
"QUARKUS_HTTP_PORT=9090\n"
"_DEV_QUARKUS_HTTP_PORT=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:297
msgid "If a profile does not define a value for a specific attribute, the _default_ (no profile) value is used:"
msgstr "プロファイルが特定の属性の値を定義していない場合、_デフォルト_ (プロファイルなし) の値が使用されます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:304
#, no-wrap
msgid ""
"bar=”hello”\n"
"baz=”bonjour”\n"
"%dev.bar=”hallo”\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:309
msgid "With the `dev` profile enabled, the property `bar` has the value `hallo`, but the property `baz` has the value `bonjour`. If the `prod` profile is enabled, `bar` has the value `hello` (as there is no specific value for the `prod` profile), and `baz` the value `bonjour`."
msgstr "`dev` プロファイルを有効にすると、プロパティー `bar` の値は `hallo` になりますが、プロパティー `baz` の値は `bonjour` になります。`prod` プロファイルが有効になっている場合、`bar` の値は `hello` (` prod` プロファイルには特定の値がないため) であり、`baz` の値は `bonjour` です。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:310
#, no-wrap
msgid "Default Profiles"
msgstr "デフォルトのプロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:313
msgid "By default, Quarkus provides three profiles, that activate automatically in certain conditions:"
msgstr "デフォルトでは、Quarkus は 3 つのプロファイルを提供し、特定の条件で自動的にアクティブになります。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:315
#, no-wrap
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)\n"
msgstr "*dev* - 開発モードのときに有効になる (つまり `quarkus:dev`)\n"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:316
#, no-wrap
msgid "*test* - Activated when running tests\n"
msgstr "*test* - テストを実行しているときに有効になる\n"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:317
#, no-wrap
msgid "*prod* - The default profile when not running in development or test mode\n"
msgstr "*prod* - 開発モードまたはテストモード以外で使用されるデフォルトプロファイル\n"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:318
#, no-wrap
msgid "Custom Profiles"
msgstr "カスタムプロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:322
msgid "It is also possible to create additional profiles and activate them with the `quarkus.profile` configuration property. A single config property with the new profile name is the only requirement:"
msgstr "追加のプロファイルを作成し、`quarkus.profile` 設定プロパティーを使用してそれらをアクティブ化することもできます。新しいプロファイル名を持つ単一の設定プロパティーが唯一の要件です。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:328
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.port=9999\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:331
msgid "Setting `quarkus.profile` to `staging` will activate the `staging` profile."
msgstr "`quarkus.profile` を `staging` に設定すると、`staging` プロファイルがアクティブになります。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:335
msgid "The `io.smallrye.config.SmallRyeConfig#getProfiles` API provides a way to retrieve the active profiles programmatically."
msgstr "`io.smallrye.config.SmallRyeConfig#getProfiles` API は、プログラムでアクティブなプロファイルを取得する方法を提供します。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:337
#, no-wrap
msgid "Profile aware files"
msgstr "プロファイル対応ファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:341
msgid "In this case, properties for a specific profile may reside in an `application-{profile}.properties` named file. The previous example may be expressed as:"
msgstr "この場合、特定のプロファイルのプロパティは、 `application-{profile}.properties` という名前のファイルに格納されます。先ほどの例は次のように表現できます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:347
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.test-port=9091\n"
msgstr ""

#. type: Block title
#: upstream/_guides/config-reference.adoc:349
#, no-wrap
msgid "application-staging.properties"
msgstr "application-staging.properties"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:354
#, no-wrap
msgid ""
"quarkus.http.port=9190\n"
"quarkus.http.test-port=9191\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:359
msgid "In this style, the configuration names in the profile aware file do not need to be prefixed with the profile name."
msgstr "このスタイルでは、プロファイル対応ファイルの設定名の前にプロファイル名を付ける必要はありません。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:361
msgid "Properties in the profile aware file have priority over profile aware properties defined in the main file."
msgstr "プロファイル対応ファイルのプロパティーは、メインファイルで定義されているプロファイル対応プロパティーよりも優先されます。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:366
msgid "The profile aware file must be present in the exact same location as the main `application.properties` file."
msgstr "プロファイル対応ファイルは、メインの `application.properties` ファイルとまったく同じ場所に存在する必要があります。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:368
#, no-wrap
msgid "Parent Profile"
msgstr "親プロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:372
msgid "A Parent Profile adds one level of hierarchy to the current profile. The configuration `quarkus.config.profile.parent` accepts a single profile name."
msgstr "親プロファイルは、現在のプロファイルに 1 レベルの階層を追加します。設定 `quarkus.config.profile.parent` は、単一のプロファイル名を受け入れます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:375
msgid "When the Parent Profile is active, if a property cannot be found in the current active Profile, the config lookup fallbacks to the Parent Profile. Consider:"
msgstr "親プロファイルがアクティブなときに、現在アクティブなプロファイルにプロパティーが見つからない場合、設定ルックアップは親プロファイルにフォールバックします。以下の例を考えてみます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:380
#, no-wrap
msgid ""
"quarkus.profile=dev\n"
"quarkus.config.profile.parent=common\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:383
#, no-wrap
msgid ""
"%common.quarkus.http.port=9090\n"
"%dev.quarkus.http.ssl-port=9443\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:386
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.http.ssl-port=8443\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:389
#: upstream/_guides/config-reference.adoc:424
#: upstream/_guides/config-reference.adoc:445
msgid "Then"
msgstr "この場合、"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:391
msgid "The active profile is `dev`"
msgstr "アクティブなプロファイルは `dev` です"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:392
msgid "The parent profile is `common`"
msgstr "親プロファイルは `common` です"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:393
msgid "`quarkus.http.port` is 9090"
msgstr "`quarkus.http.port` は 9090 です"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:394
msgid "`quarkus.http.ssl-port` is 9443"
msgstr "`quarkus.http.ssl-port` は 9443 です"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:399
msgid "Do not use Profile aware files to set `quarkus.config.profile.parent`. This will not work because the profile is required in advance to load the profile aware files."
msgstr "`quarkus.config.profile.parent` を設定するために、プロファイル毎のファイルを使用しないでください。プロファイル毎のファイルの読み込みには、あらかじめプロファイルが必要なため、この方法ではうまくいきません。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:401
#, no-wrap
msgid "Multiple Profiles"
msgstr "複数のプロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:405
msgid "Multiple Profiles may be active at the same time. The configuration `quarkus.profile` accepts a comma-separated list of profile names: `quarkus.profile=common,dev`. Both `common` and `dev` are separate profiles."
msgstr "複数のプロファイルを同時にアクティブにすることができます。 `quarkus.profile` 設定では、カンマで区切られたプロファイル名のリストを受け付けます: `quarkus.profile=common,dev` 。 `common` と `dev` はどちらも別のプロファイルです。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:408
msgid "When multiple profiles are active, the rules for profile configuration are the same. If two profiles define the same configuration, then the last listed profile has priority. Consider:"
msgstr "複数のプロファイルが有効な場合、プロファイル設定に関するルールは同じです。2つのプロファイルが同じ設定を定義している場合、最後にリストされたプロファイルが優先されます。と考えてください:"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:413
#, no-wrap
msgid "quarkus.profile=common,dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:417
#, no-wrap
msgid ""
"my.prop=1234\n"
"%common.my.prop=1234\n"
"%dev.my.prop=5678\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:421
#, no-wrap
msgid ""
"%common.commom.prop=common\n"
"%dev.dev.prop=dev\n"
"%test.test.prop=test\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:426
msgid "`common.prop` value is `common`"
msgstr "`common.prop` 値は `common`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:427
msgid "`dev.prop` value is `dev`"
msgstr "`dev.prop` 値は `dev`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:428
msgid "`my.prop` value is `5678`"
msgstr "`my.prop` 値は `5678`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:429
msgid "`test.prop` does not have a `value`"
msgstr "`test.prop` 値は `value`"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:432
msgid "It is also possible to define multiple profile properties, with a comma-separated list of profile names. If the same property name exists in multiple profile properties then, the property name with the most specific profile wins:"
msgstr "また、プロファイル名をカンマで区切って、複数のプロファイルプロパティを定義することも可能です。同じプロパティ名が複数のプロファイルプロパティに存在する場合、最も具体的なプロファイルを持つプロパティ名が優先されます:"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:437
#, no-wrap
msgid "quarkus.profile=dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:440
#, no-wrap
msgid ""
"%prod,dev.my.prop=1234\n"
"%dev.my.prop=5678\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:442
#, no-wrap
msgid "%prod,dev.another.prop=1234\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:447
msgid "`my.prop` value is 5678."
msgstr "`my.prop` の値は5678です。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:448
msgid "`another.prop` value is 1234."
msgstr "`another.prop` の値は1234です。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:449
#, no-wrap
msgid "Default Runtime Profile"
msgstr "デフォルトの実行時プロファイル"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:452
msgid "The default Quarkus runtime profile is set to the profile used to build the application:"
msgstr "デフォルトの Quarkus 実行時プロファイルは、アプリケーションのビルドに使用されるプロファイルに設定されます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:457
#, no-wrap
msgid ""
"./mvnw package -Pnative -Dquarkus.profile=prod-aws\n"
"./target/my-app-1.0-runner // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:459
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` configuration."
msgstr "コマンドは、`prod-aws` プロファイルで実行されます。これは `quarkus.profile` 設定を使用して上書きすることができます。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:461
#, no-wrap
msgid "Property Expressions"
msgstr "プロパティー式"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:465
msgid "Quarkus provides property expressions expansion on configuration values. An expression string is a mix of plain strings and expression segments, which are wrapped by the sequence `${ ... }`."
msgstr "Quarkus は、設定値のプロパティー式拡張を提供します。式文字列は、プレーン文字列と式セグメントの組み合わせであり、シーケンス `${ ... }` でラップされます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:469
msgid "These expressions are resolved when the property is read. So if the configuration property is build time the property expression will be resolved at build time. If the configuration property is overridable at runtime it will be resolved at runtime."
msgstr "これらの式は、プロパティーの読み込み時に解決されます。したがって、設定プロパティーがビルド時である場合、プロパティー式はビルド時に解決されます。設定プロパティーが実行時にオーバーライド可能になると、実行時に解決されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:471
msgid "Consider:"
msgstr "以下だとすると、"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:477
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"callable.url=https://${remote.host}/\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:480
msgid "The resolved value of the `callable.url` property is `https://quarkus.io/`."
msgstr "`callable.url` プロパティーの解決された値は `https://quarkus.io/` です。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:482
msgid "Another example would be defining different database servers by profile:"
msgstr "別の例としては、プロファイルで異なるデータベースサーバーを定義できます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:488
#, no-wrap
msgid ""
"%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false\n"
"quarkus.datasource.jdbc.url=jdbc:mysql://remotehost:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:491
msgid "can be simplified to:"
msgstr "次のように簡略化できます。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:497
#, no-wrap
msgid ""
"%dev.application.server=localhost\n"
"application.server=remotehost\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:499
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:502
msgid "Additionally, the Expression Expansion engine supports the following segments:"
msgstr "さらに、式拡張エンジンは次のセグメントをサポートします。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:504
msgid "`${expression:value}` - Provides a default value after the `:` if the expansion doesn't find a value."
msgstr "`${expression:value}` - 拡張で値が見つからない場合、`:` の後にデフォルト値を提供します。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:505
msgid "`${my.prop${compose}}` - Composed expressions. Inner expressions are resolved first."
msgstr "`${my.prop${compose}}` - 構成された式。内部式が最初に解決されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:506
msgid "`${my.prop}${my.prop}` - Multiple expressions."
msgstr "`${my.prop}${my.prop}` - 複数の式。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:508
msgid "If an expression cannot be expanded and no default is supplied a `NoSuchElementException` is thrown."
msgstr "式を展開できず、デフォルトが指定されていない場合、`NoSuchElementException` が出力されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:511
msgid "Expressions lookups are performed in all config sources. The expression values and expansion values may reside in different config sources."
msgstr "式のルックアップは、すべての設定ソースで実行されます。式の値と展開値は、異なる設定ソースに存在する場合があります。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:512
#, no-wrap
msgid "With Environment Variables"
msgstr "環境変数を使用"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:515
msgid "Property Expressions also work with Environment Variables."
msgstr "プロパティー式は環境変数でも機能します。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:521
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"application.host=${HOST:${remote.host}}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:525
msgid "This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set."
msgstr "これは `HOST` 環境変数を展開し、`HOST` が設定されていない場合は、プロパティー `remote.host` の値をデフォルト値として使用します。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:526
#, no-wrap
msgid "Secret Keys Expressions"
msgstr "シークレット・キー式"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:530
msgid "A secret configuration may be expressed as `${handler::value}`, where the `handler` is the name of a `io.smallrye.config.SecretKeysHandler` to decode or decrypt the `value`. Consider:"
msgstr "シークレット設定は、 `${handler::value}` と表現することができます。 `handler` は、 `value` を解読または復号するための `io.smallrye.config.SecretKeysHandler` の名前です :"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:535
#, no-wrap
msgid "my.secret=${aes-gcm-nopadding::DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:539
msgid "A lookup to `my.secret` will use the `SecretKeysHandler` name `aes-gcm-nopadding` to decode the value `DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg`."
msgstr "`my.secret` を読み出すと、 `aes-gcm-nopadding` という名前の `SecretKeysHandler` を使って、値 `DJNrZ6LfpupFv6QbXyXhvzD8eVDnDa_kTliQBpuzTobDZxlg` がデコードされます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:542
msgid "For more information, please check SmallRye Config link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys] documentation."
msgstr "詳しくは、SmallRye Config link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys] のドキュメントをご確認ください。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:543
#, no-wrap
msgid "Accessing a generating UUID"
msgstr "生成中の UUID へのアクセス"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:548
msgid "The default config source from Quarkus provides a random UUID value.  It generates the UUID at startup time.  So, the value changes between startups, including reloads in dev mode."
msgstr "Quarkus のデフォルトの設定ソースはランダムな UUID 値を提供します。起動時に UUID を生成します。そのため、開発モードでのリロードを含め、起動毎に値が変化します。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:552
msgid "You can access the generated value using the `quarkus.uuid` property.  Use xref:property-expressions[expressions] to access it: `${quarkus.uuid}`.  For example, it can be useful to configure a Kafka client with a unique consumer group:"
msgstr "生成された値には、 `quarkus.uuid` プロパティを使用してアクセスすることができます。アクセスするには xref:property-expressions[式] を使用します: `${quarkus.uuid}` 。たとえば、Kafka クライアントに一意のコンシューマーグループを設定するのに便利です:"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:556
#, no-wrap
msgid "mp.messaging.incoming.prices.group.id=${quarkus.uuid}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config-reference.adoc:558
#, no-wrap
msgid "Clearing properties"
msgstr "プロパティーの削除"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:563
msgid "Run time properties which are optional, and which have had values set at build time or which have a default value, may be explicitly cleared by assigning an empty string to the property. Note that this will _only_ affect runtime properties, and will _only_ work with properties whose values are not required."
msgstr "任意であり、ビルド時に値が設定されていたり、デフォルト値が設定されていたりする実行時プロパティーは、空の文字列をプロパティーに代入することで明示的に削除することができます。これは実行時プロパティーに _のみ_ 影響し、値が必須ではないプロパティーで _のみ_ 動作することに注意してください。"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:568
#, no-wrap
msgid "remote.host=quarkus.io\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:571
msgid "A lookup to `remote.host` with `-Dremote.host=` will throw an Exception, because the system property cleared the value."
msgstr "`-Dremote.host=` を指定して `remote.host` を検索すると、システムプロパティーが値をクリアしたため、例外がスローされます。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:573
#, no-wrap
msgid "Indexed Properties"
msgstr "インデックスされたプロパティ"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:577
msgid "A config value which contains unescaped commas may be converted to `Collection`. This works for simple cases, but it becomes cumbersome and limited for more advanced cases."
msgstr "エスケープされていないコンマを含む設定値は、 `Collection` に変換できます。これは単純なケースでは機能しますが、面倒になり、より高度なケースでは制限されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:581
msgid "Indexed Properties provide a way to use indexes in config property names to map specific elements in a `Collection` type. Since the indexed element is part of the property name and not contained in the value, this can also be used to map complex object types as `Collection` elements. Consider:"
msgstr "インデックス付きプロパティーは、設定プロパティー名のインデックスを使用して、`Collection` タイプの特定の要素をマップする方法を提供します。インデックス付き要素はプロパティー名の一部であり、値に含まれていないため、これを使用して、複雑なオブジェクトタイプを `Collection` 要素としてマップすることもできます。以下の例の場合、"

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:586
#, no-wrap
msgid "my.collection=dog,cat,turtle\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-reference.adoc:590
#, no-wrap
msgid ""
"my.indexed.collection[0]=dog\n"
"my.indexed.collection[1]=cat\n"
"my.indexed.collection[2]=turtle\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-reference.adoc:593
msgid "The indexed property syntax uses the property name and square brackets `[ ] with an index in between."
msgstr "インデックス付きプロパティーの構文では、プロパティー名と大かっこ [ ] を使用し、その間にインデックスを付けます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:598
msgid "A call to `Config#getValues(\"my.collection\", String.class)`, will automatically create and convert a `List<String>` that contains the values `dog`, `cat` and `turtle`. A call to `Config#getValues(\"my.indexed.collection\", String.class)` returns the exact same result. If the same property name exists in both forms (regular and indexed), the regular value has priority."
msgstr "`Config#getValues(\"my.collection\", String.class)` を呼び出すと、値 `dog`、`cat`、および `turtle` が含まれる `List<String>` が自動的に作成および変換されます。`Config#getValues(\"my.indexed.collection\", String.class)` を呼び出すと、まったく同じ結果が返されます。同じプロパティー名が両方の形式 (通常およびインデックス付き) に存在する場合、通常の値が優先されます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:602
msgid "The indexed property is sorted by their index before being added to the target `Collection`. Any gaps contained in the indexes do not resolve to the target `Collection`, which means that the `Collection` result will store all values without any gaps."
msgstr "インデックス付きのプロパティーは、ターゲットの `Collection` に追加される前に、インデックスで並べ替えられます。インデックスに含まれるギャップはターゲットの `Collection` に解決されません。つまり、`Collection` の結果にはギャップのないすべての値が格納されます。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:604
#, no-wrap
msgid "Configuring Quarkus"
msgstr "Quarkus の設定"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:609
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are xref:all-config.adoc[documented and searchable]."
msgstr "Quarkus自体は、アプリケーションと同じメカニズムで設定されます。Quarkusは、自身の設定のために `quarkus.` 名前空間を予約します。例えば、HTTPサーバーポートを設定するには、 `quarkus.http.port` を `application.properties` に設定します。Quarkusのすべての設定プロパティは link:all-config.html[文書化されており、検索可能]です。"

#. type: delimited block =
#: upstream/_guides/config-reference.adoc:614
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr "上述したように、 `quarkus.` で始まるプロパティーは、Quarkus 自体を設定するために実質的に予約されているため、アプリケーション固有のプロパティーのプレフィックスとして `quarkus.` を使用してはいけ *ません* 。"

#. type: Title ===
#: upstream/_guides/config-reference.adoc:616
#, no-wrap
msgid "Build Time configuration"
msgstr "ビルド時設定"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:621
msgid "Some Quarkus configurations only take effect during build time, meaning is not possible to change them at runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of such properties."
msgstr "Quarkusの設定の中には、ビルド時にのみ有効になるものがあり、実行時に変更することはできません。これらの設定は実行時でも利用可能ですが、読み取り専用であり、Quarkusの動作には影響しません。これらの設定を変更するには、そのようなプロパティの変更を反映させる場合、アプリケーション自体を再ビルドする必要があります。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:623
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the xref:all-config.adoc[list of all configuration options]."
msgstr "ビルド時に固定されたプロパティーは、 link:all-config[すべての設定オプションのリスト] でロックアイコン (icon:lock[]) でマークされます。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:627
msgid "However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username and password which is only known specifically in your target environment, so they can be set and influence the application behaviour at runtime."
msgstr "しかし、いくつかのエクステンションは _実行時にオーバーライド可能な_ プロパティーを定義しています。定型的な例としては、データベースの URL、ユーザー名とパスワードがあります。これはターゲット環境によって定まるものであり、実行時にセットされ、アプリケーションの動作に影響を与えるものです。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:628
#, no-wrap
msgid "Change build time properties after your application has been published"
msgstr "アプリケーションが公開された後、ビルド時のプロパティー変更"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:631
msgid "If you are in the rare situation that you need to change the build time configuration after your application is built, then check out how xref:reaugmentation.adoc[re-augmentation] can be used to rebuild the augmentation output for a different build time configuration."
msgstr "アプリケーションのビルド後にビルド時の設定を変更する必要があるというまれな状況にある場合は、xref:reaugmentation.adoc[再オーグメンテーション] を使用して、別のビルド時設定のオーグメンテーション出力を再ビルドする方法を確認してください。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:633
#, no-wrap
msgid "Additional Information"
msgstr "追加情報"

#. Moved to Quarkiverse. There is a redirect to resolve the link
#. type: Plain text
#: upstream/_guides/config-reference.adoc:636
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr "xref:config-yaml.adoc[YAML ConfigSource Extension]"

#. Moved to Quarkiverse. There is a redirect to resolve the link
#. type: Plain text
#: upstream/_guides/config-reference.adoc:638
msgid "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"
msgstr "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:640
msgid "xref:consul-config.adoc[Consul ConfigSource Extension]"
msgstr "xref:consul-config.adoc[Consul ConfigSource Extension]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:641
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:642
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr "link:config-mappings.html[設定をオブジェクトにマッピング]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:643
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr "link:config-extending-support.html[設定サポートの拡張]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:645
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr "Quarkus は link:https://github.com/smallrye/smallrye-config/[SmallRye Config] に依存しており、その機能を継承しています。"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:647
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/custom/[Additional Config Sources]"
msgstr "link:https://smallrye.io/smallrye-config/Main/config-sources/custom/[追加の設定ソース]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:648
msgid "link:https://smallrye.io/smallrye-config/Main/config-sources/factories/[Config Source Factories]"
msgstr "link:https://smallrye.io/smallrye-config/Main/config-sources/factories/[設定ソースファクトリー]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:649
msgid "link:https://smallrye.io/smallrye-config/Main/converters/custom/[Additional Converters]"
msgstr "link:https://smallrye.io/smallrye-config/Main/converters/custom/[追加コンバーター]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:650
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/interceptors/[Interceptors]"
msgstr "link:https://smallrye.io/smallrye-config/Main/extensions/interceptors/[インターセプター]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:651
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/relocate/[Relocate Configuration]"
msgstr "link:https://smallrye.io/smallrye-config/Main/extensions/relocate/[移転設定]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:652
msgid "link:https://smallrye.io/smallrye-config/Main/extensions/fallback/[Fallback Configuration]"
msgstr "link:https://smallrye.io/smallrye-config/Main/extensions/fallback/[フォールバック設定]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:653
msgid "link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[Secret Keys]"
msgstr "link:https://smallrye.io/smallrye-config/Main/config/secret-keys/[シークレットキーズ]"

#. type: Plain text
#: upstream/_guides/config-reference.adoc:656
msgid "For more information, please check the link:https://smallrye.io/smallrye-config/Main[SmallRye Config documentation]."
msgstr "詳しくは、 link:https://smallrye.io/smallrye-config/Main[SmallRye Configのドキュメント] をご確認ください。"

#. type: Title ==
#: upstream/_guides/config-reference.adoc:657
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"

#~ msgid "We often need to configure differently our application depending on the target _environment_. For example, the local development environment may be different from the production environment."
#~ msgstr "多くの場合、ターゲットの _環境_ に応じて、アプリケーションを異なる方法で設定する必要があります。たとえば、ローカルの開発環境は本番環境とは異なる場合があります。"

#~ msgid "The content of this guide has been revised and split into additional topics. Please check the <<additional-information,Additional Information>> section."
#~ msgstr "本ガイドの内容を改訂し、さらにトピックを分割しました。<<additional-information,追加情報>>をご覧ください。"

#~ msgid "If you're looking for information how to make a Quarkus extension configurable then see the <<writing-extensions.adoc#configuration,Writing Your Own Extension>> guide."
#~ msgstr "Quarkus エクステンションを設定可能にする方法については、<<writing-extensions.adoc#configuration,独自のエクステンションの作成>> ガイドを参照してください。"

#~ msgid "(400) <<system-properties,System properties>>"
#~ msgstr "(400) <<system-properties,システムプロパティー>>"

#~ msgid "(300) <<environment-variables,Environment variables>>"
#~ msgstr "(300) <<environment-variables,環境変数>>"

#~ msgid "(295) <<env-file,.env>> file in the current working directory"
#~ msgstr "(295) 現在の作業ディレクトリーの <<env-file,.env>> ファイル"

#~ msgid "(260) <<application-properties-file,Quarkus Application configuration file>> in `$PWD/config/application.properties`"
#~ msgstr "(260) `$PWD/config/application.properties` の <<application-properties-file, Quarkus アプリケーション設定ファイル>>"

#~ msgid "(250) <<application-properties-file,Quarkus Application configuration file>> `application.properties` in classpath"
#~ msgstr "(250) クラスパスの <<application-properties-file, Quarkus アプリケーション設定ファイル>> `application.properties`"

#~ msgid "(100) <<microprofile-config-properties-file,MicroProfile Config configuration file>> `META-INF/microprofile-config.properties` in classpath"
#~ msgstr "(100) クラスパスの <<microprofile-config-properties-file,MicroProfile Config 設定ファイル>> `META-INF/microprofile-config.properties`"

#~ msgid "SmallRye Config specifies link:https://smallrye.io/smallrye-config/latest/config/environment-variables/[additional conversion rules]."
#~ msgstr "SmallRye Config は link:https://smallrye.io/smallrye-config/latest/config/environment-variables/[追加の規約ルール] を指定します。"

#~ msgid "The name `QUARKUS_DATASOURCE_PASSWORD` the same conversion rules used for <<environment-variables>>."
#~ msgstr "名前 `QUARKUS_DATASOURCE_PASSWORD` は、<<environment-variables>> に使用されるものと同じ変換ルール。"

#~ msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
#~ msgstr "このプロパティーに値を指定しないと、アプリケーションの起動は `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message` エラーで失敗します。"

#~ msgid "If a property is associated with a default value (by way of the `defaultValue` attribute), and no configuration value is supplied for the property, then rather than throwing a `javax.enterprise.inject.spi.DeploymentException`, the default value will be used. The `defaultValue` value is expressed as a `String`, and uses the same conversion mechanism used to process configuration values. Several Built-in Converters already exist for primitives, boxed primitives, and other classes; for example:"
#~ msgstr "プロパティーが (`defaultValue` 属性を介して) デフォルト値に関連付けられており、プロパティーに設定値が指定されていない場合、`javax.enterprise.inject.spi.DeploymentException` をスローせずにデフォルト値が使用されます。`defaultValue` の値は `String` として表され、設定値の処理に使用されるのと同じ変換メカニズムを使用します。プリミティブ、ボックス化されたプリミティブ、およびその他のクラス用に、いくつかの組み込みコンバーターがすでに存在します。以下に例を示します。"

#~ msgid "The configuration `quarkus.config.profile.parent` must be placed in the main `application.properties` file, passed as a system property, or passed as an environment variable.  It does not work when the configuration is placed in the profile aware files."
#~ msgstr "設定 `quarkus.config.profile.parent` は、メインの `application.properties` ファイルに配置するか、システム プロパティとして渡すか、環境変数として渡す必要があります。 設定がプロファイル対応ファイルに配置されている場合は機能しません。"

#~ msgid "You can access the generated value using the `quarkus.uuid` property.  Use <<property-expressions, expressions>> to access it: `${quarkus.uuid}`.  For example, it can be useful to configure a Kafka client with a unique consumer group:"
#~ msgstr "生成された値には、`quarkus.uuid` プロパティーを使用してアクセスできます。<<property-expressions, 式>> を使用してアクセスします (`${quarkus.uuid}`)。たとえば、Kafka クライアントを一意のコンシューマーグループで設定する場合に便利です。"

#~ msgid "Additional ``ConfigSource``s"
#~ msgstr "追加 ``ConfigSource``"

#~ msgid "Additional ``Converter``s"
#~ msgstr "追加 ``Converter``"

#~ msgid "Indexed properties"
#~ msgstr "インデックスされたプロパティ"

#~ msgid "Parent profile"
#~ msgstr "親プロファイル"

#~ msgid "Interceptors for configuration value resolution"
#~ msgstr "設定値解決のためのインターセプタ―"

#~ msgid "Relocate configuration properties"
#~ msgstr "設定プロパティーの移動"

#~ msgid "Fallback configuration properties"
#~ msgstr "設定プロパティーのフォールバック"

#~ msgid "Logging"
#~ msgstr "ロギング"

#~ msgid "Hide secrets"
#~ msgstr "シークレットを隠す"

#~ msgid "For more information, please check the link:https://smallrye.io/smallrye-config/latest[SmallRye Config documentation]."
#~ msgstr "詳細は、link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config のドキュメント] を参照してください。"

#~ msgid "Only a single profile may be active at a time."
#~ msgstr "一度にアクティブにできるプロファイルは 1 つだけです。"

#~ msgid "Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly."
#~ msgstr "`@ConfigProperty(\"quarkus.profile\")` を使用すると正常に**動作しません**。"

#~ msgid "Indexed Properties are not supported in Environment Variables."
#~ msgstr "インデックス付きプロパティーは、環境変数ではサポートされていません。"
