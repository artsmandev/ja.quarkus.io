# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-04 13:18+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-openid-connect-dev-services.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Dev Services for OpenId Connect"
msgstr "Quarkus - OpenId Connectの開発サービス"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:11
#, fuzzy
msgid "This guide covers the Dev Services for OpenId Connect Keycloak provider and explains how to support other OpenId Connect providers."
msgstr "このガイドでは、Dev Services for OpenId Connect Keycloak プロバイダを取り上げ、他の OpenId Connect プロバイダをサポートする方法について説明します。"

#. type: Title ==
#: upstream/_guides/security-openid-connect-dev-services.adoc:12
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "はじめに"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:15
#, fuzzy
msgid "Quarkus introduces an experimental `Dev Services For Keycloak` feature which is enabled by default when the `quarkus-oidc` extension is started in dev mode. It starts a Keycloak container and initializes it by registering the existing Keycloak realm or creating a new realm with the client and users for you to start developing your Quarkus application secured by Keycloak immediately. It will restart a container when the `application.properties` or the realm file changes have been detected."
msgstr "Quarkusは、実験的な `Dev Services For Keycloak` 機能を導入しています。この機能は、 `quarkus-oidc` 拡張機能が開発モードで開始されると、デフォルトで有効になります。これは、Keycloakコンテナを起動し、既存のKeycloakレルムを登録するか、クライアントとユーザーで新しいレルムを作成することでコンテナを初期化し、Keycloakで保護されたQuarkusアプリケーションの開発をすぐに始めることができます。 `application.properties` またはレルムファイルの変更が検出されたときに、コンテナを再起動します。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:17
#, fuzzy
msgid "Additionally, link:dev-ui[Dev UI] available at http://localhost:8080/q/dev[/q/dev] supports this feature with a Keycloak specific page which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr "さらに、 link:http://localhost:8080/q/dev[/q/dev]にある link:dev-ui[Dev UI]では、Keycloak固有のページでこの機能をサポートしており、Keycloakからトークンを取得してQuarkusアプリケーションをテストするのに役立ちます。"

#. type: Title ==
#: upstream/_guides/security-openid-connect-dev-services.adoc:18
#, fuzzy, no-wrap
msgid "Dev Services for Keycloak"
msgstr "Keycloakの開発サービス"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:21
#, fuzzy
msgid "Start your application without configuring `quarkus.oidc` properties in `application.properties`. You will see in the console something similar to:"
msgstr "`quarkus.oidc` のプロパティを `application.properties` に設定せずに、アプリケーションを起動してください。コンソールには以下のような表示がされます。"

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:25
#, no-wrap
msgid "$ mvn quarkus:dev\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:34
#, no-wrap
msgid ""
"2021-06-04 16:22:47,175 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Creating container for image: quay.io/keycloak/keycloak:14.0.0\n"
"2021-06-04 16:22:47,243 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Starting container with ID: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,629 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 is starting: 6469f6db9cec2c855fcc6c8db4273944cc9d69e8f6803a0b47eb2d5b8f5b94fd\n"
"2021-06-04 16:22:47,643 INFO  [org.tes.con.wai.str.HttpWaitStrategy] (build-38) /elastic_lovelace: Waiting for 60 seconds for URL: http://localhost:32812/auth (where port 32812 maps to container port 8080)\n"
"2021-06-04 16:23:07,665 INFO  [🐳 .io/keycloak/keycloak:14.0.0]] (build-38) Container quay.io/keycloak/keycloak:14.0.0 started in PT5.500489S\n"
"...\n"
"2021-06-04 16:23:11,155 INFO  [io.quarkus] (Quarkus Main Thread) security-openid-connect-quickstart 1.0.0-SNAPSHOT on JVM (powered by Quarkus 999-SNAPSHOT) started in 25.968s. Listening on: http://localhost:8080\n"
"2021-06-04 16:23:11,157 INFO  [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:37
#, fuzzy
msgid "The `quay.io/keycloak/keycloak:14.0.0` Keycloak image is used by default to start a container. `quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image used."
msgstr "コンテナの起動には、デフォルトで `quay.io/keycloak/keycloak:14.0.0` の Keycloak イメージが使用されます。使用する Keycloak イメージを変更するには、 `quarkus.keycloak.devservices.image-name` を使用します。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:39
#, fuzzy
msgid "Now open the main Dev UI page and you will see the `OpenId Connect Card` linking to a `Keycloak` page:"
msgstr "次にメインのDev UIページを開くと、 `OpenId Connect Card` が `Keycloak` ページにリンクしているのがわかります。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/security-openid-connect-dev-services.adoc:40
#: upstream/_guides/security-openid-connect-dev-services.adoc:54
#: upstream/_guides/security-openid-connect-dev-services.adoc:58
#: upstream/_guides/security-openid-connect-dev-services.adoc:78
#: upstream/_guides/security-openid-connect-dev-services.adoc:98
#: upstream/_guides/security-openid-connect-dev-services.adoc:108
#: upstream/_guides/security-openid-connect-dev-services.adoc:128
#: upstream/_guides/security-openid-connect-dev-services.adoc:142
#, fuzzy, no-wrap
msgid "Dev"
msgstr "デブ"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:40
#, no-wrap
msgid "dev-ui-oidc-keycloak-card.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:43
#, fuzzy
msgid "Click on the `Provider: Keycloak` link and you will see a Keycloak page which will be presented slightly differently depending on how `Dev Services for Keycloak` feature has been configured."
msgstr "`Provider: Keycloak` リンクをクリックすると、Keycloakページが表示されます。このページは、 `Dev Services for Keycloak` 機能の設定方法によって、表示内容が若干異なります。"

#. type: Title ===
#: upstream/_guides/security-openid-connect-dev-services.adoc:44
#, fuzzy, no-wrap
msgid "Testing Service Applications"
msgstr "テストサービスアプリケーション"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:47
#, fuzzy
msgid "By default the Keycloak page can be used to support the development of a link:security-openid-connect[Quarkus OIDC service application]."
msgstr "デフォルトでは、Keycloakページは、 link:security-openid-connect[Quarkus OIDCサービスアプリケーション]の開発をサポートするために使用することができます。"

#. type: Title ====
#: upstream/_guides/security-openid-connect-dev-services.adoc:48
#, fuzzy, no-wrap
msgid "Authorization Code Grant"
msgstr "許諾コード グラント"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:51
#, fuzzy
msgid "If you set `quarkus.keycloak.devservices.grant.type=code` in `applicatin.properties` (this is a default value) then an `authorization_code` grant will be used to acquire both access and ID tokens. Using this grant is recommended to emulate a typical flow where a `Single Page Application` acquires the tokens and uses them to access Quarkus services."
msgstr "`applicatin.properties` に `quarkus.keycloak.devservices.grant.type=code` を設定した場合（これはデフォルト値です）、 `authorization_code` のグラントを使用してアクセストークンと ID トークンの両方を取得します。 `Single Page Application` がトークンを取得し、それを使用してQuarkusのサービスにアクセスするという典型的なフローをエミュレートするには、このグラントの使用が推奨されます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:53
#, fuzzy
msgid "First you will see an option to `Log into Single Page Application`:"
msgstr "まず、 `Log into Single Page Application` というオプションが表示されます。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:54
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:57
#, fuzzy
msgid "Next, after you select this option, you will be redirected to Keycloak to authenticate, example, as `alice:alice` and then returned to the page representing the SPA:"
msgstr "次に、このオプションを選択すると、Keycloakにリダイレクトされ、例えば `alice:alice` のように認証され、その後、SPAを表すページに戻ります。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:58
#, no-wrap
msgid "dev-ui-keycloak-test-service-from-spa.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:61
#, fuzzy
msgid "Here you can test the service with either the access token or ID token (note that the ID token will be sent as a regular bearer token)."
msgstr "ここでは、アクセストークンまたはIDトークンのいずれかを使ってサービスをテストすることができます（IDトークンは通常のベアラートークンとして送信されることに注意してください）。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:63
#, fuzzy
msgid "Finally you can click a `Logged in` option if you'd like to log out and authenticate to Keycloak as a different user."
msgstr "最後に、ログアウトして別のユーザーとしてKeycloakを認証したい場合は、 `Logged in` オプションをクリックします。"

#. type: delimited block =
#: upstream/_guides/security-openid-connect-dev-services.adoc:68
msgid "You may need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work.  Select a `Keycloak Admin` option in the right top corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with and add `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` to `Valid Redirect URIs`."
msgstr ""

#. type: Title ====
#: upstream/_guides/security-openid-connect-dev-services.adoc:70
#, fuzzy, no-wrap
msgid "Implicit Grant"
msgstr "暗黙の了解"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:73
#, fuzzy
msgid "If you set `quarkus.keycloak.devservices.grant.type=implicit` in `applicatin.properties` then an `implicit` grant will be used to acquire both access and ID tokens. Use this grant for emulating a `Single Page Application` only if the authorization code grant does not work (for example, a client is configured in Keycloak to support an implicit grant, etc)."
msgstr "`applicatin.properties` に `quarkus.keycloak.devservices.grant.type=implicit` を設定した場合、アクセストークンと ID トークンの両方を取得するために `implicit` のグラントが使用されます。 `Single Page Application` をエミュレートするためにこのグラントを使うのは、認証コードグラントが機能しない場合のみです(たとえば、Keycloakでクライアントが暗黙のグラントをサポートするように設定されている場合など)。"

#. type: Title ====
#: upstream/_guides/security-openid-connect-dev-services.adoc:74
#, fuzzy, no-wrap
msgid "Password Grant"
msgstr "パスワード付与"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:77
#, fuzzy
msgid "If you set `quarkus.keycloak.devservices.grant.type=password` in `applicatin.properties` then you will see a screen like this one:"
msgstr "`quarkus.keycloak.devservices.grant.type=password` を `applicatin.properties` に設定すると、このような画面が表示されます。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:78
#, no-wrap
msgid "dev-ui-keycloak-password-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:81
#, fuzzy
msgid "Enter a registered user name, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed."
msgstr "登録されているユーザー名、サービスエンドポイントの相対パスを入力し、 `Test Service` をクリックすると、 `200` 、 `403` 、 `401` 、 `404` などのステータスコードが表示されます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:83
#, fuzzy
msgid "You will also see in the Dev UI console something similar to:"
msgstr "また、Dev UIコンソールには以下のようなものが表示されます。"

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:90
#, no-wrap
msgid ""
"2021-07-19 17:58:11,407 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Using password grant to get a token from 'http://localhost:32818/auth/realms/quarkus/protocol/openid-connect/token' for user 'alice' in realm 'quarkus' with client id 'quarkus-app'\n"
"2021-07-19 17:58:11,533 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Test token: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJ6Z2tDazJQZ1JaYnVlVG5kcTFKSW1sVnNoZ2hhbWhtbnBNcXU0QUt5MnJBIn0.ey...\n"
"2021-07-19 17:58:11,536 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Sending token to 'http://localhost:8080/api/admin'\n"
"2021-07-19 17:58:11,674 INFO  [io.qua.oid.dep.dev.key.KeycloakDevConsolePostHandler] (security-openid-connect-quickstart-dev.jar) (DEV Console action) Result: 200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:93
#, fuzzy
msgid "A token is acquired from Keycloak using a `password` grant and is sent to the service endpoint."
msgstr "トークンは、 `password` グラントを使用して Keycloak から取得され、サービスエンドポイントに送信されます。"

#. type: Title ====
#: upstream/_guides/security-openid-connect-dev-services.adoc:94
#, fuzzy, no-wrap
msgid "Client Credentials Grant"
msgstr "クライアントクレデンシャルグラント"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:97
#, fuzzy
msgid "If you set `quarkus.keycloak.devservices.grant.type=client` then a `client_credentials` grant will be used to acquire a token, with the page showing no `User` field in this case:"
msgstr "`quarkus.keycloak.devservices.grant.type=client` を設定すると、 `client_credentials` のグラントがトークンの取得に使用されます。この場合、ページには `User` のフィールドは表示されません。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:98
#, no-wrap
msgid "dev-ui-keycloak-client-credentials-grant.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:101
#, fuzzy
msgid "You can test the service the same way as with the `Password` grant."
msgstr "`Password` の助成金と同じ方法でサービスをテストすることができます。"

#. type: Title ===
#: upstream/_guides/security-openid-connect-dev-services.adoc:102
#, fuzzy, no-wrap
msgid "Developing OpenId Connect Web App Applications"
msgstr "OpenId Connect Web Appアプリケーションの開発"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:105
#, fuzzy
msgid "If you develop a link:security-openid-connect-web-authentication[Quarkus OIDC web-app application] then you should set `quarkus.oidc.application-type=web-app` in `application.properties` before starting the application."
msgstr "link:security-openid-connect-web-authentication[Quarkus OIDCのウェブアプリのアプリケーション]を開発する場合は、アプリケーションを起動する前に、 `application.properties` に `quarkus.oidc.application-type=web-app` を設定する必要があります。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:107
#, fuzzy
msgid "You will see a screen like this one:"
msgstr "このような画面が表示されます。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:108
#, no-wrap
msgid "dev-ui-keycloak-sign-in-to-service.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:111
#, fuzzy
msgid "Set a relative service endpoint path, click on `Sign In To Service` and you will be redirected to Keycloak to enter a username and password in a new browser tab and get a response from the Quarkus application."
msgstr "相対的なサービスエンドポイントのパスを設定し、 `Sign In To Service` をクリックすると、Keycloakにリダイレクトされ、新しいブラウザタブでユーザー名とパスワードを入力し、Quarkusアプリケーションからの応答を得ることができます。"

#. type: Title ===
#: upstream/_guides/security-openid-connect-dev-services.adoc:112
#, fuzzy, no-wrap
msgid "Keycloak Initialization"
msgstr "Keycloakの初期化"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:115
#, fuzzy
msgid "You do not need to configure `quarkus-oidc-keycloak` to start developing your Quarkus Keycloak `OIDC` applications with the only exception being that `quarkus.oidc.application-type=web-app` has to be set in `application.properties` to give the `Keycloak` page a hint it needs to show an option to `Sign In To Service`."
msgstr "Quarkus Keycloak `OIDC` アプリケーションの開発を始めるにあたり、 `quarkus-oidc-keycloak` を設定する必要はありません。唯一の例外は、 `Keycloak` ページに `Sign In To Service` へのオプション表示に必要なヒントを与えるために、 `application.properties` で `quarkus.oidc.application-type=web-app` を設定する必要があることです。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:117
#, fuzzy
msgid "By default, the `quarkus`, `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr "デフォルトでは、 `quarkus` 、 `quarkus-app` クライアント（ `secret` パスワード付き）、 `alice` と `bob` ユーザー（パスワードは名前と一致）、 `user` と `admin` ロールが作成され、 `alice` には `admin` と `user` の両方のロールが与えられ、 `bob` - `user` のロールが与えられます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:119
#, fuzzy
msgid "Usernames, secrets and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains user names and comma separated role values)."
msgstr "ユーザー名、シークレット、およびその役割は、 `quarkus.keycloak.devservices.users` （ユーザー名とシークレットを含むマップ）および `quarkus.keycloak.devservices.roles` （ユーザー名とコンマで区切られた役割の値を含むマップ）でカスタマイズできます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:121
#, fuzzy
msgid "`quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` can be used to customize the client id and secret."
msgstr "`quarkus.oidc.client-id` と `quarkus.oidc.credentials.secret` は、クライアントIDとシークレットをカスタマイズするために使用できます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:123
#, fuzzy
msgid "However it is likely your Keycloak configuration may be more complex and require setting more properties."
msgstr "しかし、あなたのKeycloakの構成はもっと複雑で、より多くのプロパティを設定する必要があるかもしれません。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:125
#, fuzzy
msgid "This is why `quarkus.keycloak.devservices.realm-path` is always checked first before trying to initialize Keycloak with the default or configured realm, client, user and roles properties. If the realm file exists on the file system or classpath then only this realm will be used to initialize Keycloak."
msgstr "これが、デフォルトまたは構成されたレルム、クライアント、ユーザ、およびロールのプロパティでKeycloakを初期化しようとする前に、 `quarkus.keycloak.devservices.realm-path` が常に最初にチェックされる理由です。ファイルシステムまたはクラスパスにレルムファイルが存在する場合、このレルムのみがKeycloakの初期化に使用されます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:127
#, fuzzy
msgid "Also the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` using a `Keycloak Admin` option in the right top corner:"
msgstr "また、Keycloakのページでは、右上の `Keycloak Admin` のオプションを使って、 `Sign In To Keycloak To Configure Realms` 。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:128
#, no-wrap
msgid "dev-ui-keycloak-admin.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:131
#, fuzzy
msgid "Sign in to Keycloak as `admin:admin` in order to further customize the realm properties or create a new realm, export the realm and have Keycloak initialized with the custom realm after a restart."
msgstr "Keycloakに `admin:admin` としてサインインすると、レルムのプロパティをさらにカスタマイズしたり、新しいレルムを作成してレルムをエクスポートし、再起動後にカスタムレルムでKeycloakを初期化することができます。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:133
#, fuzzy
msgid "Note that even if you initialize Keycloak from a realm file, it is still needed to set the `quarkus.keycloak.devservices.realm-name` property for `quarkus.oidc.auth-server-url` to be calculated correctly. Setting the `quarkus.keycloak.devservices.users` property is needed if a `password` grant is used to acquire the tokens to test the OIDC `service` applications."
msgstr "なお、RealmファイルからKeycloakを初期化した場合でも、 `quarkus.oidc.auth-server-url` が正しく計算されるためには、 `quarkus.keycloak.devservices.realm-name` プロパティを設定する必要があります。 `quarkus.keycloak.devservices.users` プロパティの設定は、OIDC `service` アプリケーションをテストするために `password` グラントを使用してトークンを取得する場合に必要です。"

#. type: Title ==
#: upstream/_guides/security-openid-connect-dev-services.adoc:134
#, fuzzy, no-wrap
msgid "Disable Dev Services for Keycloak"
msgstr "KeycloakのDev Servicesを無効にする"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:137
#, fuzzy
msgid "`Dev Services For Keycloak` will not be activated if either `quarkus.oidc.auth-server-url` is already initialized or the defaut OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, irrespectively of whether you work with Keycloak or not."
msgstr "`Dev Services For Keycloak` は、 `quarkus.oidc.auth-server-url` がすでに初期化されているか、 `quarkus.oidc.tenant.enabled=false` で既定の OIDC テナントが無効になっている場合は、Keycloak を使用しているかどうかにかかわらず、有効になりません。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:139
#, fuzzy
msgid "If you prefer not to have a `Dev Services for Keycloak` container started or do not work with Keycloak then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it will only be necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr "`Dev Services for Keycloak` のコンテナを起動させたくない場合や、Keycloak を使用しない場合は、 `quarkus.keycloak.devservices.enabled=false` でこの機能を無効にすることもできます - `quarkus.oidc.auth-server-url` なしで `quarkus:dev` を起動する場合にのみ必要です。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:141
#, fuzzy
msgid "The main Dev UI page will include an empty `OpenId Connect Card` when `Dev Services for Keycloak` is disabled:"
msgstr "`Dev Services for Keycloak` が無効の場合、メインの Dev UI ページには空の `OpenId Connect Card` が表示されます。"

#. type: Target for macro image
#: upstream/_guides/security-openid-connect-dev-services.adoc:142
#, no-wrap
msgid "dev-ui-oidc-card.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-openid-connect-dev-services.adoc:144
#, fuzzy, no-wrap
msgid "Dev Services Support for other OpenId Connect Providers"
msgstr "開発サービス 他のOpenId Connect Providersへの対応"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:147
#, fuzzy
msgid "Your custom extension would need to extend `quarkus-oidc` only and add the dependencies required to support your provider to the extension's `deployment` module only."
msgstr "あなたのカスタムエクステンションは、 `quarkus-oidc` のみを拡張し、あなたのプロバイダをサポートするために必要な依存関係を、エクステンションの `deployment` モジュールのみに追加する必要があります。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:149
#, fuzzy
msgid "The build step dealing with the `Dev Services` should additionally register two runtime properties into the \"io.quarkus.quarkus-oidc\" namespace: `oidcProviderName` (for example, `Google`) and `oidcProviderUrlBase` (for example: `mycompany.devservices-google`) for the `OpenId Connect Card` to link to the Dev UI page representing your provider, for example:"
msgstr "`Dev Services` を扱う構築ステップでは、さらに 2 つのランタイム・プロパティを \"io.quarkus.quarkus-oidc\" 名前空間に登録する必要があります。 `oidcProviderName` (例: `Google`) および `oidcProviderUrlBase` (例: `mycompany.devservices-google`) は、 `OpenId Connect Card` がプロバイダを表す Dev UI ページにリンクするためのものです。"

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:153
#, no-wrap
msgid "package io.quarkus.oidc.okta.runtime;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:155
#, no-wrap
msgid "import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:157
#, no-wrap
msgid "import io.quarkus.runtime.annotations.Recorder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:161
#, no-wrap
msgid ""
"// This simple recorder is the only code which will be located in the extension's `runtime` module\n"
"@Recorder\n"
"public class OktaDevServicesRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:164
#, no-wrap
msgid ""
"    public Supplier<String> getProviderName() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:171
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"OKTA\";\n"
"            }\n"
"        };\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:174
#, no-wrap
msgid ""
"    public Supplier<String> getProviderUrlBase() {\n"
"        return new Supplier<String>() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:182
#, no-wrap
msgid ""
"            @Override\n"
"            public String get() {\n"
"                return \"io.quarkus\" + \".\" + \"quarkus-oidc-okta\";\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:185
#, no-wrap
msgid "package io.quarkus.oidc.okta.deployment.devservices;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:187
#, no-wrap
msgid "import static io.quarkus.deployment.annotations.ExecutionTime.RUNTIME_INIT;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:189
#, no-wrap
msgid "import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:198
#, no-wrap
msgid ""
"import io.quarkus.deployment.IsDevelopment;\n"
"import io.quarkus.deployment.annotations.BuildProducer;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.annotations.Consume;\n"
"import io.quarkus.deployment.annotations.Record;\n"
"import io.quarkus.deployment.builditem.RuntimeConfigSetupCompleteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRouteBuildItem;\n"
"import io.quarkus.devconsole.spi.DevConsoleRuntimeTemplateInfoBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:200
#, no-wrap
msgid "public class OktaDevConsoleProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-openid-connect-dev-services.adoc:214
#, no-wrap
msgid ""
"    @BuildStep(onlyIf = IsDevelopment.class)\n"
"    @Record(value = RUNTIME_INIT)\n"
"    public void setOidcProviderProperties(BuildProducer<DevConsoleRuntimeTemplateInfoBuildItem> provider,\n"
"            OktaDevServicesRecorder recorder,\n"
"            Optional<DevServicesConfigBuildItem> configProps) {\n"
"        if (configProps.isPresent()) {\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderName\",\n"
"                    recorder.getProviderName()));\n"
"            provider.produce(new DevConsoleRuntimeTemplateInfoBuildItem(\"io.quarkus\", \"quarkus-oidc\", \"oidcProviderUrlBase\",\n"
"                    recorder.getProviderUrlBase()));\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:218
#, fuzzy
msgid "Additionally, the extension should produce a `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` to disable the default `Dev Services for Keycloak`, instead of the users having to type `quarkus.keycloak.devservices.enabled=false`."
msgstr "さらに、エクステンションでは、ユーザーが `quarkus.keycloak.devservices.enabled=false` と入力する代わりに、デフォルトの `Dev Services for Keycloak` を無効にする `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` を生成する必要があります。"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:220
#, fuzzy
msgid "Please follow the link:dev-ui[Dev UI] tutorial as well as check the `extensions/oidc/deployment` sources for more ideas."
msgstr "link:dev-ui[Dev UIの]チュートリアルに従うとともに、 `extensions/oidc/deployment` のソースをチェックしてアイデアを増やしてください。"

#. type: Title ==
#: upstream/_guides/security-openid-connect-dev-services.adoc:221
#, fuzzy, no-wrap
msgid "References"
msgstr "リファレンス"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:224
#, fuzzy
msgid "link:dev-ui[Dev UI]"
msgstr "link:dev-ui[Dev UI]"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:225
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak ドキュメント]"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:226
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:227
#, fuzzy
msgid "link:security-openid-connect[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr "link:security-openid-connect[Quarkus - OpenID Connectを使用したベアラートークン認証によるサービスアプリケーションの保護]"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:228
#, fuzzy
msgid "link:security-openid-connect-web-authentication[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr "link:security-openid-connect-web-authentication[Quarkus - OpenID Connectを使用した認証コードフローによるWebアプリケーションの保護]"

#. type: Plain text
#: upstream/_guides/security-openid-connect-dev-services.adoc:228
#, fuzzy
msgid "link:security[Quarkus Security]"
msgstr "link:security[Quarkus Security]"

#, fuzzy
#~ msgid "image::dev-ui-keycloak-sign-in-to-spa.png[alt=Dev UI OpenId Connect Keycloak Page - Log into Single Page Application,role=\"center\"]."
#~ msgstr "image::dev-ui-keycloak-sign-in-to-spa.png[alt=Dev UI OpenId Connect Keycloak Page - Log into Single Page Application,role=\"center\"]."

#, fuzzy
#~ msgid "image::dev-ui-keycloak-test-service-from-spa.png[alt=Dev UI OpenId Connect Keycloak Single Page Application,role=\"center\"]."
#~ msgstr "image::dev-ui-keycloak-test-service-from-spa.png[alt=Dev UI OpenId Connect Keycloak Single Page Application,role=\"center\"]."

#, fuzzy
#~ msgid "image::dev-ui-keycloak-client-credentials-grant.png[alt=Dev UI OpenId Connect Keycloak Page - Client Credentials Grant,role=\"center\"]."
#~ msgstr "image::dev-ui-keycloak-client-credentials-grant.png[alt=Dev UI OpenId Connect Keycloak Page - Client Credentials Grant,role=\"center\"]."

#, fuzzy
#~ msgid "image::dev-ui-keycloak-admin.png[alt=Dev UI OpenId Connect Keycloak Page - Keycloak Admin,role=\"center\"]."
#~ msgstr "image::dev-ui-keycloak-admin.png[alt=Dev UI OpenId Connect Keycloak Page - Keycloak Admin,role=\"center\"]."
