# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-12-22 15:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/resteasy-reactive.adoc:6
#, fuzzy, no-wrap
msgid "Writing REST Services with RESTEasy Reactive"
msgstr "Quarkus - RESTEasy Reactiveを使用したRESTサービスの記述"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:20
#, fuzzy
msgid "This guide explains how to write REST Services with RESTEasy Reactive in Quarkus."
msgstr "このガイドでは、QuarkusでRESTEasy Reactiveを使ってRESTサービスを書く方法を説明します。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:21
#, fuzzy, no-wrap
msgid "What is RESTEasy Reactive?"
msgstr "RESTEasy Reactiveとは?"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:27
#, fuzzy
msgid "RESTEasy Reactive is a new link:{jaxrsspec}[JAX-RS] implementation written from the ground up to work on our common https://vertx.io/[Vert.x] layer and is thus fully reactive, while also being very tightly integrated with Quarkus and consequently moving a lot of work to build time."
msgstr "RESTEasy Reactiveは、共通の link:https://vertx.io/[Vert.x] レイヤーで動作するように一から書かれた新しい link:{jaxrsspec}[JAX-RSの] 実装で、完全にリアクティブであると同時に、Quarkusと緊密に統合されており、結果的に多くの作業をビルド時間に移すことができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:31
#, fuzzy
msgid "You should be able to use it in place of any JAX-RS implementation, but on top of that it has great performance for both blocking and non-blocking endpoints, and a lot of new features on top of what JAX-RS provides."
msgstr "JAX-RSの実装の代わりに使用できるようにすべきですが、その上で、ブロッキングとノンブロッキングのエンドポイントの両方で優れたパフォーマンスを発揮し、JAX-RSが提供するものの上に多くの新機能を搭載しています。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:32
#, fuzzy, no-wrap
msgid "Writing endpoints"
msgstr "エンドポイントの記述"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:34
#, fuzzy, no-wrap
msgid "Getting started"
msgstr "始めるには"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:37
#, fuzzy
msgid "Add the following import to your `pom.xml` file:"
msgstr "`pom.xml` ファイルに以下のインポートを追加します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:44
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:47
#, fuzzy
msgid "You can now write your first endpoint in the `org.acme.rest.Endpoint` class:"
msgstr "これで、 `org.acme.rest.Endpoint` クラスの最初のエンドポイントが書けるようになりました。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:51
#: upstream/_guides/resteasy-reactive.adoc:91
#: upstream/_guides/resteasy-reactive.adoc:113
#: upstream/_guides/resteasy-reactive.adoc:165
#: upstream/_guides/resteasy-reactive.adoc:273
#: upstream/_guides/resteasy-reactive.adoc:325
#: upstream/_guides/resteasy-reactive.adoc:564
#: upstream/_guides/resteasy-reactive.adoc:607
#: upstream/_guides/resteasy-reactive.adoc:641
#: upstream/_guides/resteasy-reactive.adoc:677
#: upstream/_guides/resteasy-reactive.adoc:716
#: upstream/_guides/resteasy-reactive.adoc:824
#: upstream/_guides/resteasy-reactive.adoc:849
#: upstream/_guides/resteasy-reactive.adoc:877
#: upstream/_guides/resteasy-reactive.adoc:941
#: upstream/_guides/resteasy-reactive.adoc:976
#: upstream/_guides/resteasy-reactive.adoc:1172
#: upstream/_guides/resteasy-reactive.adoc:1198
#: upstream/_guides/resteasy-reactive.adoc:1239
#: upstream/_guides/resteasy-reactive.adoc:1272
#: upstream/_guides/resteasy-reactive.adoc:1335
#: upstream/_guides/resteasy-reactive.adoc:1515
#: upstream/_guides/resteasy-reactive.adoc:1549
#: upstream/_guides/resteasy-reactive.adoc:1613
#: upstream/_guides/resteasy-reactive.adoc:1667
#: upstream/_guides/resteasy-reactive.adoc:1692
#: upstream/_guides/resteasy-reactive.adoc:1744
#: upstream/_guides/resteasy-reactive.adoc:1847
#: upstream/_guides/resteasy-reactive.adoc:1972
#, no-wrap
msgid "package org.acme.rest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:54
#: upstream/_guides/resteasy-reactive.adoc:94
#: upstream/_guides/resteasy-reactive.adoc:328
#: upstream/_guides/resteasy-reactive.adoc:614
#: upstream/_guides/resteasy-reactive.adoc:644
#: upstream/_guides/resteasy-reactive.adoc:979
#: upstream/_guides/resteasy-reactive.adoc:1175
#: upstream/_guides/resteasy-reactive.adoc:1203
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:57
#: upstream/_guides/resteasy-reactive.adoc:179
#: upstream/_guides/resteasy-reactive.adoc:579
#: upstream/_guides/resteasy-reactive.adoc:617
#, no-wrap
msgid ""
"@Path(\"\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:63
#, no-wrap
msgid ""
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:65
#, fuzzy, no-wrap
msgid "Terminology"
msgstr "専門用語"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:67
#, fuzzy, no-wrap
msgid "REST"
msgstr "REST"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:68
#, fuzzy
msgid "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"
msgstr "link:https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:68
#, fuzzy, no-wrap
msgid "Endpoint"
msgstr "終点"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:69
#, fuzzy
msgid "Java method which is called to serve a REST call"
msgstr "RESTコールを提供するために呼び出されるJavaメソッド"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:69
#, fuzzy, no-wrap
msgid "URL / URI (Uniform Resource Locator / Identifier)"
msgstr "URL / URI (Uniform Resource Locator / Identifier)"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:70
#, fuzzy
msgid "Used to identify the location of REST resources (https://tools.ietf.org/html/rfc7230#section-2.7[specification])"
msgstr "RESTリソースの位置を特定するために使用される link:https://tools.ietf.org/html/rfc7230#section-2.7[(仕様]"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:70
#, fuzzy, no-wrap
msgid "Resource"
msgstr "リソース"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:71
#, fuzzy
msgid "Represents your domain object. This is what your API serves and modifies. Also called an `entity` in JAX-RS."
msgstr "ドメインオブジェクトを表します。これは、APIがサービスを提供し、変更するものです。JAX-RSでは `entity` とも呼ばれます。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:71
#, fuzzy, no-wrap
msgid "Representation"
msgstr "表現"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:72
#, fuzzy
msgid "How your resource is represented on the wire, can vary depending on content types"
msgstr "リソースの表示方法は、コンテンツの種類によって異なります。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:72
#, fuzzy, no-wrap
msgid "Content type"
msgstr "コンテンツの種類"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:73
#, fuzzy
msgid "Designates a particular representation (also called a media type), for example `text/plain` or `application/json`"
msgstr "`text/plain` 特定の表現(メディアタイプとも呼ばれる)を指定します。 `application/json`"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:73
#, fuzzy, no-wrap
msgid "HTTP"
msgstr "HTTP"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:74
#, fuzzy
msgid "Underlying wire protocol for routing REST calls (see https://tools.ietf.org/html/rfc7230[HTTP specifications])"
msgstr "REST コールをルーティングするための基盤となるワイヤプロトコル ( link:https://tools.ietf.org/html/rfc7230[HTTP 仕様を] 参照)"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:74
#, fuzzy, no-wrap
msgid "HTTP request"
msgstr "HTTP要求"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:75
#, fuzzy
msgid "the request part of the HTTP call, consisting of an HTTP method, a target URI, headers and an optional message body"
msgstr "HTTP メソッド、ターゲット URI、ヘッダ、オプションのメッセージボディからなる HTTP 呼び出しのリクエスト部分。"

#. type: Labeled list
#: upstream/_guides/resteasy-reactive.adoc:75
#, fuzzy, no-wrap
msgid "HTTP response"
msgstr "HTTP応答"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:76
#, fuzzy
msgid "the response part of the HTTP call, consisting of an HTTP response status, headers and an optional message body"
msgstr "HTTP レスポンスステータス、ヘッダ、オプションのメッセージボディで構成されます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:77
#, fuzzy, no-wrap
msgid "Declaring endpoints: URI mapping"
msgstr "エンドポイントの宣言URI のマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:81
#, fuzzy
msgid "Any class annotated with a link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation can have its methods exposed as REST endpoints, provided they have an HTTP method annotation (see below)."
msgstr "でアノテーションされたクラスは link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] アノテーションは、HTTP メソッドアノテーションを持っていれば、そのメソッドを REST エンドポイントとして公開することができます (下記参照)。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:84
#, fuzzy
msgid "That link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation defines the URI prefix under which those methods will be exposed. It can be empty, or contain a prefix such as `rest` or `rest/V1`."
msgstr "それは link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] アノテーションは、それらのメソッドが公開される URI プレフィックスを定義します。空でもよいし、 `rest` や `rest/V1` ."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:87
#, fuzzy
msgid "Each exposed endpoint method can in turn have another link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation which adds to its containing class annotation. For example, this defines a `rest/hello` endpoint:"
msgstr "公開された各エンドポイントメソッドは、それぞれ別の link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] アノテーションを使用して、それを含むクラスアノテーションに追加することができます。例えば、これは `rest/hello` エンドポイントを定義しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:97
#, no-wrap
msgid ""
"@Path(\"rest\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:104
#, no-wrap
msgid ""
"    @Path(\"hello\")\n"
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:107
#, fuzzy
msgid "See <<uri-parameters,URI parameters>> for more information about URI mapping."
msgstr "URIマッピングの詳細については、URI link:#uri-parameters[パラメーターを] 参照してください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:109
#, fuzzy
msgid "You can set the root path for all rest endpoints using the `@ApplicationPath` annotation, as shown below."
msgstr "以下に示すように、 `@ApplicationPath` アノテーションを使用して、すべてのレストエンドポイントのルートパスを設定することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:116
#, no-wrap
msgid ""
"import javax.ws.rs.ApplicationPath;\n"
"import javax.ws.rs.core.Application;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:119
#, no-wrap
msgid ""
"@ApplicationPath(\"/api\")\n"
"public static class MyApplication extends Application {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:121
#: upstream/_guides/resteasy-reactive.adoc:1603
#: upstream/_guides/resteasy-reactive.adoc:1771
#: upstream/_guides/resteasy-reactive.adoc:1786
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:126
#, fuzzy
msgid "This will cause all rest endpoints to be resolve relative to `/api`, so the endpoint above with `@Path(\"rest\")` would be accessible at `/api/rest/. You can also set the `quarkus.rest.path` build time property to set the root path if you don't want to use an annotation."
msgstr "これにより、すべての残りのエンドポイントが `/api` に相対的に解決されるようになります。したがって、上記の `@Path(\"rest\")` を持つエンドポイントは `/api/rest/. You can also set the `quarkus.rest.path` でアクセスできるようになります。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:127
#, fuzzy, no-wrap
msgid "Declaring endpoints: HTTP methods"
msgstr "エンドポイントの宣言HTTP メソッド"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:131
#, fuzzy
msgid "Each endpoint method must be annotated with one of the following annotations, which defines which HTTP method will be mapped to the method:"
msgstr "各エンドポイントメソッドには、以下のいずれかのアノテーションを付ける必要があり、どの HTTP メソッドがメソッドにマッピングされるかを定義します。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:132
#, fuzzy, no-wrap
msgid "Table HTTP method annotations"
msgstr "表 HTTP メソッドのアノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:134
#: upstream/_guides/resteasy-reactive.adoc:224
#, fuzzy, no-wrap
msgid "Annotation"
msgstr "アノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:136
#: upstream/_guides/resteasy-reactive.adoc:226
#: upstream/_guides/resteasy-reactive.adoc:360
#: upstream/_guides/resteasy-reactive.adoc:534
#: upstream/_guides/resteasy-reactive.adoc:775
#: upstream/_guides/resteasy-reactive.adoc:912
#: upstream/_guides/resteasy-reactive.adoc:1118
#: upstream/_guides/resteasy-reactive.adoc:1355
#: upstream/_guides/resteasy-reactive.adoc:1372
#: upstream/_guides/resteasy-reactive.adoc:1460
#: upstream/_guides/resteasy-reactive.adoc:1480
#, fuzzy, no-wrap
msgid "Usage"
msgstr "使用方法"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:137
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/GET.html[`@GET`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/GET.html[`@GET`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:139
#, fuzzy, no-wrap
msgid "Obtain a resource representation, should not modify state, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.1[HTTP docs])"
msgstr "リソース表現を取得し、状態を変更してはいけません link:{httpspec}#section-4.3.1[。]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:140
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/HEAD.html[`@HEAD`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/HEAD.html[`@HEAD`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:142
#, fuzzy, no-wrap
msgid "Obtain metadata about a resource, similar to `GET` with no body (link:{httpspec}#section-4.3.2[HTTP docs])"
msgstr "`GET` と同様に、リソースに関するメタデータを取得します link:{httpspec}#section-4.3.2[。]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:143
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/POST.html[`@POST`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/POST.html[`@POST`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:145
#, fuzzy, no-wrap
msgid "Create a resource and obtain a link to it (link:{httpspec}#section-4.3.3[HTTP docs])"
msgstr "リソースを作成してリンクを取得する link:{httpspec}#section-4.3.3[(HTTP] ドキュメント)"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:146
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PUT.html[`@PUT`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/PUT.html[`@PUT`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:148
#, fuzzy, no-wrap
msgid "Replace a resource or create one, should be link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.4[HTTP docs])"
msgstr "リソースを置き換えるか作成します。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:149
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/DELETE.html[`@DELETE`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/DELETE.html[`@DELETE`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:151
#, fuzzy, no-wrap
msgid "Delete an existing resource, link:{httpspec}#section-4.2.2[idempotent]  (link:{httpspec}#section-4.3.5[HTTP docs])"
msgstr "既存のリソースを削除します link:{httpspec}#section-4.3.5[。]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:152
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/OPTIONS.html[`@OPTIONS`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/OPTIONS.html[`@OPTIONS`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:154
#, fuzzy, no-wrap
msgid "Obtain information about a resource, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.7[HTTP docs])"
msgstr "リソースに関する情報を取得する、 link:{httpspec}#section-4.2.2[idempotent] link:{httpspec}#section-4.3.7[(HTTP docs] )"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:155
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PATCH.html[`@PATCH`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/PATCH.html[`@PATCH`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:157
#, fuzzy, no-wrap
msgid "Update a resource, or create one, not link:{httpspec}#section-4.2.2[idempotent] (https://tools.ietf.org/html/rfc5789#section-2[HTTP docs])"
msgstr "リソースを更新したり、作成したりします link:https://tools.ietf.org/html/rfc5789#section-2[。]"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:161
#, fuzzy
msgid "You can also declare other HTTP methods by declaring them as an annotation with the link:{jaxrsapi}/javax/ws/rs/HttpMethod.html[`@HttpMethod`] annotation:"
msgstr "また、他のHTTPメソッドを宣言するには、それらを link:{jaxrsapi}/javax/ws/rs/HttpMethod.html[`@HttpMethod`] アノテーションを使用しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:168
#, no-wrap
msgid ""
"import java.lang.annotation.Retention;\n"
"import java.lang.annotation.RetentionPolicy;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:171
#, no-wrap
msgid ""
"import javax.ws.rs.HttpMethod;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:176
#, no-wrap
msgid ""
"@Retention(RetentionPolicy.RUNTIME)\n"
"@HttpMethod(\"FROMAGE\")\n"
"@interface FROMAGE {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:185
#, no-wrap
msgid ""
"    @FROMAGE\n"
"    public String hello() {\n"
"        return \"Hello, Cheese World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:187
#, fuzzy, no-wrap
msgid "Declaring endpoints: representation / content types"
msgstr "エンドポイントの宣言:表現/コンテンツタイプ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:192
#, fuzzy
msgid "Each endpoint method may consume or produce specific resource representations, which are indicated by the HTTP link:{httpspec}#section-3.1.1.5[`Content-Type`] header, which in turn contains link:{httpspec}#section-3.1.1.1[MIME (Media Type)] values, such as the following:"
msgstr "各エンドポイントメソッドは、特定のリソース表現を消費したり生成したりすることができます。 link:{httpspec}#section-3.1.1.5[`Content-Type`] ヘッダには、次のような link:{httpspec}#section-3.1.1.1[MIME (Media Type)] 値が含まれています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:194
#, fuzzy
msgid "`text/plain` which is the default for any endpoint returning a `String`."
msgstr "`text/plain` は、 `String` を返すエンドポイントのデフォルトです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:195
#, fuzzy
msgid "`text/html` for HTML (such as with xref:qute.adoc[Qute templating])"
msgstr "`text/html` ( link:qute[Qute] のテンプレートを使用した場合など) HTML の場合"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:196
#, fuzzy
msgid "`application/json` for a <<json,JSON REST endpoint>>"
msgstr "`application/json` link:#json[JSON REST エンドポイント] については"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:197
#, fuzzy
msgid "`text/*` which is a sub-type wildcard for any text media type"
msgstr "`text/*` は、あらゆるテキストメディアタイプのサブタイプワイルドカードです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:198
#, fuzzy
msgid "`\\*/*` which is a wildcard for any media type"
msgstr "`*/*` は、あらゆるメディアタイプのためのワイルドカードです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:203
#, fuzzy
msgid "You may annotate your endpoint class with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, which allow you to specify one or more media types that your endpoint may accept as HTTP request body or produce as HTTP response body. Those class annotations apply to each method."
msgstr "エンドポイントクラスには link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] 或いは link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] このアノテーションを使用すると、エンドポイントが HTTP リクエスト・ボディとして受け入れたり、HTTP レスポンス・ボディとして生成したりする 1 つ以上のメディア・タイプを指定できます。これらのクラスアノテーションは各メソッドに適用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:207
#, fuzzy
msgid "Any method may also be annotated with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, in which case they override any eventual class annotation."
msgstr "任意のメソッドには link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] 或いは link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] アノテーションの場合は、最終的なクラスのアノテーションを上書きします。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:210
#, fuzzy
msgid "The link:{jaxrsapi}/javax/ws/rs/core/MediaType.html[`MediaType`] class has many constants you can use to point to specific pre-defined media types."
msgstr "仝 link:{jaxrsapi}/javax/ws/rs/core/MediaType.html[`MediaType`] クラスには、あらかじめ定義された特定のメディアタイプを指すために使用できる多くの定数があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:212
#, fuzzy
msgid "See <<negotiation>> for more information."
msgstr "詳しくは link:#negotiation[[ネゴシエーション]] をご覧ください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:213
#, fuzzy, no-wrap
msgid "Accessing request parameters"
msgstr "リクエストパラメーターへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:219
#, fuzzy
msgid "don't forget to configure your compiler to generate parameter name information with `-parameters` (javac)  or `<parameters>` or `<maven.compiler.parameters>` (https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[Maven])."
msgstr "`-parameters` (javac) または `<parameters>` または `<maven.compiler.parameters>` link:https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[(Maven] ) でパラメーター名情報を生成するようにコンパイラを設定することを忘れないでください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:221
#, fuzzy
msgid "The following HTTP request elements may be obtained by your endpoint method:"
msgstr "以下の HTTP リクエスト要素は、エンドポイントメソッドで取得することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:222
#, fuzzy, no-wrap
msgid "Table HTTP request parameter annotations"
msgstr "表 HTTP リクエストパラメーターのアノテーション"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:224
#, fuzzy, no-wrap
msgid "HTTP element"
msgstr "HTTP要素"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:227
#, fuzzy, no-wrap
msgid "[[path-parameter]]Path parameter"
msgstr "link:[, id=\"path-parameter\"] パスパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:228
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] (or nothing)"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`](または何もしない)"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:231
#, fuzzy, no-wrap
msgid ""
"URI template parameter (simplified version of the https://tools.ietf.org/html/rfc6570[URI Template specification]), \n"
"see <<uri-parameters,URI parameters>> for more information."
msgstr "URIテンプレートパラメーター( link:https://tools.ietf.org/html/rfc6570[URIテンプレート仕様の] 簡易版)、詳細は link:#uri-parameters[URIパラメーターを] 参照してください。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:232
#, fuzzy, no-wrap
msgid "Query parameter"
msgstr "クエリパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:233
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestQuery.html[`@RestQuery`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:235
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.4[URI query parameter]"
msgstr "link:https://tools.ietf.org/html/rfc3986#section-3.4[URI クエリパラメーターの] 値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:236
#, fuzzy, no-wrap
msgid "Header"
msgstr "ヘッダー"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:237
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestHeader.html[`@RestHeader`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:239
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc7230#section-3.2[HTTP header]"
msgstr "link:https://tools.ietf.org/html/rfc7230#section-3.2[HTTPヘッダ] の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:240
#, fuzzy, no-wrap
msgid "Cookie"
msgstr "クッキー"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:241
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestCookie.html[`@RestCookie`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:243
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc6265#section-4.2[HTTP cookie]"
msgstr "link:https://tools.ietf.org/html/rfc6265#section-4.2[HTTPクッキー] の値"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:244
#, fuzzy, no-wrap
msgid "Form parameter"
msgstr "フォームパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:245
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:247
#, fuzzy, no-wrap
msgid "The value of an https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL-encoded FORM]"
msgstr "link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL エンコードされた FORM の] 値。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:248
#, fuzzy, no-wrap
msgid "Matrix parameter"
msgstr "マトリックスパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:249
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestMatrix.html[`@RestMatrix`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:251
#, fuzzy, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.3[URI path segment parameter]"
msgstr "link:https://tools.ietf.org/html/rfc3986#section-3.3[URIパスセグメントパラメーターの] 値"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:255
#, fuzzy
msgid "For each of those annotations, you may specify the name of the element they refer to, otherwise they will use the name of the annotated method parameter."
msgstr "これらのアノテーションのそれぞれについて、参照する要素の名前を指定することができますが、そうでない場合は、アノテーションされたメソッド・パラメーターの名前が使用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:257
#, fuzzy
msgid "If a client made the following HTTP call:"
msgstr "クライアントが以下のHTTPコールを行った場合。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:264
#, no-wrap
msgid ""
"POST /cheeses;variant=goat/tomme?age=matured HTTP/1.1\n"
"Content-Type: application/x-www-form-urlencoded\n"
"Cookie: level=hardcore\n"
"X-Cheese-Secret-Handshake: fist-bump\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:266
#, no-wrap
msgid "smell=strong\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:269
#, fuzzy
msgid "Then you could obtain all the various parameters with this endpoint method:"
msgstr "そうすれば、このエンドポイントメソッドで様々なパラメーターをすべて取得することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:276
#, no-wrap
msgid ""
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:283
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.RestCookie;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.RestHeader;\n"
"import org.jboss.resteasy.reactive.RestMatrix;\n"
"import org.jboss.resteasy.reactive.RestPath;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:286
#, no-wrap
msgid ""
"@Path(\"/cheeses/{type}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:298
#, no-wrap
msgid ""
"    @POST\n"
"    public String allParams(@RestPath String type,\n"
"                            @RestMatrix String variant,\n"
"                            @RestQuery String age,\n"
"                            @RestCookie String level,\n"
"                            @RestHeader(\"X-Cheese-Secret-Handshake\")\n"
"                            String secretHandshake,\n"
"                            @RestForm String smell) {\n"
"        return type + \"/\" + variant + \"/\" + age + \"/\" + level + \"/\" + secretHandshake + \"/\" + smell;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:303
#, fuzzy
msgid "the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`] annotation is optional: any parameter whose name matches an existing URI template variable will be automatically assumed to have link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestPath.html[`@RestPath`]."
msgstr "`@RestPath` アノテーションはオプションです: 名前が既存のURIテンプレート変数にマッチするパラメーターは自動的に `@RestPath` ."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:311
#, fuzzy
msgid "You can also use any of the JAX-RS annotations link:{jaxrsapi}/javax/ws/rs/PathParam.html[`@PathParam`], link:{jaxrsapi}/javax/ws/rs/QueryParam.html[`@QueryParam`], link:{jaxrsapi}/javax/ws/rs/HeaderParam.html[`@HeaderParam`], link:{jaxrsapi}/javax/ws/rs/CookieParam.html[`@CookieParam`], link:{jaxrsapi}/javax/ws/rs/FormParam.html[`@FormParam`] or link:{jaxrsapi}/javax/ws/rs/MatrixParam.html[`@MatrixParam`] for this, but they require you to specify the parameter name."
msgstr "JAX-RS アノテーションのいずれかを使用することもできます。 link:{jaxrsapi}/javax/ws/rs/PathParam.html[`@PathParam`] , link:{jaxrsapi}/javax/ws/rs/QueryParam.html[`@QueryParam`] , link:{jaxrsapi}/javax/ws/rs/HeaderParam.html[`@HeaderParam`] , link:{jaxrsapi}/javax/ws/rs/CookieParam.html[`@CookieParam`] , link:{jaxrsapi}/javax/ws/rs/FormParam.html[`@FormParam`] 或いは link:{jaxrsapi}/javax/ws/rs/MatrixParam.html[`@MatrixParam`] を使用することができますが、パラメーター名を指定する必要があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:313
#, fuzzy
msgid "See <<parameter-mapping>> for more advanced use-cases."
msgstr "より高度な使用例については、 link:#parameter-mapping[[パラメーターマッピング]を] 参照してください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:314
#, fuzzy, no-wrap
msgid "Declaring URI parameters"
msgstr "URIパラメーターの宣言"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:321
#, fuzzy
msgid "You can declare URI parameters and use regular expressions in your path, so for instance the following endpoint will serve requests for `/hello/stef/23` and `/hello` but not `/hello/stef/0x23`:"
msgstr "URI パラメーターを宣言し、パスで正規表現を使用することができます。例えば、以下のエンドポイントは `/hello/stef/23` と `/hello` のリクエストには応答しますが、 `/hello/stef/0x23` は応答しません。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:331
#: upstream/_guides/resteasy-reactive.adoc:1816
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:337
#, no-wrap
msgid ""
"    @Path(\"{name}/{age:\\\\d+}\")\n"
"    @GET\n"
"    public String personalisedHello(String name, int age) {\n"
"        return \"Hello \" + name + \" is your age really \" + age + \"?\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:343
#, no-wrap
msgid ""
"    @GET\n"
"    public String genericHello() {\n"
"        return \"Hello stranger\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:346
#, fuzzy, no-wrap
msgid "Accessing the request body"
msgstr "リクエストボディへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:351
#, fuzzy
msgid "Any method parameter with no annotation will receive the method body.footnote:[Unless it is a <<path-parameter,URI template parameter>> or a <<context-objects,context object>>.], after it has been mapped from its HTTP representation to the Java type of the parameter."
msgstr "アノテーションのないメソッド・パラメーターは、メソッド本体を受け取ります。HTTP 表現からパラメーターの Java 型にマップされた後に、[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", role=\"footnote\", title=\"View footnote.\"]] を受け取ります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:353
#, fuzzy
msgid "The following parameter types will be supported out of the box:"
msgstr "以下のパラメータータイプがサポートされます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:356
#, fuzzy, no-wrap
msgid "Table Request body parameter type"
msgstr "表 リクエストボディパラメーターの種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:358
#: upstream/_guides/resteasy-reactive.adoc:532
#: upstream/_guides/resteasy-reactive.adoc:773
#: upstream/_guides/resteasy-reactive.adoc:1353
#: upstream/_guides/resteasy-reactive.adoc:1370
#: upstream/_guides/resteasy-reactive.adoc:1458
#: upstream/_guides/resteasy-reactive.adoc:1478
#, fuzzy, no-wrap
msgid "Typ"
msgstr "タイプ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:361
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/File.html[`File`]"
msgstr "link:{jdkapi}/java/io/File.html[`File`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:363
#, fuzzy, no-wrap
msgid "The entire request body in a temporary file"
msgstr "テンポラリファイル内のリクエスト全体"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:364
#, fuzzy, no-wrap
msgid "`byte[]`"
msgstr "`byte[]`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:366
#, fuzzy, no-wrap
msgid "The entire request body, not decoded"
msgstr "デコードされたものではなく、リクエスト本体全体"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:367
#, fuzzy, no-wrap
msgid "`char[]`"
msgstr "`char[]`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:369
#: upstream/_guides/resteasy-reactive.adoc:372
#, fuzzy, no-wrap
msgid "The entire request body, decoded"
msgstr "リクエストボディ全体をデコードしたもの"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:370
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/lang/String.html[`String`]"
msgstr "link:{jdkapi}/java/lang/String.html[`String`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:373
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"
msgstr "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:375
#: upstream/_guides/resteasy-reactive.adoc:378
#, fuzzy, no-wrap
msgid "The request body in a blocking stream"
msgstr "ブロッキングストリーム内のリクエストボディ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:376
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/io/Reader.html[`Reader`]"
msgstr "link:{jdkapi}/java/io/Reader.html[`Reader`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:379
#, fuzzy, no-wrap
msgid "All Java primitives and their wrapper classes"
msgstr "すべてのJavaプリミティブとそのラッパークラス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:381
#, fuzzy, no-wrap
msgid "Java primitive types"
msgstr "ジャワプリミティブ型"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:382
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`], link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"
msgstr "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`] , link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:384
#, fuzzy, no-wrap
msgid "Large integers and decimals."
msgstr "大きな整数と小数。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:386
#, fuzzy, no-wrap
msgid ""
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonArray`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonObject`],\n"
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonStructure`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonValue`]"
msgstr "link:{jsonpapi}/javax/json/JsonArray.html[`JsonArray`] , link:{jsonpapi}/javax/json/JsonArray.html[`JsonObject`] , link:{jsonpapi}/javax/json/JsonArray.html[`JsonStructure`] , link:{jsonpapi}/javax/json/JsonArray.html[`JsonValue`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:388
#, fuzzy, no-wrap
msgid "JSON value types"
msgstr "JSON 値の型"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:389
#, fuzzy, no-wrap
msgid "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"
msgstr "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:391
#, fuzzy, no-wrap
msgid "Vert.x Buffer"
msgstr "Vert.x バッファ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:392
#, fuzzy, no-wrap
msgid "any other type"
msgstr "他の種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:394
#, fuzzy, no-wrap
msgid "Will be <<json,mapped from JSON to that type>>"
msgstr "link:#json[JSONからその型にマッピングされ] ます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:397
#, fuzzy
msgid "You can add support for more <<readers-writers,body parameter types>>."
msgstr "より多くの link:#readers-writers[ボディパラメータータイプの] サポートを追加することができます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:398
#, fuzzy, no-wrap
msgid "Handling Multipart Form data"
msgstr "マルチパートフォームデータの取り扱い"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:403
#, fuzzy
msgid "To handle HTTP requests that have `multipart/form-data` as their content type, RESTEasy Reactive introduces the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`] annotation.  Let us look at an example of its use."
msgstr "コンテンツタイプとして `multipart/form-data` を持つ HTTP リクエストを処理するために、RESTEasy Reactive では `@org.jboss.resteasy.reactive.MultipartForm` アノテーションを導入しています。その使用例を見てみましょう。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:406
#, fuzzy
msgid "Assuming an HTTP request containing a file upload and a form value containing a string description need to be handled, we could write a POJO that will hold this information like so:"
msgstr "ファイルのアップロードを含むHTTPリクエストと、文字列の説明を含むフォーム値を処理する必要があると仮定すると、この情報を保持するPOJOを次のように書くことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:410
#: upstream/_guides/resteasy-reactive.adoc:481
#, no-wrap
msgid "import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:414
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.PartType;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.multipart.FileUpload;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:416
#, no-wrap
msgid "public class FormData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:420
#, no-wrap
msgid ""
"    @RestForm\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:424
#, no-wrap
msgid ""
"    @RestForm(\"image\")\n"
"    public FileUpload file;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:429
#, fuzzy
msgid "The `name` field will contain the data contained in the part of HTTP request called `description` (because link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] does not define a value, the field name is used), while the `file` field will contain data about the uploaded file in the `image` part of HTTP request."
msgstr "`name` フィールドには、HTTP リクエストの `description` と呼ばれる部分に含まれるデータが格納され（ `@RestForm` では値が定義されていないため、フィールド名が使用されます）、 `file` フィールドには、HTTP リクエストの `image` の部分にアップロードされたファイルに関するデータが格納されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:432
#, fuzzy
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/multipart/FileUpload.html[`FileUpload`] provides access to various metadata of the uploaded file. If however all you need is a handle to the uploaded file, `java.nio.file.Path` or `java.io.File` could be used."
msgstr "`FileUpload` は、アップロードされたファイルの様々なメタデータへのアクセスを提供します。しかし、アップロードされたファイルのハンドルだけが必要な場合は、 `java.nio.file.Path` や `java.io.File` を使用することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:434
#, fuzzy
msgid "When access to all uploaded files without specifying the form names is needed, RESTEasy Reactive allows the use of `@RestForm List<FileUpload>`, where it is important to **not** set a name for the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestForm.html[`@RestForm`] annotation."
msgstr "フォーム名を指定せずにアップロードされたすべてのファイルにアクセスする必要がある場合、RESTEasy Reactiveでは、 `@RestForm List&amp;lt;FileUpload&amp;gt;` を使用することができます。ここでは、 `@RestForm` の注釈に名前を設定し *ない*ことが重要です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:438
#, fuzzy
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PartType.html[`@PartType`] is used to aid in deserialization of the corresponding part of the request into the desired Java type. It is very useful when for example the corresponding body part is JSON and needs to be converted to a POJO."
msgstr "`@PartType` は、リクエストの対応する部分を希望の Java 型にデシリアライズするのを助けるために使用されます。例えば、対応するボディ部分がJSONで、POJOに変換する必要がある場合などに非常に便利です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:440
#, fuzzy
msgid "This POJO could be used in a Resource method like so:"
msgstr "このPOJOは、このようにResourceメソッドで使うことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:448
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:450
#, no-wrap
msgid "import org.jboss.resteasy.reactive.MultipartForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:453
#: upstream/_guides/resteasy-reactive.adoc:507
#, no-wrap
msgid ""
"@Path(\"multipart\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:462
#, no-wrap
msgid ""
"    @POST\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Path(\"form\")\n"
"    public String form(@MultipartForm FormData formData) {\n"
"        // return something\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:466
#, fuzzy
msgid "The use of link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/MultipartForm.html[`@MultipartForm`] as method parameter makes RESTEasy Reactive handle the request as a multipart form request."
msgstr "メソッドパラメータとして `@MultipartForm` を使用することで、RESTEasy Reactive はリクエストをマルチパートフォームのリクエストとして処理します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:468
#, fuzzy
msgid "The use of `@MultipartForm` is actually unnecessary as RESTEasy Reactive can infer this information from the use of `@Consumes(MediaType.MULTIPART_FORM_DATA)`"
msgstr "`@MultipartForm` の使用は実際には不要で、RESTEasy Reactive がこの情報を推測して `@Consumes(MediaType.MULTIPART_FORM_DATA)`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:474
#, fuzzy
msgid "When handling file uploads, it is very important to move the file to permanent storage (like a database, a dedicated file system or a cloud storage) in your code that handles the POJO.  Otherwise, the file will no longer be accessible when the request terminates.  Moreoever if `quarkus.http.body.delete-uploaded-files-on-end` is set to true, Quarkus will delete the uploaded file when the HTTP response is sent. If the setting is disabled, the file will reside on the file system of the server (in the directory defined by the `quarkus.http.body.uploads-directory` configuration option), but as the uploaded files are saved with a UUID file name and no additional metadata is saved, these files are essentially a random dump of files."
msgstr "ファイルのアップロードを扱う際には、POJOを扱うコードの中でファイルを恒久的なストレージ（データベース、専用のファイルシステム、クラウドストレージなど）に移動させることが非常に重要です。そうしないと、リクエストが終了したときにファイルにアクセスできなくなります。また、 `quarkus.http.body.delete-uploaded-files-on-end` をtrueに設定すると、HTTP応答が送信されたときにアップロードされたファイルが削除されます。この設定を無効にすると、ファイルはサーバーのファイルシステム（ `quarkus.http.body.uploads-directory` 設定オプションで定義されたディレクトリ）に存在しますが、アップロードされたファイルはUUIDファイル名で保存され、追加のメタデータは保存されないため、これらのファイルは基本的にファイルのランダムダンプになります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:477
#, fuzzy
msgid "Similarly, RESTEasy Reactive can produce Multipart Form data to allow users download files from the server. For example, we could write a POJO that will hold the information we want to expose as:"
msgstr "同様に、RESTEasy Reactiveでは、ユーザーがサーバーからファイルをダウンロードできるように、マルチパートのフォームデータを生成することができます。例えば、公開したい情報を保持するPOJOを、次のように書くことができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:484
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.PartType;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:486
#, no-wrap
msgid "public class DownloadFormData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:489
#, no-wrap
msgid ""
"    @RestForm\n"
"    String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:494
#, no-wrap
msgid ""
"    @RestForm\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    File file;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:497
#, fuzzy
msgid "And then expose this POJO via a Resource like so:"
msgstr "そして、このPOJOをResource経由で公開します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:504
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:515
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.MULTIPART_FORM_DATA)\n"
"    @Path(\"file\")\n"
"    public DownloadFormData getFile() {\n"
"        // return something\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:518
#, fuzzy
msgid "For the time being, returning Multipart data is limited to be blocking endpoints."
msgstr "当面の間、Multipartデータを返すのは、ブロックエンドポイントに限定されます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:519
#, fuzzy, no-wrap
msgid "Returning a response body"
msgstr "レスポンスボディを返す"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:524
#, fuzzy
msgid "In order to return an HTTP response, simply return the resource you want from your method. The method return type and its optional content type will be used to decide how to serialise it to the HTTP response (see <<negotiation>> for more advanced information)."
msgstr "HTTP レスポンスを返すためには、メソッドから欲しいリソースを返すだけです。メソッドの戻り値の型とオプションの内容の型は、HTTP レスポンスにどのようにシリアライズするかを決定するために使用されます (より高度な情報については link:#negotiation[[negotiation] を] 参照してください)。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:527
#, fuzzy
msgid "You can return any of the pre-defined types that you can read from the <<resource-types,HTTP response>>, and any other type will be mapped <<json,from that type to JSON>>."
msgstr "link:#resource-types[HTTPレスポンス] から読み込むことができる事前に定義された型のいずれかを返すことができ、それ以外の型は link:#json[その型からJSONに] マッピングされます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:529
#, fuzzy
msgid "In addition, the following return types are also supported:"
msgstr "以下のいずれかの戻り値の型を宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:530
#, fuzzy, no-wrap
msgid "Table Additional response body parameter type"
msgstr "表 リクエストボディパラメーターの種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:535
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/nio/file/Path.html[`Path`]"
msgstr "link:{jdkapi}/java/io/File.html[`File`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:537
#, fuzzy, no-wrap
msgid "The contents of the file specified by the given path"
msgstr "与えられたパスで指定されたファイルの内容"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:538
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/PathPart.html[`PathPart`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:540
#, fuzzy, no-wrap
msgid "The partial contents of the file specified by the given path"
msgstr "指定されたパスで指定されたファイルの部分的なコンテンツ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:541
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/FilePart.html[`FilePart`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:543
#, fuzzy, no-wrap
msgid "The partial contents of a file"
msgstr "ファイルの部分的な内容"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:544
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/file/AsyncFile.html[`AsyncFile`]"
msgstr "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:546
#, fuzzy, no-wrap
msgid "Vert.x AsyncFile, which can be in full, or partial"
msgstr "Vert.x AsyncFile、これは完全なものでも、部分的なものでも構いません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:552
#, fuzzy
msgid "Alternately, you can also return a <<reactive,reactive type>> such as link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`], link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] or link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] that resolve to one of the mentioned return types."
msgstr "また、次のような link:#reactive[反応型を] 返すこともできます。 link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] , link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] 或いは link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] のいずれかに解決されます。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:553
#, fuzzy, no-wrap
msgid "Setting other response properties"
msgstr "その他のレスポンスプロパティーの設定"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:555
#, fuzzy, no-wrap
msgid "Manually setting the response"
msgstr "その他のレスポンスプロパティーの設定"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:560
#, fuzzy
msgid "If you need to set more properties on the HTTP response than just the body, such as the status code or headers, you can make your method return `org.jboss.resteasy.reactive.RestResponse` from a resource method.  An example of this could look like:"
msgstr "HTTP レスポンスにボディだけでなく、ステータスコードやヘッダなど、より多くのプロパティーを設定する必要がある場合は、メソッドに link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] のタイプがあります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:568
#, no-wrap
msgid ""
"import java.time.Duration;\n"
"import java.time.Instant;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:573
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.NewCookie;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:576
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.RestResponse;\n"
"import org.jboss.resteasy.reactive.RestResponse.ResponseBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:594
#, no-wrap
msgid ""
"    @GET\n"
"    public RestResponse<String> hello() {\n"
"        // HTTP OK status with text/plain content type\n"
"        return ResponseBuilder.ok(\"Hello, World!\", MediaType.TEXT_PLAIN_TYPE)\n"
"         // set a response header\n"
"         .header(\"X-FroMage\", \"Camembert\")\n"
"         // set the Expires response header to two days from now\n"
"         .expires(Date.from(Instant.now().plus(Duration.ofDays(2))))\n"
"         // send a new cookie\n"
"         .cookie(new NewCookie(\"Flavour\", \"praliné\"))\n"
"         // end of builder API\n"
"         .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:598
#, fuzzy
msgid "You can also use the JAX-RS type link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] but it is not strongly typed to your entity."
msgstr "また、JAX-RS型を使用することもできます。  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]を使用することもできますが、それはあなたのエンティティに強く型付けされていません。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:599
#, fuzzy, no-wrap
msgid "Using annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:603
#, fuzzy
msgid "Alternatively, if you only need to set the status code and / or HTTP headers with static values, you can use `@org.jboss.resteasy.reactive.ResponseStatus` and /or `ResponseHeader` respectively.  An example of this could look like:"
msgstr "また、ステータスコードおよび／またはHTTPヘッダーに静的な値を設定するだけでよい場合は、それぞれ `@org.jboss.resteasy.reactive.ResponseStatus` および／または `ResponseHeader` を使用します。この例は次のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:611
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.Header;\n"
"import org.jboss.resteasy.reactive.ResponseHeaders;\n"
"import org.jboss.resteasy.reactive.ResponseStatus;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:625
#, no-wrap
msgid ""
"    @ResponseStatus(201)\n"
"    @ResponseHeader(name = \"X-FroMage\", value = \"Camembert\")\n"
"    @GET\n"
"    public String hello() {\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:627
#, fuzzy, no-wrap
msgid "Async/reactive support"
msgstr "非同期/リアクティブのサポート"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:637
#, fuzzy
msgid "If your endpoint method needs to accomplish an asynchronous or reactive task before being able to answer, you can declare your method to return the link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]), in which case the current HTTP request will be automatically suspended after your method, until the returned link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] instance resolves to a value, which will be mapped to a response exactly according to the previously described rules:"
msgstr "エンドポイントメソッドが応答できるようになる前に非同期タスクやリアクティブタスクを実行する必要がある場合は、メソッドが link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] 型 ( link:https://smallrye.io/smallrye-mutiny/[Mutiny] から) を使用している場合、その場合、現在の HTTP リクエストはあなたのメソッドの後、返された link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] インスタンスは値に解決され、この値は前に説明したルールに従って正確にレスポンスにマッピングされます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:646
#: upstream/_guides/resteasy-reactive.adoc:1205
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:649
#: upstream/_guides/resteasy-reactive.adoc:732
#, no-wrap
msgid ""
"@Path(\"escoffier\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:655
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<Book> culinaryGuide() {\n"
"        return Book.findByIsbn(\"978-2081229297\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:661
#, fuzzy
msgid "This allows you to not block the event-loop thread while the book is being fetched from the database, and allows Quarkus to serve more requests until your book is ready to be sent to the client and terminate this request. Check out our <<execution-model,Execution Model documentation>> for more information."
msgstr "これにより、ブックがデータベースからフェッチされている間、イベントループスレッドをブロックしないようにすることができ、Quarkusはブックがクライアントに送信される準備が整うまで、さらに多くのリクエストを処理して、このリクエストを終了させることができます。詳細については、 link:#execution-model[実行モデルのドキュメントを] 参照してください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:664
#, fuzzy
msgid "The link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] return type is also supported."
msgstr "仝 link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] 戻り値の型もサポートしています。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:665
#, fuzzy, no-wrap
msgid "Streaming support"
msgstr "ストリーミング対応"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:670
#, fuzzy
msgid "If you want to stream your response element by element, you can make your endpoint method return a link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]).  This is especially useful for streaming text or binary data."
msgstr "レスポンスを要素ごとにストリーム配信したい場合は、エンドポイントメソッドが link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] 型 ( link:https://smallrye.io/smallrye-mutiny/[Mutiny] から) を使用します。これは特にテキストやバイナリーデータのストリーミングに便利です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:673
#, fuzzy
msgid "This example, using https://github.com/quarkiverse/quarkus-reactive-messaging-http[Reactive Messaging HTTP] shows how to stream text data:"
msgstr "この例では、 link:reactive-messaging-http[Reactive Messagingを] 使用して、テキストデータをストリーミングする方法を示しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:681
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:683
#, no-wrap
msgid "import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:685
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:688
#, no-wrap
msgid ""
"@Path(\"logs\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:692
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"log-out\")\n"
"    Multi<String> logs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:698
#, no-wrap
msgid ""
"    @GET\n"
"    public Multi<String> streamLogs() {\n"
"        return logs;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:703
#, fuzzy
msgid "Response filters are not invoked on streamed responses, because they would give a false impression that you can set headers or HTTP status codes, which is not true after the initial response."
msgstr "レスポンスフィルターは、ストリームされたレスポンスに対しては呼び出されません。これは、ヘッダーやHTTPステータスコードを設定できるという誤った印象を与えてしまうからですが、最初のレスポンス以降はそうではありません。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:704
#, fuzzy, no-wrap
msgid "Server-Sent Event (SSE) support"
msgstr "サーバー・セント・イベント(SSE)のサポート"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:712
#, fuzzy
msgid "If you want to stream JSON objects in your response, you can use https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events] by just annotating your endpoint method with link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`] and specifying that each element should be <<json,serialised to JSON>> with `@RestSseElementType(MediaType.APPLICATION_JSON)`."
msgstr "レスポンスで JSON オブジェクト link:https://html.spec.whatwg.org/multipage/server-sent-events.html[を] ストリーム配信したい場合は、エンドポイントメソッドに link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`] で、各要素を link:#json[JSONにシリアライズする] ことを指定します。 `@RestSseElementType(MediaType.APPLICATION_JSON)` ."

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:722
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:724
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestSseElementType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:727
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:729
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:737
#, no-wrap
msgid ""
"    // Inject our Book channel\n"
"    @Inject\n"
"    @Channel(\"book-out\")\n"
"    Multi<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:747
#, no-wrap
msgid ""
"    @GET\n"
"    // Send the stream over SSE\n"
"    @Produces(MediaType.SERVER_SENT_EVENTS)\n"
"    // Each element will be sent as JSON\n"
"    @RestSseElementType(MediaType.APPLICATION_JSON)\n"
"    public Multi<Book> stream() {\n"
"        return books;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:749
#, fuzzy, no-wrap
msgid "Controlling HTTP Caching features"
msgstr "HTTPキャッシング機能の制御"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:754
#, fuzzy
msgid "RESTEasy Reactive provides the link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] and link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] annotations to facilitate handling HTTP caching semantics, i.e. setting the 'Cache-Control' HTTP header."
msgstr "RESTEasy Reactiveでは、HTTPのキャッシュ・セマンティクスを容易に処理するために、 `@org.jboss.resteasy.reactive.Cache` と `@org.jboss.resteasy.reactive.NoCache` アノテーションを提供しています。すなわち、'Cache-Control' HTTPヘッダーを設定します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:757
#, fuzzy
msgid "These annotations can be placed either on a Resource Method or a Resource Class (in which case it applies to all Resource Methods of the class that do *not* contain the same annotation) and allow users to return domain objects and not have to deal with building up the `Cache-Control` HTTP header explicitly."
msgstr "これらのアノテーションは、リソースメソッドまたはリソースクラス（この場合、同じアノテーションを含ま *ない*クラスのすべてのリソースメソッドに適用される）に配置することができ、ユーザーはドメインオブジェクトを返すことができ、 `Cache-Control` HTTPヘッダーを明示的に構築する必要がありません。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:761
#, fuzzy
msgid "While link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/Cache.html[`@Cache`] builds a complex `Cache-Control` header, link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/NoCache.html[`@NoCache`] is a simplified notation to say that you don't want anything cached; i.e. `Cache-Control: nocache`."
msgstr "`@Cache` が複雑な `Cache-Control` ヘッダーを構築するのに対し、 `@NoCache` は、何もキャッシュしたくないことを示す簡略化された表記で、すなわち `Cache-Control: nocache`."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:763
#, fuzzy
msgid "More information on the `Cache-Control` header and be found in link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234]"
msgstr "`Cache-Control` ヘッダーの詳細については、 link:https://datatracker.ietf.org/doc/html/rfc7234[RFC 7234]に記載されています。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:764
#, fuzzy, no-wrap
msgid "Accessing context objects"
msgstr "コンテキストオブジェクトへのアクセス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:770
#, fuzzy
msgid "There are a number of contextual objects that the framework will give you, if your endpoint method takes parameters of the following type:"
msgstr "エンドポイントメソッドが以下の型のパラメーターを取る場合、フレームワークが与えるコンテキストオブジェクトがいくつかあります。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:771
#: upstream/_guides/resteasy-reactive.adoc:908
#: upstream/_guides/resteasy-reactive.adoc:1114
#, fuzzy, no-wrap
msgid "Table Context object"
msgstr "テーブルコンテキストオブジェクト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:776
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:778
#, fuzzy, no-wrap
msgid "All the request headers"
msgstr "すべてのリクエストヘッダ"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:779
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:781
#, fuzzy, no-wrap
msgid "Information about the current endpoint method and class (requires reflection)"
msgstr "現在のエンドポイントのメソッドとクラスに関する情報(反映が必要"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:782
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/SecurityContext.html[`SecurityContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/SecurityContext.html[`SecurityContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:784
#, fuzzy, no-wrap
msgid "Access to the current user and roles"
msgstr "現在のユーザーとロールへのアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:785
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/SimpleResourceInfo.html[`SimpleResourceInfo`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:787
#, fuzzy, no-wrap
msgid "Information about the current endpoint method and class (no reflection required)"
msgstr "現在のエンドポイントメソッドとクラスに関する情報(反映は不要"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:788
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/UriInfo.html[`UriInfo`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/UriInfo.html[`UriInfo`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:790
#, fuzzy, no-wrap
msgid "Provides information about the current endpoint and application URI"
msgstr "現在のエンドポイントとアプリケーションの URI に関する情報を提供します。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:791
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Application.html[`Application`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Application.html[`Application`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:793
#, fuzzy, no-wrap
msgid "Advanced: Current JAX-RS application class"
msgstr "上級者向け。現在のJAX-RSアプリケーションクラス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:794
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Configuration.html[`Configuration`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Configuration.html[`Configuration`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:796
#, fuzzy, no-wrap
msgid "Advanced: Configuration about the deployed JAX-RS application"
msgstr "高度な設定。デプロイされたJAX-RSアプリケーションに関する設定"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:797
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/ext/Providers.html[`Providers`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/ext/Providers.html[`Providers`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:799
#, fuzzy, no-wrap
msgid "Advanced: Runtime access to JAX-RS providers"
msgstr "高度な機能です。JAX-RSプロバイダへのランタイムアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:800
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:802
#, fuzzy, no-wrap
msgid "Advanced: Access to the current HTTP method and <<preconditions>>"
msgstr "高度な機能です。現在の HTTP メソッドと link:#preconditions[[前提条件] に] アクセスします。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:803
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/ResourceContext.html[`ResourceContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/ResourceContext.html[`ResourceContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:805
#, fuzzy, no-wrap
msgid "Advanced: access to instances of endpoints"
msgstr "高度な機能: エンドポイントのインスタンスへのアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:806
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerRequestContext.html[`ServerRequestContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:808
#, fuzzy, no-wrap
msgid "Advanced: RESTEasy Reactive access to the current request/response"
msgstr "高度な機能です。RESTEasy 現在のリクエスト/レスポンスへのリアクティブアクセス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:809
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/sse/Sse.html[`Sse`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/sse/Sse.html[`Sse`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:811
#, fuzzy, no-wrap
msgid "Advanced: Complex SSE use-cases"
msgstr "上級者向け。複雑なSSEのユースケース"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:812
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerRequest.html[`HttpServerRequest`]"
msgstr "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:814
#, fuzzy, no-wrap
msgid "Advanced: Vert.x HTTP Request"
msgstr "高度なVert.xのHTTPリクエスト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:815
#, fuzzy, no-wrap
msgid "link:{vertxapi}/io/vertx/core/http/HttpServerResponse.html[`HttpServerResponse`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:817
#, fuzzy, no-wrap
msgid "Advanced: Vert.x HTTP Response"
msgstr "アドバンスドVert.x HTTPレスポンス"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:820
#, fuzzy
msgid "For example, here is how you can return the name of the currently logged-in user:"
msgstr "例えば、現在ログインしているユーザーの名前を返す方法は次のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:826
#: upstream/_guides/resteasy-reactive.adoc:851
#: upstream/_guides/resteasy-reactive.adoc:879
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:830
#: upstream/_guides/resteasy-reactive.adoc:857
#: upstream/_guides/resteasy-reactive.adoc:883
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:833
#: upstream/_guides/resteasy-reactive.adoc:860
#: upstream/_guides/resteasy-reactive.adoc:886
#, no-wrap
msgid ""
"@Path(\"user\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:840
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName(SecurityContext security) {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:845
#, fuzzy
msgid "You can also inject those context objects using https://javadoc.io/static/javax.inject/javax.inject/1/javax/inject/Inject.html[`@Inject`] on fields of the same type:"
msgstr "また、これらのコンテキストオブジェクトを注入するには link:https://javadoc.io/static/javax.inject/javax.inject/1/javax/inject/Inject.html[`@Inject`] を同じタイプのフィールドで使用することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:853
#, no-wrap
msgid "import javax.inject.Inject;\n"
msgstr "import javax.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:863
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:870
#: upstream/_guides/resteasy-reactive.adoc:899
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName() {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:873
#, fuzzy
msgid "Or even on your endpoint constructor:"
msgstr "あるいはエンドポイントのコンストラクタでも。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:888
#, no-wrap
msgid "    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:892
#, no-wrap
msgid ""
"    Endpoint(SecurityContext security) {\n"
"        this.security = security;\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:902
#, fuzzy, no-wrap
msgid "JSON serialisation"
msgstr "JSONシリアライズ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:907
#, fuzzy
msgid "Instead of importing `io.quarkus:quarkus-resteasy-reactive`, you can import either of the following modules to get support for JSON:"
msgstr "`io.quarkus:quarkus-resteasy-reactive` をインポートする代わりに、以下のモジュールのいずれかをインポートして JSON のサポートを得ることができます。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:910
#: upstream/_guides/resteasy-reactive.adoc:1116
#, fuzzy, no-wrap
msgid "GAV"
msgstr "GAV"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:913
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jackson`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jackson`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:915
#, fuzzy, no-wrap
msgid "https://github.com/FasterXML/jackson[Jackson support]"
msgstr "link:https://github.com/FasterXML/jackson[ジャクソン支援]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:916
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jsonb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jsonb`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:918
#, fuzzy, no-wrap
msgid "https://eclipse-ee4j.github.io/jsonb-api/[JSONB support]"
msgstr "link:https://github.com/FasterXML/jackson[ジャクソン支援]"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:923
#, fuzzy
msgid "In both cases, importing those modules will allow HTTP message bodies to be read from JSON and serialised to JSON, for <<resource-types,all the types not already registered with a more specific serialisation>>."
msgstr "どちらの場合も、これらのモジュールをインポートすることで、 link:#resource-types[より特定のシリアライズで登録されていないすべてのタイプ] について、HTTP メッセージボディを JSON から読み込んで JSON にシリアライズできるようになります。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:924
#, fuzzy, no-wrap
msgid "Advanced Jackson-specific features"
msgstr "ジャクソンに特化した先進的な機能"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:927
#, fuzzy
msgid "When using the `quarkus-resteasy-reactive-jackson` extension there are some advanced features that RESTEasy Reactive supports."
msgstr "`quarkus-resteasy-reactive-jackson` エクステンションを使用する場合、RESTEasy Reactive がサポートするいくつかの高度な機能があります。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:929
#, fuzzy, no-wrap
msgid "Secure serialization"
msgstr "JSONシリアライズ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:933
#, fuzzy
msgid "When used with Jackson to perform JSON serialization, RESTEasy Reactive provides the ability to limit the set of fields that are serialized based on the roles of the current user.  This is achieved by simply annotating the fields (or getters) of the POJO being returned with `@io.quarkus.resteasy.reactive.jackson.SecureField`."
msgstr "JSON をシリアライズするために Jackson を使用する場合、RESTEasy Reactive は、現在のユーザの役割に基づいてシリアライズされるフィールドのセットを制限する機能を提供します。これは、返されるPOJOのフィールド（またはゲッター）を `@io.quarkus.resteasy.reactive.jackson.SecureField` でアノテーションするだけで実現できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:935
#, fuzzy
msgid "A simple example could be the following:"
msgstr "そして、次のような反応が返ってきます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:937
#, fuzzy
msgid "Assume we have a POJO named `Person` which looks like so:"
msgstr "`Person` という名前のPOJOがあり、以下のようになっているとします。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:943
#, fuzzy, no-wrap
msgid "import io.quarkus.resteasy.reactive.jackson.SecureField;\n"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jackson`"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:945
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:950
#, no-wrap
msgid ""
"    @SecureField(rolesAllowed = \"admin\")\n"
"    private final Long id;\n"
"    private final String first;\n"
"    private final String last;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:956
#, no-wrap
msgid ""
"    public Person(Long id, String first, String last) {\n"
"        this.id = id;\n"
"        this.first = first;\n"
"        this.last = last;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:960
#, no-wrap
msgid ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:964
#, no-wrap
msgid ""
"    public String getFirst() {\n"
"        return first;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:969
#, no-wrap
msgid ""
"    public String getLast() {\n"
"        return last;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:972
#, fuzzy
msgid "A very simple JAX-RS Resource that uses `Person` could be:"
msgstr "`Person` を使用する非常にシンプルな JAX-RS Resource は次のようになります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:982
#, no-wrap
msgid ""
"@Path(\"person\")\n"
"public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:989
#, no-wrap
msgid ""
"    @Path(\"{id}\")\n"
"    @GET\n"
"    public Person getPerson(Long id) {\n"
"        return new Person(id, \"foo\", \"bar\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:993
#, fuzzy
msgid "Assuming security has been set up for the application (see our xref:security.adoc[guide] for more details), when a user with the `admin` role performs an HTTP GET on `/person/1` they will receive:"
msgstr "アプリケーションにセキュリティが設定されている場合（詳細は link:security[ガイド]を参照）、 `admin` ロールを持つユーザーが `/person/1` に対して HTTP GET を実行すると、次のようなメッセージが表示されます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1001
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"first\": \"foo\",\n"
"  \"last\": \"bar\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1004
#, fuzzy
msgid "as the response."
msgstr "HTTP応答"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1006
#, fuzzy
msgid "Any user however that does not have the `admin` role will receive:"
msgstr "しかし、 `admin` ロールを持っていないすべてのユーザーが受信します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1013
#, no-wrap
msgid ""
"{\n"
"  \"first\": \"foo\",\n"
"  \"last\": \"bar\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1017
#, fuzzy
msgid "No additional configuration needs to be applied for this secure serialization to take place. However, users can use the `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` and `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization` annotation to opt-in or out for specific JAX-RS Resource classes or methods."
msgstr "この安全なシリアル化を行うために、追加の構成を適用する必要はありません。ただし、ユーザーは `@io.quarkus.resteasy.reactive.jackson.EnableSecureSerialization` および `@io.quarkus.resteasy.reactive.jackson.DisableSecureSerialization` アノテーションを使用して、特定の JAX-RS Resource クラスまたはメソッドに対してオプトインまたはアウトすることができます。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:1018
#, fuzzy, no-wrap
msgid "@JsonView support"
msgstr "JsonView対応"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1022
#, fuzzy
msgid "JAX-RS methods can be annotated with https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView] in order to customize the serialization of the returned POJO, on a per method-basis. This is best explained with an example."
msgstr "JAX-RSのメソッドは、返されたPOJOのシリアライズをメソッド単位でカスタマイズするために、 link:https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView] でアノテーションすることができます。これは例を挙げて説明するのが一番です。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1024
#, fuzzy
msgid "A typical use of `@JsonView` is to hide certain fields on certain methods. In that vein, let's define two views:"
msgstr "`@JsonView` の典型的な使用法は、特定のメソッドで特定のフィールドを非表示にすることです。その意味で、二つのビューを定義してみましょう。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1028
#, no-wrap
msgid "public class Views {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1031
#, no-wrap
msgid ""
"    public static class Public {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1035
#, no-wrap
msgid ""
"    public static class Private extends Public {\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1038
#, fuzzy
msgid "Let's assume we have the `User` POJO on which we want to hide some field during serialization. A simple example of this is:"
msgstr "ここでは、連載中にいくつかのフィールドを非表示にしたい `User` POJO があるとします。簡単な例を挙げてみましょう。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1042
#, no-wrap
msgid "public class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1045
#, no-wrap
msgid ""
"    @JsonView(Views.Private.class)\n"
"    public int id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1049
#, no-wrap
msgid ""
"    @JsonView(Views.Public.class)\n"
"    public String name;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1053
#, fuzzy
msgid "Depending on the JAX-RS method that returns this user, we might want to exclude the `id` field from serialization - for example you might want an insecure method to not expose this field. The way we can achieve that in RESTEasy Reactive is shown in the following example:"
msgstr "このユーザーを返す JAX-RS メソッドによっては、 `id` フィールドをシリアライズから除外したい場合があります。RESTEasy Reactive でこれを実現する方法を以下の例に示します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1062
#, no-wrap
msgid ""
"@JsonView(Views.Public.class)\n"
"@GET\n"
"@Path(\"/public\")\n"
"public User userPublic() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1069
#, no-wrap
msgid ""
"@JsonView(Views.Private.class)\n"
"@GET\n"
"@Path(\"/private\")\n"
"public User userPrivate() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1073
#, fuzzy
msgid "When the result the `userPublic` method is serialized, the `id` field will not be contained in the response as the `Public` view does not include it.  The result of `userPrivate` however will include the `id` as expected when serialized."
msgstr "`userPublic` メソッドの結果がシリアライズされると、 `Public` ビューには `id` フィールドが含まれないため、レスポンスには フィールドは含まれません。しかし、 `userPrivate` の結果は、シリアライズされたときに予想されるように `id` が含まれます。"

#. type: Title =====
#: upstream/_guides/resteasy-reactive.adoc:1074
#, fuzzy, no-wrap
msgid "Completely customized per method serialization"
msgstr "メソッドのシリアライズごとに完全にカスタマイズ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1078
#, fuzzy
msgid "There are times when you need to completely customize the serialization of a POJO on a per JAX-RS method basis. For such use cases, the `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` annotation is a great tool, as it allows you to configure a per-method `com.fasterxml.jackson.databind.ObjectWriter` which can be configured at will."
msgstr "JAX-RSメソッドごとにPOJOのシリアライズを完全にカスタマイズする必要がある場合があります。 `com.fasterxml.jackson.databind.ObjectWriter` このようなユースケースでは、 `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` アノテーションは素晴らしいツールです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1080
#, fuzzy
msgid "Here is an example use case:"
msgstr "ここでは使用例を紹介します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1089
#, no-wrap
msgid ""
"@CustomSerialization(UnquotedFields.class)\n"
"@GET\n"
"@Path(\"/invalid-use-of-custom-serializer\")\n"
"public User invalidUseOfCustomSerializer() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1092
#, fuzzy
msgid "where `UnquotedFields` is a `BiFunction` defined as so:"
msgstr "ここで、 `UnquotedFields` は `BiFunction` と定義されています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1096
#, no-wrap
msgid "public static class UnquotedFields implements BiFunction<ObjectMapper, Type, ObjectWriter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1102
#, no-wrap
msgid ""
"    @Override\n"
"    public ObjectWriter apply(ObjectMapper objectMapper, Type type) {\n"
"        return objectMapper.writer().without(JsonWriteFeature.QUOTE_FIELD_NAMES);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1105
#, fuzzy
msgid "Essentially what this class does is force Jackson to not include quotes in the field names."
msgstr "基本的にこのクラスが行うことは、Jacksonがフィールド名に引用符を含まないようにすることです。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1107
#, fuzzy
msgid "It is important to note that this customization is only performed for the serialization of the JAX-RS methods that use `@CustomSerialization(UnquotedFields.class)`."
msgstr "このカスタマイズは、 `@CustomSerialization(UnquotedFields.class)` を使用する JAX-RS メソッドのシリアライズに対してのみ実行されることに注意してください。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1108
#, fuzzy, no-wrap
msgid "XML serialisation"
msgstr "JSONシリアライズ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1113
#, fuzzy
msgid "To enable XML support, add the `quarkus-resteasy-reactive-jaxb` extension to your project."
msgstr "XMLサポートを有効にするには、プロジェクトに `quarkus-resteasy-reactive-jaxb` 拡張機能を追加します。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1119
#, fuzzy, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jaxb`"
msgstr "`io.quarkus:quarkus-resteasy-reactive-jsonb`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1121
#, fuzzy, no-wrap
msgid "https://javaee.github.io/jaxb-v2/[XML support]"
msgstr "link:https://github.com/FasterXML/jackson[ジャクソン支援]"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1126
#, fuzzy
msgid "Importing this module will allow HTTP message bodies to be read from XML and serialised to XML, for <<resource-types,all the types not already registered with a more specific serialisation>>."
msgstr "どちらの場合も、これらのモジュールをインポートすることで、 link:#resource-types[より特定のシリアライズで登録されていないすべてのタイプ] について、HTTP メッセージボディを JSON から読み込んで JSON にシリアライズできるようになります。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:1127
#, fuzzy, no-wrap
msgid "More advanced usage"
msgstr "より高度な使い方"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1131
#, fuzzy
msgid "Here are some more advanced topics that you may not need to know about initially, but could prove useful for more complex use cases."
msgstr "ここでは、最初に知っておく必要はないかもしれませんが、より複雑な使用例に役立つ可能性のある、より高度なトピックをいくつかご紹介します。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1132
#, fuzzy, no-wrap
msgid "Execution model, blocking, non-blocking"
msgstr "実行モデル、ブロッキング、ノンブロッキング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1137
#, fuzzy
msgid "RESTEasy Reactive is implemented using two main thread types:"
msgstr "RESTEasy Reactiveは、2つの主要なスレッドタイプを使用して実装されています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1139
#, fuzzy
msgid "Event-loop threads: which are responsible, among other things, for reading bytes from the HTTP request and"
msgstr "イベントループスレッド: HTTP リクエストからのバイトの読み込みや、HTTP リクエストからのバイトの読み込みなどを行います。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1140
#, fuzzy
msgid "writing bytes back to the HTTP response"
msgstr "HTTP レスポンスにバイトを書き戻す"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1141
#, fuzzy
msgid "Worker threads: they are pooled and can be used to offload long-running operations"
msgstr "ワーカースレッド: プールされており、長時間実行される操作をオフロードするために使用できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1145
#, fuzzy
msgid "The event-loop threads (also called IO threads) are responsible for actually performing all the IO operations in an asynchronous way, and to trigger any listener interested in the completion of those IO operations."
msgstr "イベントループスレッド(IOスレッドとも呼ばれます)は、非同期的にすべてのIO操作を実際に実行し、それらのIO操作の完了に興味のあるリスナーをトリガーする責任があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1149
#, fuzzy
msgid "By default, the thread RESTEasy Reactive will run endpoint methods on depends on the signature of the method.  If a method returns one of the following types then it is considered non-blocking, and will be run on the IO thread by default:"
msgstr "デフォルトでは、RESTEasy Reactiveがエンドポイント・メソッドを実行するスレッドは、メソッドのシグネチャに依存します。メソッドが以下のタイプのいずれかを返す場合、それはノンブロッキングとみなされ、デフォルトではIOスレッドで実行されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1151
#, fuzzy
msgid "`io.smallrye.mutiny.Uni`"
msgstr "`io.smallrye.mutiny.Uni`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1152
#, fuzzy
msgid "`io.smallrye.mutiny.Multi`"
msgstr "`io.smallrye.mutiny.Multi`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1153
#, fuzzy
msgid "`java.util.concurrent.CompletionStage`"
msgstr "`java.util.concurrent.CompletionStage`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1154
#, fuzzy
msgid "`org.reactivestreams.Publisher`"
msgstr "`org.reactivestreams.Publisher`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1155
#, fuzzy
msgid "Kotlin `suspended` methods"
msgstr "Kotlin `suspended` メソッド"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1160
#, fuzzy
msgid "This 'best guess' approach means that the majority of operations will run on the correct thread by default. If you are writing reactive code then your method will generally return one of these types, and will be executed on the IO thread.  If you are writing blocking code your methods will generally return the result directly, and these will be run on a worker thread."
msgstr "この「最善の推測」アプローチにより、大部分の処理はデフォルトで正しいスレッドで実行されます。リアクティブなコードを書いている場合、メソッドは通常これらのタイプのいずれかを返し、IOスレッドで実行されます。ブロッキングコードを書いている場合、メソッドは通常、結果を直接返し、これらはワーカースレッドで実行されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1166
#, fuzzy
msgid "You can override this behaviour using the https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`] and https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[`@NonBlocking`] annotations. This can be applied at the method, class or `javax.ws.rs.core.Application` level."
msgstr "この動作をオーバーライドするには  link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`]と  link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/NonBlocking.html[`@NonBlocking`]アノテーションを使用して、この動作をオーバーライドできます。これは、メソッド、クラス、 `javax.ws.rs.core.Application` レベルで適用できます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1168
#, fuzzy
msgid "The example below will override the default behaviour and always run on a worker thread, even though it returns a `Uni`."
msgstr "以下の例では、デフォルトの動作を上書きして、 `Uni` を返しても、常にワーカースレッドで実行します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1177
#, no-wrap
msgid "import io.smallrye.common.annotation.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1180
#: upstream/_guides/resteasy-reactive.adoc:1208
#, no-wrap
msgid ""
"@Path(\"yawn\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1189
#, no-wrap
msgid ""
"    @Blocking\n"
"    @GET\n"
"    public Uni<String> blockingHello() throws InterruptedException {\n"
"        // do a blocking operation\n"
"        Thread.sleep(1000);\n"
"        return Uni.createFrom().item(\"Yaaaawwwwnnnnnn…\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1194
#, fuzzy
msgid "Most of the time, there are ways to achieve the same blocking operations in an asynchronous/reactive way, using https://smallrye.io/smallrye-mutiny/[Mutiny], http://hibernate.org/reactive/[Hibernate Reactive] or any of the xref:quarkus-reactive-architecture.adoc#quarkus-extensions-enabling-reactive[Quarkus Reactive extensions] for example:"
msgstr "ほとんどの場合、 link:https://smallrye.io/smallrye-mutiny/[Mutiny] 、 link:http://hibernate.org/reactive/[Hibernate Reactive] 、または link:getting-started-reactive[Quarkus Reactiveエクステンション] などを使用して、非同期/リアクティブな方法で同じブロッキング操作を実現する方法があります。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1200
#, no-wrap
msgid "import java.time.Duration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1216
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<String> blockingHello() throws InterruptedException {\n"
"        return Uni.createFrom().item(\"Yaaaawwwwnnnnnn…\")\n"
"                // do a non-blocking sleep\n"
"                .onItem().delayIt().by(Duration.ofSeconds(2));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1221
#, fuzzy
msgid "If a method or class is annotated with `javax.transaction.Transactional` then it will also be treated as a blocking method. This is because JTA is a blocking technology, and is generally used with other blocking technology such as Hibernate and JDBC. An explicit `@Blocking` or `@NonBlocking` on the class will override this behaviour."
msgstr "メソッドやクラスが `javax.transaction.Transactional` でアノテーションされている場合、そのメソッドはブロッキングメソッドとしても扱われます。これは、JTAがブロッキング技術であり、一般的にHibernateやJDBCなどの他のブロッキング技術と一緒に使用されるためです。クラスに明示的に `@Blocking` または `@NonBlocking` を付けると、この動作が上書きされます。"

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1222
#, fuzzy, no-wrap
msgid "Overriding the default behaviour"
msgstr "デフォルトの動作をオーバーライドする"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1226
#, fuzzy
msgid "If you want to override the default behaviour you can annotate a `javax.ws.rs.core.Application` subclass in your application with `@Blocking` or `@NonBlocking`, and this will set the default for every method that does not have an explicit annotation."
msgstr "デフォルトの動作をオーバーライドしたい場合は、アプリケーション内の `javax.ws.rs.core.Application` サブクラスに `@Blocking` または `@NonBlocking` をアノテーションすることで、明示的なアノテーションを持たないすべてのメソッドのデフォルトが設定されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1229
#, fuzzy
msgid "Behaviour can still be overridden on a class or method level by annotating them directly, however all endpoints without an annotation will now follow the default, no matter their method signature."
msgstr "しかし、アノテーションのないすべてのエンドポイントは、そのメソッドのシグネチャに関係なく、デフォルトに従います。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1230
#, fuzzy, no-wrap
msgid "Exception mapping"
msgstr "例外マッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1235
#, fuzzy
msgid "If your application needs to return non-nominal HTTP codes in error cases, the best is to throw exceptions that will result in the proper HTTP response being sent by the framework using link:{jaxrsapi}/javax/ws/rs/WebApplicationException.html[`WebApplicationException`] or any of its subtypes:"
msgstr "アプリケーションがエラーの場合に名前ではない HTTP コードを返す必要がある場合は、フレームワークが link:{jaxrsapi}/javax/ws/rs/WebApplicationException.html[`WebApplicationException`] またはそのサブタイプのいずれかを使用します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1244
#, no-wrap
msgid ""
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.NotFoundException;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1247
#: upstream/_guides/resteasy-reactive.adoc:1309
#, no-wrap
msgid ""
"@Path(\"fromages/{fromage}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1259
#, no-wrap
msgid ""
"    @GET\n"
"    public String findFromage(String fromage) {\n"
"        if(fromage == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        if(!fromage.equals(\"camembert\"))\n"
"            // send a 404\n"
"            throw new NotFoundException(\"Unknown cheese: \" + fromage);\n"
"        return \"Camembert is a very nice cheese\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1268
#, fuzzy
msgid "If your endpoint method is delegating calls to another service layer which does not know of JAX-RS, you need a way to turn service exceptions to an HTTP response, and you can do that using the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerExceptionMapper.html[`@ServerExceptionMapper`] annotation on a method, with one parameter of the exception type you want to handle, and turning that exception into a link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] (or a link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`]):"
msgstr "`@ServerExceptionMapper` エンドポイントメソッドがJAX-RSを知らない別のサービスレイヤーに呼び出しを委任している場合、サービスの例外をHTTPレスポンスに変換する方法が必要です。 link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] (または link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`] ):"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1274
#, no-wrap
msgid "import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1281
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1284
#: upstream/_guides/resteasy-reactive.adoc:1338
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.server.ServerExceptionMapper;\n"
"import org.jboss.resteasy.reactive.RestResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1287
#, no-wrap
msgid ""
"class UnknownCheeseException extends RuntimeException {\n"
"    public final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1292
#, no-wrap
msgid ""
"    public UnknownCheeseException(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1298
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class CheeseService {\n"
"    private static final Map<String, String> cheeses = \n"
"            Map.of(\"camembert\", \"Camembert is a very nice cheese\",\n"
"                   \"gouda\", \"Gouda is acceptable too, especially with cumin\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1306
#, no-wrap
msgid ""
"    public String findCheese(String name) {\n"
"        String ret = cheeses.get(name);\n"
"        if(ret != null)\n"
"            return ret;\n"
"        throw new UnknownCheeseException(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1312
#, no-wrap
msgid ""
"    @Inject\n"
"    CheeseService cheeses;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1317
#, no-wrap
msgid ""
"    @ServerExceptionMapper\n"
"    public RestResponse<String> mapException(UnknownCheeseException x) {\n"
"        return RestResponse.status(Response.Status.NOT_FOUND, \"Unknown cheese: \" + x.name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1326
#, no-wrap
msgid ""
"    @GET\n"
"    public String findFromage(String fromage) {\n"
"        if(fromage == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        return cheeses.findCheese(fromage);\n"
"    }\n"
"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1331
#, fuzzy
msgid "exception mappers defined in REST endpoint classes will only be called if the exception is thrown in the same class. If you want to define global exception mappers, simply define them outside a REST endpoint class:"
msgstr "REST エンドポイントクラスで定義された例外マッパーは、同じクラスで例外がスローされた場合にのみ呼び出されます。グローバルな例外マッパーを定義したい場合は、REST エンドポイントクラスの外で定義するだけです。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1345
#, no-wrap
msgid ""
"class ExceptionMappers {\n"
"    @ServerExceptionMapper\n"
"    public RestResponse<String> mapException(UnknownCheeseException x) {\n"
"        return RestResponse.status(Response.Status.NOT_FOUND, \"Unknown cheese: \" + x.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1348
#, fuzzy
msgid "You can also declare link:{jaxrsspec}#exceptionmapper[exception mappers in the JAX-RS way]."
msgstr "link:{jaxrsspec}#exceptionmapper[JAX-RSの方法で例外マッパーを] 宣言することもできます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1350
#, fuzzy
msgid "Your exception mapper may declare any of the following parameter types:"
msgstr "例外マッパは、以下のパラメーター型のいずれかを宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1351
#, fuzzy, no-wrap
msgid "Table Exception mapper parameters"
msgstr "表 例外マッパのパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1356
#, fuzzy, no-wrap
msgid "An exception type"
msgstr "例外型"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1358
#, fuzzy, no-wrap
msgid "Defines the exception type you want to handle"
msgstr "扱いたい例外の種類を定義します。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1359
#: upstream/_guides/resteasy-reactive.adoc:1461
#, fuzzy, no-wrap
msgid "Any of the <<context-objects,Context objects>>"
msgstr "link:#context-objects[コンテキストオブジェクトの] いずれか"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1362
#: upstream/_guides/resteasy-reactive.adoc:1464
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1364
#: upstream/_guides/resteasy-reactive.adoc:1466
#, fuzzy, no-wrap
msgid "A context object to access the current request"
msgstr "現在のリクエストにアクセスするためのコンテキストオブジェクト"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1367
#: upstream/_guides/resteasy-reactive.adoc:1475
#, fuzzy
msgid "It may declare any of the following return types:"
msgstr "以下のいずれかの戻り値の型を宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1368
#, fuzzy, no-wrap
msgid "Table Exception mapper return types"
msgstr "表 例外マッパの戻り値の種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1373
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse`]または  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1375
#, fuzzy, no-wrap
msgid "The response to send to the client when the exception occurs"
msgstr "例外が発生したときにクライアントに送信するレスポンス"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1376
#, fuzzy, no-wrap
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1378
#, fuzzy, no-wrap
msgid "An asynchronous response to send to the client when the exception occurs"
msgstr "例外が発生したときにクライアントに送信する非同期レスポンス"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1380
#, fuzzy, no-wrap
msgid "Request or response filters"
msgstr "リクエストまたはレスポンスフィルタ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1383
#, fuzzy
msgid "You can declare functions which are invoked in the following phases of the request processing:"
msgstr "リクエスト処理の以下のフェーズで呼び出される関数を宣言することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1385
#, fuzzy
msgid "Before the endpoint method is identified: pre-routing request filter"
msgstr "エンドポイントメソッドが特定される前に:ルーティング前リクエストフィルタ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1386
#, fuzzy
msgid "After routing, but before the endpoint method is called: normal request filter"
msgstr "ルーティングの後、エンドポイントメソッドが呼ばれる前: 通常のリクエストフィルタ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1387
#, fuzzy
msgid "After the endpoint method is called: response filter"
msgstr "エンドポイント・メソッドが呼ばれた後:レスポンス・フィルタ"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1391
#, fuzzy
msgid "These filters allow you to do various things such as examine the request URI, HTTP method, influence routing, look or change request headers, abort the request, or modify the response."
msgstr "これらのフィルタは、リクエストの URI、HTTP メソッド、ルーティングに影響を与える、リクエストヘッダを見たり変更したり、リクエストを中止したり、レスポンスを変更したりするなど、さまざまなことを可能にします。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1395
#, fuzzy
msgid "Request filters can be declared with the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerRequestFilter.html[`@ServerRequestFilter`] annotation:"
msgstr "リクエストフィルタは `@ServerRequestFilter` アノテーションで宣言できます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1399
#, fuzzy, no-wrap
#| msgid "import javax.inject.Inject;\n"
msgid "import java.util.Optional;\n"
msgstr "import javax.inject.Inject;\n"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1401
#, no-wrap
msgid "class Filters {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1409
#, no-wrap
msgid ""
"    @ServerRequestFilter(preMatching = true)\n"
"    public void preMatchingFilter(ContainerRequestContext requestContext) {\n"
"        // make sure we don't lose cheese lovers\n"
"        if(\"yes\".equals(requestContext.getHeaderString(\"Cheese\"))) {\n"
"            requestContext.setRequestUri(URI.create(\"/cheese\"));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1419
#, no-wrap
msgid ""
"    @ServerRequestFilter\n"
"    public Optional<RestResponse<Void>> getFilter(ContainerRequestContext ctx) {\n"
"        // only allow GET methods for now\n"
"        if(ctx.getMethod().equals(HttpMethod.GET)) {\n"
"            return Optional.of(RestResponse.status(Response.Status.METHOD_NOT_ALLOWED));\n"
"        }\n"
"        return Optional.empty();\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/resteasy-reactive.adoc:1428
#, fuzzy
msgid "Request filters are usually executed on the same thread that the method that handles the request will be executed.  That means that if the method servicing the request is annotated with `@Blocking`, then the filters will also be run on the worker thread.  If the method is annotated with `@NonBlocking` (or is not annotated at all), then the filters will also be run on the same event-loop thread."
msgstr "リクエストフィルターは通常、リクエストを処理するメソッドが実行されるのと同じスレッドで実行されます。つまり、リクエストを処理するメソッドが `@Blocking` でアノテーションされている場合は、フィルターもワーカースレッドで実行されます。メソッドが `@NonBlocking` でアノテーションされている場合（または全くアノテーションされていない場合）、フィルターも同じイベントループのスレッドで実行されます。"

#. type: delimited block =
#: upstream/_guides/resteasy-reactive.adoc:1432
#, fuzzy
msgid "If however a filter needs to be run on the event-loop despite the fact that the method servicing the request will be run on a worker thread, then `@ServerRequestFilter(nonBlocking=true)` can be used.  Note however, that these filters need to be run before **any** filter that does not use that setting and would run on a worker thread."
msgstr "しかし、リクエストを処理するメソッドがワーカースレッドで実行されるにもかかわらず、フィルタをイベントループで実行する必要がある場合、 `@ServerRequestFilter(nonBlocking=true)` を使用することができます。ただし、これらのフィルターは、その設定を使用せず、ワーカースレッドで実行されるフィルター *の*前に実行される必要があることに注意してください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1437
#, fuzzy
msgid "Similarly, response filters can be declared with the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/ServerResponseFilter.html[`@ServerResponseFilter`] annotation:"
msgstr "同様に、レスポンスフィルタは `@ServerResponseFilter` アノテーションで宣言することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1450
#, no-wrap
msgid ""
"class Filters {\n"
"    @ServerResponseFilter\n"
"    public void getFilter(ContainerResponseContext responseContext) {\n"
"        Object entity = responseContext.getEntity();\n"
"        if(entity instanceof String) {\n"
"            // make it shout\n"
"            responseContext.setEntity(((String)entity).toUpperCase());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1453
#, fuzzy
msgid "You can also link:{jaxrsspec}#filters[declare request and response filters in the JAX-RS way]."
msgstr "また、 link:{jaxrsspec}#filters[JAX-RSの方法でリクエストフィルタとレスポンスフィルタを宣言する] こともできます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1455
#, fuzzy
msgid "Your filters may declare any of the following parameter types:"
msgstr "フィルタは以下のパラメーター型のいずれかを宣言することができます。"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1456
#, fuzzy, no-wrap
msgid "Table Filter parameters"
msgstr "表 フィルタパラメーター"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1467
#, fuzzy, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"
msgstr "link:{jaxrsapi}/javax/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1469
#, fuzzy, no-wrap
msgid "A context object to access the current response"
msgstr "現在のレスポンスにアクセスするためのコンテキストオブジェクト"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1470
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"
msgstr "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1472
#, fuzzy, no-wrap
msgid "Any thrown exception, or `null` (only for response filters)"
msgstr "スローされた例外、または `null` (レスポンスフィルタのみ)"

#. type: Block title
#: upstream/_guides/resteasy-reactive.adoc:1476
#, fuzzy, no-wrap
msgid "Table Filter return types"
msgstr "表 フィルタの戻り値の種類"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1481
#, fuzzy, no-wrap
msgid "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
msgstr "link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse&amp;lt;?&amp;gt;`]または  link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1483
#, fuzzy, no-wrap
msgid "The response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルタチェインを続ける代わりにクライアントに送るレスポンス、フィルタチェインを進める場合は `null`"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1484
#, fuzzy, no-wrap
msgid "link:{jdkapi}/java/util/Optional.html[`Optional<RestResponse<?>>`] or link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"
msgstr "link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1486
#, fuzzy, no-wrap
msgid "An optional response to send to the client instead of continuing the filter chain, or an empty value if the filter chain should proceed"
msgstr "フィルタチェインを継続する代わりにクライアントに送信するオプションのレスポンス。"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1487
#, fuzzy, no-wrap
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<RestResponse<?>>`] or link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"

#. type: Table
#: upstream/_guides/resteasy-reactive.adoc:1489
#, fuzzy, no-wrap
msgid "An asynchronous response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr "フィルタチェインを継続する代わりにクライアントに送信する非同期応答、フィルタチェインを進める場合は `null`"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1492
#, fuzzy
msgid "You can restrict the Resource methods for which a filter runs, by using link:{jaxrsapi}/javax/ws/rs/NameBinding.html[`@NameBinding`] meta-annotations."
msgstr "フィルタが実行するリソースメソッドを制限するには  link:{jaxrsapi}/javax/ws/rs/NameBinding.html[`@NameBinding`]メタアノテーション。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1493
#, fuzzy, no-wrap
msgid "Readers and Writers: mapping entities and HTTP bodies"
msgstr "リーダーとライター: エンティティーとHTTPボディのマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1501
#, fuzzy
msgid "Whenever your endpoint methods return a object (of when they return a link:{resteasy-reactive-common-api}/org/jboss/resteasy/reactive/RestResponse.html[`RestResponse<?>`] or link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] with an entity), RESTEasy Reactive will look for a way to map that into an HTTP response body."
msgstr "エンドポイントメソッドがオブジェクトを返すときはいつでも(そのうち link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] を使用している場合)、RESTEasy Reactive はそれを HTTP レスポンスボディにマッピングする方法を探します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1504
#, fuzzy
msgid "Similarly, whenever your endpoint method takes an object as parameter, we will look for a way to map the HTTP request body into that object."
msgstr "同様に、エンドポイントメソッドがオブジェクトをパラメーターとして受け取るときはいつでも、HTTPリクエストのボディをそのオブジェクトにマッピングする方法を探します。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1509
#, fuzzy
msgid "This is done via a pluggable system of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] and link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] interfaces, which are responsible for defining which Java type they map from/to, for which media types, and how they turn HTTP bodies to/from Java instances of that type."
msgstr "のプラガブルシステムを介して行われます。 link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] そして link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] インターフェイスは、どのJavaタイプにマッピングするか、どのメディアタイプにマッピングするか、そしてHTTPボディをどのようにしてそのタイプのJavaインスタンスとの間で変換するかを定義する責任があります。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1511
#, fuzzy
msgid "For example, if we have our own `FroMage` type on our endpoint:"
msgstr "例えば、エンドポイントに独自の `FroMage` タイプがある場合。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1519
#: upstream/_guides/resteasy-reactive.adoc:1671
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1522
#, no-wrap
msgid ""
"class FroMage {\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1527
#, no-wrap
msgid ""
"    public FroMage(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1530
#: upstream/_guides/resteasy-reactive.adoc:1674
#, no-wrap
msgid ""
"@Path(\"cheese\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1535
#, no-wrap
msgid ""
"    @GET\n"
"    public FroMage sayCheese() {\n"
"        return new FroMage(\"Cheeeeeese\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1541
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(FroMage fromage) {\n"
"        System.err.println(\"Received a new cheese: \" + fromage.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1545
#, fuzzy
msgid "Then we can define how to read and write it with our body reader/writers, annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]:"
msgstr "でアノテーションされたボディリーダ/ライタを使って、どのように読み書きするかを定義することができます。 link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`] :"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1556
#: upstream/_guides/resteasy-reactive.adoc:1620
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.io.InputStream;\n"
"import java.io.OutputStream;\n"
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1563
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.MessageBodyWriter;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1567
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageBodyHandler implements MessageBodyReader<FroMage>, \n"
"                                           MessageBodyWriter<FroMage> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1573
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, Type genericType, \n"
"                               Annotation[] annotations, MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1583
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeTo(FroMage t, Class<?> type, Type genericType, \n"
"                        Annotation[] annotations, MediaType mediaType,\n"
"                        MultivaluedMap<String, Object> httpHeaders, \n"
"                        OutputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        entityStream.write((\"[FroMageV1]\" + t.name)\n"
"                           .getBytes(StandardCharsets.UTF_8));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1589
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isReadable(Class<?> type, Type genericType, \n"
"                              Annotation[] annotations, MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1601
#, no-wrap
msgid ""
"    @Override\n"
"    public FroMage readFrom(Class<FroMage> type, Type genericType, \n"
"                            Annotation[] annotations, MediaType mediaType,\n"
"                            MultivaluedMap<String, String> httpHeaders,\n"
"                            InputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        String body = new String(entityStream.readAllBytes(), StandardCharsets.UTF_8);\n"
"        if(body.startsWith(\"[FroMageV1]\"))\n"
"            return new FroMage(body.substring(11));\n"
"        throw new IOException(\"Invalid fromage: \" + body);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1609
#, fuzzy
msgid "If you want to get the most performance our of your writer, you can extend the link:{resteasy-reactive-api}/org/jboss/resteasy/reactive/server/spi/ServerMessageBodyWriter.html[`ServerMessageBodyWriter`] instead of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] where you will be able to use less reflection and bypass the blocking IO layer:"
msgstr "ライターのパフォーマンスを最大限に引き出したい場合は、 `ServerMessageBodyWriter` を拡張することができます。 link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] ここでは、より少ない反射を使用し、ブロッキングIO層をバイパスすることができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1626
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1630
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.server.spi.ResteasyReactiveResourceInfo;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerMessageBodyWriter;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1634
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageBodyHandler implements MessageBodyReader<FroMage>, \n"
"                                           ServerMessageBodyWriter<FroMage> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1636
#, no-wrap
msgid "    // …\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1642
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, ResteasyReactiveResourceInfo target, \n"
"                               MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1649
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeResponse(FroMage t, ServerRequestContext context) \n"
"      throws WebApplicationException, IOException {\n"
"        context.serverResponse().end(\"[FroMageV1]\" + t.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1654
#, fuzzy
msgid "You can restrict which content-types your reader/writer apply to by adding link:{jaxrsapi}/javax/ws/rs/Consumes.html[`Consumes`]/link:{jaxrsapi}/javax/ws/rs/Produces.html[`Produces`] annotations on your provider class."
msgstr "を追加することで、リーダライタが適用するコンテンツタイプを制限することができます。 link:{jaxrsapi}/javax/ws/rs/Consumes.html[`Consumes`] / link:{jaxrsapi}/javax/ws/rs/Produces.html[`Produces`] アノテーションを使用します。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1655
#, fuzzy, no-wrap
msgid "Reader and Writer interceptors"
msgstr "リーダーとライターのインターセプター"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1661
#, fuzzy
msgid "Just as you can intercept requests and responses, you can also intercept readers and writers, by extending the link:{jaxrsapi}/javax/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`] or link:{jaxrsapi}/javax/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`] on a class annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]."
msgstr "リクエストやレスポンスを傍受することができるのと同じように、読者やライターを傍受することもできます。 link:{jaxrsapi}/javax/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`] 或いは link:{jaxrsapi}/javax/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`] でアノテーションされたクラスに対して link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`] ."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1663
#, fuzzy
msgid "If we look at this endpoint:"
msgstr "このエンドポイントを見てみると"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1679
#, no-wrap
msgid ""
"    @GET\n"
"    public String sayCheese() {\n"
"        return \"Cheeeeeese\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1685
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(String fromage) {\n"
"        System.err.println(\"Received a new cheese: \" + fromage);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1688
#, fuzzy
msgid "We can add reader and writer interceptors like this:"
msgstr "このようにリーダーやライターの迎撃を追加することができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1694
#, no-wrap
msgid "import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1701
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.ext.Provider;\n"
"import javax.ws.rs.ext.ReaderInterceptor;\n"
"import javax.ws.rs.ext.ReaderInterceptorContext;\n"
"import javax.ws.rs.ext.WriterInterceptor;\n"
"import javax.ws.rs.ext.WriterInterceptorContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1704
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageIOInterceptor implements ReaderInterceptor, WriterInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1712
#, no-wrap
msgid ""
"    @Override\n"
"    public void aroundWriteTo(WriterInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before writing \" + context.getEntity());\n"
"        context.proceed();\n"
"        System.err.println(\"After writing \" + context.getEntity());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1722
#, no-wrap
msgid ""
"    @Override\n"
"    public Object aroundReadFrom(ReaderInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before reading \" + context.getGenericType());\n"
"        Object entity = context.proceed();\n"
"        System.err.println(\"After reading \" + entity);\n"
"        return entity;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1724
#, fuzzy, no-wrap
msgid "Parameter mapping"
msgstr "パラメーターマッピング"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1728
#, fuzzy
msgid "All <<request-parameters,Request Parameters>> can be declared as link:{jdkapi}/java/lang/String.html[`String`], but also any of the following types:"
msgstr "すべての link:#request-parameters[リクエストパラメーターは] link:{jdkapi}/java/lang/String.html[`String`] の他にも、以下のいずれかのタイプを使用することができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1731
#, fuzzy
msgid "Types for which a link:{jaxrsapi}/javax/ws/rs/ext/ParamConverter.html[`ParamConverter`] is available via a registered link:{jaxrsapi}/javax/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`]."
msgstr "の対象となるタイプ link:{jaxrsapi}/javax/ws/rs/ext/ParamConverter.html[`ParamConverter`] は、登録された link:{jaxrsapi}/javax/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`] ."

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1732
#, fuzzy
msgid "Primitive types."
msgstr "原始型。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1733
#, fuzzy
msgid "Types that have a constructor that accepts a single link:{jdkapi}/java/lang/String.html[`String`] argument."
msgstr "コンストラクタで単一の link:{jdkapi}/java/lang/String.html[`String`] の引数を指定しています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1736
#, fuzzy
msgid "Types that have a static method named `valueOf` or `fromString` with a single link:{jdkapi}/java/lang/String.html[`String`] argument that return an instance of the type. If both methods are present then `valueOf` will be used unless the type is an `enum` in which case `fromString` will be used."
msgstr "`valueOf` または `fromString` という名前の静的メソッドを持つ型で、単一の link:{jdkapi}/java/lang/String.html[`String`] 引数は、型のインスタンスを返すものです。 `valueOf` 両方のメソッドが存在する場合、型が `enum` の場合は `fromString` が使用されます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1738
#, fuzzy
msgid "link:{jdkapi}/java/util/List.html[`List<T>`], link:{jdkapi}/java/util/Set.html[`Set<T>`], or link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`], where `T` satisfies any above criterion."
msgstr "link:{jdkapi}/java/util/List.html[`List<T>`] , link:{jdkapi}/java/util/Set.html[`Set<T>`] または link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`] ここで、 `T` は上記のいずれかの基準を満たしています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1740
#, fuzzy
msgid "The following example illustrates all those possibilities:"
msgstr "以下の例は、これらの可能性をすべて示しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1748
#, no-wrap
msgid ""
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1754
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.ext.ParamConverter;\n"
"import javax.ws.rs.ext.ParamConverterProvider;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1756
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1759
#, no-wrap
msgid ""
"@Provider\n"
"class MyConverterProvider implements ParamConverterProvider {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1769
#, no-wrap
msgid ""
"    @Override\n"
"    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType,\n"
"                                              Annotation[] annotations) {\n"
"        // declare a converter for this type\n"
"        if(rawType == Converter.class) {\n"
"            return (ParamConverter<T>) new MyConverter();\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1774
#, no-wrap
msgid ""
"// this is my custom converter\n"
"class MyConverter implements ParamConverter<Converter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1779
#, no-wrap
msgid ""
"    @Override\n"
"    public Converter fromString(String value) {\n"
"        return new Converter(value);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1784
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString(Converter value) {\n"
"        return value.value;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1794
#, no-wrap
msgid ""
"// this uses a converter\n"
"class Converter {\n"
"    String value;\n"
"    Converter(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1802
#, no-wrap
msgid ""
"class Constructor {\n"
"    String value;\n"
"    // this will use the constructor\n"
"    public Constructor(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1813
#, no-wrap
msgid ""
"class ValueOf {\n"
"    String value;\n"
"    private ValueOf(String value) {\n"
"        this.value = value;\n"
"    }\n"
"    // this will use the valueOf method\n"
"    public static ValueOf valueOf(String value) {\n"
"        return new ValueOf(value);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1826
#, no-wrap
msgid ""
"    @Path(\"{converter}/{constructor}/{primitive}/{valueOf}\")\n"
"    @GET\n"
"    public String convertions(Converter converter, Constructor constructor,\n"
"                              int primitive, ValueOf valueOf, \n"
"                              @RestQuery List<Constructor> list) {\n"
"        return converter + \"/\" + constructor + \"/\" + primitive \n"
"               + \"/\" + valueOf + \"/\" + list;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/resteasy-reactive.adoc:1828
#, fuzzy, no-wrap
msgid "Handling dates"
msgstr "取扱日"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1832
#, fuzzy
msgid "RESTEasy Reactive supports the use of the implementations of `java.time.Temporal` (like `java.time.LocalDateTime`) as query, path or form params. Furthermore it provides the `@org.jboss.resteasy.reactive.DateFormat` annotation which can be used to set a custom expected pattern (otherwise the JDK's default format for each type is used implicitly)."
msgstr "RESTEasy Reactiveでは、 `java.time.Temporal` （ `java.time.LocalDateTime` のような）の実装を、クエリ、パス、フォームのパラメータとして使用することをサポートしています。さらに、 `@org.jboss.resteasy.reactive.DateFormat` アノテーションを提供しており、これを使用してカスタムの期待されるパターンを設定することができます（そうしないと、各タイプに対する JDK のデフォルトフォーマットが暗黙のうちに使用されます）。"

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1833
#, fuzzy, no-wrap
msgid "Preconditions"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1837
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7232[HTTP allows requests to be conditional], based on a number of conditions, such as:"
msgstr "link:https://tools.ietf.org/html/rfc7232[HTTPでは] 、以下のようないくつかの条件に基づいて、 link:https://tools.ietf.org/html/rfc7232[リクエストを条件付きにすることができます] 。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1839
#, fuzzy
msgid "Date of last resource modification"
msgstr "最終的なリソースの変更日"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1840
#, fuzzy
msgid "A resource tag, similar to a hash code of the resource to designate its state or version"
msgstr "リソースタグで、リソースの状態やバージョンを指定するためのリソースのハッシュコードに似ています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1843
#, fuzzy
msgid "Let's see how you can do conditional request validation using the link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`] context object:"
msgstr "を使って条件付きリクエストの検証を行う方法を見てみましょう。 link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`] コンテキストオブジェクトを使用しています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1852
#, no-wrap
msgid ""
"import java.time.Instant;\n"
"import java.time.temporal.ChronoUnit;\n"
"import java.time.temporal.TemporalUnit;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1860
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.EntityTag;\n"
"import javax.ws.rs.core.Request;\n"
"import javax.ws.rs.core.Response;\n"
"import javax.ws.rs.core.Response.ResponseBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1863
#, no-wrap
msgid ""
"@Path(\"conditional\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1870
#, no-wrap
msgid ""
"    // It's important to keep our date on seconds because that's how it's sent to the\n"
"    // user in the Last-Modified header\n"
"    private Date date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"    private int version = 1;\n"
"    private EntityTag tag = new EntityTag(\"v1\");\n"
"    private String resource = \"Some resource\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1883
#, no-wrap
msgid ""
"    @GET\n"
"    public Response get(Request request) {\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1901
#, no-wrap
msgid ""
"    @PUT\n"
"    public Response put(Request request, String body) {\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK, we can update our resource\n"
"        resource = body;\n"
"        date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"        version++;\n"
"        tag = new EntityTag(\"v\" + version);\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1904
#, fuzzy
msgid "When we call `GET /conditional` the first time, we will get this response:"
msgstr "最初に `GET /conditional` に電話すると、このような反応が返ってきます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1912
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Content-Type: text/plain;charset=UTF-8\n"
"ETag: \"v1\"\n"
"Last-Modified: Wed, 09 Dec 2020 16:10:19 GMT\n"
"Content-Length: 13\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1914
#, no-wrap
msgid "Some resource\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1917
#, fuzzy
msgid "So now if we want to check if we need to fetch a new version, we can make the following request:"
msgstr "そこで、新しいバージョンをフェッチする必要があるかどうかを確認したい場合は、次のようなリクエストをします。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1923
#, no-wrap
msgid ""
"GET /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Modified-Since: Wed, 09 Dec 2020 16:10:19 GMT\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1926
#, fuzzy
msgid "And we would get the following response:"
msgstr "そして、次のような反応が返ってきます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1930
#, no-wrap
msgid "HTTP/1.1 304 Not Modified\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1936
#, fuzzy
msgid "Because the resource has not been modified since that date. This saves on sending the resource, but can also help your users detect concurrent modification, for example, let's suppose that one client wants to update the resource, but another user has modified it since. You can follow the previous `GET` request with this update:"
msgstr "なぜなら、リソースはその日付以降変更されていないからです。これはリソースを送信する手間を省くことができますが、ユーザーが同時に変更したことを検出するのにも役立ちます。例えば、あるクライアントがリソースを更新したいと思っているのに、別のユーザーが変更してしまったとします。この更新で、以前の `GET` リクエストをフォローすることができます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1945
#, no-wrap
msgid ""
"PUT /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Unmodified-Since: Wed, 09 Dec 2020 16:25:43 GMT\n"
"If-Match: v1\n"
"Content-Length: 8\n"
"Content-Type: text/plain\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1947
#, no-wrap
msgid "newstuff\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1951
#, fuzzy
msgid "And if some other user has modified the resource between your `GET` and your `PUT` you would get this answer back:"
msgstr "また、他のユーザーがあなたの `GET` とあなたの `PUT` の間のリソースを変更した場合は、この回答が返ってくるでしょう。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1957
#, no-wrap
msgid ""
"HTTP/1.1 412 Precondition Failed\n"
"ETag: \"v2\"\n"
"Content-Length: 0\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/resteasy-reactive.adoc:1959
#, fuzzy, no-wrap
msgid "Negotiation"
msgstr "交渉"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1966
#, fuzzy
msgid "One of the main ideas of REST (https://tools.ietf.org/html/rfc7231#section-3.4[and HTTP]) is that your resource is independent from its representation, and that both the client and server are free to represent their resources in as many media types as they want. This allows the server to declare support for multiple representations and let the client declare which ones it supports and get served something appropriate."
msgstr "REST link:https://tools.ietf.org/html/rfc7231#section-3.4[(と HTTP] ) の主な考え方の一つは、リソースはその表現から独立しており、クライアントとサーバーの両方がリソースを好きなだけ多くのメディアタイプで自由に表現できるということです。これにより、サーバーは複数の表現のサポートを宣言し、クライアントはどの表現をサポートしているかを宣言して、適切なものを提供してもらうことができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:1968
#, fuzzy
msgid "The following endpoint supports serving cheese in plain text or JSON:"
msgstr "以下のエンドポイントは、プレーンテキストまたはJSONでのチーズの提供をサポートしています。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1979
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1981
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonCreator;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1993
#, no-wrap
msgid ""
"class FroMage {\n"
"    public String name;\n"
"    @JsonCreator\n"
"    public FroMage(String name) {\n"
"        this.name = name;\n"
"    }\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Cheese: \" + name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:1996
#, no-wrap
msgid ""
"@Path(\"negotiated\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2002
#, no-wrap
msgid ""
"    @Produces({MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN})\n"
"    @GET\n"
"    public FroMage get() {\n"
"        return new FroMage(\"Morbier\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2008
#, no-wrap
msgid ""
"    @Consumes(MediaType.TEXT_PLAIN)\n"
"    @PUT\n"
"    public FroMage putString(String cheese) {\n"
"        return new FroMage(cheese);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2015
#, no-wrap
msgid ""
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @PUT\n"
"    public FroMage putJson(FroMage fromage) {\n"
"        return fromage;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2019
#, fuzzy
msgid "The user will be able to select which representation it gets with the link:{httpspec}#section-5.3.2[`Accept`] header, in the case of JSON:"
msgstr "ユーザーは、どの表現を取得するかを link:{httpspec}#section-5.3.2[`Accept`] ヘッダを使用します。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2025
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: application/json\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2031
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json\n"
"< Content-Length: 18\n"
"< \n"
"< {\"name\":\"Morbier\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2034
#, fuzzy
msgid "And for text:"
msgstr "テキストのためにも。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2046
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: text/plain\n"
"> \n"
"< HTTP/1.1 200 OK\n"
"< Content-Type: text/plain\n"
"< Content-Length: 15\n"
"< \n"
"< Cheese: Morbier \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2049
#, fuzzy
msgid "Similarly, you can `PUT` two different representations. JSON:"
msgstr "同様に、 `PUT` 2 つの異なる表現を使うことができます。JSONです。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2058
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: application/json\n"
"> Content-Length: 16\n"
"> \n"
"> {\"name\": \"brie\"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2064
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 15\n"
"< \n"
"< {\"name\":\"brie\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2067
#, fuzzy
msgid "Or plain text:"
msgstr "もしくはプレーンテキスト。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2076
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: text/plain\n"
"> Content-Length: 9\n"
">\n"
"> roquefort\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2082
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 20\n"
"< \n"
"< {\"name\":\"roquefort\"} \n"
msgstr ""

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:2084
#, fuzzy, no-wrap
msgid "Include/Exclude JAX-RS classes with build time conditions"
msgstr "ビルド時条件でJAX-RSクラスを含める/除外する"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2088
#, fuzzy
msgid "Quarkus enables the inclusion or exclusion of JAX-RS Resources, Providers and Features directly thanks to build time conditions in the same that it does for CDI beans.  Thus, the various JAX-RS classes can be annotated with profile conditions (`@io.quarkus.arc.profile.IfBuildProfile` or `@io.quarkus.arc.profile.UnlessBuildProfile`) and/or with property conditions (`io.quarkus.arc.properties.IfBuildProperty` or `io.quarkus.arc.properties.UnlessBuildProperty`) to indicate to Quarkus at build time under which conditions these JAX-RS classes should be included."
msgstr "Quarkusでは、CDI Beanの場合と同様に、ビルド時の条件に応じて、JAX-RSリソース、プロバイダー、および機能を直接包含または除外することができます。したがって、さまざまなJAX-RSクラスは、プロファイル条件（ `@io.quarkus.arc.profile.IfBuildProfile` または `@io.quarkus.arc.profile.UnlessBuildProfile` ）および／またはプロパティ条件（ `io.quarkus.arc.properties.IfBuildProperty` または `io.quarkus.arc.properties.UnlessBuildProperty` ）でアノテーションすることができ、構築時にどの条件でこれらのJAX-RSクラスが含まれるべきかをQuarkusに示すことができます。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2090
#, fuzzy
msgid "In the following example, Quarkus includes the endpoint `sayHello` if and only if the build profile `app1` has been enabled."
msgstr "次の例では、Quarkusは、ビルドプロファイル `app1` が有効になっている場合に限り、エンドポイント `sayHello` を含めます。"

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2095
#, no-wrap
msgid ""
"@IfBuildProfile(\"app1\")\n"
"public class ResourceForApp1Only {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/resteasy-reactive.adoc:2102
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sayHello\")\n"
"    public String sayHello() {\n"
"        return \"hello\";\n"
"     }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2105
#, fuzzy
msgid "Please note that if a JAX-RS Application has been detected and the method `getClasses()` and/or `getSingletons()` has/have been overridden, Quarkus will ignore the build time conditions and consider only what has been defined in the JAX-RS Application."
msgstr "JAX-RSアプリケーションが検出され、メソッド `getClasses()` および／または `getSingletons()` がオーバーライドされている／されている場合、Quarkusはビルド時の条件を無視し、JAX-RSアプリケーションで定義されているもののみを考慮することに注意してください。"

#. type: Title ==
#: upstream/_guides/resteasy-reactive.adoc:2107
#, fuzzy, no-wrap
msgid "RESTEasy Reactive client"
msgstr "RESTEasy Reactiveとは?"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2109
#, fuzzy
msgid "In addition to the Server side, RESTEasy Reactive comes with a new MicroProfile Rest Client implementation that is non-blocking at its core."
msgstr "RESTEasy Reactiveには、サーバー側に加えて、ノンブロッキングを核とした新しいMicroProfile Rest Clientの実装が搭載されています。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2111
#, fuzzy
msgid "Please note that the `quarkus-rest-client` extension may not work properly with RESTEasy Reactive."
msgstr "なお、 `quarkus-rest-client` 拡張機能は、RESTEasy Reactiveでは正常に動作しない場合がありますのでご注意ください。"

#. type: Plain text
#: upstream/_guides/resteasy-reactive.adoc:2112
#, fuzzy
msgid "See xref:rest-client-reactive.adoc[REST Client Reactive Guide] for more information about the reactive client."
msgstr "リアクティブ・クライアントの詳細については、「 link:rest-client-reactive.adoc[RESTクライアント・リアクティブ・ガイド]」を参照してください。"

#, fuzzy
#~ msgid "http://json-b.net/[JSONB support]"
#~ msgstr "link:http://json-b.net/[JSONB サポート]"

#, fuzzy
#~ msgid "By default, RESTEasy Reactive will run endpoint methods on the event-loop threads, on the assumption that they are going to be fast and only invoke non-blocking operations."
#~ msgstr "デフォルトでは、RESTEasy Reactive は、イベントループスレッドが高速で、ノンブロッキング操作のみを呼び出すことを前提に、イベントループスレッド上でエンドポイントメソッドを実行します。"

#, fuzzy
#~ msgid "This is the model of execution that leads to best performance if your endpoints do not do any blocking operation (such as blocking IO, blocking on an asynchronous operation, or sleeping)."
#~ msgstr "これは、エンドポイントがブロッキング操作(IOのブロッキング、非同期操作でのブロッキング、スリープなど)を行わない場合に、最高のパフォーマンスを発揮する実行モデルです。"

#, fuzzy
#~ msgid "If your endpoint method needs to do any of those blocking operations, you should add the https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`] annotation on your endpoint and it will instead be invoked on a worker thread. Your endpoint method code can remain exactly the same, and it will be allowed to block:"
#~ msgstr "エンドポイントメソッドがこれらのブロッキング操作のいずれかを行う必要がある場合は link:https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`] アノテーションを使用すると、ワーカースレッドで起動されるようになります。エンドポイントのメソッドコードはまったく同じままで、ブロックが許可されます。"

#, fuzzy
#~ msgid "`@RestPath` (or nothing)"
#~ msgstr "`@RestPath`"

#, fuzzy
#~ msgid "`@RestQuery`"
#~ msgstr "`@RestQuery`"

#, fuzzy
#~ msgid "`@RestHeader`"
#~ msgstr "`@RestHeader`"

#, fuzzy
#~ msgid "`@RestCookie`"
#~ msgstr "`@RestCookie`"

#, fuzzy
#~ msgid "`@RestForm`"
#~ msgstr "`@RestForm`"

#, fuzzy
#~ msgid "`@RestMatrix`"
#~ msgstr "`@RestMatrix`"

#, fuzzy
#~ msgid "`PathPart`"
#~ msgstr "`PathPart`"

#, fuzzy
#~ msgid "`FilePart`"
#~ msgstr "`FilePart`"

#, fuzzy
#~ msgid "`SimpleResourceInfo`"
#~ msgstr "`SimpleResourceInfo`"

#, fuzzy
#~ msgid "`ServerRequestContext`"
#~ msgstr "`ServerRequestContext`"

#, fuzzy
#~ msgid "link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
#~ msgstr "link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"

#, fuzzy
#~ msgid "To use it, add the `quarkus-rest-client-reactive` extension to your project.  The client can be used as described in https://quarkus.io/guides/rest-client[Using the REST Client guide] and specified in the https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client specification], with a few exceptions:"
#~ msgstr "これを使用するには、 `quarkus-rest-client-reactive` エクステンションをプロジェクトに追加します。このクライアントは、いくつかの例外を除いて、「 link:https://quarkus.io/guides/rest-client[Using the REST Client」ガイド]で説明され、 link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client仕様]で指定されているとおりに使用できます。"

#, fuzzy
#~ msgid "the extension name"
#~ msgstr "拡張子の名前"

#, fuzzy
#~ msgid "the default scope of the client for the new extension is `@ApplicationScoped` while the `quarkus-rest-client` defaults to `@Dependent` To change this behavior, set the `quarkus.rest.client.scope` property to the fully qualified scope name."
#~ msgstr "`@ApplicationScoped` `quarkus-rest-client` `@Dependent` この動作を変更するには、 `quarkus.rest.client.scope` プロパティに完全修飾スコープ名を設定します。"

#, fuzzy
#~ msgid "it is not possible to set `HostnameVerifier` or `SSLContext`"
#~ msgstr "を設定することはできません。 `HostnameVerifier` または `SSLContext`"

#, fuzzy
#~ msgid "a few things that don't make sense for a non-blocking implementations, such as setting the `ExecutorService`, don't work"
#~ msgstr "`ExecutorService` の設定など、ノンブロッキング実装では意味をなさないいくつかの機能が動作しません。"
