# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-04-03 02:23+0000\n"
"PO-Revision-Date: 2021-04-03 10:24+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/spring-web.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Quarkus Extension for Spring Web API"
msgstr "Quarkus - Spring Web API用のQuarkusエクステンション"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:12
#, fuzzy
msgid "While users are encouraged to use JAX-RS annotation for defining REST endpoints, Quarkus provides a compatibility layer for Spring Web in the form of the `spring-web` extension."
msgstr "ユーザーはRESTエンドポイントの定義にJAX-RSアノテーションを使用することが推奨されていますが、QuarkusはSpring Web用の互換性レイヤーを `spring-web` 拡張の形で提供しています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:14
#, fuzzy
msgid "This guide explains how a Quarkus application can leverage the well known Spring Web annotations to define RESTful services."
msgstr "このガイドでは、Quarkusアプリケーションがよく知られているSpring Webアノテーションを活用してRESTfulサービスを定義する方法について説明します。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:20
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:22
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:23
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:24
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:25
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:27
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:31
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:33
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:35
#, fuzzy
msgid "The solution is located in the `spring-web-quickstart` {quickstarts-tree-url}/spring-web-quickstart[directory]."
msgstr "ソリューションは `spring-web-quickstart` {quickstarts-tree-url}/spring-web-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:36
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:39
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:49
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-web-quickstart \\\n"
"    -DclassName=\"org.acme.spring.web.GreetingController\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"spring-web\"\n"
"cd spring-web-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:52
#, fuzzy
msgid "This command generates a Maven project with a REST endpoint and imports the `spring-web` extension."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、 `spring-web` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:55
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `spring-web` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `spring-web` エクステンションを追加することができます。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:59
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-web\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:62 upstream/_guides/spring-web.adoc:211
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:69
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-web.adoc:71
#, fuzzy, no-wrap
msgid "GreetingController"
msgstr "グリーティングコントローラ"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:75
#, fuzzy
msgid "The Quarkus maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default)  The `src/main/java/org/acme/spring/web/GreetingController.java` file looks as follows:"
msgstr "Quarkusのmavenプラグインは、RESTエンドポイントを定義するためのSpring Webアノテーションを持つコントローラを自動的に生成しました(デフォルトで使用されているJAX-RSのものではなく) `src/main/java/org/acme/spring/web/GreetingController.java` ファイルは以下のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:79 upstream/_guides/spring-web.adoc:102
#: upstream/_guides/spring-web.adoc:175
#, no-wrap
msgid "package org.acme.spring.web;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:83
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:87 upstream/_guides/spring-web.adoc:150
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:93
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-web.adoc:95
#, fuzzy, no-wrap
msgid "GreetingControllerTest"
msgstr "グリーティングコントローラテスト"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:98
#, fuzzy
msgid "Note that a test for the controller has been created as well:"
msgstr "コントローラのテストも作成されていることに注意してください。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:105 upstream/_guides/spring-web.adoc:178
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:108 upstream/_guides/spring-web.adoc:181
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:111 upstream/_guides/spring-web.adoc:184
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:120
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:122 upstream/_guides/spring-web.adoc:195
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:124
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:128
#, fuzzy
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr "アプリケーションを実行するには、次の手順を実行します: `./mvnw compile quarkus:dev` .ブラウザを http://localhost:8080/greeting に開きます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:130
#, fuzzy
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr "結果は `{\"message\": \"hello\"}` ."

#. type: Title ==
#: upstream/_guides/spring-web.adoc:131
#, fuzzy, no-wrap
msgid "Run the application as a native executable"
msgstr "アプリケーションをネイティブ実行ファイルとして実行する"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:134
#, fuzzy
msgid "You can of course create a native image using the instructions of the link:building-native-image[Building a native executable guide]."
msgstr "もちろん、 link:building-native-image[ネイティブ実行ファイルの構築ガイド] の指示を使ってネイティブイメージを作成することもできます。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:135
#, fuzzy, no-wrap
msgid "Going further with an endpoint returning JSON"
msgstr "JSONを返すエンドポイントでさらに進む"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:139
#, fuzzy
msgid "The `GreetingController` above was an example of a very simple endpoint. In many cases however it is required to return JSON content.  The following example illustrates how that could be achieved using a Spring RestController:"
msgstr "上の `GreetingController` は非常にシンプルなエンドポイントの例です。しかし多くの場合、JSONコンテンツを返す必要があります。次の例は、Spring RestControllerを使ってどのように実現できるかを示しています。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:146
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.PathVariable;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:155
#, no-wrap
msgid ""
"    @GetMapping(\"/{name}\")\n"
"    public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"        return new Greeting(\"hello \" + name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:158
#, no-wrap
msgid ""
"    public static class Greeting {\n"
"        private final String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:162
#, no-wrap
msgid ""
"        public Greeting(String message) {\n"
"            this.message = message;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:168
#, no-wrap
msgid ""
"        public String getMessage(){\n"
"            return message;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:171
#, fuzzy
msgid "The corresponding test could look like:"
msgstr "対応するテストは次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:193
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting/quarkus\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(\"message\", is(\"hello quarkus\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:198
#, fuzzy
msgid "It should be noted that when using the Spring Web support in Quarkus, link:https://github.com/FasterXML/jackson[Jackson] is automatically added to the classpath and properly setup."
msgstr "注意すべきは、QuarkusでSpring Webサポートを使用する場合、 link:https://github.com/FasterXML/jackson[Jacksonは] 自動的にクラスパスに追加され、適切に設定されることです。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:199
#, fuzzy, no-wrap
msgid "Adding OpenAPI and Swagger-UI"
msgstr "OpenAPIとSwagger-UIの追加"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:202
#, fuzzy
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension."
msgstr "`quarkus-smallrye-openapi` のエクステンションを使用して、 link:https://www.openapis.org/[OpenAPI] と link:https://swagger.io/tools/swagger-ui/[Swagger-UI] のサポートを追加することができます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:204
#, fuzzy
msgid "Add the extension by running this command:"
msgstr "このコマンドを実行してエクステンションを追加します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:208
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:218
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:221
#, fuzzy
msgid "This is enough to generate a basic OpenAPI schema document from your REST Endpoints:"
msgstr "これは、REST エンドポイントから基本的な OpenAPI スキーマドキュメントを生成するのに十分です。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:225
#, no-wrap
msgid "curl http://localhost:8080/q/openapi\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:228
#, fuzzy
msgid "You will see the generated OpenAPI schema document:"
msgstr "生成された OpenAPI スキーマドキュメントが表示されます。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:231 upstream/_guides/spring-web.adoc:314
#, no-wrap
msgid "---\n"
msgstr "—\n"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:268
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            'application/json':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:271
#, fuzzy
msgid "Also see link:openapi-swaggerui[the OpenAPI Guide]"
msgstr "link:https://quarkus.io/guides/openapi-swaggerui[OpenAPIガイド] も参照してください。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:272
#, fuzzy, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr "MicroProfile OpenAPIアノテーションの追加"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:276
#, fuzzy
msgid "You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, example, adding the following to the class level of the `GreetingController`:"
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI を] 使用してスキーマをより良く文書化することができます。例えば、 `GreetingController` .NET Framework のクラスレベルに以下を追加します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:291
#, no-wrap
msgid ""
"@OpenAPIDefinition(\n"
"    info = @Info(\n"
"        title=\"Greeting API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Greeting API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:294
#, fuzzy
msgid "And describe your endpoints like this:"
msgstr "そして、エンドポイントをこのように記述してください。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:302
#, no-wrap
msgid ""
"@Tag(name = \"Hello\", description = \"Just say hello\")\n"
"@GetMapping(produces=MediaType.TEXT_PLAIN_VALUE)\n"
"public String hello() {\n"
"    return \"hello\";\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:308
#, no-wrap
msgid ""
"@GetMapping(value = \"/{name}\", produces=MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Hello to someone\", description = \"Just say hello to someone\")\n"
"public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"    return new Greeting(\"hello \" + name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-web.adoc:311
#, fuzzy
msgid "will generate this OpenAPI schema:"
msgstr "はこのOpenAPIスキーマを生成します。"

#. type: delimited block -
#: upstream/_guides/spring-web.adoc:367
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Greeting API\n"
"  contact:\n"
"    name: Greeting API Support\n"
"    url: http://exampleurl.com/contact\n"
"    email: techsupport@example.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: https://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.1\n"
"tags:\n"
"- name: Hello\n"
"  description: Just say hello\n"
"- name: Hello to someone\n"
"  description: Just say hello to someone\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      tags:\n"
"      - Hello\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      tags:\n"
"      - Hello to someone\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/spring-web.adoc:369
#, fuzzy, no-wrap
msgid "Using Swagger UI"
msgstr "SwaggerのUIを使う"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:373
#, fuzzy
msgid "Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.  See link:openapi-swaggerui#use-swagger-ui-for-development[the Swagger UI] Guide for more details."
msgstr "Swagger UIは、 `Dev` または `Test` モードで実行しているときにデフォルトで含まれており、オプションで `Prod` モードに追加することができます。詳細については、 link:https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development[Swagger] UIガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:375
#, fuzzy
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and you will see the Swagger UI screen:"
msgstr "link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] に移動すると、Swagger UIの画面が表示されます。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:377
#, fuzzy
msgid "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"
msgstr "image:spring-web-guide-screenshot01.png[alt=\"Swagger UI\"]"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:378
#, no-wrap
msgid "Supported Spring Web functionalities"
msgstr "サポートされているSpring Webの機能"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:382
#, fuzzy
msgid "Quarkus currently supports a subset of the functionalities that Spring Web provides. More specifically Quarkus supports the REST related features of Spring Web (think of `@RestController` instead of `@Controller`)."
msgstr "Quarkusは現在、Spring Webが提供する機能のサブセットをサポートしています。より具体的には、QuarkusはSpring WebのREST関連機能をサポートしています( `@Controller` ではなく、 `@RestController` と考えてください)。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:383
#, no-wrap
msgid "Annotations"
msgstr "アノテーション"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:386
#, fuzzy
msgid "The table below summarizes the supported annotations:"
msgstr "下の表は、サポートされているアノテーションをまとめたものです。"

#. type: Block title
#: upstream/_guides/spring-web.adoc:387
#, fuzzy, no-wrap
msgid "Supported Spring Web annotation"
msgstr "サポートされているSpring Webアノテーション"

#. type: Table
#: upstream/_guides/spring-web.adoc:389
#, fuzzy, no-wrap
msgid "Nam"
msgstr "ナム"

#. type: Table
#: upstream/_guides/spring-web.adoc:391 upstream/_guides/spring-web.adoc:473
#, no-wrap
msgid "Comments"
msgstr "コメント"

#. type: Table
#: upstream/_guides/spring-web.adoc:392 upstream/_guides/spring-web.adoc:474
#, no-wrap
msgid "@RestController"
msgstr "@RestController"

#. type: Table
#: upstream/_guides/spring-web.adoc:395
#, no-wrap
msgid "@RequestMapping"
msgstr "@RequestMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:397
#, no-wrap
msgid "@GetMapping"
msgstr "@GetMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:399
#, no-wrap
msgid "@PostMapping"
msgstr "@PostMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:401
#, no-wrap
msgid "@PutMapping"
msgstr "@PutMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:403
#, no-wrap
msgid "@DeleteMapping"
msgstr "@DeleteMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:405
#, no-wrap
msgid "@PatchMapping"
msgstr "@PatchMapping"

#. type: Table
#: upstream/_guides/spring-web.adoc:407 upstream/_guides/spring-web.adoc:490
#, no-wrap
msgid "@RequestParam"
msgstr "@RequestParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:409
#, no-wrap
msgid "@RequestHeader"
msgstr "@RequestHeader"

#. type: Table
#: upstream/_guides/spring-web.adoc:411
#, no-wrap
msgid "@MatrixVariable"
msgstr "@MatrixVariable"

#. type: Table
#: upstream/_guides/spring-web.adoc:413 upstream/_guides/spring-web.adoc:494
#, no-wrap
msgid "@PathVariable"
msgstr "@PathVariable"

#. type: Table
#: upstream/_guides/spring-web.adoc:415
#, no-wrap
msgid "@CookieValue"
msgstr "@CookieValue"

#. type: Table
#: upstream/_guides/spring-web.adoc:417 upstream/_guides/spring-web.adoc:498
#, no-wrap
msgid "@RequestBody"
msgstr "@RequestBody"

#. type: Table
#: upstream/_guides/spring-web.adoc:419 upstream/_guides/spring-web.adoc:506
#, no-wrap
msgid "@ResponseStatus"
msgstr "@ResponseStatus"

#. type: Table
#: upstream/_guides/spring-web.adoc:421 upstream/_guides/spring-web.adoc:510
#, no-wrap
msgid "@ExceptionHandler"
msgstr "@ExceptionHandler"

#. type: Table
#: upstream/_guides/spring-web.adoc:422
#, fuzzy, no-wrap
msgid "Can only be used in a @RestControllerAdvice class, not on a per-controller basis"
msgstr "コントローラ単位ではなく、@RestControllerAdvice クラス内でのみ使用できます。"

#. type: Table
#: upstream/_guides/spring-web.adoc:423 upstream/_guides/spring-web.adoc:502
#, fuzzy, no-wrap
msgid "@RestControllerAdvice"
msgstr "@RestControllerAdvice"

#. type: Table
#: upstream/_guides/spring-web.adoc:424
#, fuzzy, no-wrap
msgid "Only the @ExceptionHandler capability is supported"
msgstr "例外処理能力は @ExceptionHandler のみサポートされています。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:426
#, no-wrap
msgid "Controller method return types"
msgstr "コントローラメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:429 upstream/_guides/spring-web.adoc:444
msgid "The following method return types are supported:"
msgstr "以下のメソッドの戻り値の型がサポートされています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:431
msgid "Primitive types"
msgstr "プリミティブ型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:432
msgid "String (which will be used as a literal, no Spring MVC view support is provided)"
msgstr "文字列 (リテラルとして使用されます。Spring MVC ビューのサポートはありません)"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:433
msgid "POJO classes which will be serialized via JSON"
msgstr "JSON 経由でシリアライズされる POJO クラス"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:434 upstream/_guides/spring-web.adoc:446
msgid "`org.springframework.http.ResponseEntity`"
msgstr "`org.springframework.http.ResponseEntity`"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:435
#, fuzzy, no-wrap
msgid "Controller method parameter types"
msgstr "コントローラメソッドのパラメータータイプ"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:440
#, fuzzy
msgid "In addition to the method parameters that can be annotated with the appropriate Spring Web annotations from the previous table, `javax.servlet.http.HttpServletRequest` and `javax.servlet.http.HttpServletResponse` are also supported.  For this to function however, users need to add the `quarkus-undertow` dependency."
msgstr "前の表の適切なSpring Webアノテーションでアノテーションできるメソッドパラメーターに加えて、 `javax.servlet.http.HttpServletRequest` と `javax.servlet.http.HttpServletResponse` もサポートされています。ただし、これを機能させるためには `quarkus-undertow` 依存関係を追加する必要があります。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:441
#, fuzzy, no-wrap
msgid "Exception handler method return types"
msgstr "例外ハンドラーメソッドの戻り値の型"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:447
msgid "`java.util.Map`"
msgstr "`java.util.Map`"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:449
#, fuzzy
msgid "Other return types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr "Springで言及されている他の戻り値の型 `ExceptionHandler javadoc` はサポートされていません。"

#. type: Title ===
#: upstream/_guides/spring-web.adoc:450
#, fuzzy, no-wrap
msgid "Exception handler method parameter types"
msgstr "例外ハンドラーメソッドのパラメータータイプ"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:453
#, fuzzy
msgid "The following parameter types are supported, in arbitrary order:"
msgstr "以下のパラメータータイプがサポートされています。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:455
#, fuzzy
msgid "An exception argument: declared as a general `Exception` or as a more specific exception. This also serves as a mapping hint if the annotation itself does not narrow the exception types through its `value()`."
msgstr "例外引数:一般的な `Exception` として宣言された例外、またはより具体的な例外として宣言された例外。これは、アノテーション自体が `value()` ."

#. type: Plain text
#: upstream/_guides/spring-web.adoc:456
#, fuzzy
msgid "Request and/or response objects (typically from the Servlet API). You may choose any specific request/response type, e.g. `ServletRequest` / `HttpServletRequest`. To use Servlet API, the `quarkus-undertow` dependency needs to be added."
msgstr "リクエストおよび/またはレスポンスオブジェクト (通常はサーブレット API から)。 `ServletRequest` `HttpServletRequest` 特定のリクエスト/レスポンスタイプを選択することができます。Servlet API を使用するには `quarkus-undertow` 依存関係を追加する必要があります。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:458
#, fuzzy
msgid "Other parameter types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr "Springで言及されている他のパラメータータイプ `ExceptionHandler javadoc` はサポートされていません。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:459
#, fuzzy, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的注意事項"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:465
#, fuzzy
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr "QuarkusのSpringサポートは、Springアプリケーションコンテキストを起動したり、Springインフラストラクチャクラスを実行したりしないことに注意してください。Springクラスやアノテーションは、メタデータの読み込みや、ユーザーコードのメソッドの戻り値の型やパラメーターの型として使用されるだけです。これはエンドユーザーにとって何を意味するかというと、任意のSpringライブラリを追加しても何の効果もないということです。さらに、Springのインフラストラクチャクラス(例えば `org.springframework.beans.factory.config.BeanPostProcessor` のような)は実行されません。"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:466
#, no-wrap
msgid "Conversion Table"
msgstr "変換テーブル"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:469
#, fuzzy
msgid "The following table shows how Spring Web annotations can be converted to JAX-RS annotations."
msgstr "次の表は、Spring WebアノテーションをJAX-RSアノテーションに変換する方法を示しています。"

#. type: Table
#: upstream/_guides/spring-web.adoc:471
#, no-wrap
msgid "Spring"
msgstr "Spring"

#. type: Table
#: upstream/_guides/spring-web.adoc:471
#, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Table
#: upstream/_guides/spring-web.adoc:477
#, fuzzy, no-wrap
msgid "There is no equivalent in JAX-RS. Annotating a class with @Path suffices"
msgstr "JAX-RSにはこれに相当するものはありません。クラスを@Pathでアノテーションすれば十分です。"

#. type: Table
#: upstream/_guides/spring-web.adoc:478
#, no-wrap
msgid "@RequestMapping(path=\"/api\")"
msgstr "@RequestMapping(path=\"/api\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:479
#, no-wrap
msgid "@Path(\"/api\")"
msgstr "@Path(\"/api\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:482
#, no-wrap
msgid "@RequestMapping(consumes=\"application/json\")"
msgstr "@RequestMapping(consumes=\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:483
#, no-wrap
msgid "@Consumes(\"application/json\")"
msgstr "@Consumes(\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:486
#, no-wrap
msgid "@RequestMapping(produces=\"application/json\")"
msgstr "@RequestMapping(produce=\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:487
#, no-wrap
msgid "@Produces(\"application/json\")"
msgstr "@Produces(\"application/json\")"

#. type: Table
#: upstream/_guides/spring-web.adoc:491
#, no-wrap
msgid "@QueryParam"
msgstr "@QueryParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:495
#, no-wrap
msgid "@PathParam"
msgstr "@PathParam"

#. type: Table
#: upstream/_guides/spring-web.adoc:501
#, fuzzy, no-wrap
msgid "No equivalent in JAX-RS. Method parameters corresponding to the body of the request are handled in JAX-RS without requiring any annotation"
msgstr "JAX-RSには同等のものはない。リクエストのボディに対応するメソッドパラメーターは、JAX-RSではアノテーションを必要とせずに処理される。"

#. type: Table
#: upstream/_guides/spring-web.adoc:505 upstream/_guides/spring-web.adoc:509
#, no-wrap
msgid "No equivalent in JAX-RS"
msgstr "JAX-RSには同等のものはありません。"

#. type: Table
#: upstream/_guides/spring-web.adoc:512
#, fuzzy, no-wrap
msgid "No equivalent annotation in JAX-RS. Exceptions are handled by implementing `javax.ws.rs.ext.ExceptionMapper`"
msgstr "JAX-RSには同等のアノテーションはありません。例外は `javax.ws.rs.ext.ExceptionMapper`"

#. type: Title ==
#: upstream/_guides/spring-web.adoc:514
#, no-wrap
msgid "More Spring guides"
msgstr "その他のスプリングガイド"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:517
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:519
msgid "link:spring-di[Quarkus - Extension for Spring DI]"
msgstr "link:spring-di[Quarkus - Spring DIのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:520
msgid "link:spring-data-jpa[Quarkus - Extension for Spring Data JPA]"
msgstr "link:spring-data-jpa[Quarkus - Spring Data JPAのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:521
msgid "link:spring-data-rest[Quarkus - Extension for Spring Data REST]"
msgstr "link:spring-data-rest[Quarkus - Spring Data RESTのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:522
msgid "link:spring-security[Quarkus - Extension for Spring Security]"
msgstr "link:spring-security[Quarkus - Spring Securityのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:523
msgid "link:spring-cloud-config-client[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "link:spring-cloud-config-client[Quarkus - Spring Cloud Config Serverからのプロパティーの読込]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:524
msgid "link:spring-boot-properties[Quarkus - Extension for Spring Boot properties]"
msgstr "link:spring-boot-properties[Quarkus - Spring Bootプロパティーのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:525
msgid "link:spring-cache[Quarkus - Extension for Spring Cache]"
msgstr "link:spring-cache[Quarkus - Spring Cacheのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-web.adoc:525
msgid "link:spring-scheduled[Quarkus - Extension for Spring Scheduled]"
msgstr "link:spring-scheduled[Quarkus - Spring Scheduledのためのエクステンション]"

#, fuzzy
#~ msgid "@RequestController"
#~ msgstr "リクエストコントローラ"
