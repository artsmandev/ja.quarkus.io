msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: doc-l10n-kit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Quarkus Virtual Thread support with Reactive Messaging"
msgstr "Reactive MessagingによるQuarkus仮想スレッドのサポート"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
msgid "This guide explains how to benefit from Java virtual threads when writing message processing applications in Quarkus."
msgstr "このガイドでは、Quarkusでメッセージ処理アプリケーションを記述する際に、Java仮想スレッドを利用する方法について説明します。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"This guide focuses on using virtual threads with Reactive Messaging extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support for REST services."
msgstr "このガイドでは、Reactive Messagingエクステンションで仮想スレッドを使用することに重点を置いています。一般的なJava仮想スレッドと、RESTサービス向けのQuarkus仮想スレッドのサポートについては、「 xref:virtual-threads.adoc[Quarkus仮想スレッドサポートを使用した、よりシンプルなリアクティブRESTサービスの作成] 」を参照してください。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"For reference guides of specific Reactive Messaging extensions see xref:kafka.adoc[Apache Kafka Reference Guide],\n"
"xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 Connector], xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ Connector] or xref:pulsar.adoc[Apache Pulsar Reference Guide]."
msgstr "特定のReactive Messagingエクステンションのリファレンス・ガイドについては、 xref:kafka.adoc[Apache Kafkaリファレンス・ガイド] 、 xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 Connector] 、 xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ Connector] 、または xref:pulsar.adoc[Apache Pulsarリファレンス・ガイド] を参照してください。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"By default, Reactive Messaging invokes message processing methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you sometimes need to combine Reactive Messaging with blocking processing such as calling external services or database operations.\n"
"For this, you can use the link:{rm_blocking_annotation}[@Blocking] annotation indicating that the processing is _blocking_ and should be run on a worker thread.\n"
"You can read more on the blocking processing in link:{rm_blocking_docs}[SmallRye Reactive Messaging documentation]."
msgstr "デフォルトでは、Reactive Messagingはイベントループスレッドでメッセージ処理メソッドを呼び出します。このトピックの詳細については、 xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architectureのドキュメント] を参照してください。しかし、外部サービスやデータベース操作の呼び出しなど、Reactive Messagingとブロッキング処理を組み合わせる必要がある場合もあります。この場合、 link:{rm_blocking_annotation}[@Blocking] アノテーションを使用して、処理が _ブロッキングさ_ れ、ワーカースレッドで実行される必要があることを示すことができます。ブロッキング処理については、 link:{rm_blocking_docs}[SmallRye Reactive Messagingのドキュメント] を参照してください。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"The idea behind Quarkus Virtual Thread support for Reactive Messaging is to offload the message processing on virtual threads,\n"
"instead of running it on an event-loop thread or a worker thread."
msgstr "Quarkusの仮想スレッドによるリアクティブメッセージングサポートの背後にある考え方は、イベントループスレッドやワーカースレッドで実行する代わりに、仮想スレッドでメッセージ処理をオフロードすることです。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"To enable virtual thread support on a message consumer method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions) then each incoming message will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr "メッセージ・コンシューマ・メソッドで仮想スレッドのサポートを有効にするには、メソッドに link:{runonvthread}[@RunOnVirtualThread] アノテーションを追加するだけです。JDK に互換性がある場合 (Java 19 またはそれ以降のバージョン)、受信メッセージはそれぞれ新しい仮想スレッドにオフロードされます。これにより、仮想スレッドがマウントされているプラットフォーム・スレッドをブロックすることなく、ブロッキング処理を実行できるようになります。"

#. type: Title ==
#: _guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Example using the Reactive Messaging Kafka extension"
msgstr "Reactive Messaging Kafkaエクステンションを使用した例"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Let's see an example of how to process Kafka records on virtual threads.\n"
"First, make sure to have a reactive messaging extension dependency to your build file:"
msgstr "仮想スレッドで Kafka レコードを処理する例を見てみましょう。まず、ビルドファイルにリアクティブメッセージング拡張の依存関係があることを確認してください："

#. type: Block title
#: _guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "You also need to make sure that you are using Java 19 or later, this can be enforced in your `pom.xml` file with the following:"
msgstr "また、Java 19以降を使用していることを確認する必要があります。これは、 `pom.xml` ファイルで以下のように指定します："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "Virtual threads are still a preview feature, so you need to start your application with the `--enable-preview` flag:"
msgstr "仮想スレッドはまだプレビュー機能なので、 `--enable-preview` フラグを付けてアプリケーションを起動する必要がある："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr "または、Quarkus Devモードを使用するには、 `quarkus-maven-plugin` の設定に以下を挿入します："

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Then you can start using the annotation `@RunOnVirtualThread` on your consumer methods also annotated with `@Incoming`.\n"
"In the following example we'll use the xref:rest-client-reactive.adoc[RESTEasy Reactive REST Client] to make a blocking call to a REST endpoint:"
msgstr "`@RunOnVirtualThread` `@Incoming` 次の例では、 xref:rest-client-reactive.adoc[RESTEasy Reactive REST Client] を使用して、REST エンドポイントにブロッキング呼び出しを行います："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@RunOnVirtualThread` annotation on the `@Incoming` method ensures that the method will be called on a virtual thread."
msgstr "`@RunOnVirtualThread` `@Incoming` メソッドのアノテーションは、メソッドが仮想スレッド上で呼び出されることを保証します。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "the REST client stub is injected with the `@RestClient` annotation."
msgstr "RESTクライアントのスタブは、 `@RestClient` アノテーションで注入されます。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`alert` method blocks the virtual thread until the REST call returns."
msgstr "`alert` メソッドは、REST呼び出しが戻るまで仮想スレッドをブロックする。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "This `@Outgoing` method generates random prices and writes them a Kafka topic to be consumed back by the application."
msgstr "この `@Outgoing` メソッドは、ランダムな価格を生成し、Kafkaトピックに書き込み、アプリケーションで消費し返す。"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Note that by default Reactive Messaging message processing happens sequentially, preserving the order of messages.\n"
"In the same way, `@Blocking(ordered = false)` annotation changes this behaviour,\n"
"using `@RunOnVirtualThread` enforces concurrent message processing without preserving the order."
msgstr "デフォルトでは、Reactive Messaging のメッセージ処理はメッセージの順序を保ったまま順次に行われます。同じように、 `@Blocking(ordered = false)` アノテーションはこの振る舞いを変更します。 `@RunOnVirtualThread` を使用すると、順序を保持せずに同時並行的なメッセージ処理が強制されます。"

#. type: Title ==
#: _guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Use the @RunOnVirtualThread annotation"
msgstr "RunOnVirtualThreadアノテーションを使用する。"

#. type: Title ===
#: _guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Methods signatures eligible to @RunOnVirtualThread"
msgstr "RunOnVirtualThreadの対象となるメソッドのシグネチャ"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Only method can be annotated with `@Blocking` can use `@RunOnVirtualThreads`.\n"
"The eligible method signatures are:"
msgstr "`@RunOnVirtualThreads` を使用できるのは、 `@Blocking` でアノテーションされたメソッドだけです。対象となるメソッドのシグネチャは以下の通りです："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Outgoing(\"channel-out\") O generator()`"
msgstr "`@Outgoing(\"channel-out\") O generator()`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Outgoing(\"channel-out\")  Message<O> generator()`"
msgstr "`@Outgoing(\"channel-out\") Message<O> generator()`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") void consume(I in)`"
msgstr "`@Incoming(\"channel-in\") void consume(I in)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"

#. type: Title ===
#: _guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Use of @RunOnVirtualThread annotation on methods and classes"
msgstr "メソッドとクラスでの@RunOnVirtualThreadアノテーションの使用"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "You can use the `@RunOnVirtualThread` annotation:"
msgstr "`@RunOnVirtualThread` ："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "directly on a reactive messaging method - this method will be considered _blocking_ and executed on a virtual thread"
msgstr "リアクティブ・メッセージング・メソッドを直接実行する - このメソッドは _ブロッキングと_ みなされ、仮想スレッド上で実行される。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "on the class containing reactive messaging methods - the methods from this class annotation with `@Blocking` will be executed on virtual thread, except if the annotation defines a pool name configured to use regular worker threads"
msgstr "リアクティブ・メッセージング・メソッドを含むクラス上で、 `@Blocking` を持つこのクラス・アノテーションからのメソッドは、通常のワーカー・スレッドを使用するように設定されたプール名を定義するアノテーションを除いて、仮想スレッド上で実行されます。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "For example, you can use `@RunOnVirtualThread` directly on the method:"
msgstr "例えば、 `@RunOnVirtualThread` ："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "Alternatively, you can use `@RunOnVirtualThread` on the class itself:"
msgstr "あるいは、クラス自体に `@RunOnVirtualThread` ："

#. type: Title ==
#: _guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Control the maximum concurrency"
msgstr "最大同時実行数の制御"

#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"In order to leverage the lightweight nature of virtual threads, the default maximum concurrency for methods annotated with `@RunOnVirtualThread` is 1024.\n"
"As opposed to platform threads, virtual threads are not pooled and created per message. Therefore the maximum concurrency applies separately to all `@RunOnVirtualThread` methods."
msgstr "仮想スレッドの軽量性を活用するため、 `@RunOnVirtualThread` でアノテートされたメソッドのデフォルトの最大同時実行数は 1024 です。プラットフォームのスレッドとは対照的に、仮想スレッドはプールされず、メッセージごとに作成されます。そのため、最大同時実行数はすべての `@RunOnVirtualThread` メソッドに個別に適用されます。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "There are two ways to customize the concurrency level:"
msgstr "同時実行レベルをカスタマイズする方法は2つある："

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "The `@RunOnVirtualThread` annotation can be used together with the link:{rm_blocking_annotation}[@Blocking] annotation to specify a worker name."
msgstr "`@RunOnVirtualThread` アノテーションは、 link:{rm_blocking_annotation}[@Blocking] アノテーションと一緒に使ってワーカー名を指定することができます。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "Then, for example, to set the maximum concurrency of this method down to 30, set using the config property `smallrye.messaging.worker.my-worker.max-concurrency=30`."
msgstr "例えば、このメソッドの最大同時実行数を30に設定するには、設定プロパティ `smallrye.messaging.worker.my-worker.max-concurrency=30` を使用する。"

#. type: Plain text
#: _guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "For every `@RunOnVirtualThread` method that is not configured with a worker name, you can use the config property `smallrye.messaging.worker.<virtual-thread>.max-concurrency`."
msgstr "ワーカー名が設定されていない全ての `@RunOnVirtualThread` メソッドに対して、設定プロパティ `smallrye.messaging.worker.<virtual-thread>.max-concurrency` を使うことができます。"
