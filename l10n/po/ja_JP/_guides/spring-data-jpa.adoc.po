# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-02-02 14:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/spring-data-jpa.adoc:6
#, fuzzy, no-wrap
msgid "Extension for Spring Data API"
msgstr "Quarkus - Spring Data APIのエクステンション"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:12
#, fuzzy
msgid "While users are encouraged to use Hibernate ORM with Panache for Relational Database access, Quarkus provides a compatibility layer for Spring Data JPA repositories in the form of the `spring-data-jpa` extension."
msgstr "ユーザーはHibernate ORM with Panacheをリレーショナルデータベースにアクセスするために使用することが推奨されていますが、QuarkusはSpring Data JPAリポジトリ用の互換性レイヤーを `spring-data-jpa` エクステンションの形で提供しています。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:16
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:18
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:19
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:20
#, fuzzy
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:21
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:22
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:26
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:28
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:30
#, fuzzy
msgid "The solution is located in the `spring-data-jpa-quickstart` {quickstarts-tree-url}/spring-data-jpa-quickstart[directory]."
msgstr "ソリューションは `spring-data-jpa-quickstart` {quickstarts-tree-url}/spring-data-jpa-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:31
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:34
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:44
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-data-jpa-quickstart \\\n"
"    -DclassName=\"org.acme.spring.data.jpa.FruitResource\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"resteasy,spring-data-jpa,resteasy-jackson,quarkus-jdbc-postgresql\"\n"
"cd spring-data-jpa-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:47
#, fuzzy
msgid "This command generates a Maven project with a REST endpoint and imports the `spring-data-jpa` extension."
msgstr "このコマンドは、RESTエンドポイントを持つMavenプロジェクトを生成し、 `spring-data-jpa` エクステンションをインポートします。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:50
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `spring-data-jpa` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `spring-data-jpa` エクステンションを追加することができます。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:54
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-data-jpa\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:57
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:64
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-data-jpa</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:66
#, fuzzy, no-wrap
msgid "Define the Entity"
msgstr "エンティティーの定義"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:69
#, fuzzy
msgid "Throughout the course of this guide, the following JPA Entity will be used:"
msgstr "このガイドでは、以下のJPAエンティティーを使用します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:73
#: upstream/_guides/spring-data-jpa.adoc:175
#: upstream/_guides/spring-data-jpa.adoc:197
#: upstream/_guides/spring-data-jpa.adoc:272
#: upstream/_guides/spring-data-jpa.adoc:438
#, no-wrap
msgid "package org.acme.spring.data.jpa;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:77
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.GeneratedValue;\n"
"import javax.persistence.Id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:80
#, no-wrap
msgid ""
"@Entity\n"
"public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:84
#, no-wrap
msgid ""
"    @Id\n"
"    @GeneratedValue\n"
"    private Long id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:86
#, no-wrap
msgid "    private String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:88
#, no-wrap
msgid "    private String color;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:92
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""
"    public Fruit() {\n"
"    }\n"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:97
#, no-wrap
msgid ""
"    public Fruit(String name, String color) {\n"
"        this.name = name;\n"
"        this.color = color;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:101
#, no-wrap
msgid ""
"    public Long getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:105
#, no-wrap
msgid ""
"    public void setId(Long id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:109
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:113
#, no-wrap
msgid ""
"    public void setName(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:117
#, no-wrap
msgid ""
"    public String getColor() {\n"
"        return color;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:122
#, no-wrap
msgid ""
"    public void setColor(String color) {\n"
"        this.color = color;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:125
#, fuzzy, no-wrap
msgid "Configure database access properties"
msgstr "データベースアクセスのプロパティーを設定する"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:128
#, fuzzy
msgid "Add the following properties to `application.properties` to configure access to a local PostgreSQL instance."
msgstr "`application.properties` に以下のプロパティーを追加して、ローカル PostgreSQL インスタンスへのアクセスを設定します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:138
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:quarkus_test\n"
"quarkus.datasource.jdbc.max-size=8\n"
"quarkus.datasource.jdbc.min-size=2\n"
"quarkus.hibernate-orm.database.generation=drop-and-create\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:141
#, fuzzy
msgid "This configuration assumes that PostgreSQL will be running locally."
msgstr "この設定は、PostgreSQLがローカルで実行されていることを前提としています。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:143
#, fuzzy
msgid "A very easy way to accomplish that is by using the following Docker command:"
msgstr "非常に簡単な方法は、以下のDockerコマンドを使用することです。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:147
#, no-wrap
msgid "docker run -it --rm=true --name quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:14.1\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:150
#, fuzzy
msgid "If you plan on using a different setup, please change your `application.properties` accordingly."
msgstr "別の設定を使用する予定がある場合は、それに応じて `application.properties` を変更してください。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:151
#, fuzzy, no-wrap
msgid "Prepare the data"
msgstr "データを準備する"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:155
#, fuzzy
msgid "To make it easier to showcase some capabilities of Spring Data JPA on Quarkus, some test data should be inserted into the database by adding the following content to a new file named `src/main/resources/import.sql`:"
msgstr "Quarkus上でSpring Data JPAのいくつかの機能を簡単に披露できるようにするために、以下の内容を `src/main/resources/import.sql` という名前の新しいファイルに追加して、いくつかのテストデータをデータベースに挿入します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:163
#, no-wrap
msgid ""
"INSERT INTO fruit(id, name, color) VALUES (1, 'Cherry', 'Red');\n"
"INSERT INTO fruit(id, name, color) VALUES (2, 'Apple', 'Red');\n"
"INSERT INTO fruit(id, name, color) VALUES (3, 'Banana', 'Yellow');\n"
"INSERT INTO fruit(id, name, color) VALUES (4, 'Avocado', 'Green');\n"
"INSERT INTO fruit(id, name, color) VALUES (5, 'Strawberry', 'Red');\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:166
#, fuzzy
msgid "Hibernate ORM will execute these queries on application startup."
msgstr "Hibernate ORMはアプリケーションの起動時にこれらのクエリを実行します。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:167
#, fuzzy, no-wrap
msgid "Define the repository"
msgstr "リポジトリの定義"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:171
#, fuzzy
msgid "It is now time to define the repository that will be used to access `Fruit`.  In a typical Spring Data fashion create a repository like so:"
msgstr "次は、 `Fruit` にアクセスするために使用するリポジトリを定義します。典型的なSpring Dataのやり方で、以下のようなリポジトリを作成します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:177
#, no-wrap
msgid "import org.springframework.data.repository.CrudRepository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:179
#: upstream/_guides/spring-data-jpa.adoc:472
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:181
#, no-wrap
msgid "public interface FruitRepository extends CrudRepository<Fruit, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:184
#, no-wrap
msgid ""
"    List<Fruit> findByColor(String color);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:189
#, fuzzy
msgid "The `FruitRepository` above extends Spring Data's `org.springframework.data.repository.CrudRepository` which means that all of the latter's methods are available to `FruitRepository`.  Additionally `findByColor` is defined whose purpose is to return all Fruit entities that match the specified color."
msgstr "上記の `FruitRepository` は Spring Data の `org.springframework.data.repository.CrudRepository` を拡張したもので、後者のメソッドはすべて `FruitRepository` で利用できることを意味します。さらに `findByColor` が定義されており、その目的は指定された色に一致するすべてのフルーツエンティティーを返すことです。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:190
#, fuzzy, no-wrap
msgid "Update the JAX-RS resource"
msgstr "JAX-RSリソースの更新"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:193
#, fuzzy
msgid "With the repository in place, the next order of business is to update the JAX-RS resource that will use the `FruitRepository`. Open `FruitResource` and change its contents to:"
msgstr "リポジトリが設置されたので、次の作業は `FruitRepository` を使用する JAX-RS リソースを更新することです。 `FruitResource` を開き、その内容を変更します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:203
#, no-wrap
msgid ""
"import javax.ws.rs.DELETE;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:205
#, no-wrap
msgid "import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:208
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Optional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:211
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:213
#, no-wrap
msgid "    private final FruitRepository fruitRepository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:217
#, no-wrap
msgid ""
"    public FruitResource(FruitRepository fruitRepository) {\n"
"        this.fruitRepository = fruitRepository;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:222
#, no-wrap
msgid ""
"    @GET\n"
"    public Iterable<Fruit> findAll() {\n"
"        return fruitRepository.findAll();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:229
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"{id}\")\n"
"    public void delete(@PathParam long id) {\n"
"        fruitRepository.deleteById(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:235
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/name/{name}/color/{color}\")\n"
"    public Fruit create(@PathParam String name, @PathParam String color) {\n"
"        return fruitRepository.save(new Fruit(name, color));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:245
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"/id/{id}/color/{color}\")\n"
"    public Fruit changeColor(@PathParam Long id, @PathParam String color) {\n"
"        Optional<Fruit> optional = fruitRepository.findById(id);\n"
"        if (optional.isPresent()) {\n"
"            Fruit fruit = optional.get();\n"
"            fruit.setColor(color);\n"
"            return fruitRepository.save(fruit);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:248
#, no-wrap
msgid ""
"        throw new IllegalArgumentException(\"No Fruit with id \" + id + \" exists\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:255
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/color/{color}\")\n"
"    public List<Fruit> findByColor(@PathParam String color) {\n"
"        return fruitRepository.findByColor(color);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:259
#, fuzzy
msgid "`FruitResource` now provides a few REST endpoints that can be used to perform CRUD operation on `Fruit`."
msgstr "`FruitResource` は、 `Fruit` の CRUD 操作を実行するために使用できるいくつかの REST エンドポイントを提供するようになりました。"

#. type: Title ===
#: upstream/_guides/spring-data-jpa.adoc:260
#, fuzzy, no-wrap
msgid "Note on Spring Web"
msgstr "Spring Webに関する注意事項"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:264
#, fuzzy
msgid "The JAX-RS resource can also be substituted with a Spring Web controller as Quarkus supports REST endpoint definition using Spring controllers.  See the xref:spring-web.adoc[Spring Web guide] for more details."
msgstr "JAX-RSリソースは、QuarkusがSpringコントローラを使用したRESTエンドポイント定義をサポートしているため、Spring Webコントローラで代用することもできます。詳細については、S link:spring-web[pring Webガイド] を参照してください。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:265
#, fuzzy, no-wrap
msgid "Update the test"
msgstr "テストの更新"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:268
#, fuzzy
msgid "To test the capabilities of `FruitRepository` proceed to update the content of `FruitResourceTest` to:"
msgstr "`FruitRepository` の機能をテストするには、 `FruitResourceTest` のコンテンツを更新してください。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:275
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:281
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.containsString;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
"import static org.hamcrest.CoreMatchers.notNullValue;\n"
"import static org.hamcrest.core.IsNot.not;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:284
#, no-wrap
msgid ""
"@QuarkusTest\n"
"class FruitResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:297
#, no-wrap
msgid ""
"    @Test\n"
"    void testListAllFruits() {\n"
"        //List all, should have all 3 fruits the database has initially:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        containsString(\"Cherry\"),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Banana\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:304
#, no-wrap
msgid ""
"        //Delete the Cherry:\n"
"        given()\n"
"                .when().delete(\"/fruits/1\")\n"
"                .then()\n"
"                .statusCode(204)\n"
"        ;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:315
#, no-wrap
msgid ""
"        //List all, cherry should be missing now:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        not(containsString(\"Cherry\")),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Banana\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:324
#, no-wrap
msgid ""
"        //Create a new Fruit\n"
"        given()\n"
"                .when().post(\"/fruits/name/Orange/color/Orange\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"Orange\"))\n"
"                .body(\"id\", notNullValue())\n"
"                .extract().body().jsonPath().getString(\"id\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:336
#, no-wrap
msgid ""
"        //List all, Orange should be present now:\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        not(containsString(\"Cherry\")),\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Orange\")\n"
"                );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:345
#, no-wrap
msgid ""
"    @Test\n"
"    void testFindByColor() {\n"
"        //Find by color that no fruit has\n"
"        given()\n"
"                .when().get(\"/fruits/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(0));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:355
#, no-wrap
msgid ""
"        //Find by color that multiple fruits have\n"
"        given()\n"
"                .when().get(\"/fruits/color/Red\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\n"
"                        containsString(\"Apple\"),\n"
"                        containsString(\"Strawberry\")\n"
"                );\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:363
#, no-wrap
msgid ""
"        //Find by color that matches\n"
"        given()\n"
"                .when().get(\"/fruits/color/Green\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(1))\n"
"                .body(containsString(\"Avocado\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:370
#, no-wrap
msgid ""
"        //Update color of Avocado\n"
"        given()\n"
"                .when().put(\"/fruits/id/4/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(containsString(\"Black\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:382
#, no-wrap
msgid ""
"        //Find by color that Avocado now has\n"
"        given()\n"
"                .when().get(\"/fruits/color/Black\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(1))\n"
"                .body(\n"
"                        containsString(\"Black\"),\n"
"                        containsString(\"Avocado\")\n"
"                );\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:384
#: upstream/_guides/spring-data-jpa.adoc:497
#, no-wrap
msgid "}\n"
msgstr "}\n"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:387
#, fuzzy
msgid "The test can be easily run by issuing: `./mvnw test`"
msgstr "発行することで簡単にテストを実行することができます。 `./mvnw test`"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:388
#, no-wrap
msgid "Package and run the application"
msgstr "アプリケーションをパッケージ化して実行する"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:392
#, fuzzy
msgid "Quarkus dev mode works with the defined repositories just like with any other Quarkus extension, greatly enhancing your productivity during the dev cycle.  The application can be started in dev mode as usual using:"
msgstr "Quarkusの開発モードでは、他のQuarkusエクステンションと同様に定義されたリポジトリを使用して動作するため、開発サイクル中の生産性が大幅に向上します。を使用して、通常通りにアプリケーションをdevモードで起動することができます。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:396
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr "./mvnw compile quarkus:dev\n"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:398
#, fuzzy, no-wrap
msgid "Run the application as a native binary"
msgstr "アプリケーションをネイティブバイナリーとして実行する"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:401
#, fuzzy
msgid "You can of course create a native executable following the instructions of the xref:building-native-image.adoc[this] guide."
msgstr "もちろん、 link:building-native-image[この] ガイドの指示に従ってネイティブの実行ファイルを作成することができます。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:402
#, fuzzy, no-wrap
msgid "Supported Spring Data JPA functionalities"
msgstr "サポートされているSpring Data JPAの機能"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:405
#, fuzzy
msgid "Quarkus currently supports a subset of Spring Data JPA's features, namely the most useful and most commonly used features."
msgstr "Quarkusは現在、Spring Data JPAの機能のサブセット、つまり最も便利でよく使われる機能をサポートしています。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:410
#, fuzzy
msgid "An important part of this support is that all repository generation is done at build time thus ensuring that all supported features work correctly in native mode.  Moreover, developers know at build time whether or not their repository method names can be converted to proper JPQL queries.  This also means that if a method name indicates that a field should be used that is not part of the Entity, developers will get the relevant error at build time."
msgstr "このサポートの重要な部分は、すべてのリポジトリ生成がビルド時に行われるため、サポートされているすべての機能がネイティブモードで正しく動作することを保証していることです。さらに、開発者はビルド時にリポジトリのメソッド名を適切な JPQL クエリに変換できるかどうかを知ることができます。これは、メソッド名が Entity の一部ではないフィールドを使用すべきであることを示している場合、開発者はビルド時に関連するエラーを取得することも意味します。"

#. type: Title ===
#: upstream/_guides/spring-data-jpa.adoc:411
#, fuzzy, no-wrap
msgid "What is supported"
msgstr "サポートされているもの"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:414
#, fuzzy
msgid "The following sections described the most important supported features of Spring Data JPA."
msgstr "以下のセクションでは、Spring Data JPAの最も重要なサポート機能について説明しました。"

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:415
#, fuzzy, no-wrap
msgid "Automatic repository implementation generation"
msgstr "リポジトリ実装の自動生成"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:418
#, fuzzy
msgid "Interfaces that extend any of the following Spring Data repositories are automatically implemented:"
msgstr "以下のSpring Dataリポジトリのいずれかを拡張するインターフェイスは自動的に実装されます。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:420
#, fuzzy
msgid "`org.springframework.data.repository.Repository`"
msgstr "`org.springframework.data.repository.Repository`"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:421
#, fuzzy
msgid "`org.springframework.data.repository.CrudRepository`"
msgstr "`org.springframework.data.repository.CrudRepository`"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:422
#, fuzzy
msgid "`org.springframework.data.repository.PagingAndSortingRepository`"
msgstr "`org.springframework.data.repository.PagingAndSortingRepository`"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:423
#, fuzzy
msgid "`org.springframework.data.jpa.repository.JpaRepository`"
msgstr "`org.springframework.data.jpa.repository.JpaRepository`"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:426
#, fuzzy
msgid "The generated repositories are also registered as beans so they can be injected into any other bean.  Furthermore the methods that update the database are automatically annotated with `@Transactional`."
msgstr "生成されたリポジトリはBeanとしても登録されているので、他のBeanに注入することができます。さらに、データベースを更新するメソッドには、自動的に `@Transactional` ."

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:427
#, fuzzy, no-wrap
msgid "Fine tuning of repository definition"
msgstr "リポジトリ定義の微調整"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:431
#, fuzzy
msgid "This allows user defined repository interfaces to cherry-pick methods from any of the supported Spring Data repository interfaces without having to extend those interfaces.  This is particularly useful when for example a repository needs to use some methods from `CrudRepository` but it's undesirable to expose the full list of methods of said interface."
msgstr "これにより、ユーザー定義のリポジトリインターフェースを拡張することなく、サポートされているSpring Dataリポジトリインターフェースからメソッドを選択することができます。これは、例えば、リポジトリが `CrudRepository` からいくつかのメソッドを使用する必要があるが、インターフェースのメソッドの完全なリストを公開するのは望ましくない場合に特に便利です。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:434
#, fuzzy
msgid "Assume for example that a `PersonRepository` that shouldn't extend `CrudRepository` but would like to use `save` and `findById` methods which are defined in said interface.  In such a case, `PersonRepository` would look like so:"
msgstr "例えば、 `CrudRepository` を拡張するべきではないが、 `save` と `findById` のメソッドを使いたい `PersonRepository` があるとします。このような場合、 `PersonRepository` は次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:440
#, no-wrap
msgid "import org.springframework.data.repository.Repository;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:442
#, no-wrap
msgid "public interface PersonRepository extends Repository<Person, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:444
#, no-wrap
msgid "    Person save(Person entity);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:447
#, no-wrap
msgid ""
"    Optional<Person> findById(Person entity);\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:449
#, fuzzy, no-wrap
msgid "Customizing individual repositories using repository fragments"
msgstr "リポジトリフラグメントを使用して個々のリポジトリをカスタマイズする"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:453
#, fuzzy
msgid "Repositories can be enriched with additional functionality or override the default implementation of methods of the supported Spring Data repositories.  This is best shown with an example."
msgstr "リポジトリは、サポートされているSpring Dataリポジトリのメソッドのデフォルトの実装をオーバーライドしたり、機能を追加したりすることができます。これは例を見ていただくのが一番です。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:455
#, fuzzy
msgid "A repository fragment is defined as so:"
msgstr "リポジトリフラグメントは、そのように定義されています。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:459
#, no-wrap
msgid "public interface PersonFragment {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:462
#, no-wrap
msgid ""
"    // custom findAll\n"
"    List<Person> findAll();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:465
#, no-wrap
msgid ""
"    void makeNameUpperCase(Person person);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:468
#, fuzzy
msgid "The implementation of that fragment looks like this:"
msgstr "そのフラグメントの実装は次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:474
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.runtime.JpaOperations;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:476
#, no-wrap
msgid "public class PersonFragmentImpl implements PersonFragment {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:482
#, no-wrap
msgid ""
"    @Override\n"
"    public List<Person> findAll() {\n"
"        // do something here\n"
"        return (List<Person>) JpaOperations.findAll(Person.class).list();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:488
#, no-wrap
msgid ""
"    @Override\n"
"    public void makeNameUpperCase(Person person) {\n"
"        person.setName(person.getName().toUpperCase());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:491
#, fuzzy
msgid "Then the actual `PersonRepository` interface to be used would look like:"
msgstr "そうすると、実際に使用される `PersonRepository` インターフェイスは次のようになります。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:495
#, no-wrap
msgid "public interface PersonRepository extends JpaRepository<Person, Long>, PersonFragment {\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:499
#, fuzzy, no-wrap
msgid "Derived query methods"
msgstr "派生クエリメソッド"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:503
#, fuzzy
msgid "Methods of repository interfaces that follow the Spring Data conventions can be automatically implemented (unless they fall into one of the unsupported cases listed later on).  This means that methods like the following will all work:"
msgstr "Spring Dataの規約に従ったリポジトリインターフェースのメソッドは自動的に実装されます(後述のサポートされていないケースに該当しない限り)。つまり、以下のようなメソッドはすべて動作します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:507
#, no-wrap
msgid "public interface PersonRepository extends CrudRepository<Person, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:509
#, no-wrap
msgid "    List<Person> findByName(String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:511
#, no-wrap
msgid "    Person findByNameBySsn(String ssn);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:513
#, no-wrap
msgid "    Optional<Person> findByNameBySsnIgnoreCase(String ssn);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:515
#, no-wrap
msgid "    boolean existsBookByYearOfBirthBetween(Integer start, Integer end);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:517
#, no-wrap
msgid "    List<Person> findByName(String name, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:519
#, no-wrap
msgid "    Page<Person> findByNameOrderByJoined(String name, Pageable pageable);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:521
#, no-wrap
msgid "    List<Person> findByNameOrderByAge(String name);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:523
#, no-wrap
msgid "    List<Person> findByNameOrderByAgeDesc(String name, Pageable pageable);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:525
#, no-wrap
msgid "    List<Person> findByAgeBetweenAndNameIsNotNull(int lowerAgeBound, int upperAgeBound);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:527
#, no-wrap
msgid "    List<Person> findByAgeGreaterThanEqualOrderByAgeAsc(int age);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:529
#, no-wrap
msgid "    List<Person> queryByJoinedIsAfter(Date date);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:531
#, no-wrap
msgid "    Collection<Person> readByActiveTrueOrderByAgeDesc();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:533
#, no-wrap
msgid "    Long countByActiveNot(boolean active);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:535
#, no-wrap
msgid "    List<Person> findTop3ByActive(boolean active, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:538
#, no-wrap
msgid ""
"    Stream<Person> findPersonByNameAndSurnameAllIgnoreCase(String name, String surname);\n"
"}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:540
#, fuzzy, no-wrap
msgid "User defined queries"
msgstr "ユーザー定義クエリ"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:543
#, fuzzy
msgid "User supplied queries contained in the `@Query` annotation. For example things like the following all work:"
msgstr "`@Query` 注釈に含まれるユーザー提供のクエリー。例えば、以下のようなものはすべて動作します。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:547
#, no-wrap
msgid "public interface MovieRepository extends CrudRepository<Movie, Long> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:549
#, no-wrap
msgid "    Movie findFirstByOrderByDurationDesc();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:552
#, no-wrap
msgid ""
"    @Query(\"select m from Movie m where m.rating = ?1\")\n"
"    Iterator<Movie> findByRating(String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:555
#, no-wrap
msgid ""
"    @Query(\"from Movie where title = ?1\")\n"
"    Movie findByTitle(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:558
#, no-wrap
msgid ""
"    @Query(\"select m from Movie m where m.duration > :duration and m.rating = :rating\")\n"
"    List<Movie> withRatingAndDurationLargerThan(@Param(\"duration\") int duration, @Param(\"rating\") String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:561
#, no-wrap
msgid ""
"    @Query(\"from Movie where title like concat('%', ?1, '%')\")\n"
"    List<Object[]> someFieldsWithTitleLike(String title, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:565
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"delete from Movie where rating = :rating\")\n"
"    void deleteByRating(@Param(\"rating\") String rating);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:569
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"delete from Movie where title like concat('%', ?1, '%')\")\n"
"    Long deleteByTitleLike(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:573
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"update Movie m set m.rating = :newName where m.rating = :oldName\")\n"
"    int changeRatingToNewName(@Param(\"newName\") String newName, @Param(\"oldName\") String oldName);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:577
#, no-wrap
msgid ""
"    @Modifying\n"
"    @Query(\"update Movie set rating = null where title =?1\")\n"
"    void setRatingToNullForTitle(String title);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:581
#, no-wrap
msgid ""
"    @Query(\"from Movie order by length(title)\")\n"
"    Slice<Movie> orderByTitleLength(Pageable pageable);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:583
#, fuzzy
msgid "All methods that are annotated with `@Modifying` will automatically be annotated with `@Transactional`."
msgstr "`@Modifying` でアノテーションされているすべてのメソッドは、自動的に `@Transactional` でアノテーションされます。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:585
#, fuzzy
msgid "In Quarkus, `@Param` is optional when parameter names have been compiled to bytecode (which is active by default in generated projects)."
msgstr "Quarkusでは、パラメータ名がバイトコードにコンパイルされている場合、 `@Param` はオプションです（生成されたプロジェクトではデフォルトで有効になっています）。"

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:586
#, fuzzy, no-wrap
msgid "Naming Strategies"
msgstr "ネーミング戦略"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:589
#, fuzzy
msgid "Hibernate ORM maps property names using a physical naming strategy and an implicit naming strategy. If you wish to use Spring Boot's default naming strategies, the following properties need to be set:"
msgstr "Hibernate ORM は、物理的な命名戦略と暗黙的な命名戦略を使ってプロパティー名をマッピングします。Spring Bootのデフォルトの命名法を使いたい場合は、以下のプロパティーを設定する必要があります。"

#. type: delimited block -
#: upstream/_guides/spring-data-jpa.adoc:594
#, no-wrap
msgid ""
"quarkus.hibernate-orm.physical-naming-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy\n"
"quarkus.hibernate-orm.implicit-naming-strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/spring-data-jpa.adoc:596
#, fuzzy, no-wrap
msgid "More examples"
msgstr "その他の例"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:599
#, fuzzy
msgid "An extensive list of examples can be seen in the https://github.com/quarkusio/quarkus/tree/main/integration-tests/spring-data-jpa[integration tests] directory which is located inside the Quarkus source code."
msgstr "豊富な例のリストは、Quarkusのソースコードの中にある link:https://github.com/quarkusio/quarkus/tree/master/integration-tests/spring-data-jpa[統合テスト] ディレクトリーで見ることができます。"

#. type: Title ===
#: upstream/_guides/spring-data-jpa.adoc:600
#, fuzzy, no-wrap
msgid "What is currently unsupported"
msgstr "現在サポートされていないもの"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:603
#, fuzzy
msgid "Methods of the `org.springframework.data.repository.query.QueryByExampleExecutor` interface - if any of these are invoked, a Runtime exception will be thrown."
msgstr "`org.springframework.data.repository.query.QueryByExampleExecutor` インターフェイスのメソッド - これらのいずれかが呼び出されると、実行時例外がスローされます。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:604
#, fuzzy
msgid "QueryDSL support. No attempt will be made to generate implementations of any of the QueryDSL related repositories."
msgstr "QueryDSL をサポートしています。QueryDSL 関連のリポジトリの実装を生成しようとはしません。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:605
#, fuzzy
msgid "Customizing the base repository for all repository interfaces in the code base."
msgstr "コードベースのすべてのリポジトリインターフェイスのベースリポジトリをカスタマイズします。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:607
#, fuzzy
msgid "In Spring Data JPA this is done by registering a class that extends `org.springframework.data.jpa.repository.support.SimpleJpaRepository` however in Quarkus this class is not used at all (since all the necessary plumbing is done at build time). Similar support might be added to Quarkus in the future."
msgstr "Spring Data JPAでは、これは `org.springframework.data.jpa.repository.support.SimpleJpaRepository` を継承するクラスを登録することで行われますが、Quarkusではこのクラスは全く使用されていません(ビルド時に必要な配管は全てビルド時に行われるため)。将来的にはQuarkusにも同様のサポートが追加されるかもしれません。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:608
#, fuzzy
msgid "Using `java.util.concurrent.Future` and classes that extend it as return types of repository methods."
msgstr "`java.util.concurrent.Future` とそれを拡張したクラスをリポジトリメソッドの戻り値の型として使用します。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:609
#, fuzzy
msgid "Native and named queries when using `@Query`"
msgstr "ネイティブクエリと名前付きクエリを使用する場合 `@Query`"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:611
#, fuzzy
msgid "https://github.com/spring-projects/spring-data-jpa/blob/main/src/main/asciidoc/jpa.adoc#entity-state-detection-strategies[Entity State-detection Strategies] via `EntityInformation`."
msgstr "link:https://github.com/spring-projects/spring-data-jpa/blob/master/src/main/asciidoc/jpa.adoc#entity-state-detection-strategies[エンティティー状態検出戦略] via `EntityInformation` ."

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:613
#, fuzzy
msgid "The Quarkus team is exploring various alternatives to bridging the gap between the JPA and Reactive worlds."
msgstr "Quarkusチームは、JPAとReactiveの世界のギャップを埋めるために、さまざまな代替案を模索しています。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:614
#, fuzzy, no-wrap
msgid "Important Technical Note"
msgstr "重要な技術的注意事項"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:618
#, fuzzy
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types."
msgstr "QuarkusのSpringサポートは、Springアプリケーションコンテキストを起動したり、Springインフラストラクチャクラスを実行したりしないことに注意してください。Springクラスやアノテーションは、メタデータの読み込みや、ユーザーコードのメソッドの戻り値の型やパラメーターの型としてのみ使用されます。"

#. type: Title ==
#: upstream/_guides/spring-data-jpa.adoc:619
#, fuzzy, no-wrap
msgid "More Spring guides"
msgstr "その他のスプリングガイド"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:622
#, fuzzy
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkusには、より多くのSpring互換機能があります。詳細については、以下のガイドを参照してください。"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:624
#, fuzzy
msgid "xref:spring-di.adoc[Quarkus - Extension for Spring DI]"
msgstr "link:spring-di[Quarkus - Spring DIのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:625
#, fuzzy
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "link:spring-web[Quarkus - Spring Web用のエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:626
#, fuzzy
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr "link:spring-security[Quarkus - Spring Securityのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:627
#, fuzzy
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "link:spring-cloud-config-client[Quarkus - Spring Cloud Config Serverからプロパティーを読み込む]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:628
#, fuzzy
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "link:spring-boot-properties[Quarkus - Spring Boot propertiesのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:629
#, fuzzy
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "link:spring-cache[Quarkus - Spring Cacheのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:630
#, fuzzy
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "link:spring-scheduled[Quarkus - Spring Scheduledのためのエクステンション]"

#. type: Plain text
#: upstream/_guides/spring-data-jpa.adoc:630
#, fuzzy
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "link:spring-data-rest[Quarkus - Spring Data RESTのためのエクステンション]"

#, fuzzy
#~ msgid "As of Quarkus 1.6.0, only \"Version-Property and Id-Property inspection\" is implemented (which should cover most cases)."
#~ msgstr "Quarkus 1.6.0の時点では、「バージョン-プロパティーとId-プロパティーの検査」のみが実装されています(ほとんどのケースをカバーしているはずです)。"

#, fuzzy
#~ msgid "As of Quarkus 1.7.0, `org.springframework.data.domain.Persistable` is also implemented."
#~ msgstr "Quarkus 1.7.0の時点では、 `org.springframework.data.domain.Persistable` も実装されています。"
