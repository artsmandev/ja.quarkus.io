# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-31 13:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/vault-transit.adoc:6
#, fuzzy, no-wrap
msgid "Using HashiCorp Vault's Transit Secret Engine"
msgstr "HashiCorp Vaultのトランジットシークレットエンジンを使用する"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:18
#, fuzzy
msgid "Vault's Transit Secret Engine offers an \"encryption as a service\" functionality. It allows to store encryption keys into Vault, and provides services to encrypt/decrypt and sign/verify arbitrary pieces of data. This brings several advantages, such as:"
msgstr "VaultのTransit Secret Engineは、「サービスとしての暗号化」機能を提供します。これは、暗号化キーをVaultに格納することを可能にし、データの任意の部分を暗号化/復号化し、署名/検証するサービスを提供します。これにより、以下のようないくつかの利点がもたらされます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:21
#, fuzzy
msgid "limited key exposure: keys never leave the Vault. Instead the data is sent to Vault to get encrypted/decrypted/signed/verified."
msgstr "限られた鍵の露出:鍵は、Vaultを離れることはありません。代わりにデータは、暗号化/復号化/署名/検証を取得するためにボールトに送信されます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:23
#, fuzzy
msgid "reliable and consistent algorithms: algorithms are implemented by Vault. It supports a wide variety, and there is only one implementation used for a given algorithm type, regardless of the client's technology."
msgstr "信頼性の高い一貫したアルゴリズム:アルゴリズムはVaultによって実装されています。多種多様なアルゴリズムをサポートしており、クライアントの技術に関係なく、与えられたアルゴリズムタイプに使用される実装は1つしかありません。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:24
#, fuzzy
msgid "it relieves developers from having to embed cryptographic libraries into their applications."
msgstr "これにより、開発者は暗号ライブラリをアプリケーションに組み込む必要がなくなります。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:26
#, fuzzy
msgid "In the context of Quarkus, the main (non administration) services are being covered:"
msgstr "Quarkusの文脈では、主な(管理以外の)サービスが対象となっています。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:28
#, fuzzy
msgid "encrypt: encrypt some data and return the cipher text"
msgstr "encrypt: データを暗号化して暗号文を返す"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:29
#, fuzzy
msgid "decrypt: decrypt the cipher text and return the clear data"
msgstr "decrypt: 暗号文を復号してクリアデータを返す"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:30
#, fuzzy
msgid "rewrap: reencrypt a cipher text using the most recent key version"
msgstr "rewrap: 最新の鍵バージョンを使って暗号文を再暗号化する"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:31
#, fuzzy
msgid "sign: sign a piece of data"
msgstr "sign: データに署名する"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:32
#, fuzzy
msgid "verify signature: verify that a signature is correct for a piece of data"
msgstr "verify signature: 署名がデータに対して正しいことを検証する"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:34
#, fuzzy
msgid "See https://www.vaultproject.io/docs/secrets/transit/index.html#transit-secrets-engine[Vault Transit Secret Engine's official documentation]"
msgstr "link:https://www.vaultproject.io/docs/secrets/transit/index.html#transit-secrets-engine[Vault Transit Secret Engineの公式ドキュメントを] 参照してください。"

#. type: Title ==
#: upstream/_guides/vault-transit.adoc:37
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:40
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:42
#, fuzzy
msgid "to complete the \"Starting Vault\" section of the {base-guide}"
msgstr "ベースガイド}の「Vaultの起動」セクションを完了させるために"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:43
#, fuzzy
msgid "roughly 15 minutes"
msgstr "ざっと15分"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:44
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:45
#, fuzzy
#| msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:46
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:47
msgid "Docker installed"
msgstr "Dockerがインストールされていること"

#. type: Title ==
#: upstream/_guides/vault-transit.adoc:48
#, fuzzy, no-wrap
msgid "Setup"
msgstr "セットアップ"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:52
#, fuzzy
msgid "We assume there is a Vault running from the {base-guide}, and the root token is known.  The first step consists in activating the Transit Secret Engine, and creating the different keys:"
msgstr "ここでは、{base-guide}から実行されているVaultがあり、ルート・トークンが既知であると仮定します。最初のステップは、トランジット・シークレット・エンジンを起動し、異なる鍵を作成することです。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:57
#, no-wrap
msgid ""
"docker exec -it dev-vault sh\n"
"export VAULT_TOKEN={root-token}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:60
#, no-wrap
msgid ""
"vault secrets enable transit\n"
"# ==> Success! Enabled the transit secrets engine at: transit/\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:63
#, no-wrap
msgid ""
"vault write -f transit/keys/my-encryption-key\n"
"# ==> Success! Data written to: transit/keys/my-encryption-key\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:66
#, no-wrap
msgid ""
"vault write transit/keys/my-sign-key type=ecdsa-p256\n"
"# ==> Success! Data written to: transit/keys/my-sign-key\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:70
#, fuzzy
msgid "Note that you did not have to provide the key value. You only provide its name, and Vault will generate it for you and keep it secured."
msgstr "キーの値を提供する必要がなかったことに注意してください。あなたはその名前を提供するだけで、Vaultはあなたのためにそれを生成し、それを安全に保つことができます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:72
#, fuzzy
msgid "Once the keys have been created, we now need to create a policy that provides access for it:"
msgstr "鍵が作成されたら、次に鍵へのアクセスを提供するポリシーを作成する必要があります。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:90
#, no-wrap
msgid ""
"cat <<EOF | vault policy write vault-transit-quickstart-policy -\n"
"path \"transit/encrypt/my-encryption-key\" {\n"
"  capabilities = [ \"update\" ]\n"
"}\n"
"path \"transit/decrypt/my-encryption-key\" {\n"
"  capabilities = [ \"update\" ]\n"
"}\n"
"path \"transit/sign/my-sign-key\" {\n"
"  capabilities = [ \"update\"]\n"
"}\n"
"path \"transit/verify/my-sign-key\" {\n"
"  capabilities = [ \"update\" ]\n"
"}\n"
"EOF\n"
"# ==> Success! Uploaded policy: vault-transit-quickstart-policy\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:93
#, fuzzy
msgid "And finally, let's add the `vault-transit-quickstart-policy` to user `bob` that was created in the {base-guide}:"
msgstr "そして最後に、{base-guide}で作成したユーザー `bob` に `vault-transit-quickstart-policy` を追加してみましょう。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:97
#, no-wrap
msgid "vault write auth/userpass/users/bob password=sinclair policies=vault-quickstart-policy,vault-transit-quickstart-policy\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:100
#, fuzzy
msgid "To check that the configuration is correct, try logging in:"
msgstr "設定が正しいことを確認するには、ログインしてみてください。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:104
#, no-wrap
msgid "vault login -method=userpass username=bob password=sinclair\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:107
#: upstream/_guides/vault-transit.adoc:136
#, fuzzy
msgid "You should see:"
msgstr "見た方がいいですよ。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:113
#, no-wrap
msgid ""
"Success! You are now authenticated. The token information displayed below\n"
"is already stored in the token helper. You do NOT need to run \"vault login\"\n"
"again. Future Vault requests will automatically use this token.\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:124
#, no-wrap
msgid ""
"Key                    Value\n"
"---                    -----\n"
"token                  {client-token}\n"
"token_accessor         OKNipTAgxWbxsrjixASNiwdY\n"
"token_duration         768h\n"
"token_renewable        true\n"
"token_policies         [\"default\" \"vault-quickstart-policy\"]\n"
"identity_policies      []\n"
"policies               [\"default\" \"vault-quickstart-policy\"]\n"
"token_meta_username    bob\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:127
#, fuzzy
msgid "Now set `VAULT_TOKEN` to the `token` above (instead of the root token), and try encrypting some data:"
msgstr "ここで `VAULT_TOKEN` を上記の `token` に設定して(ルートトークンの代わりに)、いくつかのデータを暗号化してみてください。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:133
#, no-wrap
msgid ""
"export VAULT_TOKEN={client-token}\n"
"# note: \"my secret data\" in base64 is \"bXkgc2VjcmV0IGRhdGEK\"\n"
"vault write transit/encrypt/my-encryption-key plaintext=bXkgc2VjcmV0IGRhdGEK\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:141
#, no-wrap
msgid ""
"Key           Value\n"
"---           -----\n"
"ciphertext    vault:v1:vIQxsLANFbcfKofJL55zjoIXV6MqAzvjKUUQLGg5pWTz0W2Qab/B4nEJaQ==\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/vault-transit.adoc:143
#, fuzzy, no-wrap
msgid "Encrypt and Decrypt"
msgstr "暗号化と復号化"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:146
#, fuzzy
msgid "First, let's create a simple Quarkus application with Vault and Jackson extensions:"
msgstr "まずは、VaultとJacksonのエクステンションを使って、シンプルなQuarkusアプリケーションを作ってみましょう。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:156
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=vault-transit-quickstart \\\n"
"    -DclassName=\"org.acme.quickstart.GreetingResource\" \\\n"
"    -Dpath=\"/hello\" \\\n"
"    -Dextensions=\"resteasy,vault,resteasy-jackson\"\n"
"cd vault-transit-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:159
#, fuzzy
msgid "Now, configure access to Vault from the `{config-file}`:"
msgstr "さて、 `{config-file}` から Vault へのアクセスを設定します。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:164
#, no-wrap
msgid ""
"# vault url\n"
"quarkus.vault.url=http://localhost:8200\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:168
#, no-wrap
msgid ""
"# vault authentication\n"
"quarkus.vault.authentication.userpass.username=bob\n"
"quarkus.vault.authentication.userpass.password=sinclair\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:173
#, fuzzy
msgid "Note that you did not need to specify the existence of a particular encryption key in the configuration. You only do so in special cases such as specifying the key type for upsert, or changing the signature algorithm, ... Check the complete configuration for more information."
msgstr "構成で特定の暗号化キーの存在を指定する必要はないことに注意してください。アップサートのキータイプを指定したり、署名アルゴリズムを変更したりするなど、特別な場合にのみ指定する必要があります。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:175
#, fuzzy
msgid "We can then add a new endpoint that will allow us to encrypt and decrypt data:"
msgstr "そして、データの暗号化と復号化を可能にする新しいエンドポイントを追加することができます。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:182
#, no-wrap
msgid ""
"@Path(\"/transit\")\n"
"@Produces(TEXT_PLAIN)\n"
"@Consumes(TEXT_PLAIN)\n"
"public class TransitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:185
#, no-wrap
msgid ""
"    @Inject\n"
"    public VaultTransitSecretEngine transitSecretEngine;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:191
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/encrypt\")\n"
"    public String encrypt(String clearData) {\n"
"        return transitSecretEngine.encrypt(\"my-encryption-key\", clearData);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:198
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/decrypt\")\n"
"    public String decrypt(String cipherText) {\n"
"        return transitSecretEngine.decrypt(\"my-encryption-key\", cipherText).asString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:201
#, fuzzy
msgid "After compiling and starting the Quarkus application, let's encrypt some data:"
msgstr "Quarkusアプリケーションをコンパイルして起動したら、データを暗号化してみましょう。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:205
#, no-wrap
msgid ""
"curl -X POST --data 'some secret data' --header \"Content-Type: text/plain\"  http://localhost:8080/transit/encrypt\n"
"# ==> vault:v1:fN4P7WNjIegpb3lD/pSuhXvyONhGrI21gcKNcedk+5jpjguOw6JkqXYXlkY=\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:208
#, fuzzy
msgid "And decrypt back this cipher text:"
msgstr "そして、この暗号文を復号化して"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:212
#, no-wrap
msgid ""
"curl -X POST --data 'vault:v1:fN4P7WNjIegpb3lD/pSuhXvyONhGrI21gcKNcedk+5jpjguOw6JkqXYXlkY=' --header \"Content-Type: text/plain\"  http://localhost:8080/transit/decrypt\n"
"# ==> some secret data\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/vault-transit.adoc:214
#, fuzzy, no-wrap
msgid "Sign and Verify"
msgstr "署名と検証"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:217
#, fuzzy
msgid "Let's add 2 new methods to our `TransitResource`:"
msgstr "`TransitResource` に 2 つの新しいメソッドを追加してみましょう。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:225
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"/sign\")\n"
"public String sign(String input) {\n"
"    return transitSecretEngine.sign(\"my-sign-key\", input);\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:230
#, no-wrap
msgid ""
"public static class VerifyRequest {\n"
"    public String signature;\n"
"    public String input;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:238
#, no-wrap
msgid ""
"@POST\n"
"@Path(\"/verify\")\n"
"@Consumes(APPLICATION_JSON)\n"
"public Response verify(VerifyRequest request) {\n"
"    transitSecretEngine.verifySignature(\"my-sign-key\", request.signature, request.input);\n"
"    return Response.accepted().build();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:241
#, fuzzy
msgid "And start signing some data:"
msgstr "データに署名して"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:245
#, no-wrap
msgid ""
"curl -X POST --data 'some secret data' --header \"Content-Type: text/plain\"  http://localhost:8080/transit/sign\n"
"# ==> vault:v1:MEUCIQDl+nE4y4E878bkugGG6FG1/RsttaQnoWfZHppeuk4TnQIgTGWTtMhVPCzN8VH/EEr2qp5h34lI1bnEP6L1F+QQoPI=\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:248
#, fuzzy
msgid "And finally, let's make sure the signature is matching our input data:"
msgstr "そして最後に、署名が入力データと一致していることを確認しましょう。"

#. type: delimited block -
#: upstream/_guides/vault-transit.adoc:252
#, no-wrap
msgid ""
"curl -v -X POST --data '{\"input\":\"some secret data\",\"signature\":\"vault:v1:MEUCIQDl+nE4y4E878bkugGG6FG1/RsttaQnoWfZHppeuk4TnQIgTGWTtMhVPCzN8VH/EEr2qp5h34lI1bnEP6L1F+QQoPI=\"}' --header \"Content-Type: application/json\" http://localhost:8080/transit/verify\n"
"# ==> ... < HTTP/1.1 202 Accepted\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/vault-transit.adoc:254
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:259
#, fuzzy
msgid "The Transit Secret Engine is a powerful tool in the enterprise.  We have seen the most obvious functions of the interface, but the rest of the methods or flavors should not be overlooked:"
msgstr "トランジット・シークレット・エンジンは、企業の強力なツールです。インターフェイスの最も明白な機能を見てきましたが、残りのメソッドやフレーバーも見落としてはいけません。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:261
#, fuzzy
msgid "For instance batch oriented methods are strongly recommended for mass operations (encrypt, decrypt, ...)"
msgstr "例えば、大量処理(暗号化、復号化、...)には、バッチ指向の方法が強く推奨されます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:263
#, fuzzy
msgid "Transit contexts allow key derivation where one key is used to derive other keys for specific named contexts (e.g. person names, person addresses, ...)"
msgstr "トランジットコンテキストでは、特定の名前付きコンテキスト(人名、人の住所、...)のために、1つのキーを使用して他のキーを導出することができます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:265
#, fuzzy
msgid "Rewrapping allows to reencrypt data with the most recent key version when the Vault administrator decides to rotate keys"
msgstr "リラップでは、Vault 管理者がキーをローテートすることを決定した場合に、最新のキーバージョンでデータを再暗号化することができます。"

#. type: Plain text
#: upstream/_guides/vault-transit.adoc:267
#, fuzzy
msgid "Feel free to look at the `VaultTransitSecretEngine` interface plus the dedicated Transit Secret Engine configuration properties in the {base-guide} for all the details."
msgstr "詳細については、 `VaultTransitSecretEngine` インターフェイスと{base-guide}にある専用のTransit Secret Engineコンフィギュレーション・プロパティーをご覧ください。"
