# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-03-11 15:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/building-my-first-extension.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Building my first extension"
msgstr "Quarkus - 私の最初のエクステンションを構築する"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:14
#, fuzzy
msgid "Quarkus extensions enhance your application just as projects dependencies do.  The role of the extensions is to leverage Quarkus paradigms to integrate seamlessly a library into Quarkus architecture - e.g. do more things at build time.  This is how you can use your battle-tested ecosystem and take advantage of Quarkus performance and native compilation.  Go to https://code.quarkus.io/[code.quarkus.io] to get the list of the supported extensions."
msgstr "Quarkusのエクステンションは、プロジェクトの依存関係がそうであるように、アプリケーションを強化します。エクステンションの役割は、Quarkusのパラダイムを活用して、ライブラリをQuarkusアーキテクチャにシームレスに統合することです。このようにして、実績のあるエコシステムを利用して、Quarkusのパフォーマンスとネイティブコンパイルを活用することができます。 link:https://code.quarkus.io/[code.quarkus.io] にアクセスして、サポートされているエクステンションのリストを入手してください。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:17
#, fuzzy
msgid "In this guide we are going to develop the *Sample Greeting Extension*.  The extension will expose a customizable HTTP endpoint which simply greets the visitor."
msgstr "このガイドでは、 *サンプルグリーティングエクステンションを* 開発します。このエクステンションは、訪問者に挨拶をするだけのカスタマイズ可能な HTTP エンドポイントを公開します。"

#. type: Block title
#: upstream/_guides/building-my-first-extension.adoc:19
#, fuzzy, no-wrap
msgid "Disclaimer"
msgstr "免責事項"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:23
#, fuzzy
msgid "To be sure it's extra clear you don't need an extension to add a Servlet to your application.  This guide is a simplified example to explain the concepts of extensions development, see the link:writing-extensions[full documentation] if you need more information.  Keep in mind it's not representative of the power of moving things to build time or simplifying the build of native images."
msgstr "アプリケーションにサーブレットを追加するのにエクステンションは必要ないことを明確にしておきましょう。このガイドはエクステンション開発の概念を説明するための単純化された例であり、より多くの情報が必要な場合は link:writing-extensions[完全なドキュメントを] 参照してください。これは、ビルド時間を短縮したり、ネイティブイメージのビルドを簡略化したりする力を代表するものではないことを覚えておいてください。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:24
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:27
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:29
msgid "less than 30 minutes"
msgstr "30分以内"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:30
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:31
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:32
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:33
#, fuzzy, no-wrap
msgid "Basic Concepts"
msgstr "基本概念"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:36
#, fuzzy
msgid "First things first, we will need to start with some basic concepts."
msgstr "まず最初に、いくつかの基本的な概念から始めましょう。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:38
#, fuzzy
msgid "JVM mode vs Native mode"
msgstr "JVMモードとネイティブモード"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:39
#, fuzzy
msgid "Quarkus is first and foremost a Java framework, that means you can develop, package and run classic JAR applications, that's what we call *JVM mode*."
msgstr "つまり、古典的な *JAR* アプリケーションを開発、パッケージ化、実行することができます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:40
#, fuzzy
msgid "Thanks to https://graalvm.org/[GraalVM] you can compile your Java application into machine specific code (like you do in Go or C++) and that's what we call *Native mode*."
msgstr "link:https://graalvm.org/[GraalVMの] おかげで、Javaアプリケーションをマシン *固有* のコードにコンパイルすることができます(GoやC++のように)。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:42
#, fuzzy
msgid "The operation of compiling Java bytecode into a native system-specific machine code is named *Ahead of Time Compilation* (aka AoT)."
msgstr "Javaバイトコードをネイティブシステム固有のマシンコードにコンパイルする操作は、 *Ahead of Time Compilation* (AoT)と呼ばれています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:44
#, fuzzy
msgid "build time vs runtime in classic Java frameworks"
msgstr "古典的なJavaフレームワークにおけるビルド時間とランタイムの比較"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:45
#, fuzzy
msgid "The build time corresponds to all the actions you apply to your Java source files to convert them into something runnable (class files, jar/war, native images)."
msgstr "ビルド時間は、Javaソースファイルを実行可能なもの(クラスファイル、jar/war、ネイティブイメージ)に変換するためにJavaソースファイルに適用するすべてのアクションに対応しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:46
#, fuzzy
msgid "Usually this stage is composed by the compilation, annotation processing, bytecode generation, etc. At this point, everything is under the developer's scope and control."
msgstr "通常、この段階はコンパイル、アノテーション処理、バイトコード生成などで構成されます。この時点では、すべてが開発者のスコープとコントロール下にあります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:47
#, fuzzy
msgid "The runtime is all the actions that happen when you execute your application."
msgstr "ランタイムとは、アプリケーションを実行するときに発生するすべてのアクションのことです。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:48
#, fuzzy
msgid "It's obviously focused on starting your business-oriented actions but it relies on a lot of technical actions like loading libraries and configuration files, scanning the application's classpath, configuring the dependency injection, setting up your Object-Relational Mapping, instantiating your REST controllers, etc."
msgstr "これは明らかにビジネス指向のアクションを開始することに焦点を当てていますが、ライブラリや設定ファイルのロード、アプリケーションのクラスパスのスキャン、依存性インジェクションの設定、オブジェクトリレーショナルマッピングの設定、RESTコントローラのインスタンス化など、多くの技術的なアクションに依存しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:50
#, fuzzy
msgid "Usually, Java frameworks do their bootstrapping during the runtime before actually starting the application \"Business oriented layer\". During bootstrap, frameworks dynamically collect metadata by scanning the classpath to find configurations, entity definitions, dependency injection binding, etc. in order to instantiate proper objects through reflection. The main consequences are:"
msgstr "通常、Javaフレームワークは、アプリケーションの「ビジネス指向レイヤー」を実際に起動する前に、ランタイム中にブートストラップを行います。ブートストラップの間、フレームワークは、リフレクションによって適切なオブジェクトをインスタンス化するために、設定、エンティティー定義、依存性注入バインディングなどを見つけるためにクラスパスをスキャンすることによって動的にメタデータを収集します。主な結果は以下の通りです。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:52
#, fuzzy
msgid "Delaying the readiness of your application: you need to wait a couple of seconds before actually serving a business request."
msgstr "アプリケーションの準備を遅らせる:実際にビジネスリクエストに対応する前に数秒待つ必要があります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:53
#, fuzzy
msgid "Having a peak of resource consumption at bootstrap: in a constrained environment, you will need to size the needed resources based on your technical bootstrap needs rather than your actual business needs."
msgstr "ブートストラップでリソース消費のピークを持つ:制約のある環境では、実際のビジネスニーズではなく、技術的なブートストラップのニーズに基づいて、必要なリソースのサイズを決定する必要があります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:56
#, fuzzy
msgid "Quarkus' philosophy is to prevent as much as possible slow and memory intensive dynamic code execution by shifting left these actions and eventually do them during the build time.  A Quarkus extension is a Java piece of code acting as an adapter layer for your favorite library or technology."
msgstr "Quarkusの哲学は、これらのアクションを左にシフトし、最終的にはビルド時に実行することで、可能な限り低速でメモリー集約的な動的コードの実行を防ぐことです。Quarkusのエクステンションは、お気に入りのライブラリやテクノロジーのアダプターレイヤーとして機能するJavaのコードです。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:57
#, fuzzy, no-wrap
msgid "Description of a Quarkus extension"
msgstr "Quarkusのエクステンションの説明"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:60
#, fuzzy
msgid "A Quarkus extension consists of two parts:"
msgstr "Quarkusのエクステンションは、2つの部分から構成されています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:63
#, fuzzy
msgid "The *runtime module* which represents the capabilities the extension developer exposes to the application's developer (an authentication filter, an enhanced data layer API, etc).  Runtime dependencies are the ones the users will add as their application dependencies (in Maven POMs or Gradle build scripts)."
msgstr "エクステンション開発者がアプリケーションの開発者に公開する機能を表す *ランタイムモジュール* (認証フィルタ、強化されたデータ層APIなど)。ランタイム依存関係は、ユーザーがアプリケーションの依存関係として追加するものです (Maven POM または Gradle ビルドスクリプトで)。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:67
#, fuzzy
msgid "The *deployment module* which is used during the augmentation phase of the build, it describes how to \"deploy\" a library following the Quarkus philosophy.  In other words, it applies all the Quarkus optimizations to your application during the build.  The deployment module is also where we prepare things for GraalVM's native compilation."
msgstr "ビルドの拡張フェーズで使用される *デプロイモジュール* で、Quarkusの哲学に従ったライブラリを「デプロイ」する方法を説明しています。言い換えれば、ビルド中にアプリケーションにQuarkusのすべての最適化を適用します。デプロイメントモジュールは、GraalVMのネイティブコンパイルのための準備をする場所でもあります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:70
#, fuzzy
msgid "Users should not be adding the deployment modules of extension as application dependencies. The deployment dependencies are resolved by Quarkus during the augmentation phase from the runtime dependencies of the application."
msgstr "ユーザーは、エクステンションのデプロイメントモジュールをアプリケーションの依存関係として追加すべきではありません。デプロイメントの依存関係は、拡張フェーズの間にQuarkusによってアプリケーションのランタイム依存関係から解決されます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:72
#, fuzzy
msgid "At this point, you should have understood that most of the magic will happen at the Augmentation build time thanks to the deployment module."
msgstr "この時点で、デプロイメントモジュールのおかげで、ほとんどのマジックは拡張ビルド時に起こることを理解しているはずです。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:73
#, fuzzy, no-wrap
msgid "Quarkus Application Bootstrap"
msgstr "Quarkusアプリケーションブートストラップ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:76
#, fuzzy
msgid "There are three distinct bootstrap phases of a Quarkus application."
msgstr "Quarkusアプリケーションには、3つの異なるブートストラップフェーズがあります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:81
#, fuzzy, no-wrap
msgid ""
"*Augmentation*. During the build time, the Quarkus extensions will load and scan your application's bytecode (including the dependencies) and configuration.\n"
"At this stage, the extension can read configuration files, scan classes for specific annotations, etc.\n"
"Once all the metadata has been collected, the extensions can pre-process the libraries bootstrap actions like your ORM, DI or REST controllers configurations.\n"
"The result of the bootstrap is directly recorded into bytecode and will be part of your final application package.\n"
msgstr "*拡張* 。ビルド時に、Quarkusエクステンションはアプリケーションのバイトコード(依存関係を含む)と設定をロードしてスキャンします。この段階で、エクステンションは設定ファイルを読み込んだり、特定のアノテーションのためにクラスをスキャンしたりすることができます。すべてのメタデータが収集されると、エクステンションは、ORM、DI、またはRESTコントローラの設定のようなライブラリのブートストラップアクションを前処理することができます。ブートストラップの結果はバイトコードに直接記録され、最終的なアプリケーションパッケージの一部となります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:84
#, fuzzy, no-wrap
msgid ""
"*Static Init*. During the run time, Quarkus will execute first a static init method which contains some extensions actions/configurations.\n"
"When you will do your native packaging, this static method will be pre-processed during the build time and the objects it has generated will be serialized into the final native executable, so the initialization code will not be executed in the native mode (imagine you execute a Fibonacci function during this phase, the result of the computation will be directly recorded in the native executable).\n"
"When running the application in JVM mode, this static init phase is executed at the start of the application.\n"
msgstr "スタティック *init* .ランタイムの間、Quarkusは最初に、いくつかの拡張アクション/設定を含む静的initメソッドを実行します。ネイティブパッケージングを行う場合、このスタティックメソッドはビルド時に前処理され、生成されたオブジェクトは最終的なネイティブ実行ファイルにシリアライズされるため、初期化コードはネイティブモードでは実行されません(このフェーズでフィボナッチ関数を実行すると想像してください。JVMモードでアプリケーションを実行している場合、この静的initフェーズはアプリケーションの開始時に実行されます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:87
#, fuzzy, no-wrap
msgid ""
"*Runtime Init*. Well nothing fancy here, we do classic run time code execution.\n"
"So, the more code you run during the two phases above, the faster your application will start.\n"
msgstr "ラン *タイム* 起動ここでは何も派手なことはしていませんが、古典的なランタイムコードの実行を行います。つまり、上記の2つのフェーズでより多くのコードを実行すればするほど、アプリケーションの起動が速くなります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:89
#, fuzzy
msgid "Now that everything is explained, we can start coding!"
msgstr "これで全てが説明されたので、さっそくコーディングに取り掛かりましょう"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:90
#, fuzzy, no-wrap
msgid "Maven setup"
msgstr "Mavenのセットアップ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:93
#, fuzzy
msgid "Quarkus provides `create-extension` Maven Mojo to initialize your extension project."
msgstr "Quarkusは、 `create-extension` Maven Mojoを提供し、拡張プロジェクトを初期化します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:95
#, fuzzy
msgid "It will try to auto-detect its options:"
msgstr "オプションを自動検出しようとします。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:97
#, fuzzy
msgid "from `quarkus` (Quarkus Core) or `quarkus/extensions` directory, it will use the 'Quarkus Core' extension layout and defaults."
msgstr "`quarkus` (Quarkus Core) または `quarkus/extensions` ディレクトリからアクセスすると、「Quarkus Core」エクステンションのレイアウトとデフォルトが使用されます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:98
#, fuzzy
msgid "with `-DgroupId=io.quarkiverse.[extensionId]`, it will use the 'Quarkiverse' extension layout and defaults."
msgstr "`-DgroupId=io.quarkiverse.[extensionId]` を使用すると、'Quarkiverse' エクステンションのレイアウトとデフォルトを使用します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:99
#, fuzzy
msgid "in other cases it will use the 'Standalone' extension layout and defaults."
msgstr "それ以外の場合は 'Standalone' エクステンションのレイアウトとデフォルトを使用します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:100
#, fuzzy
msgid "we may introduce other layout types in the future."
msgstr "将来的には他のレイアウトタイプを紹介するかもしれません。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:102
#, fuzzy
msgid "You may call it without any parameter to use the interactive mode: `mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"
msgstr "インタラクティブモードを使用するためには、パラメータなしで呼び出すことができます。 `mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:109
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create-extension -N \\\n"
"    -DgroupId=org.acme \\ #<1>\n"
"    -DextensionId=greeting-extension \\  #<2>\n"
"    -DwithoutTests #<3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:111
#, no-wrap
msgid "[INFO] --- quarkus-maven-plugin:{quarkus-version}:create-extension (default-cli) @ standalone-pom ---\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:114
#, no-wrap
msgid ""
"Detected layout type is 'standalone' #<4>\n"
"Generated runtime artifactId is 'greeting-extension' #<5>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:121
#, no-wrap
msgid ""
"applying codestarts...\n"
"🔠 java\n"
"🧰 maven\n"
"🗃 quarkus-extension\n"
"🐒 extension-base\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:125
#, fuzzy
msgid "👍 extension has been successfully generated in: --> /Users/ia3andy/workspace/redhat/quarkus/demo/greeting-extension"
msgstr "👍 エクステンションが正常に生成されました。-→ で正常に生成されました。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:132
#, no-wrap
msgid ""
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  1.659 s\n"
"[INFO] Finished at: 2021-01-25T16:17:16+01:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:136
#, fuzzy
msgid "The extension groupId"
msgstr "拡張グループID"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:137
#, fuzzy
msgid "The extension id (not namespaced)."
msgstr "エクステンション ID (名前空間ではない)。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:138
#, fuzzy
msgid "Indicate that we don't want to generate any test"
msgstr "テストを生成したくないことを示す"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:139
#, fuzzy
msgid "From a directory with no pom.xml and without any further options, the generator will automatically pick the 'standalone' extension layout"
msgstr "pom.xmlのないディレクトリで、それ以上のオプションがない場合、ジェネレーターは自動的に「スタンドアロン」拡張レイアウトを選択します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:140
#, fuzzy
msgid "With the 'standalone' layout, the `namespaceId` is empty by default, so the computed runtime module artifactId is the `extensionId`"
msgstr "スタンドアロン」レイアウトでは、 `namespaceId` はデフォルトでは空なので、計算されるランタイムモジュールの artifactId は `extensionId`"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:142
#, fuzzy
msgid "Maven has generated a `greeting-extension` directory containing the extension project which consists of the parent `pom.xml`, the `runtime` and the `deployment` modules."
msgstr "Maven は、親 `pom.xml` 、 `runtime` 、 `deployment` モジュールからなる拡張プロジェクトを含む `quarkus-greeting` ディレクトリーを生成しました。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:143
#, fuzzy, no-wrap
msgid "The parent pom.xml"
msgstr "親の pom.xml"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:146
#, fuzzy
msgid "Your extension is a multi-module project. So let's start by checking out the parent POM at `./greeting-extension/pom.xml`."
msgstr "あなたのエクステンションはマルチモジュールプロジェクトです。ですから、まず親の POM を `./quarkus-greeting/pom.xml` からチェックしてみましょう。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:217
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  <modelVersion>4.0.0</modelVersion>\n"
"  <groupId>org.acme</groupId>\n"
"  <artifactId>greeting-extension-parent</artifactId>\n"
"  <version>1.0.0-SNAPSHOT</version>\n"
"  <packaging>pom</packaging>\n"
"  <name>Greeting Extension - Parent</name>\n"
"  <modules><!--1-->\n"
"    <module>deployment</module>\n"
"    <module>runtime</module>\n"
"  </modules>\n"
"  <properties>\n"
"    <compiler-plugin.version>3.8.1</compiler-plugin.version><!--2-->\n"
"    <failsafe-plugin.version>${surefire-plugin.version}</failsafe-plugin.version>\n"
"    <maven.compiler.parameters>true</maven.compiler.parameters>\n"
"    <maven.compiler.source>1.8</maven.compiler.source>\n"
"    <maven.compiler.target>1.8</maven.compiler.target>\n"
"    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n"
"    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n"
"    <quarkus.version>{quarkus-version}</quarkus.version>\n"
"    <surefire-plugin.version>2.22.2</surefire-plugin.version>\n"
"  </properties>\n"
"  <dependencyManagement>\n"
"    <dependencies>\n"
"      <dependency><!--3-->\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-bom</artifactId>\n"
"        <version>${quarkus.version}</version>\n"
"        <type>pom</type>\n"
"        <scope>import</scope>\n"
"      </dependency>\n"
"    </dependencies>\n"
"  </dependencyManagement>\n"
"  <build>\n"
"    <pluginManagement>\n"
"      <plugins>\n"
"        <plugin><!--4-->\n"
"          <artifactId>maven-surefire-plugin</artifactId>\n"
"          <version>${surefire-plugin.version}</version>\n"
"          <configuration>\n"
"            <systemPropertyVariables>\n"
"              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"              <maven.home>${maven.home}</maven.home>\n"
"              <maven.repo>${settings.localRepository}</maven.repo>\n"
"            </systemPropertyVariables>\n"
"          </configuration>\n"
"        </plugin>\n"
"        <plugin><!--4-->\n"
"          <artifactId>maven-failsafe-plugin</artifactId>\n"
"          <version>${failsafe-plugin.version}</version>\n"
"          <configuration>\n"
"            <systemPropertyVariables>\n"
"              <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"              <maven.home>${maven.home}</maven.home>\n"
"              <maven.repo>${settings.localRepository}</maven.repo>\n"
"            </systemPropertyVariables>\n"
"          </configuration>\n"
"        </plugin>\n"
"        <plugin>\n"
"          <artifactId>maven-compiler-plugin</artifactId>\n"
"          <version>${compiler-plugin.version}</version>\n"
"        </plugin>\n"
"      </plugins>\n"
"    </pluginManagement>\n"
"  </build>\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:220
#, fuzzy
msgid "Your extension declares 2 sub-modules `deployment` and `runtime`."
msgstr "あなたのエクステンションは、2つのサブモジュール `deployment` と `runtime` を宣言しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:221
#, fuzzy
msgid "Quarkus requires a recent version of the Maven compiler plugin supporting the annotationProcessorPaths configuration."
msgstr "Quarkusでは、annotationProcessorPaths設定をサポートするMavenコンパイラプラグインの最新バージョンが必要です。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:222
#, fuzzy
msgid "The `quarkus-bom` aligns your dependencies with those used by Quarkus during the augmentation phase."
msgstr "`quarkus-bom` は、オーグメンテーションの段階でQuarkusが使用している依存関係を調整します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:223
#, fuzzy
msgid "Quarkus requires these configs to run tests properly"
msgstr "Quarkusでは、テストを適切に実行するために、これらの設定が必要です。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:224
#, fuzzy, no-wrap
msgid "The Deployment module"
msgstr "デプロイメントモジュール"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:227
#, fuzzy
msgid "Let's have a look at the deployment's `./greeting-extension/deployment/pom.xml`."
msgstr "デプロイメントの `./quarkus-greeting/deployment/pom.xml` ."

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:238
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"    <modelVersion>4.0.0</modelVersion>\n"
"    <parent>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>greeting-extension-parent</artifactId>\n"
"        <version>1.0.0-SNAPSHOT</version>\n"
"    </parent>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:241
#, no-wrap
msgid ""
"    <artifactId>greeting-extension-deployment</artifactId> <!--1-->\n"
"    <name>Greeting Extension - Deployment</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:258
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"          <groupId>io.quarkus</groupId>\n"
"          <artifactId>quarkus-arc-deployment</artifactId> <!--2-->\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>org.acme</groupId>\n"
"            <artifactId>greeting-extension</artifactId> <!--3-->\n"
"            <version>${project.version}</version>\n"
"        </dependency>\n"
"        <dependency>\n"
"          <groupId>io.quarkus</groupId>\n"
"          <artifactId>quarkus-junit5-internal</artifactId>\n"
"          <scope>test</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:275
#, no-wrap
msgid ""
"    <build>\n"
"        <plugins>\n"
"            <plugin>\n"
"                <artifactId>maven-compiler-plugin</artifactId>\n"
"                <configuration>\n"
"                    <annotationProcessorPaths>\n"
"                        <path>\n"
"                            <groupId>io.quarkus</groupId>\n"
"                            <artifactId>quarkus-extension-processor</artifactId>  <!--4-->\n"
"                            <version>${quarkus.version}</version>\n"
"                        </path>\n"
"                    </annotationProcessorPaths>\n"
"                </configuration>\n"
"            </plugin>\n"
"        </plugins>\n"
"    </build>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:277
#, no-wrap
msgid "</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:280
#: upstream/_guides/building-my-first-extension.adoc:381
#, fuzzy
msgid "The key points are:"
msgstr "肝心のポイントは"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:282
#, fuzzy
msgid "By convention, the deployment module has the `-deployment` suffix (`greeting-extension-deployment`)."
msgstr "慣例では、配置モジュールのサフィックスは `-deployment` ( `greeting-deployment` ) です。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:284
#, fuzzy
msgid "The deployment module depends on the `quarkus-arc-deployment` artifact.  We will see later which dependencies are convenient to add."
msgstr "デプロイメントモジュールは `quarkus-core-deployment` アーティファクトに依存しています。どの依存関係を追加するのが便利かは後ほど見ていきます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:285
#, fuzzy
msgid "The deployment module also *must* depend on the runtime module."
msgstr "デプロイメントモジュールもランタイムモジュールに依存している *必要があります* 。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:286
#: upstream/_guides/building-my-first-extension.adoc:386
#, fuzzy
msgid "We add the `quarkus-extension-processor` to the compiler annotation processors."
msgstr "コンパイラのアノテーションプロセッサーに `quarkus-extension-processor` を追加します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:288
#, fuzzy
msgid "In addition to the `pom.xml` `create-extension` also generated the `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` class."
msgstr "`pom.xml` `create-extension` に加えて `org.acme.quarkus.greeting.deployment.GreetingProcessor` クラスも生成されました。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:292
#: upstream/_guides/building-my-first-extension.adoc:456
#: upstream/_guides/building-my-first-extension.adoc:510
#: upstream/_guides/building-my-first-extension.adoc:573
#, no-wrap
msgid "package org.acme.greeting.extension.deployment;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:295
#: upstream/_guides/building-my-first-extension.adoc:459
#, no-wrap
msgid ""
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.builditem.FeatureBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:297
#: upstream/_guides/building-my-first-extension.adoc:461
#: upstream/_guides/building-my-first-extension.adoc:517
#, no-wrap
msgid "class GreetingExtensionProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:299
#: upstream/_guides/building-my-first-extension.adoc:463
#: upstream/_guides/building-my-first-extension.adoc:519
#, no-wrap
msgid "    private static final String FEATURE = \"greeting-extension\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:304
#: upstream/_guides/building-my-first-extension.adoc:524
#, no-wrap
msgid ""
"    @BuildStep\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(FEATURE);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:306
#: upstream/_guides/building-my-first-extension.adoc:470
#: upstream/_guides/building-my-first-extension.adoc:534
#: upstream/_guides/building-my-first-extension.adoc:595
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:311
#, fuzzy
msgid "`FeatureBuildItem` represents a functionality provided by an extension.  The name of the feature gets displayed in the log during application bootstrap.  An extension should provide at most one feature."
msgstr "`FeatureBuildItem` はエクステンションによって提供される機能を表します。機能の名前は、アプリケーションの起動時にログに表示されます。エクステンションは最大でも一つの機能を提供しなければなりません。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:315
#, fuzzy
msgid "Be patient, we will explain the `Build Step Processor` concept and all the extension deployment API later on.  At this point, you just need to understand that this class explains to Quarkus how to deploy a feature named `greeting` which is your extension.  In other words, you are augmenting your application to use the `greeting` extension with all the Quarkus benefits (build time optimization, native support, etc.)."
msgstr "`Build Step Processor` の概念とすべてのエクステンションのデプロイメント API については、後で説明します。この時点では、このクラスは、 `greeting` というエクステンションをデプロイする方法をQuarkusに説明していることを理解する必要があります。言い換えれば、アプリケーションを拡張して、 `greeting` エクステンションを使用して、Quarkusのすべての利点(ビルド時間の最適化、ネイティブサポートなど)を利用することになります。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:316
#, fuzzy, no-wrap
msgid "The Runtime module"
msgstr "ランタイムモジュール"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:319
#, fuzzy
msgid "Finally `./greeting-extension/runtime/pom.xml`."
msgstr "最後に `./quarkus-greeting/runtime/pom.xml` ."

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:331
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xsi:schemalocation=\"http://maven.apache.org/pom/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/pom/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/xmlschema-instance\">\n"
"    <modelVersion>4.0.0</modelVersion>\n"
"    <parent>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>greeting-extension-parent</artifactId>\n"
"        <version>0.0.1-snapshot</version>\n"
"    </parent>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:334
#, no-wrap
msgid ""
"    <artifactId>greeting-extension</artifactId>  <!--1-->\n"
"    <name>Greeting Extension - Runtime</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:341
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"          <groupid>io.quarkus</groupid>\n"
"          <artifactid>quarkus-arc</artifactid> <!--2-->\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:378
#, no-wrap
msgid ""
"    <build>\n"
"        <plugins>\n"
"            <plugin>\n"
"                <groupId>io.quarkus</groupId>\n"
"                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>  <!--3-->\n"
"                <version>${quarkus.version}</version>\n"
"                <executions>\n"
"                    <execution>\n"
"                        <phase>compile</phase>\n"
"                        <goals>\n"
"                            <goal>extension-descriptor</goal>\n"
"                        </goals>\n"
"                        <phase>compile</phase>\n"
"                        <configuration>\n"
"                            <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}\n"
"                            </deployment>\n"
"                        </configuration>\n"
"                    </execution>\n"
"                </executions>\n"
"            </plugin>\n"
"            <plugin>\n"
"                <groupId>org.apache.maven.plugins</groupId>\n"
"                <artifactId>maven-compiler-plugin</artifactId>\n"
"                <configuration>\n"
"                    <annotationProcessorPaths>\n"
"                        <path>\n"
"                            <groupId>io.quarkus</groupId>\n"
"                            <artifactId>quarkus-extension-processor</artifactId> <!--4-->\n"
"                            <version>${quarkus.version}</version>\n"
"                        </path>\n"
"                    </annotationProcessorPaths>\n"
"                </configuration>\n"
"            </plugin>\n"
"        </plugins>\n"
"    </build>\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:383
#, fuzzy
msgid "By convention, the runtime module has no suffix (`greeting-extension`) as it is the artifact exposed to the end user."
msgstr "慣習的に、ランタイムモジュールはエンドユーザーに公開される成果物であるため、サフィックス ( `greeting` ) を持たない。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:384
#, fuzzy
msgid "The runtime module depends on the `quarkus-arc` artifact."
msgstr "ランタイムモジュールは `quarkus-arc` アーティファクトに依存しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:385
#, fuzzy
msgid "We add the `quarkus-bootstrap-maven-plugin` to generate the Quarkus extension descriptor included into the runtime artifact which links it with the corresponding deployment artifact."
msgstr "ランタイム成果物に含まれるQuarkus拡張記述子を生成するために `quarkus-bootstrap-maven-plugin` を追加し、これを対応するデプロイメント成果物とリンクさせています。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:387
#, fuzzy, no-wrap
msgid "Basic version of the Sample Greeting extension"
msgstr "サンプルグリーティングエクステンションの基本バージョン"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:389
#, fuzzy, no-wrap
msgid "Implementing the Greeting feature"
msgstr "グリーティング機能の実装"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:392
#, fuzzy
msgid "The (killer) feature proposed by our extension is to greet the user.  To do so, our extension will deploy, in the user application, a Servlet exposing the HTTP endpoint `/greeting` which responds to the GET verb with a plain text `Hello`."
msgstr "私たちのエクステンションが提案する(キラー)機能は、ユーザーに挨拶をすることです。 `Hello` これを実現するために、我々のエクステンションはユーザーアプリケーション内に、HTTP エンドポイント `/greeting` を公開するサーブレットを展開します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:394
#, fuzzy
msgid "The `runtime` module is where you develop the feature you want to propose to your users, so it's time to create our Web Servlet."
msgstr "`runtime` モジュールは、ユーザーに提案したい機能を開発するところなので、そろそろ Web Servlet を作成しましょう。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:397
#, fuzzy
msgid "To use Servlets in your applications you need to have a Servlet Container such as http://undertow.io[Undertow].  Luckily, `quarkus-bom` imported by our parent `pom.xml` already includes the Undertow Quarkus extension."
msgstr "アプリケーションでサーブレットを使用するには、 link:http://undertow.io[Undertow] のようなサーブレットコンテナーが必要です。 `pom.xml` 幸いにも、親である `quarkus-bom` がインポートした には、すでに Undertow Quarkus エクステンションが含まれています。必要なのは"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:399
#, fuzzy
msgid "All we need to do is add `quarkus-undertow` as dependency to our `./greeting-extension/runtime/pom.xml`:"
msgstr "必要なのは、 `quarkus-undertow` を依存関係として `./greeting-extension/runtime/pom.xml` に追加することだけです。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:405
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-undertow</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:409
#, fuzzy
msgid "The dependency on `quarkus-arc` generated by the `create-extension` mojo can now be removed since `quarkus-undertow` already depends on it."
msgstr "`create-extension` mojo で生成された `quarkus-core-deployment` への依存は、 `quarkus-undertow-deployment` が既に依存しているので、これで削除できます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:411
#, fuzzy
msgid "Now we can create our Servlet `org.acme.greeting.extension.GreetingExtensionServlet` in the `runtime` module."
msgstr "これで、 `runtime` モジュールでサーブレット `org.acme.quarkus.greeting.GreetingServlet` を作成することができるようになりました。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:415
#, no-wrap
msgid "mkdir -p ./greeting-extension/runtime/src/main/java/org/acme/greeting/extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:420
#, no-wrap
msgid "package org.acme.greeting.extension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:426
#, no-wrap
msgid ""
"import javax.servlet.annotation.WebServlet;\n"
"import javax.servlet.http.HttpServlet;\n"
"import javax.servlet.http.HttpServletRequest;\n"
"import javax.servlet.http.HttpServletResponse;\n"
"import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:429
#, no-wrap
msgid ""
"@WebServlet\n"
"public class GreetingExtensionServlet extends HttpServlet { // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:435
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException { // <2>\n"
"        resp.getWriter().write(\"Hello\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:438
#, fuzzy
msgid "As usual, defining a servlet requires to extend `javax.servlet.http.HttpServlet`."
msgstr "いつものように、サーブレットを定義するには `javax.servlet.http.HttpServlet` ."

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:439
#, fuzzy
msgid "Since we want to respond to the HTTP GET verb, we override the `doGet` method and write `Hello` in the Servlet response's output stream."
msgstr "HTTP GET動詞に応答したいので、 `doGet` メソッドをオーバーライドして、サーブレット応答の出力ストリームに `Hello` を記述します。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:440
#, fuzzy, no-wrap
msgid "Deploying the Greeting feature"
msgstr "グリーティング機能の展開"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:445
#, fuzzy
msgid "Quarkus magic relies on bytecode generation at build time rather than waiting for the runtime code evaluation, that's the role of your extension's `deployment` module.  Calm down, we know, bytecode is hard and you don't want to do it manually, Quarkus proposes a high level API to make your life easier.  Thanks to basic concepts, you will describe the items to produce/consume and the corresponding steps in order to generate the bytecode to produce during the deployment time."
msgstr "`deployment` Quarkus magicは、実行時のコード評価を待つのではなく、ビルド時のバイトコード生成に依存しています。落ち着いてください。バイトコードは難しいし、手動でやりたくないことはわかっています。基本的な概念のおかげで、デプロイ時に生成するバイトコードを生成するために、生成/消費するアイテムとそれに対応するステップを記述します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:447
#, fuzzy
msgid "The `io.quarkus.builder.item.BuildItem` concept represents object instances you will produce or consume (and at some point convert into bytecode) thanks to methods annotated with `@io.quarkus.deployment.annotations.BuildStep` which describe your extension's deployment tasks."
msgstr "`io.quarkus.builder.item.BuildItem` の概念は、 `@io.quarkus.deployment.annotations.BuildStep` でアノテーションされたメソッドのおかげで、あなたが生成したり消費したり (そしてある時点でバイトコードに変換したり) するオブジェクトインスタンスを表しており、エクステンションの展開タスクを記述します。"

#. type: Labeled list
#: upstream/_guides/building-my-first-extension.adoc:448
#, fuzzy, no-wrap
msgid "NOTE"
msgstr "ノート"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:449
#, fuzzy
msgid "See link:all-builditems[the complete list of BuildItem implementations in core] for more information"
msgstr "詳細は link:all-builditems[core の BuildItem 実装の完全なリストを] 参照してください。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:452
#, fuzzy
msgid "Go back to the generated `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` class."
msgstr "生成された `org.acme.quarkus.greeting.deployment.GreetingProcessor` クラスに戻ります。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:468
#, no-wrap
msgid ""
"    @BuildStep // <1>\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(FEATURE); // <2>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:475
#, fuzzy
msgid "`feature()` method is annotated with `@BuildStep` which means it is identified as a deployment task Quarkus will have to execute during the deployment.  `BuildStep` methods are run concurrently at augmentation time to augment the application.  They use a producer/consumer model, where a step is guaranteed not to be run until all the items that it is consuming have been produced."
msgstr "`feature()` メソッドには `@BuildStep` というアノテーションが付けられており、Quarkusがデプロイ時に実行しなければならないデプロイタスクとして識別されます。 `BuildStep` メソッドは、アプリケーションを拡張するための拡張時に同時に実行されます。プロデューサ/消費者モデルを使用しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:478
#, fuzzy
msgid "`io.quarkus.deployment.builditem.FeatureBuildItem` is an implementation of `BuildItem` which represents the description of an extension.  This `BuildItem` will be used by Quarkus to display information to the users when the application is starting."
msgstr "`io.quarkus.deployment.builditem.FeatureBuildItem` は、エクステンションの記述を表す `BuildItem` の実装です。この `BuildItem` は、アプリケーションの起動時にユーザーに情報を表示するためにQuarkusが使用します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:481
#, fuzzy
msgid "There are many `BuildItem` implementations, each one represents an aspect of the deployment process.  Here are some examples:"
msgstr "多くの `BuildItem` 実装があり、それぞれが展開プロセスの一面を表しています。ここではいくつかの例を紹介します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:483
#, fuzzy
msgid "`ServletBuildItem`: describes a Servlet (name, path, etc.) we want to generate during the deployment."
msgstr "`ServletBuildItem` : デプロイ時に生成したいサーブレット(名前、パスなど)を記述します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:484
#, fuzzy
msgid "`BeanContainerBuildItem`: describes a container used to store and retrieve object instances during the deployment."
msgstr "`BeanContainerBuildItem` : デプロイ時にオブジェクトインスタンスを保存・取得するために使用するコンテナーについて説明します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:487
#, fuzzy
msgid "If you don't find a `BuildItem` for what you want to achieve, you can create your own implementation. Keep in mind that a `BuildItem` should be as fine-grained as possible, representing a specific part of the deployment.  To create your `BuildItem` you can extend:"
msgstr "実現したいことに対応する `BuildItem` が見つからない場合は、独自の実装を作成することができます。 `BuildItem` は、デプロイメントの特定の部分を表すもので、できるだけ細かいものでなければならないということを覚えておいてください。 `BuildItem` を作成するには"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:489
#, fuzzy
msgid "`io.quarkus.builder.item.SimpleBuildItem` if you need only a single instance of the item during the deployment (e.g. `BeanContainerBuildItem`, you only want one container)."
msgstr "`io.quarkus.builder.item.SimpleBuildItem` デプロイ時にアイテムのインスタンスを1つだけ必要とする場合(例: `BeanContainerBuildItem` , コンテナーを1つだけにしたい場合)。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:490
#, fuzzy
msgid "`io.quarkus.builder.item.MultiBuildItem` if you want to have multiple instances (e.g. `ServletBuildItem`, you can produce many Servlets during the deployment)."
msgstr "複数のインスタンスを持ちたい場合は `io.quarkus.builder.item.MultiBuildItem` (例: `ServletBuildItem` , デプロイ時に多くのサーブレットを生成することができます)。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:493
#, fuzzy
msgid "It's now time to declare our HTTP endpoint. To do so, we need to produce a `ServletBuildItem`.  At this point, we are sure you understood that if the `quarkus-undertow` dependency proposes Servlet support for our `runtime` module, we will need the `quarkus-undertow-deployment` dependency in our `deployment` module to have access to the `io.quarkus.undertow.deployment.ServletBuildItem`."
msgstr "これで、HTTP エンドポイントを宣言する時が来ました。これを行うには、 `ServletBuildItem` を生成する必要があります。この時点で、 `quarkus-undertow` 依存関係が `runtime` モジュールの Servlet サポートを提案している場合、 `deployment` モジュールの `quarkus-undertow-deployment` 依存関係が `io.quarkus.undertow.deployment.ServletBuildItem` にアクセスできるようにする必要があることをご理解いただけたと思います。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:495
#, fuzzy
msgid "Let's add `quarkus-undertow-deployment` as dependency to our `./greeting-extension/deployment/pom.xml`:"
msgstr "`quarkus-undertow-deployment` を依存関係として `./greeting-extension/deployment/pom.xml` に追加してみましょう。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:501
#, no-wrap
msgid ""
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-undertow-deployment</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:504
#, fuzzy
msgid "The dependency on `quarkus-arc-deployment` generated by the `create-extension` mojo can now be removed since `quarkus-undertow-deployment` already depends on it."
msgstr "`create-extension` mojo で生成された `quarkus-core-deployment` への依存は、 `quarkus-undertow-deployment` が既に依存しているので、これで削除できます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:506
#, fuzzy
msgid "We can now update `org.acme.greeting.extension.deployment.GreetingExtensionProcessor`:"
msgstr "`org.acme.quarkus.greeting.deployment.GreetingProcessor` を更新できるようになりました。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:515
#, no-wrap
msgid ""
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.builditem.FeatureBuildItem;\n"
"import org.acme.greeting.extension.GreetingExtensionServlet;\n"
"import io.quarkus.undertow.deployment.ServletBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:532
#, no-wrap
msgid ""
"    @BuildStep\n"
"    ServletBuildItem createServlet() { // <1>\n"
"      ServletBuildItem servletBuildItem = ServletBuildItem.builder(\"greeting-extension\", GreetingExtensionServlet.class.getName())\n"
"        .addMapping(\"/greeting\")\n"
"        .build(); // <2>\n"
"      return servletBuildItem;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:538
#, fuzzy
msgid "We add a `createServlet` method which returns a `ServletBuildItem` and annotate it with `@BuildStep`.  Now, Quarkus will process this new task which will result in the bytecode generation of the Servlet registration at build time."
msgstr "`ServletBuildItem` を返す `createServlet` メソッドを追加し、 `@BuildStep` とアノテーションを付けます。これで、Quarkusはこの新しいタスクを処理して、ビルド時にサーブレット登録のバイトコードを生成します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:540
#, fuzzy
msgid "`ServletBuildItem` proposes a fluent API to instantiate a Servlet named `greeting-extension` of type `GreetingExtensionServlet` (it's our class provided by our extension `runtime` module), and map it the `/greeting` path."
msgstr "`ServletBuildItem` は、 `GreetingServlet` 型の `greeting` というサーブレットをインスタンス化し、 `/greeting` パスをマッピングするための流暢な API を提案しています (エクステンション `runtime` によって提供されるクラスです)。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:541
#, fuzzy, no-wrap
msgid "Testing the Greeting Extension feature"
msgstr "グリーティング機能のテスト"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:545
#, fuzzy
msgid "When developing a Quarkus extension, you mainly want to test your feature is properly deployed in an application and works as expected.  That's why the tests will be hosted in the `deployment` module."
msgstr "Quarkusエクステンションを開発する際には、主に機能がアプリケーションに正しくデプロイされ、期待通りに動作するかどうかをテストしたいと考えています。そのため、テストは `deployment` モジュールでホストされます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:547
#, fuzzy
msgid "Quarkus proposes facilities to test extensions via the `quarkus-junit5-internal` artifact (which should already be in the deployment pom.xml), in particular the `io.quarkus.test.QuarkusUnitTest` runner which starts an application with your extension."
msgstr "Quarkusは、 `quarkus-junit5-internal` アーティファクトを介してエクステンションをテストするための機能、特にエクステンションを使ってアプリケーションを起動する `io.quarkus.test.QuarkusUnitTest` ランナーを提案しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:550
#, fuzzy
msgid "We will use http://rest-assured.io[RestAssured] (massively used in Quarkus) to test our HTTP endpoint.  Let's add the `rest-assured` dependency into the `./greeting-extension/deployment/pom.xml`."
msgstr "link:http://rest-assured.io[RestAssured] (Quarkusで大量に使用されている)を使用してHTTPエンドポイントをテストします。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:559
#, no-wrap
msgid ""
"    ...\n"
"    <dependency>\n"
"      <groupId>io.rest-assured</groupId>\n"
"      <artifactId>rest-assured</artifactId> <!--2-->\n"
"      <scope>test</scope>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:562
#, fuzzy
msgid "The `create-extension` Maven Mojo can create the test and integration-test structure (drop the `-DwithoutTests`). Here, we'll create it ourselves:"
msgstr "現在、 `create-extension` Maven Mojoはテスト構造を作成しません。自分たちで作成します。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:566
#, no-wrap
msgid "mkdir -p ./greeting-extension/deployment/src/test/java/org/acme/greeting/extension/deployment\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:569
#, fuzzy
msgid "To start testing your extension, create the following `org.acme.greeting.extension.deployment.GreetingExtensionTest` test class:"
msgstr "エクステンションのテストを開始するには、次の `org.acme.quarkus.greeting.deployment.GreetingTest` テストクラスを作成します。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:580
#, no-wrap
msgid ""
"import io.quarkus.test.QuarkusUnitTest;\n"
"import io.restassured.RestAssured;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:582
#, no-wrap
msgid "import static org.hamcrest.Matchers.containsString;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:584
#, no-wrap
msgid "public class GreetingExtensionTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:588
#, no-wrap
msgid ""
"  @RegisterExtension\n"
"  static final QuarkusUnitTest config = new QuarkusUnitTest()\n"
"    .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)); // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:593
#, no-wrap
msgid ""
"  @Test\n"
"  public void testGreeting() {\n"
"    RestAssured.when().get(\"/greeting\").then().statusCode(200).body(containsString(\"Hello\")); // <2>\n"
"  }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:598
#, fuzzy
msgid "We register a Junit Extension which will start a Quarkus application with the Greeting extension."
msgstr "グリーティングエクステンションでQuarkusアプリを起動するJunitエクステンションを登録しています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:599
#, fuzzy
msgid "We verify the application has a `greeting` endpoint responding to a HTTP GET request with a OK status (200) and a plain text body containing `Hello`"
msgstr "アプリケーションが `greeting` エンドポイントから OK ステータス (200) の HTTP GET 要求に応答していることと、以下の内容を含むプレーンテキストボディを持っていることを確認します。 `Hello`"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:601
#, fuzzy
msgid "Time to test and install to our local maven repository!"
msgstr "テストしてローカルのmavenリポジトリにインストールする時間です!"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:649
#, no-wrap
msgid ""
"$ mvn clean install\n"
"[INFO] Scanning for projects...\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Reactor Build Order:\n"
"[INFO]\n"
"[INFO] Greeting Extension - Parent                                        [pom]\n"
"[INFO] Greeting Extension - Runtime                                       [jar]\n"
"[INFO] Greeting Extension - Deployment                                    [jar]\n"
"[INFO]\n"
"[INFO] -----------------< org.acme:greeting-extension-parent >-----------------\n"
"[INFO] Building Greeting Extension - Parent 1.0.0-SNAPSHOT                [1/3]\n"
"[INFO] --------------------------------[ pom ]---------------------------------\n"
"...\n"
"[INFO] -------------------------------------------------------\n"
"[INFO]  T E S T S\n"
"[INFO] -------------------------------------------------------\n"
"[INFO] Running org.acme.greeting.extension.deployment.GreetingExtensionTest\n"
"2021-01-27 10:24:42,506 INFO  [io.quarkus] (main) Quarkus {quarkus-version} on JVM started in 0.470s. Listening on: http://localhost:8081\n"
"2021-01-27 10:24:42,508 INFO  [io.quarkus] (main) Profile test activated.\n"
"2021-01-27 10:24:42,508 INFO  [io.quarkus] (main) Installed features: [cdi, greeting-extension, servlet]\n"
"2021-01-27 10:24:43,764 INFO  [io.quarkus] (main) Quarkus stopped in 0.018s\n"
"[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.799 s - in org.acme.greeting.extension.deployment.GreetingExtensionTest\n"
"[INFO]\n"
"[INFO] Results:\n"
"[INFO]\n"
"[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n"
"[INFO]\n"
"[INFO]\n"
"[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ greeting-extension-deployment ---\n"
"[INFO] Building jar: /Users/ia3andy/workspace/redhat/quarkus/demo/greeting-extension/deployment/target/greeting-extension-deployment-1.0.0-SNAPSHOT.jar\n"
"[INFO]\n"
"[INFO] --- maven-install-plugin:2.4:install (default-install) @ greeting-extension-deployment ---\n"
"...\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Reactor Summary for Greeting Extension - Parent 1.0.0-SNAPSHOT:\n"
"[INFO]\n"
"[INFO] Greeting Extension - Parent ........................ SUCCESS [  0.303 s]\n"
"[INFO] Greeting Extension - Runtime ....................... SUCCESS [  3.345 s]\n"
"[INFO] Greeting Extension - Deployment .................... SUCCESS [  7.365 s]\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  11.246 s\n"
"[INFO] Finished at: 2021-01-27T10:24:44+01:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:652
#, fuzzy
msgid "Looks good! Congratulations you just finished your first extension."
msgstr "良さそうですね~。初めての増築を終えたばかりで、おめでとうございます。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:653
#, fuzzy, no-wrap
msgid "Debugging your extension"
msgstr "エクステンションのデバッグ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:657
#, fuzzy
msgid "_If debugging is the process of removing bugs, then programming must be the process of putting them in._ Edsger W. Dijkstra"
msgstr "_デバッグがバグを取り除く作業であるならば、プログラミングはバグを入れる作業でなければならない。_ エドガー・W・ダイクストラ"

#. type: Title ====
#: upstream/_guides/building-my-first-extension.adoc:659
#, fuzzy, no-wrap
msgid "Debugging your application build"
msgstr "アプリケーションのビルドをデバッグする"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:663
#, fuzzy
msgid "Since your extension deployment is made during the application build, this process is triggered by your build tool.  That means if you want to debug this phase you need to launch your build tool with the remote debug mode switched one."
msgstr "エクステンションのデプロイはアプリケーションのビルド中に行われるので、このプロセスはビルドツールによってトリガされます。つまり、このフェーズをデバッグしたい場合は、リモートデバッグモードを切り替えてビルドツールを起動する必要があります。"

#. type: Title =====
#: upstream/_guides/building-my-first-extension.adoc:664
#, fuzzy, no-wrap
msgid "Maven"
msgstr "メイヴン"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:668
#, fuzzy
msgid "You can activate Maven remote debugging by using `mvnDebug`.  You can launch your application with the following command line:"
msgstr "`mvnDebug` を使用して、Maven リモートデバッグを有効にすることができます。以下のコマンドラインでアプリケーションを起動できます。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:672
#, no-wrap
msgid "mvnDebug clean compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:676
#, fuzzy
msgid "By default, Maven will wait for a connection on `localhost:8000`.  Now, you can run your IDE `Remote` configuration to attach it to `localhost:8000`."
msgstr "デフォルトでは、Mavenは、 `localhost:8000` 上の接続を待ちます。今、あなたはそれをアタッチするために、IDE `Remote` の設定を実行することができます `localhost:8000` ."

#. type: Title =====
#: upstream/_guides/building-my-first-extension.adoc:677
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:681
#, fuzzy
msgid "You can activate Gradle remote debugging by using the flags `org.gradle.debug=true` or `org.gradle.daemon.debug=true` in daemon mode.  You can launch your application with the following command line:"
msgstr "Gradle のリモートデバッグは、デーモンモードでフラグ `org.gradle.debug=true` または `org.gradle.daemon.debug=true` を使用して有効にすることができます。以下のコマンドラインでアプリケーションを起動することができます。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:685
#, no-wrap
msgid "./gradlew quarkusDev -Dorg.gradle.daemon.debug=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:689
#, fuzzy
msgid "By default, Gradle will wait for a connection on `localhost:5005`.  Now, you can run your IDE `Remote` configuration to attach it to `localhost:5005`."
msgstr "デフォルトでは、Gradleは、 `localhost:5005` 上の接続を待ちます。今、あなたはそれを `localhost:5005` にアタッチするために、あなたの IDE `Remote` の設定を実行することができます。"

#. type: Title ====
#: upstream/_guides/building-my-first-extension.adoc:691
#, fuzzy, no-wrap
msgid "Debugging your extension tests"
msgstr "エクステンションテストのデバッグ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:695
#, fuzzy
msgid "We have seen together how to test your extension and sometimes things don't go so well and you want to debug your tests.  Same principle here, the trick is to enable the Maven Surefire remote debugging in order to attach an IDE `Remote` configuration."
msgstr "エクステンションをテストする方法を一緒に見てきましたが、時にはうまくいかず、テストをデバッグしたい場合もあります。ここでも同じ原理で、IDE `Remote` の設定をアタッチするために Maven Surefire リモートデバッグを有効にするのがコツです。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:700
#, no-wrap
msgid ""
"cd ./greeting-extension\n"
"mvn clean test -Dmaven.surefire.debug\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:703
#, fuzzy
msgid "By default, Maven will wait for a connection on `localhost:5005`."
msgstr "デフォルトでは、Maven は `localhost:5005` で接続を待ちます。"

#. type: Title ===
#: upstream/_guides/building-my-first-extension.adoc:704
#, fuzzy, no-wrap
msgid "Time to use your new extension"
msgstr "エクステンションのデバッグ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:707
#, fuzzy
msgid "Now that you just finished building your first extension you should be eager to use it in a Quarkus application!"
msgstr "最初のエクステンションを構築し終えたばかりなので、Quarkusアプリケーションで使いたいと思うはずです。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:709
#, fuzzy, no-wrap
msgid "*Classic Maven publication*\n"
msgstr "*古典的なメイヴンの出版*"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:711
#, fuzzy
msgid "If not already done in the previous step, you should install the `greeting-extension` in your local repository:"
msgstr "前のステップでまだ行っていない場合は、ローカルリポジトリに `greeting-extension` をインストールする必要があります。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:715
#, no-wrap
msgid ""
"cd ./greeting-extension\n"
"mvn clean install\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:718
#, fuzzy
msgid "Then from another directory, use our tooling to create a new `greeting-app` Quarkus application with your new extension:"
msgstr "次に、別のディレクトリから、当社のツールを使用して、新しいエクステンションを持つ新しい `greeting-app` Quarkusアプリケーションを作成します。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:725
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"     -DprojectGroupId=org.acme \\\n"
"     -DprojectArtifactId=greeting-app \\\n"
"     -Dextensions=\"org.acme:greeting-extension:1.0.0-SNAPSHOT\" \\\n"
"     -DnoExamples\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:728
#, fuzzy
msgid "`cd` into `greeting-app`."
msgstr "`cd` を `greeting-app` に変更します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:730
#, fuzzy
msgid "The `greeting-extension` extension has to be installed in the local Maven repository to be usable in the application."
msgstr "`quarkus-greeting` エクステンションをアプリケーションで使用できるようにするには、ローカルの Maven リポジトリにインストールする必要があります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:733
#, fuzzy
msgid "Run the application and notice the `Installed Features` list contains the `greeting-extension` extension."
msgstr "アプリケーションを実行して、 `Installed Features` のリストに `quarkus-greeting` のエクステンションが含まれていることに気づきます。"

#. type: delimited block -
#: upstream/_guides/building-my-first-extension.adoc:763
#, no-wrap
msgid ""
"$ mvn clean compile quarkus:dev\n"
"[INFO] Scanning for projects...\n"
"[INFO]\n"
"[INFO] -----------------------< org.acme:greeting-app >------------------------\n"
"[INFO] Building greeting-app 1.0.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO]\n"
"[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ greeting-app ---\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:generate-code (default) @ greeting-app ---\n"
"[INFO]\n"
"[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ greeting-app ---\n"
"[INFO] Using 'UTF-8' encoding to copy filtered resources.\n"
"[INFO] Copying 1 resource\n"
"[INFO]\n"
"[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ greeting-app ---\n"
"[INFO] Nothing to compile - all classes are up to date\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:dev (default-cli) @ greeting-app ---\n"
"Listening for transport dt_socket at address: 5005\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2021-01-27 10:28:07,240 INFO  [io.quarkus] (Quarkus Main Thread) greeting-app 1.0.0-SNAPSHOT on JVM (powered by Quarkus {quarkus-version}) started in 0.531s. Listening on: http://localhost:8080\n"
"2021-01-27 10:28:07,242 INFO  [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated.\n"
"2021-01-27 10:28:07,243 INFO  [io.quarkus] (Quarkus Main Thread) Installed features: [cdi, greeting-extension, servlet]\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:768
#, fuzzy
msgid "From an extension developer standpoint the Maven publication strategy is very handy and fast but Quarkus wants to go one step further by also ensuring a reliability of the ecosystem for the people who will use the extensions.  Think about it, we all had a poor Developer Experience with an unmaintained library, an incompatibility between dependencies (and we don't even talk about legal issues).  That's why there is the Quarkus Platform."
msgstr "エクステンションの開発者の立場からすると、Mavenの公開戦略は非常に便利で高速ですが、Quarkusは、エクステンションを使用する人々のためにエコシステムの信頼性も確保することで、さらに一歩進んでいきたいと考えています。考えてみてください。私たちは皆、メンテナンスされていないライブラリや依存関係間の非互換性(法的な問題についても話しません)で、開発者の経験が乏しくなったことがあります。そのためにQuarkus Platformがあるのです。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:770
#, fuzzy, no-wrap
msgid "*Quarkus Platform*\n"
msgstr "*Quarkusプラットフォーム*"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:772
#, fuzzy
msgid "Quarkus proposes a `quarkus-universe-bom` which is a certified list of extensions placed under the Quarkus Platform label. From an application developer, the objectives of the platform are:"
msgstr "Quarkusは、Quarkus Platformラベルの下に置かれたエクステンションの認定リストである `quarkus-universe-bom` を提案しています。アプリケーション開発者からすると、このプラットフォームの目的は"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:774
#, fuzzy
msgid "To guarantee a supportability of the extension (bugfix, security issues, dependency upgrades)"
msgstr "エクステンションのサポート性を保証するために (バグフィックス、セキュリティー問題、依存関係のアップグレード)"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:775
#, fuzzy
msgid "To ease the extension discovery through the Quarkus CLI or https://code.quarkus.io/"
msgstr "Quarkus CLIまたは https://code.quarkus.io/ を通じてエクステンションの発見を容易にするには"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:776
#, fuzzy
msgid "To ensure a global consistency of the extension ecosystem"
msgstr "拡張エコシステムのグローバルな整合性を確保するために"

#. type: Block title
#: upstream/_guides/building-my-first-extension.adoc:778
#, fuzzy, no-wrap
msgid "Should I publish my extension to the platform?"
msgstr "エクステンションをプラットフォームに公開すべきか?"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:783
#, fuzzy
msgid "If you feel your extensions is for you or a limited group, simply publishing to Maven is fine.  If the extension solves a general problem, it is very handy for Quarkus users to see it on https://code.quarkus.io.  But this comes with some responsibility for you, keeping it up to date with Quarkus minor releases (every month or so at the moment).  When in doubt, have a conversation with the community in the https://groups.google.com/forum/#!forum/quarkus-dev[Quarkus Google Group]. We can make a collective decision."
msgstr "エクステンションが自分や限定されたグループのためのものだと感じるのであれば、Mavenに公開するだけでも構いません。エクステンションが一般的な問題を解決する場合、Quarkusユーザーにとって、 https://code.quarkus.io でそれを見ることができるのは非常に便利です。しかし、これには、Quarkusのマイナーリリース(現時点では1ヶ月に1回程度)に合わせて最新の状態に保つという、あなたの責任が伴います。疑問がある場合は、Quarkusの link:https://groups.google.com/forum/#!forum/quarkus-dev[Googleグループ] でコミュニティと会話をしてください。集団的な決定をすることができます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:785
#, fuzzy
msgid "If you want to contribute a new extension, we strongly suggest you to host it in the Quarkiverse Hub."
msgstr "新しいエクステンションを提供したい場合は、Quarkiverse Hubでホストすることを強くお勧めします。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:787
#, fuzzy, no-wrap
msgid "*Quarkiverse Hub*\n"
msgstr "*クォークユニバースハブ*"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:789
#, fuzzy
msgid "link:https://github.com/quarkiverse[Quarkiverse Hub] is the GitHub organization that provides repository hosting (including build, CI and release publishing setup) for Quarkus extension projects contributed by the community."
msgstr "link:https://github.com/quarkiverse[Quarkiverse Hubは] 、コミュニティから投稿されたQuarkus拡張プロジェクトのリポジトリホスティング(ビルド、CI、リリースパブリッシングのセットアップを含む)を提供するGitHub組織です。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:791
#, fuzzy
msgid "You can get started by creating an link:https://github.com/quarkusio/quarkus/issues/new/choose[Extension Request] issue (check first if one wasn't already submitted link:https://github.com/quarkusio/quarkus/labels/kind%2Fextension-proposal[here]) and asking to lead it."
msgstr "link:https://github.com/quarkusio/quarkus/issues/new/choose[拡張要求] 課題を作成し( link:https://github.com/quarkusio/quarkus/labels/kind%2Fextension-proposal[ここで] まだ提出されていないかどうかを最初に確認してください)、それをリードするように依頼することから始めることができます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:793
#, fuzzy
msgid "We'll take care of provisioning a new repository and set it up to:"
msgstr "新しいリポジトリのプロビジョニングをして設定します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:795
#, fuzzy
msgid "Be supported by our tooling;"
msgstr "当社のツールでサポートされています。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:796
#, fuzzy
msgid "Publish the documentation you produce for your extension to the Quarkiverse website;"
msgstr "エクステンションのために作成したドキュメントをQuarkiverseのウェブサイトに公開します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:797
#, fuzzy
msgid "Configure your extension to use the link:https://github.com/quarkusio/quarkus-ecosystem-ci#quarkus-ecosystem-ci[Quarkus Ecosystem CI] to build against the latest Quarkus Core changes;"
msgstr "link:https://github.com/quarkusio/quarkus-ecosystem-ci#quarkus-ecosystem-ci[QuarkusエコシステムCI] を使用して、最新のQuarkus Coreの変更に対応してビルドするようにエクステンションを設定します。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:798
#, fuzzy
msgid "Give you the freedom to manage the project and release to Maven Central as you like."
msgstr "プロジェクトを管理し、好きなようにMaven Centralにリリースする自由を与えます。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:800
#, fuzzy
msgid "For more information, check link:https://github.com/quarkiverse/quarkiverse/wiki[the Quarkiverse Wiki] and link:https://quarkus.io/blog/quarkiverse/[this blog post]."
msgstr "詳しくは、 link:https://github.com/quarkiverse/quarkiverse/wiki[Quarkiverse Wiki] と link:https://quarkus.io/blog/quarkiverse/[このブログ記事を] チェックしてみてください。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:801
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:804
#, fuzzy
msgid "Creating new extensions may appear to be an intricate task at first but once you understood the Quarkus game-changer paradigm (build time vs runtime) the structure of an extension makes perfectly sense."
msgstr "新しいエクステンションの作成は、最初は複雑な作業に見えるかもしれませんが、Quarkusのゲームチェンジャーのパラダイム(ビルド時間とランタイム)を理解してしまえば、エクステンションの構造は完璧に理にかなったものになります。"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:806
#, fuzzy
msgid "As usual, along the path Quarkus simplifies things under the hood (Maven Mojo, bytecode generation or testing) to make it pleasant to develop new features."
msgstr "いつものように、Quarkusはパスに沿って、新機能の開発を快適にするために、フードの下で物事を単純化します(Maven Mojo、バイトコード生成またはテスト)。"

#. type: Title ==
#: upstream/_guides/building-my-first-extension.adoc:807
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "続きを読む"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:810
#, fuzzy
msgid "link:writing-extensions[Writing your own extension] for the full documentation."
msgstr "完全なドキュメントのために link:writing-extensions[独自のエクステンションを書く]"

#. type: Plain text
#: upstream/_guides/building-my-first-extension.adoc:810
#, fuzzy
msgid "link:dev-console[Quarkus DEV Console] to learn how to support the DEV Console in your extension"
msgstr "エクステンションでDEV Consoleをサポートする方法については、 link:dev-console[Quarkus DEV Consoleを] 参照してください。"
