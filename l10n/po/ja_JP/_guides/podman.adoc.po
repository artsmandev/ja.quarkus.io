# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-08-02 09:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/podman.adoc:6
#, fuzzy, no-wrap
msgid "Using Podman with Quarkus"
msgstr "PodmanとQuarkusの併用"

#. type: Plain text
#: upstream/_guides/podman.adoc:10
#, fuzzy
msgid "https://podman.io/[Podman] is a daemonless and rootless container engine for developing, managing, and running OCI Containers on your Linux system or other OS.  If you're using Podman with Quarkus, some one-off setup is needed, but once it's done, you can take advantage of all the Quarkus features."
msgstr "link:https://podman.io/[Podman] は、Linux システムやその他の OS 上で OCI コンテナを開発、管理、実行するためのデーモンレス、ルートレスコンテナエンジンです。PodmanはDockerと同じように `podman-docker` パッケージを使用して使用することができます。"

#. type: Title ==
#: upstream/_guides/podman.adoc:11
#, fuzzy, no-wrap
msgid "Installing Podman"
msgstr "LinuxにPodmanをインストールする"

#. type: Title ===
#: upstream/_guides/podman.adoc:13
#, no-wrap
msgid "macOS"
msgstr "macOS"

#. type: Plain text
#: upstream/_guides/podman.adoc:20
msgid "Containers are really Linux.  As such, Linux containers cannot run natively on macOS or Windows.  Therefore, the containers must run in a Linux virtual machine (VM), and a Podman client interacts with that VM.  A native hypervisor subsystem and virtualization software is used to run the Linux VM on the OS, and then containers are run within this VM.  In Podman, this is known as the Podman machine, and it is built into the tool."
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:23
msgid "macOS users can install Podman through https://brew.sh/[Homebrew].  Once you have set up `brew`, you can use the `brew install` command to install Podman and `docker-compose`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:33
#, no-wrap
msgid ""
"brew install podman\n"
"brew install docker-compose\n"
"podman machine init -v $HOME:$HOME\n"
"sudo /opt/homebrew/Cellar/podman/4.0.3/bin/podman-mac-helper install\n"
"podman machine set --rootful\n"
"podman machine start\n"
"alias docker='podman'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:36
msgid "If you're using Podman 4.1 or higher, you don't need the `-v $HOME:$HOME` volume mount."
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:38
msgid "If you're using Mac M1, an extra step is required to https://edofic.com/posts/2021-09-12-podman-m1-amd64[make AMD64 images work]:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:45
#, no-wrap
msgid ""
"podman machine ssh\n"
"sudo -i\n"
"rpm-ostree install qemu-user-static\n"
"systemctl reboot\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:48
msgid "Once the virtual machine restarts, you should be good to run dev services."
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:50
msgid "For more details, please see"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:52
msgid "the https://podman.io/getting-started/installation#macos[official Podman documentation]"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:53
msgid "article about https://www.redhat.com/sysadmin/replace-docker-podman-macos[running Podman on Mac]"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:54
msgid "https://xphyr.net/post/podman_on_osx/[another article], with good guidance on `--rootful` and mounting volumes"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:55
msgid "article about https://edofic.com/posts/2021-09-12-podman-m1-amd64[running AMD64 images with Podman on Mac M1]"
msgstr ""

#. type: Title ===
#: upstream/_guides/podman.adoc:56
#, no-wrap
msgid "Windows"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:59
msgid "Please see the https://github.com/containers/podman/blob/main/docs/tutorials/podman-for-windows.md[Podman for Windows guide] for setup and usage instructions."
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:61
msgid "Before starting the Podman machine, set it to prefer rootful container execution:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:65
#, no-wrap
msgid "podman machine set --rootful\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:68
msgid "This action only needs to be done once."
msgstr ""

#. type: Title ===
#: upstream/_guides/podman.adoc:69
#, no-wrap
msgid "Linux"
msgstr "Linux"

#. type: Plain text
#: upstream/_guides/podman.adoc:75
#, fuzzy
msgid "The Podman package is available in several Linux distributions.  Podman can be used the same way as Docker with the `podman-docker` package.  To install it for your OS, please refer to the https://podman.io/getting-started/installation[Podman installation guide].  Below is the short installation instruction for popular Linux distributions:"
msgstr "PodmanパッケージはいくつかのLinuxディストリビューションで利用可能です。あなたのOSにインストールするには、 link:https://podman.io/getting-started/installation[Podmanインストールガイドを] 参照してください。以下は人気のあるLinuxディストリビューションでの簡単なインストール方法です。"

#. type: Title ====
#: upstream/_guides/podman.adoc:76
#, fuzzy, no-wrap
msgid "Fedora"
msgstr "フェドラ"

#. type: delimited block -
#: upstream/_guides/podman.adoc:81
#, no-wrap
msgid "sudo dnf install podman podman-docker docker-compose\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/podman.adoc:83
#, fuzzy, no-wrap
msgid "Ubuntu (21.04 and later)"
msgstr "Ubuntu (21.04以降)"

#. type: delimited block -
#: upstream/_guides/podman.adoc:88
#, no-wrap
msgid "sudo apt install podman podman-docker docker-compose\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/podman.adoc:90
#, no-wrap
msgid "Setting DOCKER_HOST on Linux"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:98
msgid "Podman supports two modes of operation: rootful, in which case the container runs as root on the host system, and rootless, where the container runs under a standard Unix user account.  On Linux, the REST API Unix socket is, by default, restricted to only allow the root user to access it.  This prevents someone from using a container to achieve a privilege escalation on the syetem.  While these restrictions can be softened to allow a special group instead of just root, the recommended approach is to use rootless Podman on Linux.  To use rootless Podman, you need to set a DOCKER_HOST environment variable to point to the user-specific socket.  In both cases, you need to start the REST API by enabling the Podman socket service through systemd."
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:105
#, no-wrap
msgid ""
"# Enable the podman socket with Docker REST API (only needs to be done once)\n"
"systemctl --user enable podman.socket --now\n"
"# Set the required environment variables (need to be run everytime or added to profile)\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:107
#, no-wrap
msgid "export DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:111
#, fuzzy
msgid "For a detailed explanation, see this https://quarkus.io/blog/quarkus-devservices-testcontainers-podman/[blog article]."
msgstr "詳しい解説は、こちらの link:https://quarkus.io/blog/quarkus-devservices-testcontainers-podman/[ブログ] 記事をご覧ください。"

#. type: Title ==
#: upstream/_guides/podman.adoc:112
#, fuzzy, no-wrap
msgid "After installation"
msgstr "インストール後"

#. type: Title ===
#: upstream/_guides/podman.adoc:114
#, no-wrap
msgid "Testcontainers privileges"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:117
msgid "Edit `~/.testcontainers.properties` and add the following line"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:121
#, no-wrap
msgid "ryuk.container.privileged=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:124
msgid "Alternatively, you can disable ryuk:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/podman.adoc:128
#, no-wrap
msgid "export TESTCONTAINERS_RYUK_DISABLED=true #not recommended - see above!\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/podman.adoc:132
msgid "This has the disadvantage of https://github.com/containers/podman/discussions/14238[disabling container cleanup], so you may find stale containers hanging around.  This can be a problem if you're running automated tests."
msgstr ""

#. type: Title ==
#: upstream/_guides/podman.adoc:133
#, fuzzy, no-wrap
msgid "Short names of images"
msgstr "画像の略称"

#. type: Plain text
#: upstream/_guides/podman.adoc:137
#, fuzzy
msgid "Testcontainers and Quarkus Dev Services also expect the container service they make requests against to be non-interactive.  In case you have multiple registries configured in your Docker or Podman configuration, and when using short image names, Podman responds with a prompt asking which registry should be used to pull images."
msgstr "TestcontainersとQuarkus Dev Servicesは、リクエストを出すコンテナサービスが非対話的であることも想定しています。DockerやPodmanの設定で複数のレジストリを設定している場合、短いイメージ名を使用すると、Podmanはどのレジストリを使用してイメージを取得するか尋ねるプロンプトで応答します。"

#. type: Plain text
#: upstream/_guides/podman.adoc:140
#, fuzzy
msgid "While we recommend you to avoid short names and always use fully specified names including the registry, Testcontainers unfortunately relies on short names internally for the time being.  If you are using Testcontainers, either directly or through Dev Services, you need to disable this prompt by setting the `short-name-mode=\"disabled\"` configuration property of Podman in `/etc/containers/registries.conf`."
msgstr "短い名前は避け、レジストリを含めて常に完全に指定された名前を使用することをお勧めしますが、Testcontainersは残念ながら当分の間、内部的に短い名前に依存しています。もしTestcontainersを直接、またはDev Servicesを通して使っているなら、 `/etc/containers/registries.conf` でPodmanの `short-name-mode=\"disabled\"` configuration propertyを設定することで、このプロンプトを無効にする必要があります ."

#, fuzzy
#~ msgid "Podman is a daemonless container engine. Most Quarkus Dev Services and Testcontainers expect a running Docker daemon listening at a Unix socket.  That's why the following steps are required."
#~ msgstr "Podmanは、デーモンレスのコンテナエンジンです。ほとんどのQuarkus Dev ServicesとTestcontainerは、UnixソケットでリッスンしているDockerデーモンが動作していることを想定しています。そのため、次の手順が必要になります。"

#, fuzzy
#~ msgid "To make changes permanent, add the exported environment variables to the \"init\" file from your shell. For example, the `bash` shell uses the `~/.bashrc` file:"
#~ msgstr "変更を恒久的にするには、エクスポートされた環境変数をシェルの \"init\" ファイルに追加します。例えば、 `bash` シェルは、 `~/.bashrc` ファイルを使用します。"

#, fuzzy
#~ msgid "Other operating systems"
#~ msgstr "その他のオペレーティングシステム"
