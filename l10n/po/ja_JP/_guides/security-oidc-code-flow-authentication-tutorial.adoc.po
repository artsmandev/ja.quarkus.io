# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-10-15 08:11+0000\n"
"PO-Revision-Date: 2023-07-01 21:40+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.2.2\n"

#. type: Title =
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:7
#, no-wrap
msgid "Protect a web application by using OpenID Connect (OIDC) authorization code flow"
msgstr "Quarkus - 認可コードフローのOpenID Connectを使用してWebアプリケーションを保護"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:13
msgid "With the Quarkus OpenID Connect (OIDC) extension, you can protect application HTTP endpoints by using the OIDC Authorization Code Flow mechanism."
msgstr "Quarkus OpenID Connect（OIDC）エクステンションを使用すると、OIDC 認可コードフローメカニズムを使用して、アプリケーションのHTTPエンドポイントを保護できます。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:15
#, fuzzy
msgid "To learn more about the OIDC authorization code flow mechanism, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]."
msgstr "OIDC認可コードフローメカニズムの詳細については、 xref:security-oidc-code-flow-authentication.adoc[ウェブアプリケーションを保護するためのOIDCコードフロー] メカニズムを参照してください。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:18
#, fuzzy
msgid "To learn about how well-known social providers such as Google, GitHub, Microsoft, Twitter, Apple, Facebook, and Spotify can be used with Quarkus OIDC, see xref:security-openid-connect-providers.adoc[Configuring Well-Known OpenID Connect Providers].  See also, xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]."
msgstr "Google、GitHub、Microsoft、Twitter、Apple、Facebook、Spotifyなどの有名なソーシャルプロバイダをQuarkus OIDCで使用する方法については、「 xref:security-openid-connect-providers.adoc[Well-Known OpenID Connect Providersの設定] 」を参照してください。 xref:security-authentication-mechanisms.adoc#other-supported-authentication-mechanisms[Quarkusの] 認証メカニズムも参照してください。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:20
#, fuzzy
msgid "If you want to protect your service applications by using OIDC Bearer token authentication, see xref:security-oidc-bearer-token-authentication-concept.adoc[OIDC Bearer token authentication]."
msgstr "OIDCベアラートークン認証を使用してサービスアプリケーションを保護したい場合は、 xref:security-oidc-bearer-token-authentication-concept.adoc[OIDCベアラートークン] 認証を参照してください。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:21
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:26
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:29
msgid "In this example, we build a very simple web application with a single page:"
msgstr "この例では、1ページの非常にシンプルなWebアプリケーションを構築しています。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:31
msgid "`/index.html`"
msgstr "`/index.html`"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:33
msgid "This page is protected and can only be accessed by authenticated users."
msgstr "このページは保護されており、認証されたユーザーのみがアクセスできます。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:34
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:38
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次のセクションで紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:40
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitリポジトリをクローンする: `git clone {quickstarts-clone-url}` または {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:42
#, fuzzy
msgid "The solution is located in the `security-openid-connect-web-authentication-quickstart` link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory]."
msgstr "ソリューションは `security-openid-connect-web-authentication-quickstart` link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[ディレクトリに] あります。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:43
#, no-wrap
msgid "Procedure"
msgstr "手順"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:45
#, no-wrap
msgid "Create the Maven project"
msgstr "Maven プロジェクトの作成"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:49
msgid "First, we need a new project.  Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:55
msgid "If you already have your Quarkus project configured, you can add the `oidc` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `oidc` エクステンションを追加することができます。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:60
msgid "This will add the following to your build file:"
msgstr "これにより、`pom.xml` に以下が追加されます:"

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:62
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:68
#, no-wrap
msgid ""
"<dependency>\n"
"   <groupId>io.quarkus</groupId>\n"
"   <artifactId>quarkus-oidc</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:71
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:74
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-oidc\")\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:76
#, no-wrap
msgid "Write the application"
msgstr "アプリケーションの記述"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:79
msgid "Let's write a simple Jakarta REST resource which has all the tokens returned in the authorization code grant response injected:"
msgstr "認可コードグラントレスポンスで返されたトークンをすべて注入した、シンプルなJakarta RESTリソースを書いてみましょう:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:83
#, no-wrap
msgid "package org.acme.security.openid.connect.web.authentication;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:88
#, no-wrap
msgid ""
"import jakarta.inject.Inject;\n"
"import jakarta.ws.rs.GET;\n"
"import jakarta.ws.rs.Path;\n"
"import jakarta.ws.rs.Produces;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:90
#, no-wrap
msgid "import org.eclipse.microprofile.jwt.JsonWebToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:93
#, no-wrap
msgid ""
"import io.quarkus.oidc.IdToken;\n"
"import io.quarkus.oidc.RefreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:96
#, no-wrap
msgid ""
"@Path(\"/tokens\")\n"
"public class TokenResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:103
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the ID Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   @IdToken\n"
"   JsonWebToken idToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:109
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the Access Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   JsonWebToken accessToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:115
#, no-wrap
msgid ""
"   /**\n"
"    * Injection point for the Refresh Token issued by the OpenID Connect Provider\n"
"    */\n"
"   @Inject\n"
"   RefreshToken refreshToken;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:128
#, no-wrap
msgid ""
"   /**\n"
"    * Returns the tokens available to the application. This endpoint exists only for demonstration purposes, you should not\n"
"    * expose these tokens in a real application.\n"
"    *\n"
"    * @return a HTML page containing the tokens available to the application\n"
"    */\n"
"   @GET\n"
"   @Produces(\"text/html\")\n"
"   public String getTokens() {\n"
"       StringBuilder response = new StringBuilder().append(\"<html>\")\n"
"               .append(\"<body>\")\n"
"               .append(\"<ul>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:131
#, no-wrap
msgid "       Object userName = this.idToken.getClaim(\"preferred_username\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:135
#, no-wrap
msgid ""
"       if (userName != null) {\n"
"           response.append(\"<li>username: \").append(userName.toString()).append(\"</li>\");\n"
"       }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:137
#, no-wrap
msgid "       Object scopes = this.accessToken.getClaim(\"scope\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:141
#, no-wrap
msgid ""
"       if (scopes != null) {\n"
"           response.append(\"<li>scopes: \").append(scopes.toString()).append(\"</li>\");\n"
"       }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:143
#, no-wrap
msgid "       response.append(\"<li>refresh_token: \").append(refreshToken.getToken() != null).append(\"</li>\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:147
#, no-wrap
msgid ""
"       return response.append(\"</ul>\").append(\"</body>\").append(\"</html>\").toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:151
msgid "This endpoint has ID, access, and refresh tokens injected.  It returns a `preferred_username` claim from the ID token, a `scope` claim from the access token, and also a refresh token availability status."
msgstr "このエンドポイントには、ID、アクセス、リフレッシュの各トークンが注入されています。IDトークンから `preferred_username` 、アクセストークンから `scope` 、さらにリフレッシュトークンの可用性ステータスを返します。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:153
msgid "Note that you do not have to inject the tokens - it is only required if the endpoint needs to use the ID token to interact with the currently authenticated user or use the access token to access a downstream service on behalf of this user."
msgstr "基本的にトークンを注入する必要はありません。エンドポイントが ID トークンを使用して現在認証されているユーザーとやりとりする必要がある場合や、アクセス・トークンを使用してこのユーザーに代わってダウンストリーム・サービスにアクセスする必要がある場合にのみ必要となります。"

#.  SJ: TO DO - update link to point to new reference guide. For more information, see xref:access_id_and_access_tokens[Access ID and Access Tokens] section.
#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:156
#, no-wrap
msgid "Configure the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:159
msgid "The OIDC extension allows you to define the configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "OIDCエクステンションでは、 `src/main/resources` ディレクトリにあるはずの `application.properties` ファイルを使用して設定を定義することができます。"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:168
#, no-wrap
msgid ""
"quarkus.oidc.auth-server-url=http://localhost:8180/realms/quarkus\n"
"quarkus.oidc.client-id=frontend\n"
"quarkus.oidc.credentials.secret=secret\n"
"quarkus.oidc.application-type=web-app\n"
"quarkus.http.auth.permission.authenticated.paths=/*\n"
"quarkus.http.auth.permission.authenticated.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:171
msgid "This is the simplest configuration you can have when enabling authentication to your application."
msgstr "これは、アプリケーションへの認証を有効にする際に最もシンプルな設定です。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:173
msgid "The `quarkus.oidc.client-id` property references the `client_id` issued by the OIDC provider and the `quarkus.oidc.credentials.secret` property sets the client secret."
msgstr "`quarkus.oidc.client-id` プロパティは、OIDC プロバイダーが発行する `client_id` を参照し、 `quarkus.oidc.credentials.secret` プロパティは、クライアントシークレットを設定します。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:175
msgid "The `quarkus.oidc.application-type` property is set to `web-app` in order to tell Quarkus that you want to enable the OIDC authorization code flow, so that your users are redirected to the OIDC provider to authenticate."
msgstr "OIDC認可コードフローを有効にすることで、ユーザーがOIDCプロバイダーにリダイレクトされて認証されるようQuarkusを設定するために、 `quarkus.oidc.application-type` プロパティは `web-app` に設定されています。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:179
msgid "Finally, the `quarkus.http.auth.permission.authenticated` permission is set to tell Quarkus about the paths you want to protect.  In this case, all paths are being protected by a policy that ensures that only `authenticated` users are allowed to access.  For more information, see xref:security-authorization-of-web-endpoints-reference.adoc[Security Authorization Guide]."
msgstr "最後に、保護したいパスについてQuarkusに伝えるために、 `quarkus.http.auth.permission.authenticated` パーミッションを設定します。この場合、すべてのパスは、 `authenticated` ユーザーだけがアクセスできるようにするポリシーで保護されています。詳細については、 xref:security-authorization-of-web-endpoints-reference.adoc[セキュリティ認可ガイド] を参照してください。"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:180
#, no-wrap
msgid "Start and configure the Keycloak server"
msgstr "Keycloakサーバーの起動と設定"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:183
msgid "To start a Keycloak server, use Docker and run the following command:"
msgstr "Keycloakサーバーを起動するには、Dockerを使用し、以下のコマンドを実行します:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:187
#, no-wrap
msgid "docker run --name keycloak -e KEYCLOAK_ADMIN=admin -e KEYCLOAK_ADMIN_PASSWORD=admin -p 8180:8080 quay.io/keycloak/keycloak:{keycloak.version} start-dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:190
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "ここで、`keycloak.version` は `17.0.0` 以上に設定する必要があります。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:192
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "http://localhost:8180[localhost:8180] で Keycloak サーバーにアクセスできるはずです。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:195
msgid "To access the Keycloak Administration Console, log in as the `admin` user.  Username should be `admin` and password `admin`."
msgstr "Keycloak管理コンソールにアクセスするには、 `admin` ユーザーとしてログインしてください。ユーザー名は `admin` 、パスワードは `admin` とします。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:198
#, fuzzy
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.  For more information, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "link:{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[レルム設定] ファイルをインポートして新しいレルムを作成します。詳細については、 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいrealmを作成] する方法についてKeycloakのドキュメントを参照してください。"

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:199
#, no-wrap
msgid "Run the application in dev and JVM modes"
msgstr "devモードとJVMモードでアプリケーションを実行"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:202
msgid "To run the application in a dev mode, use:"
msgstr "アプリケーションを開発モードで実行するには、次を使用します。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:206
msgid "When you're done playing with dev mode, you can run it as a standard Java application."
msgstr "「開発モード」で遊び終わったら、標準のJavaアプリケーションとして実行することができます。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:208
msgid "First, compile it:"
msgstr "まず、コンパイルします:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:212
msgid "Then, run it:"
msgstr "そして、実行してみてください:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:216
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:218
#, no-wrap
msgid "Run the application in Native mode"
msgstr "Native モードでアプリケーションを実行"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:222
#, fuzzy
msgid "This same demo can be compiled into native code.  No modifications are required."
msgstr "この同じデモをネイティブコードにコンパイルすることができます。改造は必要ありません。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:225
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "これは、生成されたバイナリーにランタイム技術が含まれており、最小限のリソースオーバーヘッドで実行できるように最適化されているため、本番環境にJVMをインストールする必要がないことを意味します。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:228
#, fuzzy
msgid "Compilation will take a bit longer, so this step is disabled by default.  You can build again by enabling the native build:"
msgstr "コンパイルには少し時間がかかるので、このステップはデフォルトで無効になっています。ネイティブビルドを有効にすることで、再度ビルドすることができます:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:232
#, fuzzy
msgid "After getting a cup of coffee, you can run this binary directly:"
msgstr "コーヒーを飲んだ後、このバイナリを直接実行することができます:"

#. type: delimited block -
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:236
#, no-wrap
msgid "./target/security-openid-connect-web-authentication-quickstart-runner\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:238
#, no-wrap
msgid "Test the application"
msgstr "アプリケーションのテスト"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:241
msgid "To test the application, open your browser and access the following URL:"
msgstr "アプリケーションの動作確認は、ブラウザを起動して以下のURLにアクセスしてください:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:244
msgid "http://localhost:8080/tokens[http://localhost:8080/tokens]"
msgstr "http://localhost:8080/tokens[http://localhost:8080/tokens]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:246
msgid "If everything is working as expected, you are redirected to the Keycloak server to authenticate."
msgstr "すべてが期待通りに動いていれば、Keycloakサーバーにリダイレクトされ、認証が行われます。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:248
#, fuzzy
msgid "To authenticate to the application, type the following credentials when at the Keycloak login page:"
msgstr "アプリケーションの認証を行うには、Keycloakのログインページで以下のクレデンシャルを入力します:"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:250
msgid "Username: *alice*"
msgstr "Username: *alice*"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:251
msgid "Password: *alice*"
msgstr "Password: *alice*"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:253
msgid "After clicking the `Login` button, you are redirected back to the application."
msgstr "`Login` ボタンをクリックすると、アプリケーションにリダイレクトされて戻ります。"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:255
#, fuzzy
msgid "For more information about writing the integration tests that depend on `Dev Services for Keycloak`, see the xref:security-oidc-code-flow-authentication.adoc#integration-testing-keycloak-devservices[Dev Services for Keycloak] section."
msgstr "`Dev Services for Keycloak` に依存する統合テストの書き方については、「 xref:security-oidc-code-flow-authentication.adoc#integration-testing-keycloak-devservices[Keycloak 用] Dev Services」のセクションを参照してください。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:256
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:261
#, fuzzy
msgid "Congratulations! You have learned how to set up and use the OIDC authorization code flow mechanism to protect and test application HTTP endpoints.  After you have completed this tutorial, explore xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] and xref:security-authentication-mechanisms.adoc[other authentication mechanisms]."
msgstr "おめでとうございます！アプリケーションの HTTP エンドポイントを保護し、テストするために、OIDC 認可コードフローメカニズムを設定し、使用する方法を学びました。このチュートリアルを終えたら、 xref:security-oidc-bearer-token-authentication.adoc[OIDC ベ] アラー認証や xref:security-authentication-mechanisms.adoc[その他の] 認証メカニズムを調べてみてください。"

#. type: Title ==
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:262
#, no-wrap
msgid "References"
msgstr "参照"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:264
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkusセキュリティの概要]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:265
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[ウェブアプリケーションを保護するOIDCコードフローメカニズム]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:266
#, fuzzy
msgid "xref:security-openid-connect-providers.adoc[Configuring well-known OpenID Connect Providers]"
msgstr "xref:security-openid-connect-providers.adoc[よく知られたOpenID Connectプロバイダの設定]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:267
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:268
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:269
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[JSONウェブトークン (JWT) のビルド、署名、暗号化]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:270
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#oidc-jwt-oauth2-comparison[OpenID Connect、SmallRye JWT、OAuth2の認証メカニズムの選択]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:271
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Adminクライアント]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:272
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "https://www.keycloak.org/documentation.html[Keycloak Documentation]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:273
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: upstream/_guides/security-oidc-code-flow-authentication-tutorial.adoc:274
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "https://tools.ietf.org/html/rfc7519[JSON Web Token]"

#~ msgid "The solution is located in the `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory]."
#~ msgstr "ソリューションは `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[ディレクトリ] にあります。"

#~ msgid "Import the {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.  For more information, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
#~ msgstr "{quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[レルム設定ファイル]をインポートして新しいレルムを作成してください。詳細については、 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[新しいレルムを作成] についてのKeycloakのドキュメントを参照してください。"

#~ msgid "To learn more about the OIDC authorization code flow mechanism, see xref:security-oidc-code-flow-authentication-concept.adoc[OIDC code flow mechanism for protecting web applications] or to learn about other authentication mechanisms, see xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[authentication mechanisms]."
#~ msgstr "OIDC認可コードフローメカニズムについて詳しく知りたい方は、 xref:security-oidc-code-flow-authentication-concept.adoc[Webアプリケーションを保護するためのOIDCコードフローメカニズム] を、その他の認証メカニズムについて知りたい方は、 xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[認証メカニズム] をご参照ください。"

#, fuzzy
#~ msgid "For more information about writing the integration tests that depend on `Dev Services for Keycloak`, see the xref:security-oidc-code-flow-authentication-concept.adoc#integration-testing-keycloak-devservices[Dev Services for Keycloak] section."
#~ msgstr "`Dev Services for Keycloak` に依存する統合テストの書き方については、「Dev Services xref:security-oidc-code-flow-authentication-concept.adoc#integration-testing-keycloak-devservices[for Keycloak] 」のセクションを参照してください。"

#, fuzzy
#~ msgid "Congratulations! You have learned how to set up and use the OIDC authorization code flow mechanism to protect and test application HTTP endpoints.  After you have completed this tutorial, explore some of the other security mechanisms in Quarkus."
#~ msgstr "おめでとうございます！アプリケーションの HTTP エンドポイントを保護およびテストするために、OIDC 認可コードフロー メカニズムをセットアップして使用する方法について学びました。このチュートリアルを終えたら、Quarkusの他のセキュリティメカニズムをいくつか調べてみてください。"

#~ msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
#~ msgstr "xref:security-oidc-bearer-authentication-concept.adoc[OIDC ベアラー認証]"

#~ msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
#~ msgstr "xref:security-overview-concept.adoc[Quarkus Security 概要]"

#~ msgid "xref:security-oidc-code-flow-authentication-concept.adoc[OIDC code flow mechanism for protecting web applications]"
#~ msgstr "xref:security-oidc-code-flow-authentication-concept.adoc[Webアプリケーションを保護するためのOIDCコードフローメカニズム]"

#~ msgid "xref:security-authentication-mechanisms-concept.adoc#oidc-jwt-oauth2-comparison[Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms]"
#~ msgstr "xref:security-authentication-mechanisms-concept.adoc#oidc-jwt-oauth2-comparison[OpenID Connect、SmallRye JWT、OAuth2の認証メカニズムの選択]"
