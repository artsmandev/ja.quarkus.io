# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-08-26 14:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/gcp-functions-http.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Google Cloud Functions (Serverless) with RESTEasy, Undertow, or Vert.x Web"
msgstr "Quarkus - RESTEasy、Undertow、またはVert.x Webを使用したGoogle Cloud Functions(サーバーレス)。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:13
#, fuzzy
msgid "The `quarkus-google-cloud-functions-http` extension allows you to write microservices with RESTEasy (JAX-RS), Undertow (Servlet), Vert.x Web, or link:funqy-http[Funqy HTTP], and make these microservices deployable to the Google Cloud Functions runtime."
msgstr "`quarkus-google-cloud-functions-http` エクステンションを使うと、RESTEasy (JAX-RS)、Undertow (Servlet)、Vert.x Web、 link:funqy-http[Funqy HTTP を] 使ってマイクロサービスを書き、これらのマイクロサービスを Google Cloud Functions ランタイムにデプロイできるようにすることができます。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:15
#, fuzzy
msgid "One Google Cloud Functions deployment can represent any number of JAX-RS, Servlet, Vert.x Web, or link:funqy-http[Funqy HTTP] endpoints."
msgstr "1 つの Google Cloud Functions デプロイメントでは、JAX-RS、サーブレット、Vert.x Web、または link:funqy-http[Funqy HTTP] エンドポイントを任意の数だけ表現することができます。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:18
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:21
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:23
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:24
#, fuzzy
msgid "JDK 11 (Google Cloud Functions requires JDK 11)"
msgstr "JDK 11 (Google Cloud Functions は JDK 11 が必要です)"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:25
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:26
#, fuzzy
msgid "https://cloud.google.com/[A Google Cloud Account].  Free accounts work."
msgstr "link:https://cloud.google.com/[Googleクラウドのアカウントです] 。無料アカウントの仕事。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:27
#, fuzzy
msgid "https://cloud.google.com/sdk[Cloud SDK CLI Installed]"
msgstr "link:https://cloud.google.com/sdk[クラウドSDK CLIがインストールされている]"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:28
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:33
#, fuzzy
msgid "This guide walks you through generating a sample project followed by creating three HTTP endpoints written with JAX-RS APIs, Servlet APIs, Vert.x Web, or link:funqy-http[Funqy HTTP] APIs. Once built, you will be able to deploy the project to Google Cloud."
msgstr "このガイドでは、JAX-RS API、Servlet API、Vert.x Web、 link:funqy-http[Funqy HTTP] API を使用して書かれた 3 つの HTTP エンドポイントを作成し、サンプルプロジェクトを生成する方法を説明します。構築後は、プロジェクトを Google Cloud にデプロイすることができます。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:35
#, fuzzy
msgid "If you don't want to follow all these steps, you can go right to the completed example."
msgstr "これらの手順をすべて実行したくない場合は、完成した例に進むことができます。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:37
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:39
#, fuzzy
msgid "The solution is located in the `google-cloud-functions-http-quickstart` {quickstarts-tree-url}/google-cloud-functions-http-quickstart[directory]."
msgstr "ソリューションは `google-cloud-functions-http-quickstart` {quickstarts-tree-url}/google-cloud-functions-http-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:40
#, fuzzy, no-wrap
msgid "Creating the Maven Deployment Project"
msgstr "Maven デプロイメントプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:44
#, fuzzy
msgid "Create an application with the `quarkus-google-cloud-functions-http` extension.  You can use the following Maven command to create it:"
msgstr "`quarkus-google-cloud-functions-http` のエクステンションを持つアプリケーションを作成します。以下のMavenコマンドを使って作成します。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:53
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=google-cloud-functions-http \\\n"
"    -DclassName=\"org.acme.quickstart.GreetingResource\" \\\n"
"    -Dpath=\"/hello\" \\\n"
"    -Dextensions=\"resteasy,google-cloud-functions-http,resteasy-json,undertow,vertx-web,funqy-http\"\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:55
#, fuzzy, no-wrap
msgid "Login to Google Cloud"
msgstr "Googleクラウドにログイン"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:58
#, fuzzy
msgid "Login to Google Cloud is necessary for deploying the application and it can be done as follows:"
msgstr "アプリケーションのデプロイにはGoogle Cloudへのログインが必要で、以下のように行います。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:62
#, no-wrap
msgid "gcloud auth login\n"
msgstr "gcloud auth login\n"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:64
#, fuzzy, no-wrap
msgid "Creating the endpoints"
msgstr "エンドポイントの作成"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:68
#, fuzzy
msgid "For this example project, we will create four endpoints, one for RESTEasy (JAX-RS), one for Undertow (Servlet), one for Vert.x Web (reactive routes) and one for link:funqy-http[Funqy HTTP]."
msgstr "この例のプロジェクトでは、RESTEasy(JAX-RS)、Undertow(Servlet)、Vert.x Web(リアクティブルート)、 link:funqy-http[Funqy HTTP] の4つのエンドポイントを作成します。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:70
#, fuzzy
msgid "If you don't need endpoints of each type, you can remove the corresponding extensions from your `pom.xml`."
msgstr "各タイプのエンドポイントが不要な場合は、対応するエクステンションを `pom.xml` ."

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:71
#, fuzzy, no-wrap
msgid "The JAX-RS endpoint"
msgstr "JAX-RS エンドポイント"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:79
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:82
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:89
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:91
#, fuzzy, no-wrap
msgid "The Servlet endpoint"
msgstr "サーブレットのエンドポイント"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:96
#, no-wrap
msgid "import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:102
#, no-wrap
msgid ""
"import javax.servlet.ServletException;\n"
"import javax.servlet.annotation.WebServlet;\n"
"import javax.servlet.http.HttpServlet;\n"
"import javax.servlet.http.HttpServletRequest;\n"
"import javax.servlet.http.HttpServletResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:111
#, no-wrap
msgid ""
"@WebServlet(name = \"ServletGreeting\", urlPatterns = \"/servlet/hello\")\n"
"public class GreetingServlet extends HttpServlet {\n"
"    @Override\n"
"    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n"
"        resp.setStatus(200);\n"
"        resp.addHeader(\"Content-Type\", \"text/plain\");\n"
"        resp.getWriter().write(\"hello\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:120
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n"
"        String name = req.getReader().readLine();\n"
"        resp.setStatus(200);\n"
"        resp.addHeader(\"Content-Type\", \"text/plain\");\n"
"        resp.getWriter().write(\"hello \" + name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:122
#, fuzzy, no-wrap
msgid "The Vert.x Web endpoint"
msgstr "Vert.x Web エンドポイント"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:127
#, no-wrap
msgid "import static io.quarkus.vertx.web.Route.HttpMethod.GET;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:130
#, no-wrap
msgid ""
"import io.quarkus.vertx.web.Route;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:138
#, no-wrap
msgid ""
"public class GreetingRoutes {\n"
"    @Route(path = \"/vertx/hello\", methods = GET)\n"
"    void hello(RoutingContext context) {\n"
"        context.response().headers().set(\"Content-Type\", \"text/plain\");\n"
"        context.response().setStatusCode(200).end(\"hello\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:140
#, fuzzy, no-wrap
msgid "The Funqy HTTP endpoint"
msgstr "Funqy HTTP エンドポイント"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:145
#, no-wrap
msgid "import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:152
#, no-wrap
msgid ""
"public class GreetingFunqy {\n"
"    @Funq\n"
"    public String funqy() {\n"
"        return \"Make it funqy\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:154
#, fuzzy, no-wrap
msgid "Build and Deploy to Google Cloud"
msgstr "Google クラウドへの構築とデプロイ"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:157
#, fuzzy
msgid "Quarkus forces a packaging of type `uber-jar` for your function as Google Cloud Function deployment requires a single JAR."
msgstr "Quarkusは、Google Cloud Functionのデプロイには1つのJARが必要なので、関数に対してタイプ `uber-jar` のパッケージングを強制的に行います。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:160
#, fuzzy
msgid "Package your application using the standard `mvn clean package` command.  The result of the previous command is a single JAR file inside the `target/deployment` directory that contains the classes and the dependencies of the project."
msgstr "標準の `mvn clean package` コマンドを使用してアプリケーションをパッケージ化します。前のコマンドの結果は、プロジェクトのクラスと依存関係を含む `target/deployment` ディレクトリー内の単一の JAR ファイルになります。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:162
#, fuzzy
msgid "Then you will be able to use `gcloud` to deploy your function to Google Cloud."
msgstr "そうすると、 `gcloud` で Google Cloud に機能をデプロイすることができるようになります。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:168
#, no-wrap
msgid ""
"gcloud functions deploy quarkus-example-http \\\n"
"  --entry-point=io.quarkus.gcp.functions.http.QuarkusHttpFunction \\\n"
"  --runtime=java11 --trigger-http --source=target/deployment\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:173
#, fuzzy
msgid "The entry point must always be set to `io.quarkus.gcp.functions.http.QuarkusHttpFunction` as this is the class that integrates Cloud Functions with Quarkus."
msgstr "このクラスはQuarkusとCloud Functionsを統合するクラスなので、エントリーポイントは常に `io.quarkus.gcp.functions.http.QuarkusHttpFunction` に設定する必要があります。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:178
#, fuzzy
msgid "The first time you launch this command, you can have the following error message:"
msgstr "このコマンドを初めて起動したときには、以下のようなエラーメッセージが表示されることがあります。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:181
#, fuzzy, no-wrap
#| msgid "ERROR: (gcloud.beta.functions.deploy) OperationError: code=7, message=Build Failed: Cloud Build has not been used in project <project_name> before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/cloudbuild.googleapis.com/overview?project=<my-project> then retry.\n"
msgid "ERROR: (gcloud.functions.deploy) OperationError: code=7, message=Build Failed: Cloud Build has not been used in project <project_name> before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/cloudbuild.googleapis.com/overview?project=<my-project> then retry.\n"
msgstr "ERROR: (gcloud.beta.functions.deploy) OperationError: code=7, message=Build Failed: Cloud Build has not been used in project <project_name> before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/cloudbuild.googleapis.com/overview?project=<my-project> then retry.\n"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:183
#, fuzzy
msgid "This means that Cloud Build is not activated yet. To overcome this error, open the URL shown in the error, follow the instructions and then wait a few minutes before retrying the command."
msgstr "これは、Cloud Buildがまだ有効化されていないことを意味します。このエラーを克服するには、エラーに表示されているURLを開き、指示に従った後、数分待ってからコマンドを再試行してください。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:187
#, fuzzy
msgid "This command will give you as output a `httpsTrigger.url` that points to your function."
msgstr "このコマンドは、あなたの関数を指す `httpsTrigger.url` を出力します。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:189
#, fuzzy
msgid "You can then call your endpoints via:"
msgstr "を介してエンドポイントを呼び出すことができます。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:191
#, fuzzy
msgid "For JAX-RS: {httpsTrigger.url}/hello"
msgstr "JAX-RSの場合: {httpsTrigger.url}/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:192
#, fuzzy
msgid "For servlet: {httpsTrigger.url}/servlet/hello"
msgstr "サーブレットの場合。{httpsTrigger.url}/servlet/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:193
#, fuzzy
msgid "For Vert.x Web: {httpsTrigger.url}/vertx/hello"
msgstr "Vert.x Web の場合。httpsTrigger.url}/vertx/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:194
#, fuzzy
msgid "For Funqy: {httpsTrigger.url}/funqy"
msgstr "Funqyの場合。{httpsTrigger.url}/funqy"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:195
#, fuzzy, no-wrap
msgid "Testing locally"
msgstr "ローカルでのテスト"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:198
#, fuzzy
msgid "The easiest way to locally test your function is using the Cloud Function invoker JAR."
msgstr "関数をローカルでテストする最も簡単な方法は、Cloud Function invoker JAR を使用することです。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:200
#, fuzzy
msgid "You can download it via Maven using the following command:"
msgstr "以下のコマンドでMaven経由でダウンロードできます。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:206
#, fuzzy, no-wrap
#| msgid ""
#| "mvn dependency:copy \\\n"
#| "  -Dartifact='com.google.cloud.functions.invoker:java-function-invoker:1.0.0-beta1' \\\n"
#| "  -DoutputDirectory=.\n"
msgid ""
"mvn dependency:copy \\\n"
"  -Dartifact='com.google.cloud.functions.invoker:java-function-invoker:1.0.2' \\\n"
"  -DoutputDirectory=.\n"
msgstr ""
"mvn dependency:copy \\\n"
"  -Dartifact='com.google.cloud.functions.invoker:java-function-invoker:1.0.0-beta1' \\\n"
"  -DoutputDirectory=.\n"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:209
#, fuzzy
msgid "Before using the invoker, you first need to build your function via `mvn package`."
msgstr "インボーカーを使用する前に、まず `mvn package` で関数をビルドする必要があります。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:211
#, fuzzy
msgid "Then you can use it to launch your function locally."
msgstr "そして、それを使ってローカルで関数を起動することができます。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:217
#, no-wrap
msgid ""
"java -jar java-function-invoker-1.0.2.jar \\\n"
"  --classpath target/deployment/google-cloud-functions-http-1.0.0-SNAPSHOT-runner.jar \\\n"
"  --target io.quarkus.gcp.functions.http.QuarkusHttpFunction\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:220
#, fuzzy
msgid "The `--classpath` parameter needs to be set to the previously packaged JAR that contains your function class and all Quarkus related classes."
msgstr "`--classpath` パラメーターには、関数クラスとQuarkus関連のすべてのクラスを含む、以前にパッケージ化されたJARを設定する必要があります。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:222
#, fuzzy
msgid "Your endpoints will be available on http://localhost:8080."
msgstr "エンドポイントは http://localhost:8080 で利用できます。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:223
#, no-wrap
msgid "What's next?"
msgstr "次のステップ"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:226
#, fuzzy
msgid "You can use our link:funqy-gcp-functions[Google Cloud Functions Funqy binding] to use Funqy, a provider agnostic function as a service framework, that allow to deploy HTTP function or Background function to Google Cloud."
msgstr "link:funqy-gcp-functions[Google Cloud Functions Funqyバインディングを] 利用して、プロバイダに依存しないサービスフレームワークであるFunqyを利用して、HTTP関数やBackground関数をGoogle Cloudにデプロイすることができます。"

#, fuzzy
#~ msgid "As the Google Cloud Function Java engine is a new Beta feature of Google Cloud, this extension is flagged as experimental."
#~ msgstr "Google Cloudの機能Javaエンジンは、Google Cloudの新しいベータ機能であるため、このエクステンションは実験的なものとしてフラグが立てられています。"

#, fuzzy
#~ msgid "At the time of this writing, Cloud Functions are still in beta so make sure to install the `beta` command group."
#~ msgstr "この記事を書いている時点では、Cloud Functionsはまだベータ版なので、 `beta` コマンドグループを必ずインストールしてください。"

#~ msgid "gcloud components install beta\n"
#~ msgstr "gcloud components install beta\n"
