# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-02-02 15:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/amqp.adoc:6
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with AMQP 1.0"
msgstr "AMQP 1.0によるSmallRyeリアクティブ・メッセージングの開始"

#. type: Plain text
#: upstream/_guides/amqp.adoc:11
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with AMQP 1.0."
msgstr "このガイドでは、QuarkusアプリケーションがMicroProfile Reactive Messagingを利用してAMQPと対話する方法を説明します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:18
#, fuzzy
msgid "If you want to use RabbitMQ, you should use the xref:rabbitmq.adoc[SmallRye Reactive Messaging RabbitMQ extension].  Alternatively, if want to use RabbitMQ with AMQP 1.0 you need to enable the AMQP 1.0 plugin in the RabbitMQ broker; check the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[connecting to RabbitMQ] documentation."
msgstr "RabbitMQを使用する場合は、RabbitMQブローカーでAMQP 1.0を有効にする必要があります。 link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.5/amqp/amqp.html#amqp-rabbitmq[RabbitMQ]のドキュメント link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.5/amqp/amqp.html#amqp-rabbitmq[への接続]を確認してください。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Title ==
#: upstream/_guides/amqp.adoc:24
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:30
#, fuzzy
msgid "In this guide, we are going to develop two applications communicating with an AMQP broker.  We will use https://activemq.apache.org/components/artemis/[Artemis], but you can use any AMQP 1.0 broker.  The first application sends a _quote request_ to an AMQP queue and consumes messages from the _quote_ queue.  The second application receives the _quote request_ and sends a _quote_ back."
msgstr "このガイドでは、AMQP ブローカーと通信する 2 つのアプリケーションを開発します。ここでは link:https://activemq.apache.org/components/artemis/[Artemis]を使用しますが、AMQP 1.0ブローカーであれば何でも構いません。最初のアプリケーションは、AMQPキューに _見積依頼_を送信し、 _見積_キューからのメッセージを消費します。2番目のアプリケーションは、 _見積もり要求_を受け取り、 _見積もり_を送り返します。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/amqp.adoc:31
#, fuzzy, no-wrap
msgid "Architecture,"
msgstr "アーキテクチャ"

#. type: Target for macro image
#: upstream/_guides/amqp.adoc:31
#, fuzzy, no-wrap
msgid "amqp-qs-architecture.png"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:36
#, fuzzy
msgid "The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.  For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.  At the same time the generated request id is sent over the `quote-requests` queue."
msgstr "最初のアプリケーションである `producer` では、ユーザーが HTTP エンドポイントを介していくつかの見積もりを要求することができます。各見積依頼に対して、見積依頼を _保留_にするためのランダムな識別子が生成され、ユーザーに返されます。同時に、生成されたリクエストIDは、 `quote-requests` のキューに送られます。"

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/amqp.adoc:37
#, fuzzy, no-wrap
msgid "Producer"
msgstr "プロデューサー"

#. type: Target for macro image
#: upstream/_guides/amqp.adoc:37
#, no-wrap
msgid "amqp-qs-app-screenshot.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:40
#, fuzzy
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to a queue named `quotes`."
msgstr "2 番目のアプリケーションである `processor` は、順番に `quote-requests` のキューから読み取って、ランダムな価格を引用符に付けて、 `quotes` というキューに送ります。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:43
#, fuzzy
msgid "Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.  The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最後に、 `producer` が気配値を読み取り、サーバーが送信するイベントを使ってブラウザに送信します。そのため、ユーザーは気配値が _保留_から受信した価格にリアルタイムで更新されるのを見ることができます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:44
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/amqp.adoc:48
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create applications step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:50
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:52
#, fuzzy
msgid "The solution is located in the `amqp-quickstart` {quickstarts-tree-url}/amqp-quickstart[directory]."
msgstr "ソリューションは `amqp-quickstart` {quickstarts-tree-url}/amqp-quickstart[ディレクトリ] にあります。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:53
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/amqp.adoc:56
#, fuzzy
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "まず、 _プロデューサー_と _プロセッサー_の2つのプロジェクトを作成する必要があります。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:58
#, fuzzy
msgid "To create the _producer_ project, in a terminal run:"
msgstr "_プロデューサー・_プロジェクトを作成するには、ターミナルで次のように実行します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:65
#, fuzzy
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "このコマンドは、プロジェクト構造を作成し、使用する2つのQuarkus拡張機能を選択します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:67
#, fuzzy
msgid "RESTEasy Reactive and its Jackson support to handle JSON payloads"
msgstr "RESTEasy Reactiveとit's JacksonがJSONペイロードを扱うためにサポートしています。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:68
#, fuzzy
msgid "The Reactive Messaging AMQP connector"
msgstr "Reactive Messaging AMQP コネクタ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:70
#, fuzzy
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "_プロセッサー・_プロジェクトを作成するには、同じディレクトリから、次のように実行します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:77
#, fuzzy
msgid "At that point you should have the following structure:"
msgstr "この時点では、次のような構成になっているはずです。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:103
#, no-wrap
msgid ""
".\n"
"├── amqp-quickstart-processor\n"
"│  ├── README.md\n"
"│  ├── mvnw\n"
"│  ├── mvnw.cmd\n"
"│  ├── pom.xml\n"
"│  └── src\n"
"│     └── main\n"
"│        ├── docker\n"
"│        ├── java\n"
"│        └── resources\n"
"│           └── application.properties\n"
"└── amqp-quickstart-producer\n"
"   ├── README.md\n"
"   ├── mvnw\n"
"   ├── mvnw.cmd\n"
"   ├── pom.xml\n"
"   └── src\n"
"      └── main\n"
"         ├── docker\n"
"         ├── java\n"
"         └── resources\n"
"            └── application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:106
#, fuzzy
msgid "Open the two projects in your favorite IDE."
msgstr "2つのプロジェクトをお好きなIDEで開きます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:107
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "Quoteオブジェクト"

#. type: Plain text
#: upstream/_guides/amqp.adoc:112
#, fuzzy
msgid "The `Quote` class will be used in both `producer` and `processor` projects.  For the sake of simplicity we will duplicate the class.  In both projects, create the `src/main/java/org/acme/amqp/model/Quote.java` file, with the following content:"
msgstr "`Quote` クラスは、 `producer` と `processor` の両方のプロジェクトで使用されます。簡単にするために、このクラスを複製します。両方のプロジェクトで、次のような内容の `src/main/java/org/acme/amqp/model/Quote.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:116
#, no-wrap
msgid "package org.acme.amqp.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:118
#, no-wrap
msgid "import io.quarkus.runtime.annotations.RegisterForReflection;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:121
#, no-wrap
msgid ""
"@RegisterForReflection\n"
"public class Quote {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:124
#, no-wrap
msgid ""
"    public String id;\n"
"    public int price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:129
#, no-wrap
msgid ""
"    /**\n"
"    * Default constructor required for Jackson serializer\n"
"    */\n"
"    public Quote() { }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:134
#, no-wrap
msgid ""
"    public Quote(String id, int price) {\n"
"        this.id = id;\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:143
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString() {\n"
"        return \"Quote{\" +\n"
"                \"id='\" + id + '\\'' +\n"
"                \", price=\" + price +\n"
"                '}';\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:147
#, fuzzy
msgid "JSON representation of `Quote` objects will be used in messages sent to the AMQP queues and also in the server-sent events sent to browser clients."
msgstr "`Quote` オブジェクトのJSON表現は、AMQPキューに送信されるメッセージや、ブラウザクライアントに送信されるサーバーからのイベントで使用されます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:149
#, fuzzy
msgid "Quarkus has built-in capabilities to deal with JSON AMQP messages."
msgstr "Quarkusには、JSON AMQPメッセージを処理する機能が組み込まれています。"

#. type: Block title
#: upstream/_guides/amqp.adoc:151
#, fuzzy, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#. type: delimited block =
#: upstream/_guides/amqp.adoc:156
#, fuzzy
msgid "The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.  This will be useful later when we run the applications as native executables inside containers.  Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr "`@RegisterForReflection` アノテーションは、ネイティブな実行ファイルをビルドする際に、クラス（フィールドとメソッドを含む）を含めるようにQuarkusに指示します。これは、後でアプリケーションをコンテナ内のネイティブ実行ファイルとして実行する際に役立ちます。これがないと、ネイティブのコンパイル時にデッドコードの除去段階でフィールドとメソッドが削除されてしまいます。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:158
#, fuzzy, no-wrap
msgid "Sending quote request"
msgstr "見積もり依頼の送信"

#. type: Plain text
#: upstream/_guides/amqp.adoc:161
#, fuzzy
msgid "Inside the `producer` project locate the generated `src/main/java/org/acme/amqp/producer/QuotesResource.java` file, and update the content to be:"
msgstr "最後に、ストリームをJAX-RSリソースにバインドしてみましょう。以下の内容の `src/main/java/org/acme/amqp/PriceResource.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:165
#, no-wrap
msgid "package org.acme.amqp.producer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:167
#, no-wrap
msgid "import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:173
#, fuzzy, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.core.MediaType;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:177
#, fuzzy, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"
msgstr ""
"import org.eclipse.microprofile.reactive.messaging.Channel;\n"
"import org.eclipse.microprofile.reactive.messaging.Emitter;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:179
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:182
#, fuzzy, no-wrap
msgid ""
"@Path(\"/quotes\")\n"
"public class QuotesResource {\n"
msgstr ""
"@Path(\"/prices\")\n"
"public class PriceResource {\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:184
#, no-wrap
msgid "    @Channel(\"quote-requests\") Emitter<String> quoteRequestEmitter; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:197
#, no-wrap
msgid ""
"    /**\n"
"     * Endpoint to generate a new quote request id and send it to \"quote-requests\" AMQP queue using the emitter.\n"
"     */\n"
"    @POST\n"
"    @Path(\"/request\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String createRequest() {\n"
"        UUID uuid = UUID.randomUUID();\n"
"        quoteRequestEmitter.send(uuid.toString()); // <2>\n"
"        return uuid.toString();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:199
#, fuzzy
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "Reactive Messaging `Emitter` をインジェクトして、 `quote-requests` チャンネルにメッセージを送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:200
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the AMQP queue using the emitter."
msgstr "投稿リクエストで、ランダムなUUIDを生成し、エミッターを使ってAMQPキューに送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:204
#, fuzzy
msgid "The `quote-requests` channel is going to be managed as a AMQP queue, as that's the only connector on the classpath.  If not indicated otherwise, like in this example, Quarkus uses the channel name as AMQP queue name.  So, in this example, the application sends messages to the `quote-requests` queue."
msgstr "`quote-requests` チャンネルは、クラスパス上の唯一のコネクタであるため、AMQPキューとして管理されることになります。この例のように他に指示がない場合、Quarkusはチャンネル名をAMQPキュー名として使用します。したがって、この例では、アプリケーションは `quote-requests` キューにメッセージを送信します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:206
#, fuzzy
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "複数のコネクタがある場合は、アプリケーションの設定でどのコネクタを使用するかを指定する必要があります。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:207
#, fuzzy, no-wrap
msgid "Processing quote requests"
msgstr "見積もり依頼の処理"

#. type: Plain text
#: upstream/_guides/amqp.adoc:211
#, fuzzy
msgid "Now let's consume the quote request and give out a price.  Inside the `processor` project, locate the `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` file and add the following:"
msgstr "価格コンバータは、AMQPから価格を読み込んで変換します。以下の内容の `src/main/java/org/acme/amqp/PriceConverter.java` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:215
#, no-wrap
msgid "package org.acme.amqp.processor;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:217
#, fuzzy, no-wrap
msgid "import java.util.Random;\n"
msgstr ""
"import java.time.Duration;\n"
"import java.util.Random;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:219
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr "import javax.enterprise.context.ApplicationScoped;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:223
#, fuzzy, no-wrap
msgid ""
"import org.acme.amqp.model.Quote;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"
msgstr ""
"import io.smallrye.reactive.messaging.annotations.Broadcast;\n"
"import org.eclipse.microprofile.reactive.messaging.Incoming;\n"
"import org.eclipse.microprofile.reactive.messaging.Outgoing;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:225
#, fuzzy, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Blocking;\n"
msgstr ""
"import io.smallrye.reactive.messaging.annotations.Channel;\n"
"import org.reactivestreams.Publisher;\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:232
#, no-wrap
msgid ""
"/**\n"
" * A bean consuming data from the \"request\" AMQP queue and giving out a random quote.\n"
" * The result is pushed to the \"quotes\" AMQP queue.\n"
" */\n"
"@ApplicationScoped\n"
"public class QuoteProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:234
#, no-wrap
msgid "    private Random random = new Random();\n"
msgstr "    private Random random = new Random();\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:244
#, no-wrap
msgid ""
"    @Incoming(\"requests\")       // <1>\n"
"    @Outgoing(\"quotes\")         // <2>\n"
"    @Blocking                   // <3>\n"
"    public Quote process(String quoteRequest) throws InterruptedException {\n"
"        // simulate some hard working task\n"
"        Thread.sleep(200);\n"
"        return new Quote(quoteRequest, random.nextInt(100));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:246
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "メソッドが `prices` チャンネルのアイテムを消費することを示します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:247
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "メソッドによって返されたオブジェクトが `my-data-stream` チャンネルに送られることを示します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:248
#, fuzzy
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "処理が _ブロック_化されており、呼び出し元のスレッドでは実行できないことを示す。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:250
#, fuzzy
msgid "The `process` method is called for every AMQP message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` queue."
msgstr "`process` メソッドは、 `prices` キュー(アプリケーション設定で設定されている)からの AMQP メッセージごとに呼び出されます。すべての結果は `my-data-stream` のインメモリーストリームに送信されます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:253
#, fuzzy
msgid "Because we want to consume messages from the `quotes-requests` queue into the `requests` channel, we need to configure this association.  Open the `src/main/resources/application.properties` file and add:"
msgstr "AMQP コネクタを設定する必要があります。これは `application.properties` ファイルで行います。キーは以下のように構成されています。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:257
#, no-wrap
msgid "mp.messaging.incoming.requests.address=quote-requests\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:260
#, fuzzy
msgid "The configuration keys are structured as follows:"
msgstr "設定キーの構成は以下の通りです。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:262
#, fuzzy
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"

#. type: Plain text
#: upstream/_guides/amqp.adoc:264
#, fuzzy
msgid "In our case, we want to configure the `address` attribute to indicate the name of the queue."
msgstr "今回のケースでは、キューの名前を示す `address` 属性を設定したいと思います。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:265
#, fuzzy, no-wrap
msgid "Receiving quotes"
msgstr "見積もりを受け取る"

#. type: Plain text
#: upstream/_guides/amqp.adoc:269
#, fuzzy
msgid "Back to our `producer` project.  Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "`producer` プロジェクトに戻ります。 `QuotesResource` を変更して引用符を消費し、HTTPエンドポイントにバインドしてクライアントにイベントを送信してみましょう。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:274
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"//...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:276
#, no-wrap
msgid "@Channel(\"quotes\") Multi<Quote> quotes;     // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:285
#, no-wrap
msgid ""
"/**\n"
" * Endpoint retrieving the \"quotes\" queue and sending the items to a server sent event.\n"
" */\n"
"@GET\n"
"@Produces(MediaType.SERVER_SENT_EVENTS) // <2>\n"
"public Multi<Quote> stream() {\n"
"    return quotes; // <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:287
#, fuzzy
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "`@Channel` の修飾子を使って `my-data-stream` チャンネルを注入します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:288
#, fuzzy
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "を使用してコンテンツが送信されていることを示します。 `Server Sent Events`"

#. type: Plain text
#: upstream/_guides/amqp.adoc:289
#, fuzzy
msgid "Returns the stream (_Reactive Stream_)"
msgstr "ストリーム _(Reactive Stream_ )を返します。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:290
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "HTMLページ"

#. type: Plain text
#: upstream/_guides/amqp.adoc:293
#, fuzzy
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最後に、SSEを使って変換された価格を読み込んだHTMLページ。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:295
#, fuzzy
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "以下の内容の `src/main/resources/META-INF/resources/prices.html` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:299
#, fuzzy, no-wrap
msgid "<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Quotes</title>\n"
msgstr ""
"<!DOCTYPE html>\n"
"<html lang=\"en\">\n"
"<head>\n"
"    <meta charset=\"UTF-8\">\n"
"    <title>Prices</title>\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:335
#, no-wrap
msgid ""
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly.min.css\">\n"
"    <link rel=\"stylesheet\" type=\"text/css\"\n"
"          href=\"https://cdnjs.cloudflare.com/ajax/libs/patternfly/3.24.0/css/patternfly-additions.min.css\">\n"
"</head>\n"
"<body>\n"
"<div class=\"container\">\n"
"    <div class=\"card\">\n"
"        <div class=\"card-body\">\n"
"            <h2 class=\"card-title\">Quotes</h2>\n"
"            <button class=\"btn btn-info\" id=\"request-quote\">Request Quote</button>\n"
"            <div class=\"quotes\"></div>\n"
"        </div>\n"
"    </div>\n"
"</div>\n"
"</body>\n"
"<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n"
"<script>\n"
"    $(\"#request-quote\").click((event) => {\n"
"        fetch(\"/quotes/request\", {method: \"POST\"})\n"
"        .then(res => res.text())\n"
"        .then(qid => {\n"
"            var row = $(`<h4 class='col-md-12' id='${qid}'>Quote # <i>${qid}</i> | <strong>Pending</strong></h4>`);\n"
"            $(\".quotes\").append(row);\n"
"        });\n"
"    });\n"
"    var source = new EventSource(\"/quotes\");\n"
"    source.onmessage = (event) => {\n"
"      var json = JSON.parse(event.data);\n"
"      $(`#${json.id}`).html(function(index, html) {\n"
"        return html.replace(\"Pending\", `\\$\\xA0${json.price}`);\n"
"      });\n"
"    };\n"
"</script>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:339
#, fuzzy
msgid "Nothing spectacular here.  On each received quote, it updates the page."
msgstr "目を見張るようなものは何もありません。受信した価格ごとに、ページを更新します。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:340
#, fuzzy, no-wrap
msgid "Get it running"
msgstr "稼動させる"

#. type: Plain text
#: upstream/_guides/amqp.adoc:343
#, fuzzy
msgid "You just need to run both applications using:"
msgstr "でネイティブ実行ファイルをビルドすることができます。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:347
#, no-wrap
msgid "> mvn -f amqp-quickstart-producer quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:350
#, fuzzy
msgid "And, in a separate terminal:"
msgstr "そして、別の端末で"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:354
#, no-wrap
msgid "> mvn -f amqp-quickstart-processor quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:358
#, fuzzy
msgid "Quarkus starts a AMQP broker automatically, configures the application and shares the broker instance between different applications.  See xref:amqp-dev-services.adoc[Dev Services for AMQP] for more details."
msgstr "開発モードやテスト用にAMQPブローカーを起動する必要はありません。Quarkusは自動的にブローカーを起動します。詳細は、 link:amqp-dev-services.html[AMQPの開発サービス]を参照してください。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:361
#, fuzzy
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "開く `http://localhost:8080/prices.html` をブラウザに表示してください。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:362
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "ネイティブの実行"

#. type: Plain text
#: upstream/_guides/amqp.adoc:366
#, fuzzy
msgid "When not running in dev or test mode, you will need to start your AMQP broker.  You can follow the instructions from the https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] or create a `docker-compose.yaml` file with the following content:"
msgstr "次に、AMQPブローカーが必要です。 link:https://activemq.apache.org/components/artemis/[Apache ArtemisのWebサイト] の指示に従うか、以下の内容の `docker-compose.yaml` ファイルを作成します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:370
#, no-wrap
msgid "version: '2'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:372
#, no-wrap
msgid "services:\n"
msgstr "services:\n"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:384
#, no-wrap
msgid ""
"  artemis:\n"
"    image: quay.io/artemiscloud/activemq-artemis-broker:0.1.2\n"
"    ports:\n"
"      - \"8161:8161\"\n"
"      - \"61616:61616\"\n"
"      - \"5672:5672\"\n"
"    environment:\n"
"      AMQ_USER: quarkus\n"
"      AMQ_PASSWORD: quarkus\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:397
#, no-wrap
msgid ""
"  producer:\n"
"    image: quarkus-quickstarts/amqp-quickstart-producer:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-producer\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    ports:\n"
"      - \"8080:8080\"\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:408
#, no-wrap
msgid ""
"  processor:\n"
"    image: quarkus-quickstarts/amqp-quickstart-processor:1.0-${QUARKUS_MODE:-jvm}\n"
"    build:\n"
"      context: amqp-quickstart-processor\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      AMQP_HOST: artemis\n"
"      AMQP_PORT: 5672\n"
"    networks:\n"
"      - amqp-quickstart-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/amqp.adoc:412
#, no-wrap
msgid ""
"networks:\n"
"  amqp-quickstart-network:\n"
"    name: amqp-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:416
#, fuzzy
msgid "Note how the AMQP broker location is configured.  The `amqp.host` and `amqp.port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "AMQPブローカーのロケーションがどのように構成されているかに注目してください。 `amqp.host` と `amqp.port` ( `AMQP_HOST` と `AMQP_PORT` 環境変数) のプロパティで場所を設定します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:419
#, fuzzy
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "でネイティブ実行ファイルをビルドすることができます。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:424
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer clean package\n"
"> mvn -f amqp-quickstart-processor clean package\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:428
#, fuzzy
msgid "Once packaged, run `docker compose up --build`.  The UI is exposed on http://localhost:8080/quotes.html"
msgstr "パッケージングされたら、 `docker compose up --build` を実行します。UI は http://localhost:8080/quotes.html で公開されます。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:430
#, fuzzy
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "アプリケーションをネイティブで動作させるには、まず、ネイティブの実行ファイルをビルドする必要があります。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:435
#, no-wrap
msgid ""
"> mvn -f amqp-quickstart-producer package -Pnative  -Dquarkus.native.container-build=true\n"
"> mvn -f amqp-quickstart-processor package -Pnative -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:439
#, fuzzy
msgid "The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.  Then, run the system using:"
msgstr "`-Dquarkus.native.container-build=true` は、Quarkusにコンテナ内で実行可能なLinux 64ビットのネイティブ実行ファイルを構築するよう指示しています。その後、システムを使用して実行します。"

#. type: delimited block -
#: upstream/_guides/amqp.adoc:444
#, no-wrap
msgid ""
"> export QUARKUS_MODE=native\n"
"> docker compose up --build\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/amqp.adoc:447
#, fuzzy
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "従来通り、UIは http://localhost:8080/quotes.html で公開されています。"

#. type: Title ==
#: upstream/_guides/amqp.adoc:448
#, no-wrap
msgid "Going further"
msgstr "さらに詳しく"

#. type: Plain text
#: upstream/_guides/amqp.adoc:452
#, fuzzy
msgid "This guide has shown how you can interact with AMQP 1.0 using Quarkus.  It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "このガイドでは、Quarkusを使用してAMQPと対話する方法を示しました。このガイドでは、MicroProfile Reactive Messagingを利用してデータストリーミングアプリケーションを構築します。"

#. type: Plain text
#: upstream/_guides/amqp.adoc:455
#, fuzzy
msgid "If you did the Kafka quickstart, you have realized that it's the same code.  The only difference is the connector configuration and the JSON mapping."
msgstr "Kafka のクイックスタートをした人は、同じコードであることに気がついたはずです。違うのはコネクタの設定だけです。"

#~ msgid "To complete this guide, you need:"
#~ msgstr "このガイドを完成させるには、以下が必要です:"

#~ msgid "less than 15 minutes"
#~ msgstr "15分未満"

#~ msgid "an IDE"
#~ msgstr "IDE"

#, fuzzy
#~ msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
#~ msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#~ msgid "Apache Maven {maven-version}"
#~ msgstr "Apache Maven {maven-version}"

#, fuzzy
#~ msgid "docker and docker-compose"
#~ msgstr "作成したら、 `docker-compose up` を実行します。"

#, fuzzy
#~ msgid "GraalVM installed if you want to run in native mode."
#~ msgstr "ネイティブモードで動作させたい場合は、GraalVMがインストールされていること"

#, fuzzy
#~ msgid "This channel is mapped to an AMQP queue using the configuration we will add to the `application.properties` file.  Open the `src/main/resource/application.properties` file and add:"
#~ msgstr "このチャンネルは、 `application.properties` ファイルに追加する設定を使用して AMQP キューにマッピングされます。 `src/main/resource/application.properties` ファイルを開き、次のように追加します。"

#, fuzzy
#~ msgid "All we need to specify is the `smallrye-amqp` connector.  By default, reactive messaging maps the channel name `quote-requests` to the AMQP queue name."
#~ msgstr "指定する必要があるのは、 `smallrye-amqp` のコネクタだけです。デフォルトでは、リアクティブ・メッセージングは、チャネル名 `quote-requests` を AMQP のキュー名にマッピングします。"

#, fuzzy
#~ msgid "Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.  The configuration keys are structured as follows:"
#~ msgstr "この場合、着信用と発信用のコネクタ構成がそれぞれ1つずつあり、それぞれに明確な名前がついていることに注意してください。コンフィギュレーションのキーは以下のように構成されています。"

#, fuzzy
#~ msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
#~ msgstr "`channel-name` セグメントは、 `@Incoming` および `@Outgoing` アノテーションで設定された値と一致する必要があります。"

#, fuzzy
#~ msgid "`quote-requests` -> AMQP queue from which we read the quote requests"
#~ msgstr "`quote-requests` → 見積もり依頼を読み出すAMQPのキュー"

#, fuzzy
#~ msgid "`quotes` -> AMQP queue in which we write the quotes"
#~ msgstr "`prices` → 価格を読み取ったソース"

#, fuzzy
#~ msgid "Again we need to configure the incoming `quotes` channel inside `producer` project.  Add the following inside `application.properties` file:"
#~ msgstr "再度、 `producer` プロジェクト内で `quotes` の受信チャンネルを設定する必要があります。 `application.properties` ファイル内に以下を追加します。"
