# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2021-06-30 15:11+0000\n"
"PO-Revision-Date: 2021-04-25 22:37+0900\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: om\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.4.2\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:6
#, no-wrap
msgid "Quarkus - Hibernate Search guide"
msgstr "Quarkus - Hibernate Search ガイド"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:11
msgid "You have a Hibernate ORM-based application? You want to provide a full-featured full-text search to your users? You're at the right place."
msgstr "Hibernate ORMベースのアプリケーションをお持ちですか?フル機能のフルテキスト検索をユーザーに提供したいですか?あなたは正しい場所にいます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:14
#, fuzzy
msgid "With this guide, you'll learn how to synchronize your entities to an Elasticsearch cluster in a heart beat with Hibernate Search.  We will also explore how you can can query your Elasticsearch cluster using the Hibernate Search API."
msgstr "このガイドでは、Hibernate Searchを使って、エンティティーをElasticsearchクラスターに心拍数で同期させる方法を学びます。また、Hibernate Search API を使用して Elasticsearch クラスターにクエリを実行する方法についても探ります。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:18
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:20
msgid "less than 20 minutes"
msgstr "20分弱"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:21
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:22
#, fuzzy
#| msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:23
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:24
msgid "Docker"
msgstr "Docker"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:25
msgid "link:building-native-image[GraalVM installed if you want to run in native mode]"
msgstr "link:building-native-image[ネイティブモードで動作させたい場合は、GraalVMがインストールされていること]"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:26
#, no-wrap
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:29
msgid "The application described in this guide allows to manage a (simple) library: you manage authors and their books."
msgstr "このガイドに記載されているアプリケーションは、(シンプルな) 図書館を管理することができます:あなたは、著者とその本を管理します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:31
msgid "The entities are stored in a PostgreSQL database and indexed in an Elasticsearch cluster."
msgstr "エンティティはPostgreSQLデータベースに格納され、Elasticsearchクラスターにインデックスされます。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:32
#, no-wrap
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:36
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:38
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:40
msgid "The solution is located in the `hibernate-search-orm-elasticsearch-quickstart` {quickstarts-tree-url}/hibernate-search-orm-elasticsearch-quickstart[directory]."
msgstr "ソリューションは `hibernate-search-orm-elasticsearch-quickstart` {quickstarts-tree-url}/hibernate-search-orm-elasticsearch-quickstart[ディレクトリ] にあります。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:44
msgid "The provided solution contains a few additional elements such as tests and testing infrastructure."
msgstr "提供されるソリューションには、テストやテストのインフラストラクチャなど、いくつかの追加要素が含まれています。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:46
#, no-wrap
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:49
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:59
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=hibernate-search-orm-elasticsearch-quickstart \\\n"
"    -DclassName=\"org.acme.hibernate.search.elasticsearch.LibraryResource\" \\\n"
"    -Dpath=\"/library\" \\\n"
"    -Dextensions=\"resteasy,hibernate-orm-panache,hibernate-search-orm-elasticsearch,resteasy-jackson,jdbc-postgresql\"\n"
"cd hibernate-search-orm-elasticsearch-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:62
msgid "This command generates a Maven structure importing the following extensions:"
msgstr "このコマンドは、以下のエクステンションをインポートするMaven構造体を生成します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:64
msgid "Hibernate ORM with Panache,"
msgstr "Hibernate ORM with Panache,"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:65
msgid "the PostgreSQL JDBC driver,"
msgstr "PostgreSQL JDBCドライバー"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:66
msgid "Hibernate Search + Elasticsearch,"
msgstr "Hibernate Search + Elasticsearch,"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:67
msgid "RESTEasy and Jackson."
msgstr "RESTEasy と Jackson."

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:70
msgid "If you already have your Quarkus project configured, you can add the `hibernate-search-orm-elasticsearch` extension to your project by running the following command in your project base directory:"
msgstr "すでにQuarkusプロジェクトが設定されている場合は、プロジェクトのベースディレクトリーで以下のコマンドを実行することで、プロジェクトに `hibernate-search-orm-elasticsearch` エクステンションを追加することができます。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:74
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"hibernate-search-orm-elasticsearch\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:77
msgid "This will add the following to your `pom.xml`:"
msgstr "これにより、 `pom.xml` に以下が追加されます:"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:84
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-hibernate-search-orm-elasticsearch</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:91
msgid "For now, let's delete the two generated tests `LibraryResourceTest` and `NativeLibraryResourceIT` present in `src/test/java`.  If you are interested in how you can test this application, just refer to the solution in the quickstarts Git repository: it contains a lot of tests and the required testing infrastructure."
msgstr "まずは、 `src/test/java` にある `LibraryResourceTest` と `NativeLibraryResourceIT` の 2 つの生成されたテストを削除してみましょう。このアプリケーションのテスト方法に興味があれば、 quickstarts の Git リポジトリにあるソリューションを参照してください。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:93
#, no-wrap
msgid "Creating the bare entities"
msgstr "ベアエンティティーの作成"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:96
msgid "First, let's create our Hibernate ORM entities `Book` and `Author` in the `model` subpackage."
msgstr "まず、 `model` サブパッケージに Hibernate ORM エンティティー `Book` と `Author` を作成しましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:100
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:148
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:298
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:340
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:103
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:343
#, no-wrap
msgid ""
"import java.util.List;\n"
"import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:108
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:348
#, no-wrap
msgid ""
"import javax.persistence.CascadeType;\n"
"import javax.persistence.Entity;\n"
"import javax.persistence.FetchType;\n"
"import javax.persistence.OneToMany;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:110
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:157
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:310
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:356
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:113
#, no-wrap
msgid ""
"@Entity\n"
"public class Author extends PanacheEntity { // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:115
#, no-wrap
msgid "    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:117
#, no-wrap
msgid "    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:120
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER) // <2>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:129
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Author)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:131
#, no-wrap
msgid "        Author other = (Author) o;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:134
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:180
#, no-wrap
msgid ""
"        return Objects.equals(id, other.id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:140
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:186
#, no-wrap
msgid ""
"    @Override\n"
"    public int hashCode() {\n"
"        return 31;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:142
msgid "We are using Hibernate ORM with Panache, it is not mandatory."
msgstr "PanacheでHibernate ORMを使用していますが、必須ではありません。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:144
msgid "We are loading these elements eagerly so that they are present in the JSON output.  In a real world application, you should probably use a DTO approach."
msgstr "私たちは、これらの要素がJSON出力に存在するように前もってロードしています。実際のアプリケーションでは、おそらくDTOアプローチを使うべきでしょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:150
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:300
#, no-wrap
msgid "import java.util.Objects;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:153
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:303
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import javax.persistence.ManyToOne;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:155
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:308
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonIgnore;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:160
#, no-wrap
msgid ""
"@Entity\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:162
#, no-wrap
msgid "    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:166
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonIgnore <1>\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:175
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean equals(Object o) {\n"
"        if (this == o) {\n"
"            return true;\n"
"        }\n"
"        if (!(o instanceof Book)) {\n"
"            return false;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:177
#, no-wrap
msgid "        Book other = (Book) o;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:188
#, fuzzy
msgid "We mark this property with `@JsonIgnore` to avoid infinite loops when serializing with Jackson."
msgstr "このプロパティーに `@JsonIgnore` を付けて、Jackson でシリアライズする際に無限ループを避けるようにしています。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:189
#, fuzzy, no-wrap
msgid "Initializing the REST service"
msgstr "RESTサービスの初期化"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:192
#, fuzzy
msgid "While everything is not yet set up for our REST service, we can initialize it with the standard CRUD operations we will need."
msgstr "すべてがまだ REST サービス用にセットアップされていませんが、必要となる標準の CRUD 操作で初期化することができます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:194
#, fuzzy
msgid "Just copy this content in the `LibraryResource` file created by the Maven `create-project` command:"
msgstr "Maven `create-project` コマンドで作成した `LibraryResource` ファイルに、このコンテンツをコピーするだけです。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:198
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:207
#, no-wrap
msgid ""
"import javax.transaction.Transactional;\n"
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.DELETE;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:212
#, no-wrap
msgid ""
"import org.acme.hibernate.search.elasticsearch.model.Author;\n"
"import org.acme.hibernate.search.elasticsearch.model.Book;\n"
"import org.jboss.resteasy.annotations.jaxrs.FormParam;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:215
#, no-wrap
msgid ""
"@Path(\"/library\")\n"
"public class LibraryResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:225
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"book\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addBook(@FormParam String title, @FormParam Long authorId) {\n"
"        Author author = Author.findById(authorId);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:230
#, no-wrap
msgid ""
"        Book book = new Book();\n"
"        book.title = title;\n"
"        book.author = author;\n"
"        book.persist();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:234
#, no-wrap
msgid ""
"        author.books.add(book);\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:245
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"book/{id}\")\n"
"    @Transactional\n"
"    public void deleteBook(@PathParam Long id) {\n"
"        Book book = Book.findById(id);\n"
"        if (book != null) {\n"
"            book.author.books.remove(book);\n"
"            book.delete();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:256
#, no-wrap
msgid ""
"    @PUT\n"
"    @Path(\"author\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void addAuthor(@FormParam String firstName, @FormParam String lastName) {\n"
"        Author author = new Author();\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:270
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    @Consumes(MediaType.APPLICATION_FORM_URLENCODED)\n"
"    public void updateAuthor(@PathParam Long id, @FormParam String firstName, @FormParam String lastName) {\n"
"        Author author = Author.findById(id);\n"
"        if (author == null) {\n"
"            return;\n"
"        }\n"
"        author.firstName = firstName;\n"
"        author.lastName = lastName;\n"
"        author.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:281
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"author/{id}\")\n"
"    @Transactional\n"
"    public void deleteAuthor(@PathParam Long id) {\n"
"        Author author = Author.findById(id);\n"
"        if (author != null) {\n"
"            author.delete();\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:284
msgid "Nothing out of the ordinary here: it is just good old Hibernate ORM with Panache operations in a standard JAX-RS service."
msgstr "ここでは何も特別なことはありません。標準的なJAX-RSサービスでPanache操作を行う古き良きHibernate ORMです。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:286
#, fuzzy
msgid "In fact, the interesting part is that we will need to add very few elements to make our full text search application working."
msgstr "実際、興味深いのは、フルテキスト検索アプリケーションを動作させるためには、非常に少ない要素を追加する必要があるということです。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:287
#, no-wrap
msgid "Using Hibernate Search annotations"
msgstr "Hibernate Searchアノテーションの使用"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:290
msgid "Let's go back to our entities."
msgstr "エンティティに戻りましょう"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:292
msgid "Enabling full text search capabilities for them is as simple as adding a few annotations."
msgstr "フルテキスト検索機能を有効にするには、いくつかのアノテーションを追加するだけで簡単です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:294
#, fuzzy
msgid "Let's edit the `Book` entity again to include this content:"
msgstr "この内容を含むように、 `Book` エンティティーを再度編集してみましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:306
#, no-wrap
msgid ""
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:314
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed // <1>\n"
"public class Book extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:317
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"english\") // <2>\n"
"    public String title;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:321
#, no-wrap
msgid ""
"    @ManyToOne\n"
"    @JsonIgnore\n"
"    public Author author;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:324
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:375
#, no-wrap
msgid ""
"    // Preexisting equals()/hashCode() methods\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:326
#, fuzzy
msgid "First, let's use the `@Indexed` annotation to register our `Book` entity as part of the full text index."
msgstr "まず、 `@Indexed` アノテーションを使って、 `Book` エンティティーをフルテキストインデックスの一部として登録してみましょう。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:328
#, fuzzy
msgid "The `@FullTextField` annotation declares a field in the index specifically tailored for full text search.  In particular, we have to define an analyzer to split and analyze the tokens (~ words) - more on this later."
msgstr "`@FullTextField` アノテーションでは、フルテキスト検索用に特別に調整されたインデックスのフィールドを宣言しています。特に、トークン(~語)を分割して分析するアナライザを定義しなければなりません - これについては後述します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:330
#, fuzzy
msgid "Now that our books are indexed, we can do the same for the authors."
msgstr "私たちの本がインデックス化された今、私たちは著者のために同じことをすることができます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:332
#, fuzzy
msgid "Open the `Author` class and include the content below."
msgstr "`Author` クラスを開き、以下の内容を含める。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:334
#, fuzzy
msgid "Things are quite similar here: we use the `@Indexed`, `@FullTextField` and `@KeywordField` annotations."
msgstr "ここでは、 `@Indexed` 、 `@FullTextField` 、 `@KeywordField` のアノテーションを使用しています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:336
#, fuzzy
msgid "There are a few differences/additions though. Let's check them out."
msgstr "しかし、いくつかの違いや追加点があります。それらをチェックしてみましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:354
#, no-wrap
msgid ""
"import org.hibernate.search.engine.backend.types.Sortable;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.FullTextField;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded;\n"
"import org.hibernate.search.mapper.pojo.mapping.definition.annotation.KeywordField;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:360
#, no-wrap
msgid ""
"@Entity\n"
"@Indexed\n"
"public class Author extends PanacheEntity {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:364
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\") // <1>\n"
"    @KeywordField(name = \"firstName_sort\", sortable = Sortable.YES, normalizer = \"sort\") // <2>\n"
"    public String firstName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:368
#, no-wrap
msgid ""
"    @FullTextField(analyzer = \"name\")\n"
"    @KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
"    public String lastName;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:372
#, no-wrap
msgid ""
"    @OneToMany(mappedBy = \"author\", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.EAGER)\n"
"    @IndexedEmbedded // <3>\n"
"    public List<Book> books;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:377
#, fuzzy
msgid "We use a `@FullTextField` similar to what we did for `Book` but you'll notice that the analyzer is different - more on this later."
msgstr "`Book` と同様の `@FullTextField` を使用していますが、アナライザーが異なることに気づくでしょう - これについては後述します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:381
#, fuzzy
msgid "As you can see, we can define several fields for the same property.  Here, we define a `@KeywordField` with a specific name.  The main difference is that a keyword field is not tokenized (the string is kept as one single token) but can be normalized (i.e. filtered) - more on this later.  This field is marked as sortable as our intention is to use it for sorting our authors."
msgstr "ご覧のように、同じプロパティーに複数のフィールドを定義することができます。ここでは、特定の名前を持つ `@KeywordField` を定義しています。主な違いは、キーワードフィールドはトークン化されない(文字列は一つのトークンとして保持される)が、正規化(つまりフィルタリング)が可能であるということです - これについては後述します。このフィールドはソート可能とマークされていますが、これは著者のソートに使用するためです。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:386
#, fuzzy
msgid "The purpose of `@IndexedEmbedded` is to include the `Book` fields into the `Author` index.  In this case, we just use the default configuration: all the fields of the associated `Book` entities are included in the index (i.e. the `title` field).  The nice thing with `@IndexedEmbedded` is that it is able to automatically reindex an `Author` if one of its ``Book``s has been updated thanks to the bidirectional relation.  `@IndexedEmbedded` also supports nested documents (using the `storage = NESTED` attribute) but we don't need it here.  You can also specify the fields you want to include in your parent index using the `includePaths` attribute if you don't want them all."
msgstr "`@IndexedEmbedded` の目的は、 `Book` フィールドを `Author` インデックスに含めることです。この場合、デフォルトの設定を使用するだけです。関連する `Book` エンティティーのすべてのフィールドがインデックスに含まれます(つまり `title` フィールド)。 `@IndexedEmbedded` の良いところは、双方向関係のおかげで `Book` の一つが更新された場合に、自動的に `Author` のインデックスを再作成できることです。 `@IndexedEmbedded` は入れ子になったドキュメントもサポートしていますが( `storage = NESTED` 属性を使って)、ここでは必要ありません。また、すべてのフィールドを必要としない場合は、 `includePaths` 属性を使って親インデックスに含めたいフィールドを指定することもできます。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:387
#, fuzzy, no-wrap
msgid "Analyzers and normalizers"
msgstr "分析器とノーマライザー"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:389
#, fuzzy, no-wrap
msgid "Introduction"
msgstr "序章"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:392
#, fuzzy
msgid "Analysis is a big part of full text search: it defines how text will be processed when indexing or building search queries."
msgstr "分析はフルテキスト検索の大きな部分を占めています。インデックスを作成したり、検索クエリを構築したりする際に、テキストがどのように処理されるかを定義します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:394
#, fuzzy
msgid "The role of analyzers is to split the text into tokens (~ words) and filter them (making it all lowercase and removing accents for instance)."
msgstr "アナライザの役割は、テキストをトークン(~語)に分割してフィルタリング(例えば、全て小文字にしてアクセントを取り除く)することです。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:397
#, fuzzy
msgid "Normalizers are a special type of analyzers that keeps the input as a single token.  It is especially useful for sorting or indexing keywords."
msgstr "ノーマライザは、入力を1つのトークンとして保持する分析者の特別なタイプです。特にキーワードのソートやインデックス作成に便利です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:399
#, fuzzy
msgid "There are a lot of bundled analyzers but you can also develop your own for your own specific purposes."
msgstr "多くの分析器がバンドルされていますが、自分の目的に合わせて独自に開発することもできます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:401
#, fuzzy
msgid "You can learn more about the Elasticsearch analysis framework in the https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[Analysis section of the Elasticsearch documentation]."
msgstr "Elasticsearchの分析フレームワークについては、 link:https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis.html[Elasticsearchドキュメントの「Analysis」のセクション] で詳しく説明しています。"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:402
#, fuzzy, no-wrap
msgid "Defining the analyzers used"
msgstr "使用する分析装置の定義"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:406
#, fuzzy
msgid "When we added the Hibernate Search annotations to our entities, we defined the analyzers and normalizers used.  Typically:"
msgstr "実体にHibernate Searchアノテーションを追加したときに、使用するアナライザとノーマライザを定義しました。一般的には"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:410
#, no-wrap
msgid "@FullTextField(analyzer = \"english\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:415
#, no-wrap
msgid "@FullTextField(analyzer = \"name\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:420
#, no-wrap
msgid "@KeywordField(name = \"lastName_sort\", sortable = Sortable.YES, normalizer = \"sort\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:423
#, fuzzy
msgid "We use:"
msgstr "使っています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:425
#, fuzzy
msgid "an analyzer called `name` for person names,"
msgstr "`name` というアナライザーで人名を調べています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:426
#, fuzzy
msgid "an analyzer called `english` for book titles,"
msgstr "`english` というアナライザーで本のタイトルを調べます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:427
#, fuzzy
msgid "a normalizer called `sort` for our sort fields"
msgstr "`sort` という名前のノーマライザでソートフィールドを作成します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:429
#, fuzzy
msgid "but we haven't set them up yet."
msgstr "でも、まだ設定していないんです。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:431
#, fuzzy
msgid "Let's see how you can do it with Hibernate Search."
msgstr "では、Hibernate Searchを使ってどのようなことができるのか見てみましょう。"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:433
#, fuzzy, no-wrap
msgid "Setting up the analyzers"
msgstr "分析装置の設定"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:437
#, fuzzy
msgid "It is an easy task, we just need to create an implementation of `ElasticsearchAnalysisConfigurer` (and configure Quarkus to use it, more on that later)."
msgstr "簡単な作業で、 `ElasticsearchAnalysisConfigurer` の実装を作成するだけです(それを使用するように Quarkus を設定する必要があります。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:439
#, fuzzy
msgid "To fulfill our requirements, let's create the following implementation:"
msgstr "要件を満たすために、以下の実装を作成してみましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:443
#, no-wrap
msgid "package org.acme.hibernate.search.elasticsearch.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:446
#, no-wrap
msgid ""
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurationContext;\n"
"import org.hibernate.search.backend.elasticsearch.analysis.ElasticsearchAnalysisConfigurer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:449
#, no-wrap
msgid ""
"import javax.enterprise.context.Dependent;\n"
"import javax.inject.Named;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:453
#, no-wrap
msgid ""
"@Dependent\n"
"@Named(\"myAnalysisConfigurer\") // <1>\n"
"public class AnalysisConfigurer implements ElasticsearchAnalysisConfigurer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:459
#, no-wrap
msgid ""
"    @Override\n"
"    public void configure(ElasticsearchAnalysisConfigurationContext context) {\n"
"        context.analyzer(\"name\").custom() // <2>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:463
#, no-wrap
msgid ""
"        context.analyzer(\"english\").custom() // <3>\n"
"                .tokenizer(\"standard\")\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\", \"porter_stem\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:468
#, no-wrap
msgid ""
"        context.normalizer(\"sort\").custom() // <4>\n"
"                .tokenFilters(\"asciifolding\", \"lowercase\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:470
#, fuzzy
msgid "We will need to reference the configurer from the configuration properties, so we make it a named bean."
msgstr "コンフィグレータはコンフィグプロパティーから参照する必要があるので、名前付きBeanにします。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:472
#, fuzzy
msgid "This is a simple analyzer separating the words on spaces, removing any non-ASCII characters by its ASCII counterpart (and thus removing accents) and putting everything in lowercase.  It is used in our examples for the author's names."
msgstr "これは、スペース上の単語を分離し、ASCII文字以外の文字をASCII対応のもので除去し(したがって、アクセントを除去し)、すべてを小文字にした単純な分析器です。これは著者名の例で使用されています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:474
#, fuzzy
msgid "We are a bit more aggressive with this one and we include some stemming: we will be able to search for `mystery` and get a result even if the indexed input contains `mysteries`.  It is definitely too aggressive for person names but it is perfect for the book titles."
msgstr "`mysteries` これをもう少し積極的に使って、いくつかのステミングを追加しました。インデックス入力に `mystery` が含まれていても、 を検索して結果を得ることができるようになります。人名には確かに攻撃的すぎますが、書籍のタイトルには最適です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:475
#, fuzzy
msgid "Here is the normalizer used for sorting. Very similar to our first analyzer, except we don't tokenize the words as we want one and only one token."
msgstr "これはソートに使用されるノーマライザです。最初の解析器と非常によく似ていますが、単語をトークン化していない点を除けば、トークンは1つしかありません。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:476
#, fuzzy, no-wrap
msgid "Adding full text capabilities to our REST service"
msgstr "RESTサービスにフルテキスト機能を追加"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:479
#, fuzzy
msgid "In our existing `LibraryResource`, we just need to inject the `SearchSession`:"
msgstr "私たちの既存の `LibraryResource` で、私たちはちょうど注入する必要があります `SearchSession` ."

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:484
#, no-wrap
msgid ""
"    @Inject\n"
"    SearchSession searchSession; // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:489
#, fuzzy
msgid "Inject a Hibernate Search session, which relies on the `EntityManager` under the hood.  Applications with multiple persistence units can use the CDI qualifier `@io.quarkus.hibernate.orm.PersistenceUnit` to select the right one: see <<multiple-persistence-units-attaching-cdi>>."
msgstr "`EntityManager` に依存している Hibernate Search セッションを注入します。複数の永続化ユニットを持つアプリケーションは、CDI修飾子 `@io.quarkus.hibernate.orm.PersistenceUnit` を使用して適切なものを選択することができます link:#multiple-persistence-units-attaching-cdi[: [multiple-persistence-units-attaching-cdi] を] 参照してください。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:491
#, fuzzy
msgid "And then we can add the following methods (and a few ``import``s):"
msgstr "そして、次のようなメソッド(といくつかの `import` s)を追加することができます。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:502
#, no-wrap
msgid ""
"    @Transactional // <1>\n"
"    void onStart(@Observes StartupEvent ev) throws InterruptedException { // <2>\n"
"        // only reindex if we imported some content\n"
"        if (Book.count() > 0) {\n"
"            searchSession.massIndexer()\n"
"                    .startAndWait();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:518
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"author/search\") // <3>\n"
"    @Transactional\n"
"    public List<Author> searchAuthors(@QueryParam String pattern, // <4>\n"
"            @QueryParam Optional<Integer> size) {\n"
"        return searchSession.search(Author.class) // <5>\n"
"                .where(f ->\n"
"                    pattern == null || pattern.trim().isEmpty() ?\n"
"                            f.matchAll() : // <6>\n"
"                            f.simpleQueryString()\n"
"                                .fields(\"firstName\", \"lastName\", \"books.title\").matching(pattern) // <7>\n"
"                )\n"
"                .sort(f -> f.field(\"lastName_sort\").then().field(\"firstName_sort\")) // <8>\n"
"                .fetchHits(size.orElse(20)); // <9>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:520
#, fuzzy
msgid "Important point: we need a transactional context for these methods."
msgstr "重要な点: これらのメソッドにはトランザクションコンテキストが必要です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:525
#, fuzzy
msgid "As we will import data into the PostgreSQL database using an SQL script, we need to reindex the data at startup.  For this, we use Hibernate Search's mass indexer, which allows to index a lot of data efficiently (you can fine tune it for better performances).  All the upcoming updates coming through Hibernate ORM operations will be synchronized automatically to the full text index.  If you don't import data manually in the database, you don't need that: the mass indexer should then only be used when you change your indexing configuration (adding a new field, changing an analyzer's configuration...) and you want the new configuration to be applied to your existing entities."
msgstr "SQLスクリプトを使用してPostgreSQLデータベースにデータをインポートするので、起動時にデータのインデックスを再作成する必要があります。これにはHibernate Searchのマスインデクサを使用します。これにより、多くのデータを効率的にインデックス化することができます(パフォーマンスを向上させるために微調整することができます)。Hibernate ORMの操作によって来るすべての近日中のアップデートは、自動的に全文インデックスに同期されます。データベースにデータを手動でインポートしない場合は、その必要はありません。マスインデクサは、インデックス設定を変更した場合(新しいフィールドを追加したり、アナライザーの設定を変更したり...)にのみ使用され、新しい設定を既存のエンティティーに適用したい場合に使用されます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:526
#, fuzzy
msgid "This is where the magic begins: just adding the annotations to our entities makes them available for full text search: we can now query the index using the Hibernate Search DSL."
msgstr "ここから魔法が始まります。エンティティーにアノテーションを追加するだけで、フルテキスト検索が可能になり、Hibernate検索DSLを使ってインデックスを検索できるようになりました。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:527
#, fuzzy
msgid "Use the `org.jboss.resteasy.annotations.jaxrs.QueryParam` annotation type to avoid repeating the parameter name."
msgstr "パラメーター名の繰り返しを避けるために、 `org.jboss.resteasy.annotations.jaxrs.QueryParam` 注釈タイプを使用してください。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:528
#, fuzzy
msgid "We indicate that we are searching for ``Author``s."
msgstr "私たちは、 `Author` sを検索していることを示しています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:529
#, fuzzy
msgid "We create a predicate: if the pattern is empty, we use a `matchAll()` predicate."
msgstr "述語を作成します。パターンが空の場合は `matchAll()` 述語を使用します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:530
#, fuzzy
msgid "If we have a valid pattern, we create a https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] predicate on the `firstName`, `lastName` and `books.title` fields matching our pattern."
msgstr "有効なパターンがあれば link:https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html[`simpleQueryString()`] パターンにマッチする `firstName` 、 `lastName` 、 `books.title` フィールドに対する述語です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:531
#, fuzzy
msgid "We define the sort order of our results. Here we sort by last name, then by first name. Note that we use the specific fields we created for sorting."
msgstr "結果のソート順を定義します。ここでは、姓でソートし、次に姓でソートします。ソート用に作成した特定のフィールドを使用していることに注意してください。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:532
#, fuzzy
msgid "Fetch the `size` top hits, `20` by default. Obviously, paging is also supported."
msgstr "`20` デフォルトでは `size` のトップヒットを取得します。もちろん、ページングもサポートされています。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:537
#, fuzzy
msgid "The Hibernate Search DSL supports a significant subset of the Elasticsearch predicates (match, range, nested, phrase, spatial...).  Feel free to explore the DSL using autocompletion."
msgstr "Hibernate Search DSLはElasticsearch述語の重要なサブセット(match, range, nested, phrase, spatial...)をサポートしています。オートコンプリートを使って自由にDSLを探索してみてください。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:540
#, fuzzy
msgid "When that's not enough, you can always fall back to link:{hibernate-search-doc-prefix}#search-dsl-predicate-extensions-elasticsearch-from-json[defining a predicate using JSON directly]."
msgstr "それだけでは不十分な場合は、いつでも link:{hibernate-search-doc-prefix}#search-dsl-predicate-extensions-elasticsearch-from-json[JSONを使って直接述語を定義] することができます。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:542
#, fuzzy, no-wrap
msgid "Configuring the application"
msgstr "アプリケーションの設定"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:545
#, fuzzy
msgid "As usual, we can configure everything in the Quarkus configuration file, `application.properties`."
msgstr "いつものように、Quarkusの設定ファイル( `application.properties` )ですべてを設定することができます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:547
#, fuzzy
msgid "Edit `src/main/resources/application.properties` and inject the following configuration:"
msgstr "`src/main/resources/application.properties` を編集して、以下の設定を注入します。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:551
#, no-wrap
msgid "quarkus.ssl.native=false <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:556
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=postgresql <2>\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql:quarkus_test\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:559
#, no-wrap
msgid ""
"quarkus.hibernate-orm.database.generation=drop-and-create <3>\n"
"quarkus.hibernate-orm.sql-load-script=import.sql <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:564
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.elasticsearch.version=7 <5>\n"
"quarkus.hibernate-search-orm.elasticsearch.analysis.configurer=bean:myAnalysisConfigurer <6>\n"
"quarkus.hibernate-search-orm.schema-management.strategy=drop-and-create <7>\n"
"quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy=sync <8>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:566
#, fuzzy
msgid "We won't use SSL so we disable it to have a more compact native executable."
msgstr "SSLは使わないので、よりコンパクトなネイティブ実行ファイルを作るためにSSLを無効にしています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:567
#, fuzzy
msgid "Let's create a PostgreSQL datasource."
msgstr "PostgreSQLのデータソースを作成してみましょう。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:568
#, fuzzy
msgid "We will drop and recreate the schema every time we start the application."
msgstr "アプリケーションを起動するたびにスキーマをドロップして再作成します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:569
#, fuzzy
msgid "We load some initial data."
msgstr "いくつかの初期データを読み込みます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:572
#, fuzzy
msgid "We need to tell Hibernate Search about the version of Elasticsearch we will use.  It is important because there are significant differences between Elasticsearch mapping syntax depending on the version.  Since the mapping is created at build time to reduce startup time, Hibernate Search cannot connect to the cluster to automatically detect the version."
msgstr "使用するElasticsearchのバージョンをHibernate Searchに伝える必要があります。バージョンによってElasticsearchのマッピング構文に大きな違いがあるので重要です。マッピングは起動時間を短縮するためにビルド時に作成されるため、Hibernate Searchはクラスターに接続して自動的にバージョンを検出することができません。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:573
#, fuzzy
msgid "We point to the custom `AnalysisConfigurer` which defines the configuration of our analyzers and normalizers."
msgstr "私たちは、分析器とノーマライザの設定を定義するカスタム `AnalysisConfigurer` を参照しています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:574
#, fuzzy
msgid "Obviously, this is not for production: we drop and recreate the index every time we start the application."
msgstr "明らかに、これは本番用ではありません: アプリケーションを起動するたびにインデックスを削除して再作成します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:577
#, fuzzy
msgid "This means that we wait for the entities to be searchable before considering a write complete.  On a production setup, the `write-sync` default will provide better performance.  Using `sync` is especially important when testing as you need the entities to be searchable immediately."
msgstr "これは、書き込み完了を検討する前にエンティティーが検索可能になるのを待つことを意味します。本番環境では、デフォルトの `write-sync` の方がパフォーマンスが向上します。エンティティーをすぐに検索可能にする必要があるため、テスト時には `sync` を使用することが特に重要です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:580
#, fuzzy
msgid "For more information about the Hibernate Search extension configuration please refer to the <<configuration-reference, Configuration Reference>>."
msgstr "Hibernate Searchエクステンションの設定の詳細については、 link:#configuration-reference[設定リファレンス] を参照してください。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:581
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "フロントエンドの作成"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:587
#, fuzzy
msgid "Now let's add a simple web page to interact with our `LibraryResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, overwrite the existing `index.html` file with the content from this {quickstarts-blob-url}/hibernate-search-orm-elasticsearch-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file."
msgstr "ここで、 `LibraryResource` .Quarkusと対話するための簡単なウェブページを追加してみましょう。Quarkusは、 `META-INF/resources` ディレクトリーの下にある静的なリソースを自動的に提供します。 `src/main/resources/META-INF/resources` ディレクトリーで、既存の `index.html` ファイルをこの {quickstarts-blob-url}/hibernate-search-orm-elasticsearch-quickstart/src/main/resources/META-INF/resources/index.html[index.html] ファイルの内容で上書きします。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:588
#, no-wrap
msgid "Automatic import script"
msgstr "自動インポートスクリプト"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:591
msgid "For the purpose of this demonstration, let's import an initial dataset."
msgstr "このデモの目的のために、初期データセットをインポートしてみましょう。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:593
msgid "Let's create a `src/main/resources/import.sql` file with the following content:"
msgstr "以下の内容の `src/main/resources/import.sql` ファイルを作成してみましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:598
#, no-wrap
msgid ""
"INSERT INTO author(id, firstname, lastname) VALUES (nextval('hibernate_sequence'), 'John', 'Irving');\n"
"INSERT INTO author(id, firstname, lastname) VALUES (nextval('hibernate_sequence'), 'Paul', 'Auster');\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:612
#, no-wrap
msgid ""
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The World According to Garp', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Hotel New Hampshire', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Cider House Rules', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'A Prayer for Owen Meany', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Last Night in Twisted River', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'In One Person', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Avenue of Mysteries', 1);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The New York Trilogy', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Mr. Vertigo', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'The Brooklyn Follies', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Invisible', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), 'Sunset Park', 2);\n"
"INSERT INTO book(id, title, author_id) VALUES (nextval('hibernate_sequence'), '4 3 2 1', 2);\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:614
#, no-wrap
msgid "Preparing the infrastructure"
msgstr "インフラの準備"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:617
msgid "We need a PostgreSQL instance and an Elasticsearch cluster."
msgstr "PostgreSQLインスタンスとElasticsearchクラスターが必要です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:619
msgid "Let's use Docker to start one of each:"
msgstr "Dockerを使ってそれぞれ1つずつ起動してみましょう。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:623
#, no-wrap
msgid "docker run -it --rm=true --name elasticsearch_quarkus_test -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" docker.elastic.co/elasticsearch/elasticsearch-oss:{elasticsearch-version}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:628
#, no-wrap
msgid "docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name postgresql_quarkus_test -e POSTGRES_USER=quarkus_test -e POSTGRES_PASSWORD=quarkus_test -e POSTGRES_DB=quarkus_test -p 5432:5432 postgres:13.1\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:630
#, fuzzy, no-wrap
msgid "Time to play with your application"
msgstr "アプリケーションで遊ぶ時間"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:633
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "これで、REST サービスと対話できるようになりました。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:635
msgid "start Quarkus with `./mvnw compile quarkus:dev`"
msgstr "`./mvnw compile quarkus:dev` でQuarkusを起動"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:636
#, fuzzy
msgid "open a browser to `http://localhost:8080/`"
msgstr "ブラウザを開く `http://localhost:8080/`"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:637
#, fuzzy
msgid "search for authors or book titles (we initialized some data for you)"
msgstr "著者検索"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:638
#, fuzzy
msgid "create new authors and books and search for them too"
msgstr "新しい著者や本を作成し、それらを検索します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:640
#, fuzzy
msgid "As you can see, all your updates are automatically synchronized to the Elasticsearch cluster."
msgstr "ご覧のように、すべての更新は自動的にElasticsearchクラスターに同期されます。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:642
#, no-wrap
msgid "Multiple persistence units"
msgstr "複数の永続性ユニット"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:644
#, no-wrap
msgid "Configuring multiple persistence units"
msgstr "複数の永続化ユニットを設定"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:649
#, fuzzy
msgid "With the Hibernate ORM extension, link:hibernate-orm#multiple-persistence-units[you can set up multiple persistence units], each with its own datasource and configuration."
msgstr "Hibernate ORM エクステンションを使用すると、 link:hibernate-orm#multiple-persistence-units[複数の永続化ユニットを設定することができ、] それぞれが独自のデータソースと設定を持つことができます。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:652
#, fuzzy
msgid "If you do declare multiple persistence units, you will also configure Hibernate Search separately for each persistence unit."
msgstr "複数のパーシスタンス単位を宣言した場合は、Hibernate Searchもパーシスタンス単位ごとに個別に設定します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:656
#, fuzzy
msgid "The properties at the root of the `quarkus.hibernate-search-orm.` namespace define the default persistence unit.  For instance, the following snippet defines a default datasource and a default persistence unit, and sets the Elasticsearch host for that persistence unit to `es1.mycompany.com:9200`."
msgstr "`quarkus.hibernate-search-orm.` ネームスペースのルートにあるプロパティーは、デフォルトの永続化ユニットを定義します。例えば、以下のスニペットは、デフォルトのデータソースとデフォルトの永続化ユニットを定義し、その永続化ユニットのElasticsearchホストを `es1.mycompany.com:9200` に設定しています。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:661
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:663
#, no-wrap
msgid "quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:667
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.elasticsearch.hosts=es1.mycompany.com:9200\n"
"quarkus.hibernate-search-orm.elasticsearch.version=7\n"
"quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy=write-sync\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:670
#, fuzzy
msgid "Using a map based approach, it is also possible to configure named persistence units:"
msgstr "マップベースのアプローチを使用して、名前付き永続化ユニットを構成することも可能です。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:675
#, no-wrap
msgid ""
"quarkus.datasource.\"users\".db-kind=h2 <1>\n"
"quarkus.datasource.\"users\".jdbc.url=jdbc:h2:mem:users;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:678
#, no-wrap
msgid ""
"quarkus.datasource.\"inventory\".db-kind=h2 <2>\n"
"quarkus.datasource.\"inventory\".jdbc.url=jdbc:h2:mem:inventory;DB_CLOSE_DELAY=-1\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:681
#, no-wrap
msgid ""
"quarkus.hibernate-orm.\"users\".datasource=users <3>\n"
"quarkus.hibernate-orm.\"users\".packages=org.acme.model.user\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:684
#, no-wrap
msgid ""
"quarkus.hibernate-orm.\"inventory\".datasource=inventory <4>\n"
"quarkus.hibernate-orm.\"inventory\".packages=org.acme.model.inventory\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:688
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.\"users\".elasticsearch.hosts=es1.mycompany.com:9200 <5>\n"
"quarkus.hibernate-search-orm.\"users\".elasticsearch.version=7\n"
"quarkus.hibernate-search-orm.\"users\".automatic-indexing.synchronization.strategy=write-sync\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:692
#, no-wrap
msgid ""
"quarkus.hibernate-search-orm.\"inventory\".elasticsearch.hosts=es2.mycompany.com:9200 <6>\n"
"quarkus.hibernate-search-orm.\"inventory\".elasticsearch.version=7\n"
"quarkus.hibernate-search-orm.\"inventory\".automatic-indexing.synchronization.strategy=write-sync\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:694
#, fuzzy
msgid "Define a datasource named `users`."
msgstr "`users` という名前のデータソースを定義します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:695
#, fuzzy
msgid "Define a datasource named `inventory`."
msgstr "`inventory` という名前のデータソースを定義します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:696
#, fuzzy
msgid "Define a persistence unit called `users` pointing to the `users` datasource."
msgstr "`users` データソースを指す `users` という永続化ユニットを定義します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:697
#, fuzzy
msgid "Define a persistence unit called `inventory` pointing to the `inventory` datasource."
msgstr "`inventory` データソースを指す `inventory` という永続化ユニットを定義します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:699
#, fuzzy
msgid "Configure Hibernate Search for the `users` persistence unit, setting the Elasticsearch host for that persistence unit to `es1.mycompany.com:9200`."
msgstr "`users` の永続化ユニットの Elasticsearch ホストを `es1.mycompany.com:9200` に設定して、Hibernate Search を設定します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:701
#, fuzzy
msgid "Configure Hibernate Search for the `inventory` persistence unit, setting the Elasticsearch host for that persistence unit to `es2.mycompany.com:9200`."
msgstr "`inventory` の永続化ユニットの Elasticsearch ホストを `es2.mycompany.com:9200` に設定して、Hibernate Search を設定します。"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:703
#, fuzzy, no-wrap
msgid "Attaching model classes to persistence units"
msgstr "モデルクラスを永続化ユニットにアタッチする"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:708
#, fuzzy
msgid "For each persistence unit, Hibernate Search will only consider indexed entities that are attached to that persistence unit.  Entities are attached to a persistence unit by link:hibernate-orm#multiple-persistence-units-attaching-model-classes[configuring the Hibernate ORM extension]."
msgstr "各パーシステンス・ユニットに対して、Hibernate Searchは、そのパーシステンス・ユニットにアタッチされているインデックス化されたエンティティーのみを考慮します。エンティティーは、 link:hibernate-orm#multiple-persistence-units-attaching-model-classes[Hibernate ORMエクステンションを設定する] ことで、パーシステンス・ユニットにアタッチされます。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:710
#, no-wrap
msgid "CDI integration"
msgstr "CDI統合"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:713
msgid "You can inject Hibernate Search's main entry points, `SearchSession` and `SearchMapping`, using CDI:"
msgstr "CDI を使用して、Hibernate Search のメインエントリーポイント `SearchSession` と `SearchMapping` を注入することができます。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:718
#, no-wrap
msgid ""
"@Inject\n"
"SearchSession searchSession;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:721
msgid "This will inject the `SearchSession` of the default persistence unit."
msgstr "これは、デフォルトの永続化ユニットの `SearchSession` を注入します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:724
msgid "To inject the `SearchSession` of a named persistence unit (`users` in our example), just add a qualifier:"
msgstr "名前付き永続化ユニット(この例では `users` )の `SearchSession` を注入するには、修飾子を追加するだけです。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:730
#, no-wrap
msgid ""
"@Inject\n"
"@PersistenceUnit(\"users\") <1>\n"
"SearchSession searchSession;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:732
msgid "This is the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation."
msgstr "これは `@io.quarkus.hibernate.orm.PersistenceUnit` のアノテーションです。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:734
msgid "You can inject the `SearchMapping` of a named persistence unit using the exact same mechanism:"
msgstr "全く同じメカニズムを使って、名前付き永続化ユニットの `SearchMapping` を注入することができます。"

#. type: delimited block -
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:740
#, no-wrap
msgid ""
"@Inject\n"
"@PersistenceUnit(\"users\")\n"
"SearchMapping searchMapping;\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:742
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:745
msgid "You can build a native executable with the usual command `./mvnw package -Pnative`."
msgstr "通常のコマンド `./mvnw package -Pnative` でネイティブ実行ファイルをビルドすることができます。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:749
msgid "As usual with native executable compilation, this operation consumes a lot of memory."
msgstr "ネイティブの実行ファイルのコンパイルと同様に、この操作は大量のメモリーを消費します。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:751
msgid "It might be safer to stop the two containers while you are building the native executable and start them again once you are done."
msgstr "ネイティブ実行ファイルをビルドしている間は2つのコンテナーを停止して、ビルドが終わったら再度起動した方が安全かもしれません。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:754
msgid "Running it is as simple as executing `./target/hibernate-search-orm-elasticsearch-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "実行は `./target/hibernate-search-orm-elasticsearch-quickstart-1.0-SNAPSHOT-runner` を実行するだけであり簡単です。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:756
msgid "You can then point your browser to `http://localhost:8080/` and use your application."
msgstr "その後、ブラウザで `http://localhost:8080/` を開きアプリケーションを使用します。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:761
msgid "The startup is a bit slower than usual: it is mostly due to us dropping and recreating the database schema and the Elasticsearch mapping every time at startup.  We also inject some data and execute the mass indexer."
msgstr "起動がいつもより少し遅いのは、起動時に毎回データベーススキーマとElasticsearchマッピングを落として再作成しているのが原因です。また、いくつかのデータを注入し、マスインデクサーを実行しています。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:763
msgid "In a real life application, it is obviously something you won't do at startup."
msgstr "実際のアプリケーションでは、明らかに起動時に実行しないことです。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:766
#, fuzzy, no-wrap
msgid "Offline startup"
msgstr "オフライン起動"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:771
#, fuzzy
msgid "By default, Hibernate Search sends a few requests to the Elasticsearch cluster on startup.  If the Elasticsearch cluster is not necessarily up and running when Hibernate Search starts, this could cause a startup failure."
msgstr "デフォルトでは、Hibernate Search は起動時に Elasticsearch クラスタにいくつかのリクエストを送信します。Hibernate Searchの起動時にElasticsearchクラスタが必ずしも稼働していない場合、起動失敗の原因となります。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:773
#, fuzzy
msgid "To address this, you can configure Hibernate Search to not send any request on startup:"
msgstr "これに対処するには、起動時にリクエストを送信しないようにHibernate Searchを設定します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:777
#, fuzzy
msgid "Disable Elasticsearch version checks on startup by setting the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.elasticsearch.version-check.enabled[`quarkus.hibernate-search-orm.elasticsearch.version-check.enabled`] to `false`."
msgstr "起動時にElasticsearchのバージョンチェックを行わないようにするには、設定プロパティ  link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.elasticsearch.version-check.enabled[`quarkus.hibernate-search-orm.elasticsearch.version-check.enabled`]を `false` に設定します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:780
#, fuzzy
msgid "Disable schema management on startup by setting the configuration property link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`] to `none`."
msgstr "起動時にスキーマ管理を無効にするには、コンフィギュレーション・プロパティを  link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.schema-management.strategy[`quarkus.hibernate-search-orm.schema-management.strategy`]を `none` に設定します。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:783
#, fuzzy
msgid "Of course, even with this configuration, Hibernate Search still won't be able to index anything or run search queries until the Elasticsearch cluster becomes accessible."
msgstr "もちろん、この構成でも、Elasticsearchクラスタがアクセス可能になるまでは、Hibernate Searchはインデックスを作成したり、検索クエリを実行したりすることはできません。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:789
#, fuzzy
msgid "If you disable automatic schema creation by setting `quarkus.hibernate-search-orm.schema-management.strategy` to `none`, you will have to create the schema manually at some point before your application starts persisting/updating entities and executing search requests."
msgstr "`quarkus.hibernate-search-orm.schema-management.strategy` を `none` に設定してスキーマの自動作成を無効にした場合、アプリケーションがエンティティの永続化/更新や検索要求の実行を開始する前のある時点で、手動でスキーマを作成する必要があります。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:792
#, fuzzy
#| msgid "Other formats are also accepted, but are only useful for advanced use cases.  See link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[this section of Hibernate Search's reference documentation] for more information."
msgid "See link:{hibernate-search-doc-prefix}#mapper-orm-schema-management-manager[this section of the reference documentation] for more information."
msgstr "他の形式も認められていますが、高度なユースケースでのみ有用です。詳細については、 link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[Hibernate Searchのリファレンスドキュメントのこのセクション] を参照してください。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:794
#, no-wrap
msgid "Further reading"
msgstr "参考"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:798
msgid "If you are interested in learning more about Hibernate Search 6, the Hibernate team publishes link:{hibernate-search-doc-prefix}[an extensive reference documentation]."
msgstr "Hibernate Search 6について詳しく知りたい方は、Hibernateチームが link:{hibernate-search-doc-prefix}[広範なリファレンスドキュメント] を公開しています。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:799
#, no-wrap
msgid "FAQ"
msgstr "FAQ"

#. type: Title ===
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:801
#, no-wrap
msgid "Why Elasticsearch only?"
msgstr "なぜElasticsearchだけなのか?"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:804
msgid "Hibernate Search supports both a Lucene backend and an Elasticsearch backend."
msgstr "Hibernate SearchはLuceneバックエンドとElasticsearchバックエンドの両方をサポートしています。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:807
msgid "In the context of Quarkus and to build microservices, we thought the latter would make more sense.  Thus we focused our efforts on it."
msgstr "Quarkusとマイクロサービスを構築するという文脈では、後者の方がより意味があると考えました。そこで、私たちは後者に力を入れました。"

#. type: Plain text
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:809
msgid "We don't have plans to support the Lucene backend in Quarkus for now."
msgstr "今のところ、QuarkusでLuceneバックエンドをサポートする予定はありません。"

#. type: Title ==
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:811
#, no-wrap
msgid "Hibernate Search Configuration Reference"
msgstr "Hibernate Search 設定リファレンス"

#. type: Block title
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:817
#, no-wrap
msgid "About bean references"
msgstr "Bean参照について"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:820
msgid "When referencing beans using a string value in configuration properties, that string is parsed."
msgstr "設定プロパティーで文字列の値を使用してBeanを参照する場合、その文字列は解析されます。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:822
msgid "Here are the most common formats:"
msgstr "最も一般的なフォーマットは以下の通りです。"

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:825
msgid "`bean:` followed by the name of a `@Named` CDI bean.  For example `bean:myBean`."
msgstr "`bean:` の後に `@Named` CDI Beanの名前が続きます。例えば `bean:myBean` ."

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:828
msgid "`class:` followed by the fully-qualified name of a class, to be instantiated through CDI if it's a CDI bean, or through its public, no-argument constructor otherwise.  For example `class:com.mycompany.MyClass`."
msgstr "`class:` の後にクラスの完全修飾名を付けて、CDI Beanの場合は CDI を通して、そうでない場合はパブリックで引数なしのコンストラクタを通してインスタンス化されます。例えば `class:com.mycompany.MyClass` ."

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:832
msgid "An arbitrary string referencing a built-in implementation.  Available values are detailed in the documentation of each configuration property, such as `async`/`read-sync`/`write-sync`/`sync` for <<quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy,`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`>>."
msgstr "ビルトイン実装を参照する任意の文字列。 `async` `read-sync` `write-sync` `sync` 利用可能な値は、各設定プロパティーのドキュメントで詳しく説明されています。 link:#quarkus-hibernate-search-orm-elasticsearch_quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy[`quarkus.hibernate-search-orm.automatic-indexing.synchronization.strategy`] ."

#. type: delimited block =
#: upstream/_guides/hibernate-search-orm-elasticsearch.adoc:836
msgid "Other formats are also accepted, but are only useful for advanced use cases.  See link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[this section of Hibernate Search's reference documentation] for more information."
msgstr "他の形式も認められていますが、高度なユースケースでのみ有用です。詳細については、 link:{hibernate-search-doc-prefix}#configuration-bean-reference-parsing[Hibernate Searchのリファレンスドキュメントのこのセクション] を参照してください。"
