# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-02-23 11:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/elasticsearch.adoc:6
#, fuzzy, no-wrap
msgid "Quarkus - Connecting to an Elasticsearch cluster"
msgstr "Quarkus - Elasticsearchクラスターへの接続"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:11
#, fuzzy
msgid "Elasticsearch is a well known full text search engine and NoSQL datastore."
msgstr "Elasticsearchはよく知られた全文検索エンジンであり、NoSQLデータストアである。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:13
#, fuzzy
msgid "In this guide, we will see how you can get your REST services to use an Elasticsearch cluster."
msgstr "このガイドでは、RESTサービスにElasticsearchクラスターを使用させる方法を見ていきます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:16
#, fuzzy
msgid "Quarkus provides two ways of accessing Elasticsearch: via the lower level `RestClient` or via the `RestHighLevelClient` we will call them the low level and the high level clients."
msgstr "QuarkusはElasticsearchにアクセスするための2つの方法を提供しています:低レベルの `RestClient` を経由して、または `RestHighLevelClient` を経由して、低レベルと高レベルのクライアントと呼ぶことにします。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "前提条件"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:22
msgid "To complete this guide, you need:"
msgstr "このガイドを完成させるには、以下が必要です:"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:24
msgid "less than 15 minutes"
msgstr "15分未満"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:25
msgid "an IDE"
msgstr "IDE"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:26
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr "JDK 1.8+ がインストールされ、 `JAVA_HOME`  が適切に設定されていること"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:27
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:28
#, fuzzy
msgid "Elasticsearch installed or Docker installed"
msgstr "Elasticsearchがインストールされているか、Dockerがインストールされているか"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:29
msgid "Architecture"
msgstr "アーキテクチャ"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:32
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "このガイドで構築されたアプリケーションは非常にシンプルです:ユーザーはフォームを使用してリストに要素を追加することができ、リストは更新されます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:34
#, fuzzy
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "ブラウザとサーバー間の情報はすべてJSON形式になっています。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:36
#, fuzzy
msgid "The elements are stored in Elasticsearch."
msgstr "要素はElasticsearchに格納されています。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:37
msgid "Solution"
msgstr "ソリューション"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:41
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "次の章で紹介する手順に沿って、ステップを踏んでアプリを作成することをお勧めします。ただし、完成した例にそのまま進んでも構いません。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:43
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "Gitレポジトリをクローンするか `git clone {quickstarts-clone-url}` 、 {quickstarts-archive-url}[アーカイブ] をダウンロードします。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:45
#, fuzzy
msgid "The solution for the low level client is located in the `elasticsearch-rest-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-client-quickstart[directory]."
msgstr "低レベルクライアントのソリューションは `elasticsearch-rest-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-client-quickstart[directory] にあります。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:47
#, fuzzy
msgid "The solution for the high level client is located in the `elasticsearch-rest-high-level-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-high-level-client-quickstart[directory]."
msgstr "高レベルクライアントのソリューションは `elasticsearch-rest-high-level-client-quickstart` {quickstarts-tree-url}/elasticsearch-rest-high-level-client-quickstart[directory] にあります。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:48
msgid "Creating the Maven project"
msgstr "Mavenプロジェクトの作成"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:51
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "まず、新しいプロジェクトが必要です。以下のコマンドで新規プロジェクトを作成します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:61
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=elasticsearch-quickstart \\\n"
"    -DclassName=\"org.acme.elasticsearch.FruitResource\" \\\n"
"    -Dpath=\"/fruits\" \\\n"
"    -Dextensions=\"resteasy,resteasy-jackson,elasticsearch-rest-client\"\n"
"cd elasticsearch-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:65
#, fuzzy
msgid "This command generates a Maven structure importing the RESTEasy/JAX-RS, Jackson, and the Elasticsearch low level client extensions.  After this, the `quarkus-elasticsearch-rest-client` extension has been added to your `pom.xml`."
msgstr "このコマンドは、RESTEasy/JAX-RS、Jackson、Elasticsearch低レベルクライアント拡張をインポートするMaven構造体を生成します。この後、 `quarkus-elasticsearch-rest-client` エクステンションが `pom.xml` ."

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:67
#, fuzzy
msgid "If you want to use the high level client instead, replace the `elasticsearch-rest-client` extension by the `elasticsearch-rest-high-level-client` extension."
msgstr "代わりに高レベルクライアントを使いたい場合は、 `elasticsearch-rest-client` のエクステンションを `elasticsearch-rest-high-level-client` のエクステンションに置き換えてください。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:72
#, fuzzy
msgid "We use the `resteasy-jackson` extension here and not the JSON-B variant because we will use the Vert.x `JsonObject` helper to serialize/deserialize our objects to/from Elasticsearch and it uses Jackson under the hood."
msgstr "ここでは JSON-B バリアントではなく `resteasy-jackson` 拡張を使用しています。これは Vert.x `JsonObject` ヘルパーを使用して Elasticsearch との間でオブジェクトをシリアライズ/デシリアライズし、Jackson を使用するからです。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:75
#, fuzzy
msgid "If you don’t want to generate a new project, add the following dependencies to your pom.xml."
msgstr "新しいプロジェクトを生成したくない場合は、以下の依存関係を pom.xml に追加してください。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:77
#, fuzzy
msgid "For the Elasticsearch low level client, add:"
msgstr "Elasticsearchの低レベルクライアントの場合は、追加します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:84
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:87
#, fuzzy
msgid "For the Elasticsearch high level client, add:"
msgstr "Elasticsearchの高レベルクライアントの場合は、追加します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:94
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-high-level-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:96
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "初めてのJSON RESTサービスの作成"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:99
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "この例では、果物のリストを管理するアプリケーションを作成します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:101
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "まず、以下のように `Fruit` Bean を作成してみましょう。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:105
#: upstream/_guides/elasticsearch.adoc:121
#, no-wrap
msgid "package org.acme.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:111
#, no-wrap
msgid ""
"public class Fruit {\n"
"    public String id;\n"
"    public String name;\n"
"    public String color;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:114
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "派手なことは何もありません。注意すべき重要なことは、デフォルトのコンストラクタを持つことはJSONシリアライズレイヤーで必須であるということです。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:117
#, fuzzy
msgid "Now create a `org.acme.elasticsearch.FruitService` that will be the business layer of our application and store/load the fruits from the Elasticsearch instance.  Here we use the low level client, if you want to use the high level client instead follow the instructions in the link:#using-the-high-level-rest-client[Using the High Level REST Client] paragraph instead."
msgstr "ここで、アプリケーションのビジネス層となる `org.acme.elasticsearch.FruitService` を作成し、Elasticsearch インスタンスからの果実を保存/ロードします。ここでは低レベルのクライアントを使用していますが、高レベルのクライアントを使用したい場合は、高レベル link:#using-the-high-level-rest-client[のRESTクライアントの使用] パラグラフの指示に従ってください。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:125
#: upstream/_guides/elasticsearch.adoc:350
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:128
#: upstream/_guides/elasticsearch.adoc:353
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:133
#, no-wrap
msgid ""
"import org.apache.http.util.EntityUtils;\n"
"import org.elasticsearch.client.Request;\n"
"import org.elasticsearch.client.Response;\n"
"import org.elasticsearch.client.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:136
#, no-wrap
msgid ""
"import io.vertx.core.json.JsonArray;\n"
"import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:141
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestClient restClient; //<1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:149
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        Request request = new Request(\n"
"                \"PUT\",\n"
"                \"/fruits/_doc/\" + fruit.id); //<2>\n"
"        request.setJsonEntity(JsonObject.mapFrom(fruit).toString()); //<3>\n"
"        restClient.performRequest(request); //<4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:159
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_doc/\" + id);\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
"        JsonObject json = new JsonObject(responseBody); //<5>\n"
"        return json.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:163
#: upstream/_guides/elasticsearch.adoc:395
#, no-wrap
msgid ""
"    public List<Fruit> searchByColor(String color) throws IOException {\n"
"        return search(\"color\", color);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:167
#: upstream/_guides/elasticsearch.adoc:399
#, no-wrap
msgid ""
"    public List<Fruit> searchByName(String name) throws IOException {\n"
"        return search(\"name\", name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:179
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_search\");\n"
"        //construct a JSON query like {\"query\": {\"match\": {\"<term>\": \"<match\"}}\n"
"        JsonObject termJson = new JsonObject().put(term, match);\n"
"        JsonObject matchJson = new JsonObject().put(\"match\", termJson);\n"
"        JsonObject queryJson = new JsonObject().put(\"query\", matchJson);\n"
"        request.setJsonEntity(queryJson.encode());\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:191
#, no-wrap
msgid ""
"        JsonObject json = new JsonObject(responseBody);\n"
"        JsonArray hits = json.getJsonObject(\"hits\").getJsonArray(\"hits\");\n"
"        List<Fruit> results = new ArrayList<>(hits.size());\n"
"        for (int i = 0; i < hits.size(); i++) {\n"
"            JsonObject hit = hits.getJsonObject(i);\n"
"            Fruit fruit = hit.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"            results.add(fruit);\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:194
#: upstream/_guides/elasticsearch.adoc:420
#, fuzzy
msgid "In this example you can note the following:"
msgstr "この例では、次のように注意することができます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:196
#, fuzzy
msgid "We inject an Elasticsearch low level `RestClient` into our service."
msgstr "Elasticsearch の低レベル `RestClient` をサービスに注入しています。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:197
#, fuzzy
msgid "We create an Elasticsearch request."
msgstr "Elasticsearchリクエストを作成します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:198
#: upstream/_guides/elasticsearch.adoc:424
#, fuzzy
msgid "We use Vert.x `JsonObject` to serialize the object before sending it to Elasticsearch, you can use whatever you want to serialize to JSON."
msgstr "Elasticsearchに送信する前にオブジェクトをシリアライズするためにVert.x `JsonObject` を使用していますが、JSONにシリアライズしたいものは何でも使えます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:199
#, fuzzy
msgid "We send the request (indexing request here) to Elasticsearch."
msgstr "Elasticsearchにリクエスト(ここではインデックス作成のリクエスト)を送信します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:200
#: upstream/_guides/elasticsearch.adoc:426
#, fuzzy
msgid "In order to deserialize the object from Elasticsearch, we again use Vert.x `JsonObject`."
msgstr "Elasticsearchからオブジェクトをデシリアライズするために、再びVert.x `JsonObject` ."

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:202
#, fuzzy
msgid "Now, edit the `org.acme.elasticsearch.FruitResource` class as follows:"
msgstr "ここで、 `org.acme.elasticsearch.FruitResource` クラスを以下のように編集します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:209
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
"    @Inject\n"
"    FruitService fruitService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:218
#, no-wrap
msgid ""
"    @POST\n"
"    public Response index(Fruit fruit) throws IOException {\n"
"        if (fruit.id == null) {\n"
"            fruit.id = UUID.randomUUID().toString();\n"
"        }\n"
"        fruitService.index(fruit);\n"
"        return Response.created(URI.create(\"/fruits/\" + fruit.id)).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:224
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{id}\")\n"
"    public Fruit get(@PathParam(\"id\") String id) throws IOException {\n"
"        return fruitService.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:236
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/search\")\n"
"    public List<Fruit> search(@QueryParam(\"name\") String name, @QueryParam(\"color\") String color) throws IOException {\n"
"        if (name != null) {\n"
"            return fruitService.searchByName(name);\n"
"        } else if (color != null) {\n"
"            return fruitService.searchByColor(color);\n"
"        } else {\n"
"            throw new BadRequestException(\"Should provide name or color query parameter\");\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:238
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:241
#, fuzzy
msgid "The implementation is pretty straightforward and you just need to define your endpoints using the JAX-RS annotations and use the `FruitService` to list/add new fruits."
msgstr "実装はとても簡単で、JAX-RSのアノテーションを使ってエンドポイントを定義し、 `FruitService` を使って新しいフルーツをリストアップ/追加するだけです。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:242
#, fuzzy, no-wrap
msgid "Configuring Elasticsearch"
msgstr "Elasticsearchの設定"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:244
#, fuzzy
msgid "The main property to configure is the URL to connect to the Elasticsearch cluster."
msgstr "設定する主なプロパティーは、Elasticsearchクラスターに接続するためのURLです。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:246
#, fuzzy
msgid "A sample configuration should look like this:"
msgstr "設定のサンプルは以下のようになります。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:251
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a cluster of two nodes\n"
"quarkus.elasticsearch.hosts = elasticsearch1:9200,elasticsearch2:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:254
#, fuzzy
msgid "In this example, we are using a single instance running on localhost:"
msgstr "この例では、ローカルホスト上で実行されている単一のインスタンスを使用しています。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:259
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a single instance on localhost\n"
"quarkus.elasticsearch.hosts = localhost:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:262
#, fuzzy
msgid "If you need a more advanced configuration, you can find the comprehensive list of supported configuration properties at the end of this guide."
msgstr "より高度な設定が必要な場合は、このガイドの最後にサポートされている設定プロパティーの包括的なリストがあります。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:263
#, fuzzy, no-wrap
msgid "Programmatically Configuring Elasticsearch"
msgstr "Elasticsearchの設定"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:265
#, fuzzy
msgid "On top of the parametric configuration, you can also programmatically apply additional configuration to the client by implementing a `RestClientBuilder.HttpClientConfigCallback` and annotating it with `ElasticsearchClientConfig`. You may provide multiple implementations and configuration provided by each implementation will be applied in a randomly ordered cascading manner."
msgstr "パラメトリックな設定に加えて、 `RestClientBuilder.HttpClientConfigCallback` を実装して `ElasticsearchClientConfig` とアノテーションを付けることで、追加の設定をプログラムでクライアントに適用することもできます。複数の実装を提供することができ、各実装で提供された設定はランダムに順序付けられたカスケード方式で適用されます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:267
#, fuzzy
msgid "For example, when accessing an Elasticsearch cluster that is set up for TLS on the HTTP layer, the client needs to trust the certificate that Elasticsearch is using. The following is an example of setting up the client to trust the CA that has signed the certificate that Elasticsearch is using, when that CA certificate is available in a PKCS#12 keystore."
msgstr "例えば、HTTPレイヤでTLS用に設定されているElasticsearchクラスタにアクセスする場合、クライアントはElasticsearchが使用している証明書を信頼する必要があります。以下は、Elasticsearchが使用している証明書に署名したCAの証明書がPKCS#12のキーストアで利用可能な場合に、クライアントがそのCAの証明書を信頼するように設定する例です。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:275
#, no-wrap
msgid ""
"import io.quarkus.elasticsearch.restclient.lowlevel.ElasticsearchClientConfig;\n"
"import org.apache.http.impl.nio.client.HttpAsyncClientBuilder;\n"
"import org.apache.http.ssl.SSLContextBuilder;\n"
"import org.apache.http.ssl.SSLContexts;\n"
"import org.elasticsearch.client.RestClientBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:283
#, no-wrap
msgid ""
"import javax.enterprise.context.Dependent;\n"
"import javax.net.ssl.SSLContext;\n"
"import java.io.InputStream;\n"
"import java.nio.file.Files;\n"
"import java.nio.file.Path;\n"
"import java.nio.file.Paths;\n"
"import java.security.KeyStore;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:303
#, no-wrap
msgid ""
"@ElasticsearchClientConfig\n"
"@Dependent\n"
"public class SSLContextConfigurator implements RestClientBuilder.HttpClientConfigCallback {\n"
"    @Override\n"
"    public HttpAsyncClientBuilder customizeHttpClient(HttpAsyncClientBuilder httpClientBuilder) {\n"
"        try {\n"
"            String keyStorePass = \"password-for-keystore\";\n"
"            Path trustStorePath = Paths.get(\"/path/to/truststore.p12\");\n"
"            KeyStore truststore = KeyStore.getInstance(\"pkcs12\");\n"
"            try (InputStream is = Files.newInputStream(trustStorePath)) {\n"
"                truststore.load(is, keyStorePass.toCharArray());\n"
"            }\n"
"            SSLContextBuilder sslBuilder = SSLContexts.custom()\n"
"                    .loadTrustMaterial(truststore, null);\n"
"            SSLContext sslContext = sslBuilder.build();\n"
"            httpClientBuilder.setSSLContext(sslContext);\n"
"        } catch (Exception e) {\n"
"            throw new RuntimeException(e);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:307
#, no-wrap
msgid ""
"        return httpClientBuilder;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:309
#, fuzzy
msgid "See https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/_encrypted_communication.html[Elasticsearch documentation] for more details on this particular example."
msgstr "この特定の例の詳細については、 link:https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/_encrypted_communication.html[Elasticsearchのドキュメントを]参照してください。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:310
#, fuzzy, no-wrap
msgid "Running an Elasticsearch cluster"
msgstr "Elasticsearchクラスターの実行"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:314
#, fuzzy
msgid "As by default, the Elasticsearch client is configured to access a local Elasticsearch cluster on port 9200 (the default Elasticsearch port), if you have a local running instance on this port, there is nothing more to do before being able to test it!"
msgstr "デフォルトでは、Elasticsearchクライアントはポート9200(Elasticsearchのデフォルトポート)でローカルのElasticsearchクラスターにアクセスするように設定されているので、このポートでローカルで実行中のインスタンスを持っている場合、テストできるようになるまでにやるべきことは何もありません!"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:316
#, fuzzy
msgid "If you want to use Docker to run an Elasticsearch instance, you can use the following command to launch one:"
msgstr "Dockerを使ってElasticsearchインスタンスを起動したい場合は、以下のコマンドで起動します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:321
#, no-wrap
msgid ""
"docker run --name elasticsearch  -e \"discovery.type=single-node\" -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\\\n"
"       --rm -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch-oss:{elasticsearch-version}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:323
#, fuzzy, no-wrap
msgid "Creating a frontend"
msgstr "フロントエンドの作成"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:328
#, fuzzy
msgid "Now let's add a simple web page to interact with our `FruitResource`.  Quarkus automatically serves static resources located under the `META-INF/resources` directory.  In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this {quickstarts-blob-url}/elasticsearch-low-level-client-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr "ここで、 `FruitResource` .Quarkusと対話するための簡単なウェブページを追加してみましょう。Quarkusは、 `META-INF/resources` ディレクトリーの下にある静的なリソースを自動的に提供します。 `src/main/resources/META-INF/resources` ディレクトリーに、この {quickstarts-blob-url}/elasticsearch-low-level-client-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html]ファイルの内容を含む `fruits.html` ファイルを追加します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:330
#, fuzzy
msgid "You can now interact with your REST service:"
msgstr "これで、REST サービスと対話できるようになりました。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:332
#, fuzzy
msgid "start Quarkus with `./mvnw quarkus:dev`"
msgstr "Quarkusを起動する `./mvnw quarkus:dev`"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:333
#, fuzzy
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "ブラウザを開く `http://localhost:8080/fruits.html`"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:334
#, fuzzy
msgid "add new fruits to the list via the 'Add fruit' form"
msgstr "フルーツを追加」フォームで新しいフルーツをリストに追加します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:335
#, fuzzy
msgid "search for fruits by name or color via the 'Search Fruit' form"
msgstr "名前や色で果物を検索することができます。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:336
#, fuzzy, no-wrap
msgid "Using the High Level REST Client"
msgstr "高レベルRESTクライアントの使用"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:339
#, fuzzy
msgid "Quarkus provides support for the Elasticsearch High Level REST Client but keep in mind that it comes with some caveats:"
msgstr "QuarkusはElasticsearch High Level REST Clientのサポートを提供していますが、いくつかの注意点があることを覚えておいてください。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:341
#, fuzzy
msgid "It drags a lot of dependencies - especially Lucene -, which doesn't fit well with Quarkus philosophy. The Elasticsearch team is aware of this issue and it might improve sometime in the future."
msgstr "これは多くの依存関係(特に Lucene)を引きずっており、Quarkus の哲学にはあまり合っていません。Elasticsearch チームはこの問題を認識しており、将来的には改善されるかもしれません。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:342
#, fuzzy
msgid "It is tied to a certain version of the Elasticsearch server: you cannot use a High Level REST Client version 7 to access a server version 6."
msgstr "これはElasticsearchサーバーの特定のバージョンに縛られています: 高レベルRESTクライアントのバージョン7を使用してサーバーのバージョン6にアクセスすることはできません。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:344
#, fuzzy
msgid "Here is a version of the `FruitService` using the high level client instead of the low level one:"
msgstr "ここでは、低レベルのクライアントの代わりに高レベルのクライアントを使用した `FruitService` のバージョンを示します。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:366
#, no-wrap
msgid ""
"import org.elasticsearch.action.get.GetRequest;\n"
"import org.elasticsearch.action.get.GetResponse;\n"
"import org.elasticsearch.action.index.IndexRequest;\n"
"import org.elasticsearch.action.search.SearchRequest;\n"
"import org.elasticsearch.action.search.SearchResponse;\n"
"import org.elasticsearch.client.RequestOptions;\n"
"import org.elasticsearch.client.RestHighLevelClient;\n"
"import org.elasticsearch.common.xcontent.XContentType;\n"
"import org.elasticsearch.index.query.QueryBuilders;\n"
"import org.elasticsearch.search.SearchHit;\n"
"import org.elasticsearch.search.SearchHits;\n"
"import org.elasticsearch.search.builder.SearchSourceBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:368
#, no-wrap
msgid "import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:373
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestHighLevelClient restHighLevelClient; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:380
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        IndexRequest request = new IndexRequest(\"fruits\"); // <2>\n"
"        request.id(fruit.id);\n"
"        request.source(JsonObject.mapFrom(fruit).toString(), XContentType.JSON); // <3>\n"
"        restHighLevelClient.index(request, RequestOptions.DEFAULT); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:391
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        GetRequest getRequest = new GetRequest(\"fruits\", id);\n"
"        GetResponse getResponse = restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);\n"
"        if (getResponse.isExists()) {\n"
"            String sourceAsString = getResponse.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString); // <5>\n"
"            return json.mapTo(Fruit.class);\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:405
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        SearchRequest searchRequest = new SearchRequest(\"fruits\");\n"
"        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\n"
"        searchSourceBuilder.query(QueryBuilders.matchQuery(term, match));\n"
"        searchRequest.source(searchSourceBuilder);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:417
#, no-wrap
msgid ""
"        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);\n"
"        SearchHits hits = searchResponse.getHits();\n"
"        List<Fruit> results = new ArrayList<>(hits.getHits().length);\n"
"        for (SearchHit hit : hits.getHits()) {\n"
"            String sourceAsString = hit.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString);\n"
"            results.add(json.mapTo(Fruit.class));\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:422
#, fuzzy
msgid "We inject an Elasticsearch `RestHighLevelClient` inside the service."
msgstr "サービス内部にElasticsearch `RestHighLevelClient` を注入しています。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:423
#, fuzzy
msgid "We create an Elasticsearch index request."
msgstr "Elasticsearchのインデックスリクエストを作成します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:425
#, fuzzy
msgid "We send the request to Elasticsearch."
msgstr "Elasticsearchにリクエストを送信します。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:427
#, fuzzy, no-wrap
msgid "Hibernate Search Elasticsearch"
msgstr "Hibernate検索 Elasticsearch"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:430
#, fuzzy
msgid "Quarkus supports Hibernate Search with Elasticsearch via the `hibernate-search-orm-elasticsearch` extension."
msgstr "Quarkusは、 `hibernate-search-orm-elasticsearch` エクステンションを介してElasticsearchでHibernate Searchをサポートしています。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:432
#, fuzzy
msgid "Hibernate Search Elasticsearch allows to synchronize your JPA entities to an Elasticsearch cluster and offers a way to query your Elasticsearch cluster using the Hibernate Search API."
msgstr "Hibernate Search Elasticsearchでは、JPAエンティティーをElasticsearchクラスターに同期させることができ、Hibernate Search APIを使ってElasticsearchクラスターにクエリを発行する方法を提供しています。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:434
#, fuzzy
msgid "If you're interested in it, you can read the link:hibernate-search-orm-elasticsearch[Hibernate Search with Elasticsearch guide]."
msgstr "興味のある方は、 link:hibernate-search-orm-elasticsearch[Hibernate Search with Elasticsearchのガイド] を読んでみてください。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:435
#, fuzzy, no-wrap
msgid "Cluster Health Check"
msgstr "クラスターヘルスチェック"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:439
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, both the extension will automatically add a readiness health check to validate the health of the cluster."
msgstr "`quarkus-smallrye-health` エクステンションを使用している場合、どちらのエクステンションも、クラスターの健全性を検証するための準備状態の健全性チェックを自動的に追加します。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:442
#, fuzzy
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the cluster status.  It uses the cluster health endpoint, the check will be down if the status of the cluster is **red**, or the cluster is not available."
msgstr "そのため、アプリケーションの `/q/health/ready` エンドポイントにアクセスすると、クラスターの状態に関する情報を得ることができます。これはクラスターヘルスエンドポイントを使用しており、クラスターの状態が *赤で* あったり、クラスターが利用できなかったりするとチェックが落ちます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:444
#, fuzzy
msgid "This behavior can be disabled by setting the `quarkus.elasticsearch.health.enabled` property to `false` in your `application.properties`."
msgstr "この動作は、 `application.properties` の `quarkus.elasticsearch.health.enabled` プロパティーを `false` に設定することで無効にできます。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:445
#, no-wrap
msgid "Building a native executable"
msgstr "ネイティブ実行可能ファイルの構築"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:448
#, fuzzy
msgid "You can use both clients in a native executable."
msgstr "ネイティブ実行ファイルで両方のクライアントを使用することができます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:450
#, fuzzy
msgid "You can build a native executable with the usual command `./mvnw package -Pnative`."
msgstr "ネイティブな実行ファイルは、通常のコマンド `./mvnw package -Pnative` でビルドできます。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:452
#, fuzzy
msgid "Running it is as simple as executing `./target/elasticsearch-low-level-client-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "実行は `./target/elasticsearch-low-level-client-quickstart-1.0-SNAPSHOT-runner` を実行するだけで簡単です。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:454
#, fuzzy
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "その後、ブラウザを `http://localhost:8080/fruits.html` とアプリケーションを使用します。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:455
#, no-wrap
msgid "Conclusion"
msgstr "まとめ"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:458
#, fuzzy
msgid "Accessing an Elasticsearch cluster from a low level or a high level client is easy with Quarkus as it provides easy configuration, CDI integration and native support for it."
msgstr "Quarkusでは、簡単な設定、CDIの統合、ネイティブサポートが提供されているため、低レベルまたは高レベルのクライアントからElasticsearchクラスターにアクセスすることが簡単にできます。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:459
#, no-wrap
msgid "Configuration Reference"
msgstr "設定リファレンス"
