# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-07-30 08:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, fuzzy, no-wrap
msgid "rtoyonag"
msgstr "rtoyonag"

#. type: YAML Front Matter: date
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, fuzzy, no-wrap
msgid "2023-07-24"
msgstr "2023-07-24"

#. type: YAML Front Matter: layout
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, no-wrap
msgid "post"
msgstr "post"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, fuzzy, no-wrap
msgid "Learn more about how you can profile and monitor Quarkus native executables with JFR."
msgstr "JFRを使用したQuarkusネイティブ実行可能ファイルのプロファイリングと監視方法については、こちらをご覧ください。"

#. type: YAML Front Matter: tags
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, fuzzy, no-wrap
msgid "development-tips native"
msgstr "開発のヒント ネイティブ"

#. type: YAML Front Matter: title
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:1
#, fuzzy, no-wrap
msgid "Use JFR to profile and monitor native executables"
msgstr "JFRを使用してネイティブ実行可能ファイルのプロファイルと監視を行う"

#. type: Plain text
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:13
#, fuzzy
msgid "Quarkus native executables offer many benefits such as even faster start-up time and low footprint.  However, one major drawback is that such native binaries can be less observable.  The good news is that you can still use JDK Flight Recorder (JFR) when running your Quarkus applications as native executables."
msgstr "Quarkusのネイティブ実行可能ファイルには、起動時間の短縮やフットプリントの削減など、多くの利点があります。しかし、大きな欠点として、このようなネイティブバイナリは観察しにくいことがあります。Quarkusアプリケーションをネイティブ実行可能ファイルとして実行する場合でも、JDK Flight Recorder（JFR）を使用できます。"

#. type: Plain text
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:16
#, fuzzy
msgid "Native executable JFR is still limited compared to regular JFR in the JVM.  However, major improvements have been made over the past couple of years that make it a very powerful tool to profile and monitor your native executables."
msgstr "ネイティブ実行可能JFRは、JVMの通常のJFRと比べると、まだ制限されている。しかし、ここ2、3年の間に大きな改良が加えられており、ネイティブ実行可能ファイルをプロファイリングしてモニターするための非常に強力なツールになっている。"

#. type: Plain text
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:18
#, fuzzy
msgid "Check out these recent articles to find out more about how you can start using JFR with native executables:"
msgstr "ネイティブ実行ファイルでJFRを使い始める方法については、最近の記事をご覧ください："

#. type: Plain text
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:20
#, fuzzy
msgid "https://developers.redhat.com/articles/2023/06/13/how-monitor-quarkus-native-executables-jfr[How to monitor Quarkus native executables with JFR]"
msgstr "link:https://developers.redhat.com/articles/2023/06/13/how-monitor-quarkus-native-executables-jfr[JFRを使用してQuarkusネイティブ実行可能ファイルを監視する方法]"

#. type: Plain text
#: upstream/_posts/2023-07-24-profile-and-monitor-native-executables-with-jfr.adoc:20
#, fuzzy
msgid "https://developers.redhat.com/articles/2023/06/13/improvements-native-image-jfr-support-graalvm-jdk-20[Improvements to Native Image JFR support in GraalVM for JDK 20]"
msgstr "link:https://developers.redhat.com/articles/2023/06/13/improvements-native-image-jfr-support-graalvm-jdk-20[JDK20用GraalVMにおけるネイティブ・イメージJFRサポートの改善]"
