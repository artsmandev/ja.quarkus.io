# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-01 01:08+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:1
#, no-wrap
msgid "maxandersen"
msgstr "maxandersen"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:1
#, fuzzy, no-wrap
msgid "2020-05-05"
msgstr "2020-05-05"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:1
#, no-wrap
msgid "post"
msgstr "post"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:1
#, fuzzy, no-wrap
msgid "development-tips"
msgstr "開発秘話"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:1
#, fuzzy, no-wrap
msgid "Introducing Command Mode"
msgstr "コマンドモードの紹介"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:10
#, fuzzy
msgid "Ever wanted to use Quarkus awesome API's and full feature set from a command line application ?"
msgstr "Quarkusの素晴らしいAPIと全機能をコマンドラインアプリケーションから使いたいと思ったことはありませんか？"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:12
#, fuzzy
msgid "Did you need to run a scheduled batch job now and then and not wanting to embed it into your main Quarkus built service ?"
msgstr "スケジュールされたバッチジョブを実行する必要があり、Quarkusで構築されたメインのサービスにそれを組み込みたくないということでしょうか？"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:14
#, fuzzy
msgid "image:https://i.imgflip.com/3xwzsh.jpg[]"
msgstr "image:https://i.imgflip.com/3xwzsh.jpg[alt=\"3xwzsh\"]"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:16
#, fuzzy
msgid "Quarkus has thus far been used to write applications that runs via an endpoint i.e. long running webserver via http or short-lived function in a serverless environment."
msgstr "Quarkusはこれまで、エンドポイントを介して動作するアプリケーション、つまりhttp経由で長時間動作するWebサーバーや、サーバーレス環境での短時間動作する機能を記述するために使用されてきました。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:18
#, fuzzy
msgid "In Quarkus 1.4 command mode lets you write apps that run without an endpoint and optionally exits immediately."
msgstr "Quarkus 1.4のコマンドモードでは、エンドポイントなしで実行され、オプションですぐに終了するアプリを書くことができます。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:20
#, fuzzy
msgid "This enables you to use Quarkus for writing a whole new style of applications - think command line clients (CLI), batch scripts, console apps, etc."
msgstr "これにより、Quarkusを使用して、コマンドラインクライアント（CLI）、バッチスクリプト、コンソールアプリなど、まったく新しいスタイルのアプリケーションを作成することができます。"

#. type: Title ==
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:21
#, fuzzy, no-wrap
msgid "How to use it"
msgstr "使用方法"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:24
#, fuzzy
msgid "Below is a simple `GreetingMain` class which uses the traditional `GreetingService` from all our quickstarts."
msgstr "以下は、すべてのクイックスタートで使用されている従来の `GreetingService` を使用したシンプルな `GreetingMain` クラスです。"

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:29
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:34
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class GreetingMain implements QuarkusApplication {\n"
"  @Inject // <.>\n"
"  GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:37
#, no-wrap
msgid ""
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:43
#, no-wrap
msgid ""
"    if (args.length>0) {\n"
"      System.out.println(service.greeting(arg[0]));\n"
"    } else {\n"
"      System.out.println(service.greeting(\"\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:47
#, no-wrap
msgid ""
"    return 0;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:50
#, fuzzy
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes. If you would like to access request scoped beans you can annotate the `run` method with `@ActivateRequestContext`. This is useful to write or reuse your existing business logic using i.e. Hibernate Panache Entity beans query methods."
msgstr "`@QuarkusMain` アノテーションは、これがメインエントリーポイントであることをQuarkusに伝えます。 <.> `run` メソッドは、Quarkusが起動すると呼び出され、終了するとアプリケーションは終了します。リクエストスコープの Bean にアクセスしたい場合は、 `run` メソッドに `@ActivateRequestContext` のアノテーションを付けることができます。これは、Hibernate Panache Entity Beanのクエリメソッドなどを使用して、既存のビジネスロジックを記述または再利用するのに便利です。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:52
#, fuzzy
msgid "You can add this to a `GreetingMain.java` and compile to a .jar or to full native (using `mvnw package -Dnative`) and when run you get something like:"
msgstr "これを `GreetingMain.java` に追加して、.jar にコンパイルするか、フルネイティブ（ `mvnw package -Dnative` を使用）にコンパイルすると、実行時に次のようなものが得られます："

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:65
#, fuzzy, no-wrap
msgid ""
"```\n"
" ./target/getting-started-command-mode-1.0-SNAPSHOT-runner commando\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) getting-started-command-mode 1.0-SNAPSHOT (powered by Quarkus 999-SNAPSHOT) started in 0.005s.\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) Installed features: [cdi]\n"
"hello commando\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) getting-started-command-mode stopped in 0.000s\n"
"```\n"
msgstr ""
"`./target/getting-started-command-mode-1.0-SNAPSHOT-runner commando\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) getting-started-command-mode 1.0-SNAPSHOT (powered by Quarkus 999-SNAPSHOT) started in 0.005s.\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) Installed features: [cdi]\n"
"hello commando\n"
"2020-04-25 00:14:38,999 INFO  [io.quarkus] (main) getting-started-command-mode stopped in 0.000s`"

#. type: Title ===
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:66
#, fuzzy, no-wrap
msgid "Clean output"
msgstr "クリーン出力"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:69
#, fuzzy
msgid "When working with a cli the default console log output can be verbose. For now the best way to turn that off is by setting the following properties:"
msgstr "cliで作業する場合、デフォルトのコンソールログ出力は冗長であることがあります。今のところ、これをオフにする最良の方法は、以下のプロパティを設定することです："

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:75
#, fuzzy
msgid "``` quarkus.log.level=SEVERE quarkus.hibernate-orm.log.sql=false quarkus.banner.enabled=false ```"
msgstr "``"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:77
#, fuzzy
msgid "These could be set in a custom profile called `cli` by adding a `%cli.` prefix."
msgstr "これらは、 `%cli.` のプレフィックスを追加することで、 `cli` というカスタムプロファイルに設定することができます。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:79
#, fuzzy
msgid "This has some issues and possible solution are being discussed in issue https://github.com/quarkusio/quarkus/issues/8871[#8871]."
msgstr "これにはいくつかの問題があり、解決策については課題 link:https://github.com/quarkusio/quarkus/issues/8871[番号8871で] 検討されています。"

#. type: Title ===
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:80
#, no-wrap
msgid "Development mode"
msgstr "開発モード"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:83
#, fuzzy
msgid "Command mode works with `quarkus:dev` aka. dev-mode."
msgstr "コマンドモードは、 `quarkus:dev` aka.dev-modeで動作します。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:85
#, fuzzy
msgid "When you run with `mvn quarkus:dev` you can add `-Dquarkus.args=yourvalue` as arguments you want to pass into the command line."
msgstr "`mvn quarkus:dev` で実行する場合、コマンドラインに渡したい引数として `-Dquarkus.args=yourvalue` を追加することができます。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:87
#, fuzzy
msgid "`quarkusargs` will be split on whitespace and honors escaped quotes to. Thus with `mvn quarkus:dev -Dquarkus.args=\"foo bar \\\"baz qux\\\"\"` the app will start and after end look like this:"
msgstr "`quarkusargs` は空白で分割され、引用符でエスケープされます。したがって、 、アプリは次のように開始され、終了後は次のようになります： `mvn quarkus:dev -Dquarkus.args=\"foo bar \\\"baz qux\\\"\"` "

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:95
#, no-wrap
msgid ""
"foo\n"
"bar\n"
"baz qux\n"
"Quarkus application exited with code 0\n"
"Press Enter to restart or Ctrl + C to quit\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:98
#, fuzzy
msgid "You can now Press Enter multiple times to force a rerun and if you edited source code Press Enter will trigger build and then restart with no real overhead."
msgstr "また、ソースコードを編集した場合、Enterキーを押すことでビルドが開始され、再実行されるため、オーバーヘッドが発生しません。"

#. type: Title ===
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:99
#, fuzzy, no-wrap
msgid "Main methods"
msgstr "主なメソッド"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:102
#, fuzzy
msgid "As part of adding command mode via a `@QuarkusMain` annotated class you can now have your own `static void main()` method. Below snippet is the minimum to run Quarkus from a main method."
msgstr "`@QuarkusMain` アノテーションクラスを使ったコマンドモードの追加に伴い、独自の `static void main()` メソッドを持つことができるようになりました。以下のスニペットは、メインメソッドからQuarkusを実行するための最小限のものです。"

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:108
#, no-wrap
msgid ""
"static void main(String ...args) {\n"
"    Quarkus.run(args);\n"
"} \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:111
#, fuzzy
msgid "To use it with the above `@QuarksMain` class would look something like this:"
msgstr "上記 `@QuarksMain` のクラスで使用すると、次のようになります："

#. type: delimited block -
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:117
#, no-wrap
msgid ""
"static void main(String ...args) {\n"
"    Quarkus.run(GreetingMain.class, args);\n"
"} \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:120
#, fuzzy
msgid "That is all. This allows you to not only customize start/stop of your Quarks app and what many asked for: ability to launch/debug a Quarkus app directly from an IDE."
msgstr "以上です。これにより、Quarkusアプリの起動/停止をカスタマイズできるだけでなく、多くの人が求めていた、IDEからQuarkusアプリを直接起動/デバッグできるようになりました。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:122
#, fuzzy
msgid "You can see a fully working example of these classes in the https://github.com/quarkusio/quarkus-quickstarts/tree/development/getting-started-command-mode[command-mode quickstart]."
msgstr "これらのクラスの完全に動作する例は、 link:https://github.com/quarkusio/quarkus-quickstarts/tree/development/getting-started-command-mode[コマンドモードのクイックスタートで] 見ることができます。"

#. type: Title ===
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:123
#, fuzzy, no-wrap
msgid "Minimal CLI App"
msgstr "ミニマムCLIアプリ"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:126
#, fuzzy
msgid "It is worth noticing that your cli app can still be serving out an endpoint - in fact, in the default app as we just made the rest endpoint is still starting and running. You just don't notice it. Quarkus is that fast."
msgstr "実際、先ほど作成したデフォルトのアプリでは、残りのエンドポイントはまだ起動し、実行されています。ただ、それに気づかないだけなのです。Quarkusはそれほどまでに高速なのです。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:128
#, fuzzy
msgid "In case you truly want a minimal extension you remove the `quarkus-resteasy` extension in your `pom.xml` and put `arc` instead."
msgstr "本当に最小限のエクステンションにしたい場合は、 `pom.xml` の `quarkus-resteasy` のエクステンションを削除し、代わりに `arc` を入れてください。"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:130
#, fuzzy
msgid "Then nothing else than your Quarkus main class will be run."
msgstr "そうすると、Quarkusのメインクラス以外は実行されません。"

#. type: Title ===
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:131
#, fuzzy, no-wrap
msgid "What is next ? "
msgstr "次は何をするのですか？"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:134
#, fuzzy
msgid "You tell us! What would you like to do with a command app with Quarkus ?"
msgstr "教えてください！Quarkusを使ったコマンドアプリで、どんなことをしたいですか？"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:136
#, fuzzy
msgid "For now we are enjoying writing CLI's but how many others will join us!"
msgstr "今はCLIを書くことを楽しんでいますが、他にどれだけの人が参加してくれるでしょうか！"

#. type: Plain text
#: upstream/_posts/2020-05-05-introducing-command-mode.adoc:137
#, fuzzy
msgid "Let us know of your ideas at https://github.com/quarkusio/quarkus/issues."
msgstr "あなたのアイデアを https://github.com/quarkusio/quarkus/issues で教えてください。"
