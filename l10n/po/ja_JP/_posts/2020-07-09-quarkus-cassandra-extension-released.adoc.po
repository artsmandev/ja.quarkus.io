# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-10-27 20:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:1
#, fuzzy, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:8
#, fuzzy, no-wrap
msgid ""
"layout: post\n"
"title: 'A Shot of Quarkus with a Cassandra Chaser: Time for Faster Microservices'\n"
"date: 2020-07-09\n"
"tags: extension cassandra\n"
"synopsis: With the new Quarkus extension for Apache Cassandra® released in Quarkus 1.6, all it takes is a few lines of code to connect to and access your data stored in Cassandra and you get all of the benefits of Quarkus (fast-startup, low resource utilization, reactive programming).\n"
"author: csplinter\n"
"---\n"
msgstr ""
"layout: post\n"
"title: 'カサンドラチェイサーでQuarkusを一発。マイクロサービスの高速化の時代'\n"
"date: 2020-07-09\n"
"tags: extension cassandra\n"
"synopsis: Quarkus 1.6でリリースされたApache Cassandra®用の新しいQuarkusエクステンションでは、数行のコードでCassandraに保存されているデータに接続してアクセスするだけで、Quarkusのすべての利点(高速起動、低リソース使用率、リアクティブプログラミング)を得ることができます。\n"
"author: csplinter\n"
"---\n"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:11
#, fuzzy
msgid "With the new https://quarkus.io/guides/cassandra[Quarkus extension for Apache Cassandra]® released in Quarkus 1.6, all it takes is a few lines of code to connect to and access your data stored in Cassandra and you get all of the benefits of Quarkus (fast-startup, low resource utilization, reactive programming)."
msgstr "Quarkus 1.6でリリースされた link:https://quarkus.io/guides/cassandra[Apache Cassandra] ® link:https://quarkus.io/guides/cassandra[用の] 新しい link:https://quarkus.io/guides/cassandra[Quarkusエクステンション] では、数行のコードでCassandraに保存されているデータに接続してアクセスするだけで、Quarkusのすべての利点(高速起動、低リソース使用率、リアクティブプログラミング)を得ることができます。"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:13
#, fuzzy
msgid "To enable the extension, add `cassandra-quarkus-client` to your application. You can do this by including the following dependency or by selecting Cassandra client in the https://code.quarkus.io/[project generator]."
msgstr "エクステンションを有効にするには、 `cassandra-quarkus-client` をアプリケーションに追加します。これは、以下の依存関係を含めるか、 link:https://code.quarkus.io/[プロジェクト・ジェネレーター] でCassandraクライアントを選択することで行うことができます。"

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:22
#, no-wrap
msgid ""
"# the version at time of writing is 1.0.0-alpha3\n"
"<dependency>\n"
"  <groupId>com.datastax.oss.quarkus</groupId>\n"
"  <artifactId>cassandra-quarkus-client</artifactId>\n"
"  <version>${cassandra-quarkus.version}</version>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:25
#, fuzzy
msgid "The most common database connection settings can be configured directly in an `application.properties` file on the classpath, see below for an example. All of the settings and features of the https://docs.datastax.com/en/developer/java-driver/latest[DataStax Java driver for Cassandra] are available to you and the https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/[advanced driver settings] can be placed in an `application.conf` file on the classpath."
msgstr "最も一般的なデータベース接続設定は、クラスパス上の `application.properties` ファイルに直接設定できます。 link:https://docs.datastax.com/en/developer/java-driver/latest[Cassandra用DataStax Javaドライバー] の設定と機能はすべて利用可能で、 link:https://docs.datastax.com/en/developer/java-driver/latest/manual/core/configuration/reference/[高度なドライバー設定は] クラスパス上の `application.conf` ファイルに配置できます。"

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:31
#, no-wrap
msgid ""
"# Connecting to DataStax Astra astra.datastax.com\n"
"# if specified, contact-points and local-datacenter are not needed\n"
"quarkus.cassandra.cloud.secure-connect-bundle=/path/to/secure-connect-bundle.zip\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:36
#, no-wrap
msgid ""
"# Connection details\n"
"quarkus.cassandra.contact-points=127.0.0.1:9042\n"
"quarkus.cassandra.local-datacenter=dc1\n"
"quarkus.cassandra.keyspace=<your keyspace>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:40
#, no-wrap
msgid ""
"# Authentication\n"
"quarkus.cassandra.auth.username=<your username>\n"
"quarkus.cassandra.auth.password=<your password>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:43
#, fuzzy
msgid "Once the database connection is configured, simply inject the https://www.javadoc.io/static/com.datastax.oss.quarkus/cassandra-quarkus-client/1.0.0-alpha1/com/datastax/oss/quarkus/runtime/api/session/QuarkusCqlSession.html[`QuarkusCqlSession`] in your application to get started. For seamless integration with https://quarkus.io/guides/getting-started-reactive[reactive applications], there is an `executeReactive` method on the `QuarkusCqlSession` that exposes Mutiny-compatible reactive execution methods and direct retrieval of Mutiny types."
msgstr "データベース接続が設定されたら、単に link:https://www.javadoc.io/static/com.datastax.oss.quarkus/cassandra-quarkus-client/1.0.0-alpha1/com/datastax/oss/quarkus/runtime/api/session/QuarkusCqlSession.html[`QuarkusCqlSession`] をアプリケーションに追加することで開始することができます。 link:https://quarkus.io/guides/getting-started-reactive[リアクティブアプリケーション] `QuarkusCqlSession` link:https://quarkus.io/guides/getting-started-reactive[] とのシームレスな統合のために、Mutiny互換のリアクティブ実行メソッドとMutiny型の直接取得を公開している `executeReactive` メソッドがあります。"

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:48
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:86
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class ProductService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:51
#, no-wrap
msgid ""
"  @Inject\n"
"  private QuarkusCqlSession session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:57
#, no-wrap
msgid ""
"  public Multi<Product> getAllProducts() {\n"
"    Multi<ReactiveRow> products = session.executeReactive(\"SELECT * from products\");\n"
"    return products.on().item().apply(Product::new);\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:60
#, fuzzy
msgid "Mutiny types are also available when using the Cassandra Java driver's https://docs.datastax.com/en/developer/java-driver/4.7/manual/mapper/[object mapper]. With the Quarkus Cassandra extension, you can easily define your mapped entities and DAOs and then inject your DAOs in your reactive services in just a few lines of code!"
msgstr "Mutinyタイプは、Cassandra Javaドライバーの link:https://docs.datastax.com/en/developer/java-driver/4.7/manual/mapper/[オブジェクトマッパー] を使用する場合にも使用できます。Quarkus Cassandraエクステンションを使用すると、マッピングされたエンティティーとDAOを簡単に定義して、数行のコードでリアクティブサービスにDAOを注入することができます。"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:62
#, fuzzy
msgid "For example, suppose that you have a `Product` entity, a `ProductDao` and a `ProductMapper` with standard CRUD operations, you can expose your DAO as an injectable bean:"
msgstr "例えば、 `Product` エンティティー、 `ProductDao` 、 `ProductMapper` を標準の CRUD 操作で持っているとすると、DAO を注入可能なBeanとして公開することができます。"

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:66
#, no-wrap
msgid "public class ProductDaoProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:68
#, no-wrap
msgid "  private final ProductDao dao;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:74
#, no-wrap
msgid ""
"  @Inject\n"
"  public ProductDaoProducer(QuarkusCqlSession cqlSession) {\n"
"    ProductMapper mapper = new ProductMapperBuilder(cqlSession).build();\n"
"    this.dao = mapper.productDao();\n"
"  }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:78
#, no-wrap
msgid ""
"  @Produces @ApplicationScoped\n"
"  public ProductDao produceProductDao() { return dao; }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:81
#, fuzzy
msgid "… then inject it in a `ProductService` component, as follows:"
msgstr "... そして、以下のように `ProductService` コンポーネントに注入します。"

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:89
#, no-wrap
msgid ""
"  @Inject\n"
"  private ProductDao dao;\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:91
#, no-wrap
msgid "  public Uni<Product> findProduct(String id) { return dao.findById(id); }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:94
#, no-wrap
msgid ""
"  public Multi<Product> getAllProducts() { return dao.findAll(); }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:97
#, fuzzy
msgid "You can retrieve this example and many others in https://github.com/datastax/cassandra-quarkus/blob/main/documentation/src/main/asciidoc/cassandraclient.adoc[the quickstart guide], which includes how to use the Quarkus Cassandra extension in https://quarkus.io/guides/building-native-image[native mode]. For users that are looking to get up and running in minutes with Cassandra, try out the free-tier in https://astra.datastax.com/[DataStax Astra]."
msgstr "link:https://quarkus.io/guides/building-native-image[ネイティブ・モード] でQuarkus Cassandraエクステンションを使用する方法を含む link:https://github.com/datastax/cassandra-quarkus/blob/master/documentation/src/main/asciidoc/cassandraclient.adoc[クイック・スタート・ガイド] で、この例や他の多くの例を取得できます。Cassandraを数分で使いこなせるようになりたいユーザーは、 link:https://astra.datastax.com/[DataStax Astra] のフリーティアを試してみてください。"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:99
#, fuzzy
msgid "We value your feedback so please don't hesitate to open feature requests and bug reports in the https://github.com/datastax/cassandra-quarkus[extensions GitHub repository], ask questions at https://community.datastax.com/[community.datastax.com], or join the https://cassandra.apache.org/community/[Cassandra] and https://quarkus.io/community/[Quarkus] communities."
msgstr "フィードバックを大切にしていますので、遠慮なく機能リクエストやバグレポートを link:https://github.com/datastax/cassandra-quarkus[エクステンションのGitHubリポジトリ] で公開したり、 link:https://community.datastax.com/[community.datastax.com] で質問したり、 link:https://cassandra.apache.org/community/[Cassandra] や link:https://quarkus.io/community/[Quarkusの] コミュニティに参加したりしてください。"

#. type: Plain text
#: upstream/_posts/2020-07-09-quarkus-cassandra-extension-released.adoc:100
#, fuzzy
msgid "Happy subatomic coding!"
msgstr "サブアトミックコーデおめでとうございます"
