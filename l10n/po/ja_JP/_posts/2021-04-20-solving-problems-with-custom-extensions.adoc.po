# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2021-04-20 13:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "---\n"
msgstr "---\n"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:8
#, fuzzy, no-wrap
msgid ""
"layout: post\n"
"title: 'Solving problems with custom Quarkus extensions'\n"
"date: 2021-04-20\n"
"tags: development-tips extensions\n"
"synopsis: If fast startup and live reload weren't enough for you, maybe custom extensions will convince you that you can achieve great things with Quarkus.\n"
"author: gsmet\n"
"---\n"
msgstr ""
"layout: post\n"
"title: 'Quarkusのカスタム拡張機能で問題を解決する'\n"
"date: 2021-04-20\n"
"tags: development-tips extensions\n"
"synopsis: 高速起動やライブリロードだけでは物足りないという方は、カスタム拡張機能を使えば、Quarkusで素晴らしいことができると納得できるかもしれません。\n"
"author: gsmet\n"
"---\n"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:11
#, fuzzy
msgid "From time to time, I see tweets or articles claiming they don't see the point of Quarkus because \"who needs fast startup?\", \"I have plenty of memory\" or \"what is the point of live reload?\"."
msgstr "時折、「誰が高速起動を必要としているのか」、「メモリは十分にある」、「ライブリロードの意味は何か」といった理由で、Quarkusの意味を理解していないと主張するツイートや記事を目にすることがあります。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:14
#, fuzzy
msgid "I could write an article debunking these arguments and explain how the latter makes your development workflow much more efficient and how the former makes the latter possible, even if fast boots are not your thing.  But for the sake of this blog post, let's admit these persons are absolutely right and these are not good reasons to use Quarkus."
msgstr "これらの議論を否定する記事を書き、後者がいかに開発ワークフローをより効率的にするか、また前者がいかに後者を可能にするかを説明することもできますが、たとえファーストブーツが苦手であってもです。しかし、このブログ記事のために、これらの人たちが全く正しく、これらはQuarkusを使用する良い理由ではないと認めましょう。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:16
#, fuzzy
msgid "So now what? Back to `<insert your favorite framework here>`? Not so fast..."
msgstr "さて、どうする？ `&amp;lt;insert your favorite framework here&amp;gt;` に戻る？そうはいきません...。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:19
#, fuzzy
msgid "Quarkus didn't achieve fast startup and low memory footprint by using dark magic or lazy loading tricks but by entirely rethinking the way Java applications are bootstrapped.  The whole point of Quarkus is to move as much work as possible to the build time and this journey made us create a framework to push work at build time that can be leveraged in Quarkus extensions."
msgstr "Quarkusは、黒魔術や遅延ローディングのトリックを使って高速起動と低メモリフットプリントを実現したのではなく、Javaアプリケーションのブートストラップ方法を全面的に再考しました。Quarkusの全体的なポイントは、できるだけ多くの作業をビルド時に移動させることです。この旅によって、ビルド時に作業を進めるためのフレームワークを作成し、Quarkusの拡張機能で活用できるようになりました。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:21
#, fuzzy
msgid "A Quarkus extension? That sounds like a lot of work?"
msgstr "Quarkusの拡張機能？それは大変そうですね？"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:24
#, fuzzy
msgid "No, really, it is not.  You can develop your own extensions very easily and they can solve some out of the ordinary problems in a very simple way."
msgstr "いいえ、そんなことはありません。独自の拡張機能を簡単に開発することができ、通常では考えられないような問題を非常にシンプルな方法で解決することができます。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:26
#, fuzzy
msgid "Last week, one of of our users (hey, Juan!) asked this question on Zulip:"
msgstr "先週、私たちのユーザーの一人（ヘイ、フアン！）が、Zulipでこんな質問をしました。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:28
#, fuzzy
msgid "Hi! I'm trying to understand how to find classes with some criteria and add them to the dependency injection context, for example: I want to find all classes whose name ends with \"MessageTransformer\" and add them to the context, I want to find those classes in an external library, so I can't add annotations to them."
msgstr "こんにちは！いくつかの基準でクラスを見つけ、それらを依存性注入コンテキストに追加する方法を理解しようとしています。名前が \"MessageTransformer \"で終わるすべてのクラスを見つけて、コンテキストに追加したいのですが、それらのクラスは外部のライブラリで見つけたいので、アノテーションを追加することはできません。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:30
#, fuzzy
msgid "Let's see how we can solve this issue by developing a custom extension."
msgstr "この問題を解決するために、カスタムエクステンションを開発する方法を見てみましょう。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:31
#, fuzzy, no-wrap
msgid "Creating the extension"
msgstr "エクステンションの作成"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:34
#, fuzzy
msgid "Creating the extension is as simple as:"
msgstr "エクステンションの作成はとても簡単です。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:38
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:create-extension -DwithoutTests\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:41
#, fuzzy
msgid "It will ask for a `groupId` - let's keep the default `org.acme` - and an extension id - I went for `message-transformers-as-beans`."
msgstr "`groupId` - デフォルトの `org.acme` - と拡張子ID - `message-transformers-as-beans` を要求されます。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:43
#, fuzzy
msgid "Then you can import your new extension into your favorite IDE."
msgstr "その後、お好きなIDEに新しいエクステンションをインポートすることができます。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:44
#, fuzzy, no-wrap
msgid "Structure of the extension"
msgstr "エクステンションの構造"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:48
#, fuzzy
msgid "There is a lot to say about extensions but, in the context of this blog post, we will keep it short.  The extension is composed of three Maven modules:"
msgstr "エクステンションについては、いろいろと言いたいことがありますが、このブログ記事の文脈では、短くまとめます。エクステンションは、3つのMavenモジュールで構成されています。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:50
#, fuzzy
msgid "The parent module - nothing to see here"
msgstr "親モジュール - ここには何もありません"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:51
#, fuzzy
msgid "The deployment module - this is the one of interest for our blog post"
msgstr "デプロイメントモジュール - 今回のブログ記事ではこのモジュールを紹介します。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:52
#, fuzzy
msgid "The runtime module - in this blog post, we won't modify it"
msgstr "ランタイムモジュール - このブログ記事では変更しません。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:54
#, fuzzy
msgid "Let's keep it simple: the deployment module is what will be used at build time, the runtime module is what will be used at runtime."
msgstr "簡単に説明しますと、デプロイメントモジュールはビルド時に使用されるもので、ランタイムモジュールはランタイム時に使用されるものです。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:56
#, fuzzy
msgid "In our case, we want to declare new beans and this is something we do at build time, so deployment module, here we come!"
msgstr "今回のケースでは、新しいビーンズを宣言したいのですが、これはビルド時に行うものなので、デプロイメント・モジュールが必要になります。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:57
#, fuzzy, no-wrap
msgid "Processors and build steps"
msgstr "プロセッサーとビルドステップ"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:60
#, fuzzy
msgid "If you have a look at your `deployment` module, you will see a `MessageTransformersAsBeansProcessor` and you can see a method annotated with the `@BuildStep` annotation in it."
msgstr "`deployment` モジュールを見てもらうと、 `MessageTransformersAsBeansProcessor` 、その中に `@BuildStep` のアノテーションが付いたメソッドがあるのがわかると思います。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:63
#, fuzzy
msgid "Quarkus build is populated by these build steps and they are following a consumer/producer model with dependency injection.  The items being consumed and produced are called ``BuildItem``s."
msgstr "Quarkusのビルドには、これらのビルドステップが含まれており、依存性注入による消費者／生産者モデルに従っています。消費されるアイテムと生産されるアイテムは、 `BuildItem`と呼ばれます。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:66
#, fuzzy
msgid "The build step that is automatically generated is easy to understand.  It produces a `FeatureBuildItem` which will be consumed by Quarkus startup and you will see the extension name in the list displayed by Quarkus at startup:"
msgstr "自動的に生成されるビルドステップはわかりやすいです。これは、Quarkusの起動時に消費される `FeatureBuildItem` を生成し、起動時にQuarkusが表示するリストに拡張子の名前が表示されます。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:72
#, no-wrap
msgid ""
"INFO  [io.quarkus] my-app 1.0.0-SNAPSHOT on JVM (powered by Quarkus 1.13.2.Final) started in 0.221s.\n"
"INFO  [io.quarkus] Profile prod activated.\n"
"INFO  [io.quarkus] Installed features: [cdi, message-transformers-as-beans]\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:74
#, fuzzy, no-wrap
msgid "The Jandex index"
msgstr "Jandexインデックス"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:78
#, fuzzy
msgid "Now that we are done with the scaffolding, let's think a bit about what we want to achieve: we need to find all the classes in a given package whose name ends with `MessageTransformer`."
msgstr "これで足場ができたので、何を実現したいかを少し考えてみましょう。あるパッケージの中で、名前が `MessageTransformer` で終わるクラスをすべて見つける必要があります。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:81
#, fuzzy
msgid "An important assumption of Quarkus is that the application lives in a closed world.  You cannot dynamically add a jar at runtime to your Quarkus application and expect it to work."
msgstr "Quarkusの重要な前提は、アプリケーションが閉じた世界に存在するということです。実行時に動的にjarをQuarkusアプリケーションに追加して、それが動作することを期待することはできません。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:84
#, fuzzy
msgid "While it can be seen as a limitation, it opens all sorts of possibilities, one of which is the ability to index the classes and their annotations to easily look them up."
msgstr "これは制限とも言えますが、様々な可能性を秘めています。その1つが、クラスとそのアノテーションにインデックスを付けて、簡単に調べられるようにすることです。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:86
#, fuzzy
msgid "This index, based on https://github.com/wildfly/jandex[Jandex], is a very important part of the Quarkus bootstrap."
msgstr "link:https://github.com/wildfly/jandex[Jandex]をベースにしたこの指標は、Quarkusのブートストラップにおいて非常に重要な役割を果たしています。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:88
#, fuzzy
msgid "The Jandex index doesn't contain all the classes around but is, by default, limited to the application classes and the dependencies containing either a pre-built index or an empty `META-INF/beans.xml`."
msgstr "Jandexのインデックスは、すべてのクラスを含んでいるわけではなく、デフォルトでは、アプリケーションクラスと、事前に構築されたインデックスまたは空の `META-INF/beans.xml` を含む依存関係に限定されています。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:91
#, fuzzy
msgid "In our case, we want to list the classes of an external dependency so we will need to add them to the index.  We can do that very easily by adding a build step to `MessageTransformersAsBeansProcessor`:"
msgstr "今回のケースでは、外部依存関係にあるクラスをリストアップしたいので、インデックスに追加する必要があります。これは、 `MessageTransformersAsBeansProcessor` にビルドステップを追加することで簡単に行うことができます。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:98
#, no-wrap
msgid ""
"@BuildStep\n"
"IndexDependencyBuildItem indexExternalDependency() {\n"
"    return new IndexDependencyBuildItem(\"my.group.id\", \"my-artifact-id\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:101
#, fuzzy
msgid "This will add the content of the `my.group.id:my-artifact-id` jar to the index."
msgstr "これにより、 `my.group.id:my-artifact-id` jarの内容がインデックスに追加されます。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:102
#, fuzzy, no-wrap
msgid "Declaring additional beans"
msgstr "追加ビーンズの宣言"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:105
#, fuzzy
msgid "Now that we have our classes indexed, we want to make them CDI beans."
msgstr "クラスのインデックスができたので、CDIビーンズにしてみましょう。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:107
#, fuzzy
msgid "This can be achieved by adding another build step:"
msgstr "これは、別のビルドステップを追加することで実現できます。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:119
#, no-wrap
msgid ""
"@BuildStep\n"
"void declareMessageTransformersAsBean(CombinedIndexBuildItem index, <1>\n"
"        BuildProducer<AdditionalBeanBuildItem> additionalBeans) { <2>\n"
"    List<String> messageTransformers = index.getIndex().getKnownClasses().stream() <3>\n"
"            .filter(ci -> !Modifier.isAbstract(ci.flags())) <4>\n"
"            .map(ci -> ci.name().toString()) <5>\n"
"            .filter(c -> c.startsWith(\"my.package.\")) <6>\n"
"            .filter(c -> c.endsWith(\"MessageTransformer\")) <7>\n"
"            .collect(Collectors.toList());\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:126
#, no-wrap
msgid ""
"    additionalBeans.produce(new AdditionalBeanBuildItem.Builder() <8>\n"
"            .addBeanClasses(messageTransformers) \n"
"            .setUnremovable() <9>\n"
"            .setDefaultScope(DotNames.APPLICATION_SCOPED) <10>\n"
"            .build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:128
#, fuzzy
msgid "Consume the Jandex index"
msgstr "Jandexインデックスの消費"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:129
#, fuzzy
msgid "Inject the additional beans producer"
msgstr "追加のビーンズプロデューサーを投入"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:130
#, fuzzy
msgid "Get all known classes from the index"
msgstr "インデックスからすべての既知のクラスを取得"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:131
#, fuzzy
msgid "Filter out abstract classes"
msgstr "抽象クラスの除外"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:132
#, fuzzy
msgid "Get the FQCN of the class"
msgstr "クラスのFQCNを取得する"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:133
#, fuzzy
msgid "Only keep classes from the root package we target"
msgstr "対象となるルートパッケージのクラスのみを保持"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:134
#, fuzzy
msgid "Only keep ``MessageTransformer``s"
msgstr "Only keep `MessageTransformer`s"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:135
#, fuzzy
msgid "Produce an `AdditionalBeanBuildItem`"
msgstr "を生み出す。 `AdditionalBeanBuildItem`"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:136
#, fuzzy
msgid "Make the beans unremovable to prevent ArC from removing the beans if they are only programatically consumed"
msgstr "プログラムでしか消費されない場合に、ArCが豆を取り除かないようにするために、豆を取り除けないようにする。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:137
#, fuzzy
msgid "Set the default scope to `@ApplicationScoped` - can be any CDI scope of your preference"
msgstr "デフォルトのスコープを `@ApplicationScoped` に設定 - 任意のCDIスコープにすることも可能"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:140
#, fuzzy
msgid "With this build step, any non-abstract class from our root package `my.package` whose name ends with `MessageTransformer` will be made an `@ApplicationScoped` CDI bean."
msgstr "このビルドステップでは、ルートパッケージ `my.package` から、名前が `MessageTransformer` で終わる非抽象クラスは、 `@ApplicationScoped` CDI Bean になります。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:142
#, fuzzy
msgid "Cherry on top, all this work is done at build time and you don't need to scan your entire classpath at runtime."
msgstr "さらに、これらの作業はすべてビルド時に行われるので、ランタイムにクラスパス全体をスキャンする必要はありません。"

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:147
#, fuzzy
msgid "Usually, we look up classes in the index with an interface, a superclass or an annotation.  It is less brittle and faster than crawling the whole index and filter by name."
msgstr "通常、インターフェイス、スーパークラス、アノテーションでインデックス内のクラスを検索します。これは、インデックス全体をクロールして名前でフィルタリングするよりも、脆くなく、速い方法です。"

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:149
#, fuzzy
msgid "But the point here was to do with the constraints of the user and it wasn't an option to adapt the external dependency."
msgstr "しかし、ここでのポイントはユーザーの制約であり、外部依存を調整するという選択肢はありませんでした。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:151
#, fuzzy, no-wrap
msgid "That's all, folks!"
msgstr "以上、皆さん、よろしくお願いします。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:154
#, fuzzy
msgid "Obviously, this is a very simple example and you can do much more complex things with a Quarkus extension."
msgstr "もちろん、これは非常に単純な例であり、Quarkusの拡張機能を使えば、もっと複雑なことができます。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:157
#, fuzzy
msgid "But the whole point of this blog post was to demonstrate that you can easily leverage our extension framework to solve real-life issues.  And **in ~10 minutes of coding, our problem is gone**."
msgstr "しかし、このブログ記事の目的は、現実の問題を解決するために、私たちの拡張フレームワークを簡単に利用できることを示すことでした。そして、 *10分ほどのコーディングで、私たちの問題は解決し*ました。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:159
#, fuzzy
msgid "Next one?"
msgstr "次は？"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:160
#, no-wrap
msgid "Come Join Us"
msgstr "参加のお誘い"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:163
msgid "We value your feedback a lot so please report bugs, ask for improvements... Let's build something great together!"
msgstr "私達は皆様からのフィードバックに重きを置いています。バグ報告、改善要望を是非お願いします。一緒に素晴らしいものを作り上げていきましょう!"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:165
msgid "If you are a Quarkus user or just curious, don't be shy and join our welcoming community:"
msgstr "Quarkusユーザーの場合でも、単に興味を持っているだけの場合でも、恥ずかしがらずにコミュニティに参加して下さい!:"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:167
msgid "provide feedback on https://github.com/quarkusio/quarkus/issues[GitHub];"
msgstr "https://github.com/quarkusio/quarkus/issues[GitHub] でフィードバック"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:168
msgid "craft some code and https://github.com/quarkusio/quarkus/pulls[push a PR];"
msgstr "コードを作成し、 https://github.com/quarkusio/quarkus/pulls[プルリクエスト] を送信"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "discuss with us on https://quarkusio.zulipchat.com/[Zulip] and on the https://groups.google.com/d/forum/quarkus-dev[mailing list];"
msgstr "https://quarkusio.zulipchat.com/[Zulip] や https://groups.google.com/d/forum/quarkus-dev[メーリングリスト] でディスカッションに参加"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "ask your questions on https://stackoverflow.com/questions/tagged/quarkus[Stack Overflow]."
msgstr "https://stackoverflow.com/questions/tagged/quarkus[Stack Overflow] で質問"
