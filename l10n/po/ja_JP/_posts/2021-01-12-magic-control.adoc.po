msgid ""
msgstr ""
"Language: ja_JP\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Just before my PTO, someone told me: '_I don't like magic._'\n"
"In this context, _magic_ refers to the amount of hidden _stuff_ done by Quarkus under the hood for the sake of simplicity.\n"
"It includes dependency injection, annotations, and so on."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"It's not the first time that I get that kind of comment, and coming from the Vert.x project, it makes sense.\n"
"Vert.x has (almost) no magic, and for a good reason: too much magic can be terrible and make production tuning utterly expensive.\n"
"Sometimes you want to have more control and avoid unexpected behaviors: execute the code you wrote, and nothing else."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"But magic is not inherently bad.\n"
"Magic is power that can be used for good or for bad.\n"
"After all, your application runs on a silicon with microcode magic powering an Operating System with abstraction magic powering the Java Virtual Machine with Just In Time magic.\n"
"There is magic, it's just magic you have enough knowledge (or trust) of vs magic you don't."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"You may think that Quarkus has a lot of magic tricks.\n"
"It is true in some sense but it is easily understood and comes with strong benefits in either memory optimization, startup time optimization or last but not least developer experience improvements.\n"
"You can decide the amount of magic that you want and the amount of control you feel comfortable with.\n"
"You don't have to use dependency injection or managed clients if you prefer doing things yourself."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"In this post, we will cover three different approaches to reducing the amount of magic.\n"
"We will go from almost no magic to just enough to get a good developer experience.\n"
"Examples from this blog post are available on https://github.com/cescoffier/quarkus-magic-control[GitHub]."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Quarkus applications are Java applications.\n"
"So, somewhere there is a `public static void main(String... args)`.\n"
"While you don't need to write that method when using Quarkus, it can still be convenient and give you more control about your application startup.\n"
"It's also a good trick to start your Quarkus application directly from your IDE."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"The complete source code is available https://github.com/cescoffier/quarkus-magic-control/tree/main/no-magic-example[here].\n"
"Don't expect much more; the application had only one Java class, but let's look into it."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"The `@QuarkusMain` indicates that Quarkus should use this class as the _main entry point_ of the application.\n"
"The `run` method contains your application logic.\n"
"We will come back to this logic later.\n"
"First, look at the `public static void main(String... args)` method.\n"
"It just starts the application.\n"
"You can use this entry point directly from your IDE.\n"
"Yes, there is still a bit of magic behind `Quarkus.run`; that's where the extension initialization happens - not unlike _any_ framework initialization including Vert.x.\n"
"As this application does not use any extension, nothing much will happen."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"This application https://github.com/cescoffier/quarkus-magic-control/blob/main/no-magic-example/pom.xml#L17-L26[depends] directly on Vert.x Web and Vert.x Core.\n"
"The only Quarkus dependency is Arc (not used directly but required):"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Let's go back to the `run` method.\n"
"It contains the application logic, here, a dummy Vert.x application.\n"
"It creates the `Vertx` instance, a `Router`, registers a few routes, and starts the HTTP server.\n"
"Because we don't want the application to stop immediately, we _wait for exit_.\n"
"The `/bye` request handler illustrates how you can programmatically trigger the application shutdown."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"This application has almost no magic, just a single annotation, and a regular Java entry point.\n"
"You may wonder why not using a bare Java program?\n"
"Even used that way, Quarkus provides benefits. For example, you can access the built-in configuration support as illustrated in the snippet:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"This first approach has a few drawbacks.\n"
"It does not benefit from the built-time processing of Quarkus.\n"
"The logic executed at build time is packaged inside extensions, and in this case, we don't use extensions (except Arc).\n"
"Another issue is that compiling this application to native will fail because extensions are also involved during the native compilation.\n"
"Finally, the hot reload won't work, but you can directly restart the application from your IDE."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Quarkus uses Vert.x heavily.\n"
"The `quarkus-vertx-core` extension manages the Vert.x instance used by Quarkus.\n"
"You can use that instance directly and avoid creating the Vert.x instance.\n"
"If you need to configure the instance, you can configure it from https://quarkus.io/guides/all-config#quarkus-vertx-core_quarkus-vertx-core-eclipse-vert.x-core[the `application.properties`].\n"
"It also enables native packaging (as that extension contains the directive to compile Vert.x applications to native)."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Note how it retrieves the managed Vert.x instance.\n"
"While you can use `@Inject`, you can also retrieve it programmatically, the rest of the code does not change.\n"
"See? No magic for you!\n"
"We can still start it from the IDE using the _main_ method."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Instead of using only the `quarkus-vertx-core` extension, we can choose to delegate the HTTP server to Quarkus.\n"
"You may see that as a loss of control, but actually, we rarely do much around it, and again, you can configure it from the `application.properties` file if needed."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"That approach enables the Quarkus hot reload as it intercepts the HTTP requests.\n"
"You are still in control of everything related to your application logic."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"The question, now, is how far are we from a _regular_ Quarkus application?\n"
"Quite close, actually.\n"
"The equivalent application using RESTEasy Reactive would be something like:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Unlike the previous approaches, this one leverages a declarative (annotation-based) model.\n"
"Under the hood, it's not that different from the last approach.\n"
"Quarkus registers a route (on the router), which then calls the `hello` method when a matching request is received.\n"
"The router gets initialized during the `Quarkus.run` method.\n"
"No need for the _main_ endpoint, but you can still use one, often convenient in IDEs."
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Our relation to magic depends on our background and experience.\n"
"Quarkus lets you decide how much magic you accept.\n"
"This post presented fours configurations, going from almost no magic to the _regular_ Quarkus code.\n"
"Each approach has pros and cons:"
msgstr ""

#: /home/ynojima/playground/ja.quarkus.io/build/jekyll-source/_posts/2021-01-12-magic-control.adoc
msgid ""
"Pick the approach that fits your needs.\n"
"Besides, most of Quarkus services are also available using a programmatic approach, as we have seen for configuration.\n"
"So, if you prefer avoiding managed objects, feel free just to use the available APIs."
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, no-wrap
msgid "Bored with magic tricks?"
msgstr "手品に飽きた？"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-01-12-magic-control.adoc:1
#, no-wrap
msgid "How to control the amount of magic from Quarkus"
msgstr "Quarkusのマジックの量をコントロールする方法"

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:32
#, no-wrap
msgid "The _almost no magic_ approach"
msgstr "_ほとんどマジックがない_ アプローチ"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:40
msgid "As an example, we will implement a straightforward HTTP application. Nothing fancy:"
msgstr "例として、簡単な HTTP アプリケーションを実装します。派手なものは何もありません:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:132
msgid "The configuration is located in the `application.properties` file."
msgstr "設定は、 `application.properties` ファイルにあります。"

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:139
#, no-wrap
msgid "Using the managed Vert.x instance"
msgstr "管理された Vert.x インスタンスの使用"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:148
msgid "In your pom.xml file, just add the following dependency:"
msgstr "pom.xmlファイルに以下の依存関係を追加します:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:158
msgid "With this, the _run_ method becomes:"
msgstr "これにより、 _run_ メソッドは以下のようになります:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:191
msgid "If you don't include the `quarkus-vertx-core` extension (or any extension depending on it), Quarkus won't create the Vert.x instance."
msgstr "`quarkus-vertx-core` エクステンション(またはそれに依存するエクステンション)を含まない場合、QuarkusはVert.xインスタンスを作成しません。"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:193
msgid "Using extensions gives you some property wiring as well as the build time optimisations and native image compilation:"
msgstr "エクステンションを使用すると、プロパティーの設定や、ビルド時間の最適化、ネイティブイメージのコンパイルも行うことができます:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:202
msgid "But, still no hot reload 😿."
msgstr "しかし、やはりホットリロードはダメですね😿。"

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:203
#, no-wrap
msgid "Using the managed HTTP server"
msgstr "管理されたHTTPサーバーの使用"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:209
msgid "Instead of ``quarkus-vertx-core`, use `quarkus-vertx-http`:"
msgstr "``quarkus-vertx-core` の代わりに、 `quarkus-vertx-http` を使用してください:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:221
msgid "No need to depend on Vert.x Web directly, it's included."
msgstr "Vert.x Webに直接依存する必要はなく、含まれています。"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:223
msgid "You will still register your routes, but using a managed `Router`:"
msgstr "ルートの登録は引き続き行いますが、管理されている `Router` を使用します:"

#. type: Plain text
#: upstream/_posts/2021-01-12-magic-control.adoc:247
msgid "You can start the hot reload using:"
msgstr "次を使ってホットリロードを開始することができます:"

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:253
#, no-wrap
msgid "The final _magic touch_"
msgstr "最後の _マジックタッチ_"

#. type: Title ==
#: upstream/_posts/2021-01-12-magic-control.adoc:280
#, no-wrap
msgid "Summary"
msgstr "まとめ"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, no-wrap
msgid "Control"
msgstr "コントロール"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, no-wrap
msgid "Build time optimizations"
msgstr "ビルド時最適化"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:288
#, no-wrap
msgid "Native executable"
msgstr "ネイティブ実行可能ファイル"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:290
#, no-wrap
msgid "Hot Reload"
msgstr "ホットリロード"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:291
#, no-wrap
msgid "_Almost no magic_"
msgstr "_殆どマジックなし_"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:292
#, no-wrap
msgid "Full"
msgstr "完全"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:293
#: upstream/_posts/2021-01-12-magic-control.adoc:294
#: upstream/_posts/2021-01-12-magic-control.adoc:296
#: upstream/_posts/2021-01-12-magic-control.adoc:302
#, no-wrap
msgid "🥵"
msgstr "🥵"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:297
#, no-wrap
msgid "Use the managed Vert.x instance"
msgstr "管理された Vert.x インスタンスの使用"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:298
#, no-wrap
msgid "Everything but Vert.x"
msgstr "Vert.x以外はすべて"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:299
#, no-wrap
msgid "😀, for Vert.x"
msgstr "😀、Vert.xの場合"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:300
#: upstream/_posts/2021-01-12-magic-control.adoc:306
#: upstream/_posts/2021-01-12-magic-control.adoc:308
#: upstream/_posts/2021-01-12-magic-control.adoc:311
#: upstream/_posts/2021-01-12-magic-control.adoc:312
#: upstream/_posts/2021-01-12-magic-control.adoc:314
#, no-wrap
msgid "😀"
msgstr "😀"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:303
#, no-wrap
msgid "Use the managed HTTP server"
msgstr "管理されたHTTPサーバーの使用"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:304
#, no-wrap
msgid "Everything but Vert.x and the HTTP server"
msgstr "Vert.xとHTTPサーバー以外はすべて"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:305
#, no-wrap
msgid "😀, for Vert.x and HTTP"
msgstr "😀、Vert.x と HTTP の場合"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:309
#, no-wrap
msgid "_Regular_ Quarkus"
msgstr "_通常の_ Quarkus"

#. type: Table
#: upstream/_posts/2021-01-12-magic-control.adoc:310
#, no-wrap
msgid "Endpoint managed by Quarkus"
msgstr "Quarkusが管理するエンドポイント"
